{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "contract ISuperToken",
          "name": "cashToken",
          "type": "address"
        },
        {
          "internalType": "contract ISuperfluid",
          "name": "host",
          "type": "address"
        },
        {
          "internalType": "contract IInstantDistributionAgreementV1",
          "name": "ida",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "INDEX_ID",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "superToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "agreementId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "ctx",
          "type": "bytes"
        }
      ],
      "name": "afterAgreementCreated",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "afterAgreementTerminated",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "superToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "agreementId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "ctx",
          "type": "bytes"
        }
      ],
      "name": "afterAgreementUpdated",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "superToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "beforeAgreementCreated",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "beforeAgreementTerminated",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "superToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "beforeAgreementUpdated",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cashAmount",
          "type": "uint256"
        }
      ],
      "name": "distribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isSubscribing",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "issue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/Ownable.sol",
    "10": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol",
    "2": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "26": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/apps/SuperAppBase.sol",
    "28": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol",
    "29": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
    "30": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
    "31": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
    "32": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
    "33": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
    "34": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
    "35": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
    "36": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
    "37": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
    "38": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
    "4": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/ERC20.sol",
    "45": "contracts/TennerrVotingRightsToken.sol",
    "6": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
    "8": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC777/IERC777.sol"
  },
  "ast": {
    "absolutePath": "contracts/TennerrVotingRightsToken.sol",
    "exportedSymbols": {
      "TennerrVotingRightsToken": [
        4170
      ]
    },
    "id": 4171,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3630,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:45"
      },
      {
        "id": 3631,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "57:33:45"
      },
      {
        "absolutePath": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/apps/SuperAppBase.sol",
        "file": "@superfluid-finance/ethereum-contracts/contracts/apps/SuperAppBase.sol",
        "id": 3636,
        "nodeType": "ImportDirective",
        "scope": 4171,
        "sourceUnit": 7648,
        "src": "93:165:45",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3632,
              "name": "ISuperfluid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "106:11:45",
              "typeDescriptions": {}
            }
          },
          {
            "foreign": {
              "id": 3633,
              "name": "ISuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "123:11:45",
              "typeDescriptions": {}
            }
          },
          {
            "foreign": {
              "id": 3634,
              "name": "SuperAppBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "140:12:45",
              "typeDescriptions": {}
            }
          },
          {
            "foreign": {
              "id": 3635,
              "name": "SuperAppDefinitions",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "158:19:45",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol",
        "file": "@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol",
        "id": 3638,
        "nodeType": "ImportDirective",
        "scope": 4171,
        "sourceUnit": 8140,
        "src": "259:161:45",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3637,
              "name": "IInstantDistributionAgreementV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "272:31:45",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3640,
        "nodeType": "ImportDirective",
        "scope": 4171,
        "sourceUnit": 4564,
        "src": "422:69:45",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3639,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "431:7:45",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3642,
        "nodeType": "ImportDirective",
        "scope": 4171,
        "sourceUnit": 7447,
        "src": "492:70:45",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3641,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "501:5:45",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3644,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4563,
              "src": "855:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$4563",
                "typeString": "contract Ownable"
              }
            },
            "id": 3645,
            "nodeType": "InheritanceSpecifier",
            "src": "855:7:45"
          },
          {
            "baseName": {
              "id": 3646,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7446,
              "src": "868:5:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$7446",
                "typeString": "contract ERC20"
              }
            },
            "id": 3647,
            "nodeType": "InheritanceSpecifier",
            "src": "868:5:45"
          },
          {
            "baseName": {
              "id": 3648,
              "name": "SuperAppBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7647,
              "src": "879:12:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SuperAppBase_$7647",
                "typeString": "contract SuperAppBase"
              }
            },
            "id": 3649,
            "nodeType": "InheritanceSpecifier",
            "src": "879:12:45"
          }
        ],
        "contractDependencies": [
          4563,
          4707,
          7446,
          7647,
          8458,
          10029
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3643,
          "nodeType": "StructuredDocumentation",
          "src": "565:248:45",
          "text": " The dividends rights token show cases two use cases\n 1. Use Instant distribution agreement to distribute tokens to token holders.\n 2. Use SuperApp framework to update `isSubscribing` when new subscription is approved by token holder."
        },
        "fullyImplemented": true,
        "id": 4170,
        "linearizedBaseContracts": [
          4170,
          7647,
          10029,
          7446,
          4707,
          4563,
          8458
        ],
        "name": "TennerrVotingRightsToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "8c7f0959",
            "id": 3652,
            "mutability": "constant",
            "name": "INDEX_ID",
            "nodeType": "VariableDeclaration",
            "scope": 4170,
            "src": "899:35:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 3650,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "899:6:45",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 3651,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "933:1:45",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3654,
            "mutability": "mutable",
            "name": "_cashToken",
            "nodeType": "VariableDeclaration",
            "scope": 4170,
            "src": "941:30:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISuperToken_$10382",
              "typeString": "contract ISuperToken"
            },
            "typeName": {
              "id": 3653,
              "name": "ISuperToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10382,
              "src": "941:11:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISuperToken_$10382",
                "typeString": "contract ISuperToken"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3656,
            "mutability": "mutable",
            "name": "_host",
            "nodeType": "VariableDeclaration",
            "scope": 4170,
            "src": "977:25:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISuperfluid_$5876",
              "typeString": "contract ISuperfluid"
            },
            "typeName": {
              "id": 3655,
              "name": "ISuperfluid",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5876,
              "src": "977:11:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                "typeString": "contract ISuperfluid"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3658,
            "mutability": "mutable",
            "name": "_ida",
            "nodeType": "VariableDeclaration",
            "scope": 4170,
            "src": "1008:44:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
              "typeString": "contract IInstantDistributionAgreementV1"
            },
            "typeName": {
              "id": 3657,
              "name": "IInstantDistributionAgreementV1",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8139,
              "src": "1008:31:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                "typeString": "contract IInstantDistributionAgreementV1"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "915e3364",
            "id": 3662,
            "mutability": "mutable",
            "name": "isSubscribing",
            "nodeType": "VariableDeclaration",
            "scope": 4170,
            "src": "1112:46:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3661,
              "keyType": {
                "id": 3659,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1121:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1112:25:45",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3660,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1132:4:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3739,
              "nodeType": "Block",
              "src": "1370:708:45",
              "statements": [
                {
                  "expression": {
                    "id": 3681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3679,
                      "name": "_cashToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3654,
                      "src": "1380:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperToken_$10382",
                        "typeString": "contract ISuperToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3680,
                      "name": "cashToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3668,
                      "src": "1393:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperToken_$10382",
                        "typeString": "contract ISuperToken"
                      }
                    },
                    "src": "1380:22:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10382",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "id": 3682,
                  "nodeType": "ExpressionStatement",
                  "src": "1380:22:45"
                },
                {
                  "expression": {
                    "id": 3685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3683,
                      "name": "_host",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3656,
                      "src": "1412:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                        "typeString": "contract ISuperfluid"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3684,
                      "name": "host",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3670,
                      "src": "1420:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                        "typeString": "contract ISuperfluid"
                      }
                    },
                    "src": "1412:12:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "id": 3686,
                  "nodeType": "ExpressionStatement",
                  "src": "1412:12:45"
                },
                {
                  "expression": {
                    "id": 3689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3687,
                      "name": "_ida",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3658,
                      "src": "1434:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                        "typeString": "contract IInstantDistributionAgreementV1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3688,
                      "name": "ida",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3672,
                      "src": "1441:3:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                        "typeString": "contract IInstantDistributionAgreementV1"
                      }
                    },
                    "src": "1434:10:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                      "typeString": "contract IInstantDistributionAgreementV1"
                    }
                  },
                  "id": 3690,
                  "nodeType": "ExpressionStatement",
                  "src": "1434:10:45"
                },
                {
                  "assignments": [
                    3692
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3692,
                      "mutability": "mutable",
                      "name": "configWord",
                      "nodeType": "VariableDeclaration",
                      "scope": 3739,
                      "src": "1455:18:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3691,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1455:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3701,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 3693,
                          "name": "SuperAppDefinitions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9733,
                          "src": "1488:19:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SuperAppDefinitions_$9733_$",
                            "typeString": "type(library SuperAppDefinitions)"
                          }
                        },
                        "id": 3694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "APP_LEVEL_FINAL",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9605,
                        "src": "1488:35:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "|",
                      "rightExpression": {
                        "expression": {
                          "id": 3695,
                          "name": "SuperAppDefinitions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9733,
                          "src": "1538:19:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SuperAppDefinitions_$9733_$",
                            "typeString": "type(library SuperAppDefinitions)"
                          }
                        },
                        "id": 3696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "BEFORE_AGREEMENT_TERMINATED_NOOP",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9691,
                        "src": "1538:52:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1488:102:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "|",
                    "rightExpression": {
                      "expression": {
                        "id": 3698,
                        "name": "SuperAppDefinitions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9733,
                        "src": "1605:19:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SuperAppDefinitions_$9733_$",
                          "typeString": "type(library SuperAppDefinitions)"
                        }
                      },
                      "id": 3699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "AFTER_AGREEMENT_TERMINATED_NOOP",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9699,
                      "src": "1605:51:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1488:168:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1455:201:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3705,
                        "name": "configWord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3692,
                        "src": "1685:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3702,
                        "name": "_host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3656,
                        "src": "1667:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                          "typeString": "contract ISuperfluid"
                        }
                      },
                      "id": 3704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registerApp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5641,
                      "src": "1667:17:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 3706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1667:29:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3707,
                  "nodeType": "ExpressionStatement",
                  "src": "1667:29:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3711,
                        "name": "_ida",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3658,
                        "src": "1740:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                          "typeString": "contract IInstantDistributionAgreementV1"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 3714,
                                "name": "_ida",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3658,
                                "src": "1798:4:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                                  "typeString": "contract IInstantDistributionAgreementV1"
                                }
                              },
                              "id": 3715,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "createIndex",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7841,
                              "src": "1798:16:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$10791_$_t_uint32_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (contract ISuperfluidToken,uint32,bytes memory) external returns (bytes memory)"
                              }
                            },
                            "id": 3716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "1798:25:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 3717,
                            "name": "_cashToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3654,
                            "src": "1841:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$10382",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          {
                            "id": 3718,
                            "name": "INDEX_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3652,
                            "src": "1869:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1905:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1895:9:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (bytes memory)"
                              },
                              "typeName": {
                                "id": 3719,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "1899:5:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes"
                                }
                              }
                            },
                            "id": 3722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1895:12:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_contract$_ISuperToken_$10382",
                              "typeString": "contract ISuperToken"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 3712,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1758:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "1758:22:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 3723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1758:182:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1964:1:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1954:9:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 3724,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1958:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 3727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1954:12:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                          "typeString": "contract IInstantDistributionAgreementV1"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 3708,
                        "name": "_host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3656,
                        "src": "1707:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                          "typeString": "contract ISuperfluid"
                        }
                      },
                      "id": 3710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callAgreement",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5783,
                      "src": "1707:19:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$9921_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory) external returns (bytes memory)"
                      }
                    },
                    "id": 3728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1707:282:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 3729,
                  "nodeType": "ExpressionStatement",
                  "src": "1707:282:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3731,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2018:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2018:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3730,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4562,
                      "src": "2000:17:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2000:29:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3734,
                  "nodeType": "ExpressionStatement",
                  "src": "2000:29:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 3736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2054:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 3735,
                      "name": "_setupDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7434,
                      "src": "2039:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8)"
                      }
                    },
                    "id": 3737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2039:17:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3738,
                  "nodeType": "ExpressionStatement",
                  "src": "2039:17:45"
                }
              ]
            },
            "id": 3740,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3675,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3664,
                    "src": "1352:4:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 3676,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3666,
                    "src": "1358:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 3677,
                "modifierName": {
                  "id": 3674,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7446,
                  "src": "1346:5:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$7446_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1346:19:45"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3664,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 3740,
                  "src": "1186:18:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3663,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1186:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3666,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 3740,
                  "src": "1214:20:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3665,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1214:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3668,
                  "mutability": "mutable",
                  "name": "cashToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 3740,
                  "src": "1244:21:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10382",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 3667,
                    "name": "ISuperToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10382,
                    "src": "1244:11:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10382",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3670,
                  "mutability": "mutable",
                  "name": "host",
                  "nodeType": "VariableDeclaration",
                  "scope": 3740,
                  "src": "1275:16:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                    "typeString": "contract ISuperfluid"
                  },
                  "typeName": {
                    "id": 3669,
                    "name": "ISuperfluid",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5876,
                    "src": "1275:11:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3672,
                  "mutability": "mutable",
                  "name": "ida",
                  "nodeType": "VariableDeclaration",
                  "scope": 3740,
                  "src": "1301:35:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                    "typeString": "contract IInstantDistributionAgreementV1"
                  },
                  "typeName": {
                    "id": 3671,
                    "name": "IInstantDistributionAgreementV1",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8139,
                    "src": "1301:31:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                      "typeString": "contract IInstantDistributionAgreementV1"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1176:161:45"
            },
            "returnParameters": {
              "id": 3678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1370:0:45"
            },
            "scope": 4170,
            "src": "1165:913:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7535
            ],
            "body": {
              "id": 3778,
              "nodeType": "Block",
              "src": "2366:190:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_ISuperToken_$10382",
                          "typeString": "contract ISuperToken"
                        },
                        "id": 3759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3757,
                          "name": "superToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3742,
                          "src": "2384:10:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$10382",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3758,
                          "name": "_cashToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3654,
                          "src": "2398:10:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$10382",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "src": "2384:24:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4452543a20556e737570706f72746564206361736820746f6b656e",
                        "id": 3760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2410:29:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81da366a5722d2f942216deded63f2fdfda38e34d08dab594f51c37ccf776fe2",
                          "typeString": "literal_string \"DRT: Unsupported cash token\""
                        },
                        "value": "DRT: Unsupported cash token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81da366a5722d2f942216deded63f2fdfda38e34d08dab594f51c37ccf776fe2",
                          "typeString": "literal_string \"DRT: Unsupported cash token\""
                        }
                      ],
                      "id": 3756,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2376:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2376:64:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3762,
                  "nodeType": "ExpressionStatement",
                  "src": "2376:64:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3764,
                          "name": "agreementClass",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3744,
                          "src": "2458:14:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 3767,
                              "name": "_ida",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3658,
                              "src": "2484:4:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                                "typeString": "contract IInstantDistributionAgreementV1"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                                "typeString": "contract IInstantDistributionAgreementV1"
                              }
                            ],
                            "id": 3766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2476:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3765,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2476:7:45",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2476:13:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2458:31:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4452543a20556e737570706f727465642061677265656d656e74",
                        "id": 3770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2491:28:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_396bf2721173acc2be60ac579b75e9dd8c53bd946f14f09856a30debd6f88dd3",
                          "typeString": "literal_string \"DRT: Unsupported agreement\""
                        },
                        "value": "DRT: Unsupported agreement"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_396bf2721173acc2be60ac579b75e9dd8c53bd946f14f09856a30debd6f88dd3",
                          "typeString": "literal_string \"DRT: Unsupported agreement\""
                        }
                      ],
                      "id": 3763,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2450:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2450:70:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3772,
                  "nodeType": "ExpressionStatement",
                  "src": "2450:70:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 3775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2547:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 3774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2537:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 3773,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2541:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 3776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2537:12:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 3755,
                  "id": 3777,
                  "nodeType": "Return",
                  "src": "2530:19:45"
                }
              ]
            },
            "functionSelector": "30d9c915",
            "id": 3779,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beforeAgreementCreated",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3752,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2317:8:45"
            },
            "parameters": {
              "id": 3751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3742,
                  "mutability": "mutable",
                  "name": "superToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 3779,
                  "src": "2125:22:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10382",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 3741,
                    "name": "ISuperToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10382,
                    "src": "2125:11:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10382",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3744,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nodeType": "VariableDeclaration",
                  "scope": 3779,
                  "src": "2157:22:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3743,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2157:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3746,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3779,
                  "src": "2189:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3745,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2189:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3748,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3779,
                  "src": "2224:14:45",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3747,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2224:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3750,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3779,
                  "src": "2266:14:45",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3749,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2266:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2115:179:45"
            },
            "returnParameters": {
              "id": 3755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3754,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 3779,
                  "src": "2343:17:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3753,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2343:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2342:19:45"
            },
            "scope": 4170,
            "src": "2084:472:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              7558
            ],
            "body": {
              "id": 3807,
              "nodeType": "Block",
              "src": "2870:87:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3798,
                        "name": "superToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3781,
                        "src": "2899:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$10382",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      {
                        "id": 3799,
                        "name": "ctx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3791,
                        "src": "2911:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 3800,
                        "name": "agreementId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3785,
                        "src": "2916:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperToken_$10382",
                          "typeString": "contract ISuperToken"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3797,
                      "name": "_checkSubscription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3958,
                      "src": "2880:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$10382_$_t_bytes_calldata_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (contract ISuperToken,bytes calldata,bytes32)"
                      }
                    },
                    "id": 3801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2880:48:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3802,
                  "nodeType": "ExpressionStatement",
                  "src": "2880:48:45"
                },
                {
                  "expression": {
                    "id": 3805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3803,
                      "name": "newCtx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3795,
                      "src": "2938:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3804,
                      "name": "ctx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3791,
                      "src": "2947:3:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "src": "2938:12:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 3806,
                  "nodeType": "ExpressionStatement",
                  "src": "2938:12:45"
                }
              ]
            },
            "functionSelector": "d86ed3e5",
            "id": 3808,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "afterAgreementCreated",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3793,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2820:8:45"
            },
            "parameters": {
              "id": 3792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3781,
                  "mutability": "mutable",
                  "name": "superToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 3808,
                  "src": "2602:22:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10382",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 3780,
                    "name": "ISuperToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10382,
                    "src": "2602:11:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10382",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3783,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3808,
                  "src": "2634:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2634:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3785,
                  "mutability": "mutable",
                  "name": "agreementId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3808,
                  "src": "2672:19:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3784,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2672:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3787,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3808,
                  "src": "2701:14:45",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3786,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2701:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3789,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3808,
                  "src": "2743:14:45",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3788,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2743:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3791,
                  "mutability": "mutable",
                  "name": "ctx",
                  "nodeType": "VariableDeclaration",
                  "scope": 3808,
                  "src": "2778:18:45",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3790,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2778:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2592:210:45"
            },
            "returnParameters": {
              "id": 3796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3795,
                  "mutability": "mutable",
                  "name": "newCtx",
                  "nodeType": "VariableDeclaration",
                  "scope": 3808,
                  "src": "2845:19:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3794,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2845:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2844:21:45"
            },
            "scope": 4170,
            "src": "2562:395:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              7579
            ],
            "body": {
              "id": 3846,
              "nodeType": "Block",
              "src": "3245:190:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_ISuperToken_$10382",
                          "typeString": "contract ISuperToken"
                        },
                        "id": 3827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3825,
                          "name": "superToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3810,
                          "src": "3263:10:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$10382",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3826,
                          "name": "_cashToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3654,
                          "src": "3277:10:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$10382",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "src": "3263:24:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4452543a20556e737570706f72746564206361736820746f6b656e",
                        "id": 3828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3289:29:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81da366a5722d2f942216deded63f2fdfda38e34d08dab594f51c37ccf776fe2",
                          "typeString": "literal_string \"DRT: Unsupported cash token\""
                        },
                        "value": "DRT: Unsupported cash token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81da366a5722d2f942216deded63f2fdfda38e34d08dab594f51c37ccf776fe2",
                          "typeString": "literal_string \"DRT: Unsupported cash token\""
                        }
                      ],
                      "id": 3824,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3255:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3255:64:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3830,
                  "nodeType": "ExpressionStatement",
                  "src": "3255:64:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3832,
                          "name": "agreementClass",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3812,
                          "src": "3337:14:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 3835,
                              "name": "_ida",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3658,
                              "src": "3363:4:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                                "typeString": "contract IInstantDistributionAgreementV1"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                                "typeString": "contract IInstantDistributionAgreementV1"
                              }
                            ],
                            "id": 3834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3355:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3833,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3355:7:45",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3355:13:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3337:31:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4452543a20556e737570706f727465642061677265656d656e74",
                        "id": 3838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3370:28:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_396bf2721173acc2be60ac579b75e9dd8c53bd946f14f09856a30debd6f88dd3",
                          "typeString": "literal_string \"DRT: Unsupported agreement\""
                        },
                        "value": "DRT: Unsupported agreement"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_396bf2721173acc2be60ac579b75e9dd8c53bd946f14f09856a30debd6f88dd3",
                          "typeString": "literal_string \"DRT: Unsupported agreement\""
                        }
                      ],
                      "id": 3831,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3329:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3329:70:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3840,
                  "nodeType": "ExpressionStatement",
                  "src": "3329:70:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 3843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3426:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 3842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3416:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 3841,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3420:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 3844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3416:12:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 3823,
                  "id": 3845,
                  "nodeType": "Return",
                  "src": "3409:19:45"
                }
              ]
            },
            "functionSelector": "884d1f40",
            "id": 3847,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beforeAgreementUpdated",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3820,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3196:8:45"
            },
            "parameters": {
              "id": 3819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3810,
                  "mutability": "mutable",
                  "name": "superToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 3847,
                  "src": "3004:22:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10382",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 3809,
                    "name": "ISuperToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10382,
                    "src": "3004:11:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10382",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3812,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nodeType": "VariableDeclaration",
                  "scope": 3847,
                  "src": "3036:22:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3036:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3814,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3847,
                  "src": "3068:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3813,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3068:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3816,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3847,
                  "src": "3103:14:45",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3815,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3103:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3818,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3847,
                  "src": "3145:14:45",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3817,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3145:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2994:179:45"
            },
            "returnParameters": {
              "id": 3823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3822,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 3847,
                  "src": "3222:17:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3821,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3222:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3221:19:45"
            },
            "scope": 4170,
            "src": "2963:472:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              7602
            ],
            "body": {
              "id": 3875,
              "nodeType": "Block",
              "src": "3749:87:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3866,
                        "name": "superToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3849,
                        "src": "3778:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$10382",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      {
                        "id": 3867,
                        "name": "ctx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3859,
                        "src": "3790:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 3868,
                        "name": "agreementId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3853,
                        "src": "3795:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperToken_$10382",
                          "typeString": "contract ISuperToken"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3865,
                      "name": "_checkSubscription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3958,
                      "src": "3759:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$10382_$_t_bytes_calldata_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (contract ISuperToken,bytes calldata,bytes32)"
                      }
                    },
                    "id": 3869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3759:48:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3870,
                  "nodeType": "ExpressionStatement",
                  "src": "3759:48:45"
                },
                {
                  "expression": {
                    "id": 3873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3871,
                      "name": "newCtx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3863,
                      "src": "3817:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3872,
                      "name": "ctx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3859,
                      "src": "3826:3:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "src": "3817:12:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 3874,
                  "nodeType": "ExpressionStatement",
                  "src": "3817:12:45"
                }
              ]
            },
            "functionSelector": "230dbd29",
            "id": 3876,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "afterAgreementUpdated",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3861,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3699:8:45"
            },
            "parameters": {
              "id": 3860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3849,
                  "mutability": "mutable",
                  "name": "superToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 3876,
                  "src": "3481:22:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10382",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 3848,
                    "name": "ISuperToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10382,
                    "src": "3481:11:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10382",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3851,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3876,
                  "src": "3513:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3513:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3853,
                  "mutability": "mutable",
                  "name": "agreementId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3876,
                  "src": "3551:19:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3852,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3551:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3855,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3876,
                  "src": "3580:14:45",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3854,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3580:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3857,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3876,
                  "src": "3622:14:45",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3856,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3622:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3859,
                  "mutability": "mutable",
                  "name": "ctx",
                  "nodeType": "VariableDeclaration",
                  "scope": 3876,
                  "src": "3657:18:45",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3858,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3657:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3471:210:45"
            },
            "returnParameters": {
              "id": 3864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3863,
                  "mutability": "mutable",
                  "name": "newCtx",
                  "nodeType": "VariableDeclaration",
                  "scope": 3876,
                  "src": "3724:19:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3862,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3724:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3723:21:45"
            },
            "scope": 4170,
            "src": "3441:395:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3957,
              "nodeType": "Block",
              "src": "3985:861:45",
              "statements": [
                {
                  "assignments": [
                    3888
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3888,
                      "mutability": "mutable",
                      "name": "context",
                      "nodeType": "VariableDeclaration",
                      "scope": 3957,
                      "src": "3995:34:45",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Context_$5814_memory_ptr",
                        "typeString": "struct ISuperfluid.Context"
                      },
                      "typeName": {
                        "id": 3887,
                        "name": "ISuperfluid.Context",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5814,
                        "src": "3995:19:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Context_$5814_storage_ptr",
                          "typeString": "struct ISuperfluid.Context"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3893,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3891,
                        "name": "ctx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3880,
                        "src": "4048:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 3889,
                        "name": "_host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3656,
                        "src": "4032:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                          "typeString": "contract ISuperfluid"
                        }
                      },
                      "id": 3890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decodeCtx",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5847,
                      "src": "4032:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_struct$_Context_$5814_memory_ptr_$",
                        "typeString": "function (bytes memory) pure external returns (struct ISuperfluid.Context memory)"
                      }
                    },
                    "id": 3892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4032:20:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Context_$5814_memory_ptr",
                      "typeString": "struct ISuperfluid.Context memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3995:57:45"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 3899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3894,
                        "name": "context",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3888,
                        "src": "4132:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Context_$5814_memory_ptr",
                          "typeString": "struct ISuperfluid.Context memory"
                        }
                      },
                      "id": 3895,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "agreementSelector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5803,
                      "src": "4132:25:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 3896,
                          "name": "IInstantDistributionAgreementV1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8139,
                          "src": "4161:31:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IInstantDistributionAgreementV1_$8139_$",
                            "typeString": "type(contract IInstantDistributionAgreementV1)"
                          }
                        },
                        "id": 3897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "approveSubscription",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7945,
                        "src": "4161:51:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_nonpayable$_t_contract$_ISuperfluidToken_$10791_$_t_address_$_t_uint32_$_t_bytes_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function IInstantDistributionAgreementV1.approveSubscription(contract ISuperfluidToken,address,uint32,bytes calldata) returns (bytes memory)"
                        }
                      },
                      "id": 3898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "4161:60:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "4132:89:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3956,
                  "nodeType": "IfStatement",
                  "src": "4128:712:45",
                  "trueBody": {
                    "id": 3955,
                    "nodeType": "Block",
                    "src": "4223:617:45",
                    "statements": [
                      {
                        "assignments": [
                          3901
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3901,
                            "mutability": "mutable",
                            "name": "publisher",
                            "nodeType": "VariableDeclaration",
                            "scope": 3955,
                            "src": "4237:17:45",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3900,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4237:7:45",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3902,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4237:17:45"
                      },
                      {
                        "assignments": [
                          3904
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3904,
                            "mutability": "mutable",
                            "name": "indexId",
                            "nodeType": "VariableDeclaration",
                            "scope": 3955,
                            "src": "4268:14:45",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 3903,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4268:6:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3905,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4268:14:45"
                      },
                      {
                        "assignments": [
                          3907
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3907,
                            "mutability": "mutable",
                            "name": "approved",
                            "nodeType": "VariableDeclaration",
                            "scope": 3955,
                            "src": "4296:13:45",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 3906,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4296:4:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3908,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4296:13:45"
                      },
                      {
                        "assignments": [
                          3910
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3910,
                            "mutability": "mutable",
                            "name": "units",
                            "nodeType": "VariableDeclaration",
                            "scope": 3955,
                            "src": "4323:13:45",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "typeName": {
                              "id": 3909,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "4323:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3911,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4323:13:45"
                      },
                      {
                        "assignments": [
                          3913
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3913,
                            "mutability": "mutable",
                            "name": "pendingDistribution",
                            "nodeType": "VariableDeclaration",
                            "scope": 3955,
                            "src": "4350:27:45",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3912,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4350:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3914,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4350:27:45"
                      },
                      {
                        "expression": {
                          "id": 3926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 3915,
                                "name": "publisher",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3901,
                                "src": "4392:9:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3916,
                                "name": "indexId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3904,
                                "src": "4403:7:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              {
                                "id": 3917,
                                "name": "approved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3907,
                                "src": "4412:8:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "id": 3918,
                                "name": "units",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3910,
                                "src": "4422:5:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              {
                                "id": 3919,
                                "name": "pendingDistribution",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3913,
                                "src": "4429:19:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3920,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "4391:58:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint32_$_t_bool_$_t_uint128_$_t_uint256_$",
                              "typeString": "tuple(address,uint32,bool,uint128,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3923,
                                "name": "superToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3878,
                                "src": "4493:10:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperToken_$10382",
                                  "typeString": "contract ISuperToken"
                                }
                              },
                              {
                                "id": 3924,
                                "name": "agreementId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3882,
                                "src": "4505:11:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ISuperToken_$10382",
                                  "typeString": "contract ISuperToken"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 3921,
                                "name": "_ida",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3658,
                                "src": "4468:4:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                                  "typeString": "contract IInstantDistributionAgreementV1"
                                }
                              },
                              "id": 3922,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getSubscriptionByID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8089,
                              "src": "4468:24:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_contract$_ISuperfluidToken_$10791_$_t_bytes32_$returns$_t_address_$_t_uint32_$_t_bool_$_t_uint128_$_t_uint256_$",
                                "typeString": "function (contract ISuperfluidToken,bytes32) view external returns (address,uint32,bool,uint128,uint256)"
                              }
                            },
                            "id": 3925,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4468:49:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint32_$_t_bool_$_t_uint128_$_t_uint256_$",
                              "typeString": "tuple(address,uint32,bool,uint128,uint256)"
                            }
                          },
                          "src": "4391:126:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3927,
                        "nodeType": "ExpressionStatement",
                        "src": "4391:126:45"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3929,
                                "name": "publisher",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3901,
                                "src": "4589:9:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 3932,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "4610:4:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TennerrVotingRightsToken_$4170",
                                      "typeString": "contract TennerrVotingRightsToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TennerrVotingRightsToken_$4170",
                                      "typeString": "contract TennerrVotingRightsToken"
                                    }
                                  ],
                                  "id": 3931,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4602:7:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3930,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4602:7:45",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3933,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4602:13:45",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4589:26:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4452543a207075626c6973686572206d69736d61746368",
                              "id": 3935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4617:25:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a34efd77dc2e4756fcdf9159018741d047993571cf39999bd3ba17953f9e8ec4",
                                "typeString": "literal_string \"DRT: publisher mismatch\""
                              },
                              "value": "DRT: publisher mismatch"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a34efd77dc2e4756fcdf9159018741d047993571cf39999bd3ba17953f9e8ec4",
                                "typeString": "literal_string \"DRT: publisher mismatch\""
                              }
                            ],
                            "id": 3928,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4581:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4581:62:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3937,
                        "nodeType": "ExpressionStatement",
                        "src": "4581:62:45"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 3941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3939,
                                "name": "indexId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3904,
                                "src": "4665:7:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 3940,
                                "name": "INDEX_ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3652,
                                "src": "4676:8:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "src": "4665:19:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4452543a207075626c6973686572206d69736d61746368",
                              "id": 3942,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4686:25:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a34efd77dc2e4756fcdf9159018741d047993571cf39999bd3ba17953f9e8ec4",
                                "typeString": "literal_string \"DRT: publisher mismatch\""
                              },
                              "value": "DRT: publisher mismatch"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a34efd77dc2e4756fcdf9159018741d047993571cf39999bd3ba17953f9e8ec4",
                                "typeString": "literal_string \"DRT: publisher mismatch\""
                              }
                            ],
                            "id": 3938,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4657:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4657:55:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3944,
                        "nodeType": "ExpressionStatement",
                        "src": "4657:55:45"
                      },
                      {
                        "condition": {
                          "id": 3945,
                          "name": "approved",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3907,
                          "src": "4731:8:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3954,
                        "nodeType": "IfStatement",
                        "src": "4727:103:45",
                        "trueBody": {
                          "id": 3953,
                          "nodeType": "Block",
                          "src": "4741:89:45",
                          "statements": [
                            {
                              "expression": {
                                "id": 3951,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3946,
                                    "name": "isSubscribing",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3662,
                                    "src": "4759:13:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 3949,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 3947,
                                      "name": "context",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3888,
                                      "src": "4773:7:45",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Context_$5814_memory_ptr",
                                        "typeString": "struct ISuperfluid.Context memory"
                                      }
                                    },
                                    "id": 3948,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "msgSender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5801,
                                    "src": "4773:17:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4759:49:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 3950,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4811:4:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "4759:56:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3952,
                              "nodeType": "ExpressionStatement",
                              "src": "4759:56:45"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "id": 3958,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkSubscription",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3878,
                  "mutability": "mutable",
                  "name": "superToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 3958,
                  "src": "3879:22:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10382",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 3877,
                    "name": "ISuperToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10382,
                    "src": "3879:11:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10382",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3880,
                  "mutability": "mutable",
                  "name": "ctx",
                  "nodeType": "VariableDeclaration",
                  "scope": 3958,
                  "src": "3911:18:45",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3879,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3911:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3882,
                  "mutability": "mutable",
                  "name": "agreementId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3958,
                  "src": "3939:19:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3881,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3939:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3869:95:45"
            },
            "returnParameters": {
              "id": 3884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3985:0:45"
            },
            "scope": 4170,
            "src": "3842:1004:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 4013,
              "nodeType": "Block",
              "src": "4981:585:45",
              "statements": [
                {
                  "assignments": [
                    3969
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3969,
                      "mutability": "mutable",
                      "name": "currentAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 4013,
                      "src": "5045:21:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3968,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5045:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3973,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3971,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3961,
                        "src": "5079:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3970,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7046,
                      "src": "5069:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 3972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5069:22:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5045:46:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3977,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3961,
                        "src": "5152:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3978,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3963,
                        "src": "5165:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3974,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7446,
                        "src": "5140:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$7446_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 3976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7322,
                      "src": "5140:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5140:32:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3980,
                  "nodeType": "ExpressionStatement",
                  "src": "5140:32:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3984,
                        "name": "_ida",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3658,
                        "src": "5216:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                          "typeString": "contract IInstantDistributionAgreementV1"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 3987,
                                "name": "_ida",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3658,
                                "src": "5274:4:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                                  "typeString": "contract IInstantDistributionAgreementV1"
                                }
                              },
                              "id": 3988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "updateSubscription",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8023,
                              "src": "5274:23:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$10791_$_t_uint32_$_t_address_$_t_uint128_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (contract ISuperfluidToken,uint32,address,uint128,bytes memory) external returns (bytes memory)"
                              }
                            },
                            "id": 3989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5274:32:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 3990,
                            "name": "_cashToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3654,
                            "src": "5324:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$10382",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          {
                            "id": 3991,
                            "name": "INDEX_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3652,
                            "src": "5352:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 3992,
                            "name": "beneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3961,
                            "src": "5378:11:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 4001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 3995,
                                  "name": "currentAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3969,
                                  "src": "5415:13:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 3994,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5407:7:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint128_$",
                                  "typeString": "type(uint128)"
                                },
                                "typeName": {
                                  "id": 3993,
                                  "name": "uint128",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5407:7:45",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5407:22:45",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 3999,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3963,
                                  "src": "5440:6:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 3998,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5432:7:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint128_$",
                                  "typeString": "type(uint128)"
                                },
                                "typeName": {
                                  "id": 3997,
                                  "name": "uint128",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5432:7:45",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5432:15:45",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "5407:40:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 4004,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5475:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "5465:9:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (bytes memory)"
                              },
                              "typeName": {
                                "id": 4002,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "5469:5:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes"
                                }
                              }
                            },
                            "id": 4005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5465:12:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_contract$_ISuperToken_$10382",
                              "typeString": "contract ISuperToken"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 3985,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5234:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "5234:22:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 4006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5234:276:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4009,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5534:1:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "5524:9:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 4007,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "5528:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 4010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5524:12:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                          "typeString": "contract IInstantDistributionAgreementV1"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 3981,
                        "name": "_host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3656,
                        "src": "5183:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                          "typeString": "contract ISuperfluid"
                        }
                      },
                      "id": 3983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callAgreement",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5783,
                      "src": "5183:19:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$9921_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory) external returns (bytes memory)"
                      }
                    },
                    "id": 4011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5183:376:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 4012,
                  "nodeType": "ExpressionStatement",
                  "src": "5183:376:45"
                }
              ]
            },
            "documentation": {
              "id": 3959,
              "nodeType": "StructuredDocumentation",
              "src": "4852:53:45",
              "text": "@dev Issue new `amount` of giths to `beneficiary`"
            },
            "functionSelector": "867904b4",
            "id": 4014,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3966,
                "modifierName": {
                  "id": 3965,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4512,
                  "src": "4971:9:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4971:9:45"
              }
            ],
            "name": "issue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3961,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 4014,
                  "src": "4925:19:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4925:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3963,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4014,
                  "src": "4946:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3962,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4946:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4924:37:45"
            },
            "returnParameters": {
              "id": 3967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4981:0:45"
            },
            "scope": 4170,
            "src": "4910:656:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4070,
              "nodeType": "Block",
              "src": "5696:561:45",
              "statements": [
                {
                  "assignments": [
                    4023,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4023,
                      "mutability": "mutable",
                      "name": "actualCashAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 4070,
                      "src": "5707:24:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4022,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5707:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 4034,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4026,
                        "name": "_cashToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3654,
                        "src": "5776:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$10382",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4029,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5808:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TennerrVotingRightsToken_$4170",
                              "typeString": "contract TennerrVotingRightsToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TennerrVotingRightsToken_$4170",
                              "typeString": "contract TennerrVotingRightsToken"
                            }
                          ],
                          "id": 4028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5800:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4027,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5800:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5800:13:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4031,
                        "name": "INDEX_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3652,
                        "src": "5815:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 4032,
                        "name": "cashAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4017,
                        "src": "5837:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperToken_$10382",
                          "typeString": "contract ISuperToken"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4024,
                        "name": "_ida",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3658,
                        "src": "5736:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                          "typeString": "contract IInstantDistributionAgreementV1"
                        }
                      },
                      "id": 4025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "calculateDistribution",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7885,
                      "src": "5736:26:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ISuperfluidToken_$10791_$_t_address_$_t_uint32_$_t_uint256_$returns$_t_uint256_$_t_uint128_$",
                        "typeString": "function (contract ISuperfluidToken,address,uint32,uint256) view external returns (uint256,uint128)"
                      }
                    },
                    "id": 4033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5736:112:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint128_$",
                      "typeString": "tuple(uint256,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5706:142:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4038,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4498,
                          "src": "5883:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5883:7:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4042,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5900:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TennerrVotingRightsToken_$4170",
                              "typeString": "contract TennerrVotingRightsToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TennerrVotingRightsToken_$4170",
                              "typeString": "contract TennerrVotingRightsToken"
                            }
                          ],
                          "id": 4041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5892:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4040,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5892:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5892:13:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4044,
                        "name": "actualCashAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4023,
                        "src": "5907:16:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4035,
                        "name": "_cashToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3654,
                        "src": "5859:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$10382",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      "id": 4037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10158,
                      "src": "5859:23:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5859:65:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4046,
                  "nodeType": "ExpressionStatement",
                  "src": "5859:65:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4050,
                        "name": "_ida",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3658,
                        "src": "5968:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                          "typeString": "contract IInstantDistributionAgreementV1"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 4053,
                                "name": "_ida",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3658,
                                "src": "6026:4:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                                  "typeString": "contract IInstantDistributionAgreementV1"
                                }
                              },
                              "id": 4054,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "distribute",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7931,
                              "src": "6026:15:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$10791_$_t_uint32_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (contract ISuperfluidToken,uint32,uint256,bytes memory) external returns (bytes memory)"
                              }
                            },
                            "id": 4055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "6026:24:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 4056,
                            "name": "_cashToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3654,
                            "src": "6068:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$10382",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          {
                            "id": 4057,
                            "name": "INDEX_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3652,
                            "src": "6096:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 4058,
                            "name": "actualCashAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4023,
                            "src": "6122:16:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 4061,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6166:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "6156:9:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (bytes memory)"
                              },
                              "typeName": {
                                "id": 4059,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6160:5:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes"
                                }
                              }
                            },
                            "id": 4062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6156:12:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_contract$_ISuperToken_$10382",
                              "typeString": "contract ISuperToken"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 4051,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5986:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "5986:22:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 4063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5986:215:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6225:1:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "6215:9:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 4064,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "6219:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 4067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6215:12:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                          "typeString": "contract IInstantDistributionAgreementV1"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 4047,
                        "name": "_host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3656,
                        "src": "5935:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                          "typeString": "contract ISuperfluid"
                        }
                      },
                      "id": 4049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callAgreement",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5783,
                      "src": "5935:19:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$9921_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory) external returns (bytes memory)"
                      }
                    },
                    "id": 4068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5935:315:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 4069,
                  "nodeType": "ExpressionStatement",
                  "src": "5935:315:45"
                }
              ]
            },
            "documentation": {
              "id": 4015,
              "nodeType": "StructuredDocumentation",
              "src": "5572:60:45",
              "text": "@dev Distribute `amount` of cash among all token holders"
            },
            "functionSelector": "91c05b0b",
            "id": 4071,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4020,
                "modifierName": {
                  "id": 4019,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4512,
                  "src": "5686:9:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5686:9:45"
              }
            ],
            "name": "distribute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4017,
                  "mutability": "mutable",
                  "name": "cashAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4071,
                  "src": "5657:18:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4016,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5657:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5656:20:45"
            },
            "returnParameters": {
              "id": 4021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5696:0:45"
            },
            "scope": 4170,
            "src": "5637:620:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              7267
            ],
            "body": {
              "id": 4168,
              "nodeType": "Block",
              "src": "6389:983:45",
              "statements": [
                {
                  "assignments": [
                    4083
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4083,
                      "mutability": "mutable",
                      "name": "senderUnits",
                      "nodeType": "VariableDeclaration",
                      "scope": 4168,
                      "src": "6399:19:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 4082,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6399:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4091,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4088,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4074,
                            "src": "6445:6:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 4086,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7446,
                            "src": "6429:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$7446_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 4087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7046,
                          "src": "6429:15:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 4089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6429:23:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6421:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint128_$",
                        "typeString": "type(uint128)"
                      },
                      "typeName": {
                        "id": 4084,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6421:7:45",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 4090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6421:32:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6399:54:45"
                },
                {
                  "assignments": [
                    4093
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4093,
                      "mutability": "mutable",
                      "name": "recipientUnits",
                      "nodeType": "VariableDeclaration",
                      "scope": 4168,
                      "src": "6463:22:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 4092,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6463:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4101,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4098,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4076,
                            "src": "6512:9:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 4096,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7446,
                            "src": "6496:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$7446_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 4097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7046,
                          "src": "6496:15:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 4099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6496:26:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6488:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint128_$",
                        "typeString": "type(uint128)"
                      },
                      "typeName": {
                        "id": 4094,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6488:7:45",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 4100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6488:35:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6463:60:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4105,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4074,
                        "src": "6591:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4106,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4076,
                        "src": "6599:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4107,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4078,
                        "src": "6610:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4102,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7446,
                        "src": "6575:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$7446_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 4104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7267,
                      "src": "6575:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6575:42:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4109,
                  "nodeType": "ExpressionStatement",
                  "src": "6575:42:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4113,
                        "name": "_ida",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3658,
                        "src": "6661:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                          "typeString": "contract IInstantDistributionAgreementV1"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 4116,
                                "name": "_ida",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3658,
                                "src": "6719:4:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                                  "typeString": "contract IInstantDistributionAgreementV1"
                                }
                              },
                              "id": 4117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "updateSubscription",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8023,
                              "src": "6719:23:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$10791_$_t_uint32_$_t_address_$_t_uint128_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (contract ISuperfluidToken,uint32,address,uint128,bytes memory) external returns (bytes memory)"
                              }
                            },
                            "id": 4118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "6719:32:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 4119,
                            "name": "_cashToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3654,
                            "src": "6769:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$10382",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          {
                            "id": 4120,
                            "name": "INDEX_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3652,
                            "src": "6797:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 4121,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4074,
                            "src": "6823:6:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 4127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4122,
                              "name": "senderUnits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4083,
                              "src": "6847:11:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 4125,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4078,
                                  "src": "6869:6:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 4124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6861:7:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint128_$",
                                  "typeString": "type(uint128)"
                                },
                                "typeName": {
                                  "id": 4123,
                                  "name": "uint128",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6861:7:45",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6861:15:45",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "6847:29:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 4130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6904:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "6894:9:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (bytes memory)"
                              },
                              "typeName": {
                                "id": 4128,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6898:5:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes"
                                }
                              }
                            },
                            "id": 4131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6894:12:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_contract$_ISuperToken_$10382",
                              "typeString": "contract ISuperToken"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 4114,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6679:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "6679:22:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 4132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6679:260:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6963:1:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "6953:9:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 4133,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "6957:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 4136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6953:12:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                          "typeString": "contract IInstantDistributionAgreementV1"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 4110,
                        "name": "_host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3656,
                        "src": "6628:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                          "typeString": "contract ISuperfluid"
                        }
                      },
                      "id": 4112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callAgreement",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5783,
                      "src": "6628:19:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$9921_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory) external returns (bytes memory)"
                      }
                    },
                    "id": 4137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6628:360:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 4138,
                  "nodeType": "ExpressionStatement",
                  "src": "6628:360:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4142,
                        "name": "_ida",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3658,
                        "src": "7032:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                          "typeString": "contract IInstantDistributionAgreementV1"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 4145,
                                "name": "_ida",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3658,
                                "src": "7090:4:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                                  "typeString": "contract IInstantDistributionAgreementV1"
                                }
                              },
                              "id": 4146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "updateSubscription",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8023,
                              "src": "7090:23:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$10791_$_t_uint32_$_t_address_$_t_uint128_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (contract ISuperfluidToken,uint32,address,uint128,bytes memory) external returns (bytes memory)"
                              }
                            },
                            "id": 4147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "7090:32:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 4148,
                            "name": "_cashToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3654,
                            "src": "7140:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$10382",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          {
                            "id": 4149,
                            "name": "INDEX_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3652,
                            "src": "7168:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 4150,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4076,
                            "src": "7194:9:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 4156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4151,
                              "name": "recipientUnits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4093,
                              "src": "7221:14:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 4154,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4078,
                                  "src": "7246:6:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 4153,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7238:7:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint128_$",
                                  "typeString": "type(uint128)"
                                },
                                "typeName": {
                                  "id": 4152,
                                  "name": "uint128",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7238:7:45",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7238:15:45",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "7221:32:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 4159,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7281:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "7271:9:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (bytes memory)"
                              },
                              "typeName": {
                                "id": 4157,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "7275:5:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes"
                                }
                              }
                            },
                            "id": 4160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7271:12:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_contract$_ISuperToken_$10382",
                              "typeString": "contract ISuperToken"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 4143,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7050:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "7050:22:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 4161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7050:266:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7340:1:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "7330:9:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 4162,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "7334:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 4165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7330:12:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IInstantDistributionAgreementV1_$8139",
                          "typeString": "contract IInstantDistributionAgreementV1"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 4139,
                        "name": "_host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3656,
                        "src": "6999:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                          "typeString": "contract ISuperfluid"
                        }
                      },
                      "id": 4141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callAgreement",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5783,
                      "src": "6999:19:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$9921_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory) external returns (bytes memory)"
                      }
                    },
                    "id": 4166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6999:366:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 4167,
                  "nodeType": "ExpressionStatement",
                  "src": "6999:366:45"
                }
              ]
            },
            "documentation": {
              "id": 4072,
              "nodeType": "StructuredDocumentation",
              "src": "6263:33:45",
              "text": "@dev ERC20._transfer override"
            },
            "id": 4169,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4080,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6380:8:45"
            },
            "parameters": {
              "id": 4079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4074,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 4169,
                  "src": "6320:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6320:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4076,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 4169,
                  "src": "6336:17:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4075,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6336:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4078,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4169,
                  "src": "6355:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4077,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6355:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6319:51:45"
            },
            "returnParameters": {
              "id": 4081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6389:0:45"
            },
            "scope": 4170,
            "src": "6301:1071:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 4171,
        "src": "814:6561:45"
      }
    ],
    "src": "32:7344:45"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620025bd380380620025bd8339810160408190526200003491620004cb565b848460006200004262000285565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350916000805160206200259d833981519152908290a35081516200009090600490602085019062000370565b508051620000a690600590602084019062000370565b505060068054601260ff1990911617610100600160a81b0319166101006001600160a01b038781169190910291909117909155600780546001600160a01b03199081168684161791829055600880549091168584161790556040516315a722b960e31b8152643000000001935091169063ad3915c8906200012c9084906004016200069c565b600060405180830381600087803b1580156200014757600080fd5b505af11580156200015c573d6000803e3d6000fd5b5050600754600854600654604080516000808252602082019092526001600160a01b0394851696506339255d5b955092841693636bc3c20560e11b93620001b1936101009004909116919060448101620005e6565b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b03199586161790528151600081529081019182905260e086901b909316905262000207929160248101620005a2565b600060405180830381600087803b1580156200022257600080fd5b505af115801562000237573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200026191908101906200048d565b506200026d3362000289565b6200027960006200034b565b505050505050620006f1565b3390565b6200029362000285565b6001600160a01b0316620002a662000361565b6001600160a01b031614620002d85760405162461bcd60e51b8152600401620002cf9062000667565b60405180910390fd5b6001600160a01b038116620003015760405162461bcd60e51b8152600401620002cf9062000621565b600080546040516001600160a01b03808516939216916000805160206200259d83398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6006805460ff191660ff92909216919091179055565b6000546001600160a01b031690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003b357805160ff1916838001178555620003e3565b82800160010185558215620003e3579182015b82811115620003e3578251825591602001919060010190620003c6565b50620003f1929150620003f5565b5090565b5b80821115620003f15760008155600101620003f6565b600082601f8301126200041d578081fd5b81516001600160401b038082111562000434578283fd5b604051601f8301601f19168101602001828111828210171562000455578485fd5b6040528281529250828483016020018610156200047157600080fd5b62000484836020830160208801620006a5565b50505092915050565b6000602082840312156200049f578081fd5b81516001600160401b03811115620004b5578182fd5b620004c3848285016200040c565b949350505050565b600080600080600060a08688031215620004e3578081fd5b85516001600160401b0380821115620004fa578283fd5b6200050889838a016200040c565b965060208801519150808211156200051e578283fd5b506200052d888289016200040c565b94505060408601516200054081620006d8565b60608701519093506200055381620006d8565b60808701519092506200056681620006d8565b809150509295509295909350565b600081518084526200058e816020860160208601620006a5565b601f01601f19169290920160200192915050565b6001600160a01b0384168152606060208201819052600090620005c89083018562000574565b8281036040840152620005dc818562000574565b9695505050505050565b6001600160a01b038416815263ffffffff83166020820152606060408201819052600090620006189083018462000574565b95945050505050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b60005b83811015620006c2578181015183820152602001620006a8565b83811115620006d2576000848401525b50505050565b6001600160a01b0381168114620006ee57600080fd5b50565b611e9c80620007016000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063867904b4116100c357806395d89b411161007c57806395d89b41146102b7578063a457c2d7146102bf578063a9059cbb146102d2578063d86ed3e5146101b0578063dd62ed3e146102e5578063f2fde38b146102f857610158565b8063867904b414610254578063884d1f40146101d65780638c7f0959146102675780638da5cb5b1461027c578063915e33641461029157806391c05b0b146102a457610158565b8063313ce56711610115578063313ce567146101e957806339509351146101fe57806353c11f99146102115780635f9e7d771461022457806370a0823114610237578063715018a61461024a57610158565b806306fdde031461015d578063095ea7b31461017b57806318160ddd1461019b578063230dbd29146101b057806323b872dd146101c357806330d9c915146101d6575b600080fd5b61016561030b565b6040516101729190611900565b60405180910390f35b61018e6101893660046114d5565b6103a1565b60405161017291906118c6565b6101a36103bf565b6040516101729190611d60565b6101656101be36600461165e565b6103c5565b61018e6101d1366004611495565b610418565b6101656101e43660046115c2565b61049f565b6101f1610525565b6040516101729190611d7a565b61018e61020c3660046114d5565b61052e565b61016561021f36600461165e565b61057c565b6101656102323660046115c2565b610596565b6101a3610245366004611441565b6105b0565b6102526105cb565b005b6102526102623660046114d5565b610654565b61026f6107af565b6040516101729190611d69565b6102846107b4565b604051610172919061188e565b61018e61029f366004611441565b6107c3565b6102526102b236600461181e565b6107d8565b610165610a3f565b61018e6102cd3660046114d5565b610aa0565b61018e6102e03660046114d5565b610b08565b6101a36102f336600461145d565b610b1c565b610252610306366004611441565b610b47565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103975780601f1061036c57610100808354040283529160200191610397565b820191906000526020600020905b81548152906001019060200180831161037a57829003601f168201915b5050505050905090565b60006103b56103ae610c07565b8484610c0b565b5060015b92915050565b60035490565b60606103d38a84848b610cbf565b82828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929d9c50505050505050505050505050565b6000610425848484610e8b565b61049584610431610c07565b61049085604051806060016040528060288152602001611e1a602891396001600160a01b038a1660009081526002602052604081209061046f610c07565b6001600160a01b0316815260208101919091526040016000205491906110b7565b610c0b565b5060019392505050565b6006546060906001600160a01b0389811661010090920416146104dd5760405162461bcd60e51b81526004016104d490611bac565b60405180910390fd5b6008546001600160a01b0388811691161461050a5760405162461bcd60e51b81526004016104d490611b75565b50506040805160008152602081019091529695505050505050565b60065460ff1690565b60006103b561053b610c07565b84610490856002600061054c610c07565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906110e3565b606060405162461bcd60e51b81526004016104d490611cd8565b606060405162461bcd60e51b81526004016104d490611b22565b6001600160a01b031660009081526001602052604090205490565b6105d3610c07565b6001600160a01b03166105e46107b4565b6001600160a01b03161461060a5760405162461bcd60e51b81526004016104d490611be3565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b61065c610c07565b6001600160a01b031661066d6107b4565b6001600160a01b0316146106935760405162461bcd60e51b81526004016104d490611be3565b600061069e836105b0565b90506106aa838361110f565b600754600854600654604080516000808252602082019092526001600160a01b03948516946339255d5b94811693630465a56b60e31b936106ff9361010090920490921691908a90898b01906044810161199b565b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b03199586161790528151600081529081019182905260e086901b9093169052610753929160248101611913565b600060405180830381600087803b15801561076d57600080fd5b505af1158015610781573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107a99190810190611587565b50505050565b600081565b6000546001600160a01b031690565b60096020526000908152604090205460ff1681565b6107e0610c07565b6001600160a01b03166107f16107b4565b6001600160a01b0316146108175760405162461bcd60e51b81526004016104d490611be3565b600854600654604051632266eabb60e21b81526000926001600160a01b039081169263899baaec9261085b9261010090920490911690309086908890600401611953565b604080518083038186803b15801561087257600080fd5b505afa158015610886573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108aa9190611836565b5060065490915061010090046001600160a01b03166323b872dd6108cc6107b4565b30846040518463ffffffff1660e01b81526004016108ec939291906118a2565b602060405180830381600087803b15801561090657600080fd5b505af115801561091a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093e919061156c565b50600754600854600654604080516000808252602082019092526001600160a01b03948516946339255d5b94811693635cb398e160e11b936109909361010090920490921691908890604481016119ed565b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b03199586161790528151600081529081019182905260e086901b90931690526109e4929160248101611913565b600060405180830381600087803b1580156109fe57600080fd5b505af1158015610a12573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a3a9190810190611587565b505050565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103975780601f1061036c57610100808354040283529160200191610397565b60006103b5610aad610c07565b8461049085604051806060016040528060258152602001611e426025913960026000610ad7610c07565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906110b7565b60006103b5610b15610c07565b8484610e8b565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b610b4f610c07565b6001600160a01b0316610b606107b4565b6001600160a01b031614610b865760405162461bcd60e51b81526004016104d490611be3565b6001600160a01b038116610bac5760405162461bcd60e51b81526004016104d490611a63565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6001600160a01b038316610c315760405162461bcd60e51b81526004016104d490611c94565b6001600160a01b038216610c575760405162461bcd60e51b81526004016104d490611aa9565b6001600160a01b0380841660008181526002602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610cb2908590611d60565b60405180910390a3505050565b610cc76112e4565b600754604051631fb6491d60e11b81526001600160a01b0390911690633f6c923a90610cf990879087906004016118d1565b60006040518083038186803b158015610d1157600080fd5b505afa158015610d25573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d4d9190810190611725565b60808101519091506001600160e01b03191663567a536160e11b1415610e845760085460405163cd7245c560e01b815260009182918291829182916001600160a01b03169063cd7245c590610da8908d908b90600401611982565b60a06040518083038186803b158015610dc057600080fd5b505afa158015610dd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df89190611500565b9398509196509450925090506001600160a01b0385163014610e2c5760405162461bcd60e51b81526004016104d490611c18565b63ffffffff841615610e505760405162461bcd60e51b81526004016104d490611c18565b8215610e7e5760608601516001600160a01b03166000908152600960205260409020805460ff191660011790555b50505050505b5050505050565b6000610e96846105b0565b90506000610ea3846105b0565b9050610eb08585856111cf565b600754600854600654604080516000808252602082019092526001600160a01b03948516946339255d5b94811693630465a56b60e31b93610f059361010090920490921691908c908b8b03906044810161199b565b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b03199586161790528151600081529081019182905260e086901b9093169052610f59929160248101611913565b600060405180830381600087803b158015610f7357600080fd5b505af1158015610f87573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610faf9190810190611587565b50600754600854600654604080516000808252602082019092526001600160a01b03948516946339255d5b94811693630465a56b60e31b936110059361010090920490921691908b90898c01906044810161199b565b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b03199586161790528151600081529081019182905260e086901b9093169052611059929160248101611913565b600060405180830381600087803b15801561107357600080fd5b505af1158015611087573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110af9190810190611587565b505050505050565b600081848411156110db5760405162461bcd60e51b81526004016104d49190611900565b505050900390565b6000828201838110156111085760405162461bcd60e51b81526004016104d490611aeb565b9392505050565b6001600160a01b0382166111355760405162461bcd60e51b81526004016104d490611d29565b61114160008383610a3a565b60035461114e90826110e3565b6003556001600160a01b03821660009081526001602052604090205461117490826110e3565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906111c3908590611d60565b60405180910390a35050565b6001600160a01b0383166111f55760405162461bcd60e51b81526004016104d490611c4f565b6001600160a01b03821661121b5760405162461bcd60e51b81526004016104d490611a20565b611226838383610a3a565b61126381604051806060016040528060268152602001611df4602691396001600160a01b03861660009081526001602052604090205491906110b7565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461129290826110e3565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610cb2908590611d60565b604080516101408101825260008082526020820181905291810182905260608082018390526080820183905260a082015260c0810182905260e08101829052610100810182905261012081019190915290565b80516103b981611ddb565b805180151581146103b957600080fd5b80516001600160e01b0319811681146103b957600080fd5b60008083601f84011261137b578182fd5b50813567ffffffffffffffff811115611392578182fd5b6020830191508360208285010111156113aa57600080fd5b9250929050565b600082601f8301126113c1578081fd5b815167ffffffffffffffff8111156113d7578182fd5b6113ea601f8201601f1916602001611d88565b915080825283602082850101111561140157600080fd5b611412816020840160208601611daf565b5092915050565b80516001600160801b03811681146103b957600080fd5b805160ff811681146103b957600080fd5b600060208284031215611452578081fd5b813561110881611ddb565b6000806040838503121561146f578081fd5b823561147a81611ddb565b9150602083013561148a81611ddb565b809150509250929050565b6000806000606084860312156114a9578081fd5b83356114b481611ddb565b925060208401356114c481611ddb565b929592945050506040919091013590565b600080604083850312156114e7578182fd5b82356114f281611ddb565b946020939093013593505050565b600080600080600060a08688031215611517578081fd5b855161152281611ddb565b602087015190955063ffffffff8116811461153b578182fd5b935061154a8760408801611342565b92506115598760608801611419565b9150608086015190509295509295909350565b60006020828403121561157d578081fd5b6111088383611342565b600060208284031215611598578081fd5b815167ffffffffffffffff8111156115ae578182fd5b6115ba848285016113b1565b949350505050565b600080600080600080600060a0888a0312156115dc578182fd5b87356115e781611ddb565b965060208801356115f781611ddb565b955060408801359450606088013567ffffffffffffffff8082111561161a578384fd5b6116268b838c0161136a565b909650945060808a013591508082111561163e578384fd5b5061164b8a828b0161136a565b989b979a50959850939692959293505050565b600080600080600080600080600060c08a8c03121561167b578283fd5b893561168681611ddb565b985060208a013561169681611ddb565b975060408a0135965060608a013567ffffffffffffffff808211156116b9578485fd5b6116c58d838e0161136a565b909850965060808c01359150808211156116dd578485fd5b6116e98d838e0161136a565b909650945060a08c0135915080821115611701578384fd5b5061170e8c828d0161136a565b915080935050809150509295985092959850929598565b600060208284031215611736578081fd5b815167ffffffffffffffff8082111561174d578283fd5b8184019150610140808387031215611763578384fd5b61176c81611d88565b90506117788684611430565b81526117878660208501611430565b6020820152604083015160408201526117a38660608501611337565b60608201526117b58660808501611352565b608082015260a0830151828111156117cb578485fd5b6117d7878286016113b1565b60a08301525060c083015160c082015260e083015160e082015261010091508183015182820152610120915061180f86838501611337565b91810191909152949350505050565b60006020828403121561182f578081fd5b5035919050565b60008060408385031215611848578182fd5b825191506118598460208501611419565b90509250929050565b6000815180845261187a816020860160208601611daf565b601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b901515815260200190565b60006020825282602083015282846040840137818301604090810191909152601f909201601f19160101919050565b6000602082526111086020830184611862565b6001600160a01b038416815260606020820181905260009061193790830185611862565b82810360408401526119498185611862565b9695505050505050565b6001600160a01b03948516815292909316602083015263ffffffff166040820152606081019190915260800190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b03868116825263ffffffff86166020830152841660408201526001600160801b038316606082015260a0608082018190526000906119e290830184611862565b979650505050505050565b600060018060a01b038616825263ffffffff85166020830152836040830152608060608301526119496080830184611862565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526033908201527f556e737570706f727465642063616c6c6261636b202d20204265666f7265204160408201527219dc99595b595b9d0815195c9b5a5b985d1959606a1b606082015260800190565b6020808252601a908201527f4452543a20556e737570706f727465642061677265656d656e74000000000000604082015260600190565b6020808252601b908201527f4452543a20556e737570706f72746564206361736820746f6b656e0000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526017908201527f4452543a207075626c6973686572206d69736d61746368000000000000000000604082015260600190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526031908201527f556e737570706f727465642063616c6c6261636b202d2041667465722041677260408201527019595b595b9d0815195c9b5a5b985d1959607a1b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b63ffffffff91909116815260200190565b60ff91909116815260200190565b60405181810167ffffffffffffffff81118282101715611da757600080fd5b604052919050565b60005b83811015611dca578181015183820152602001611db2565b838111156107a95750506000910152565b6001600160a01b0381168114611df057600080fd5b5056fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122025350a068643b896f4193e7bddf4668c9e0c27ae17ca6d624937c13fd5576c1564736f6c634300070100338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.1+commit.f4a555be"
  },
  "contractName": "TennerrVotingRightsToken",
  "coverageMap": {
    "branches": {
      "1": {
        "Ownable.transferOwnership": {
          "69": [
            1297,
            1320,
            true
          ],
          "70": [
            2099,
            2121,
            true
          ]
        }
      },
      "10": {},
      "2": {
        "SafeMath.add": {
          "72": [
            2802,
            2808,
            true
          ]
        },
        "SafeMath.sub": {
          "71": [
            5545,
            5551,
            true
          ]
        }
      },
      "26": {},
      "28": {},
      "29": {},
      "30": {},
      "31": {},
      "32": {},
      "33": {},
      "34": {},
      "35": {},
      "36": {},
      "37": {},
      "38": {},
      "4": {
        "ERC20._approve": {
          "64": [
            9456,
            9475,
            true
          ],
          "65": [
            9534,
            9555,
            true
          ]
        },
        "ERC20._mint": {
          "66": [
            7915,
            7936,
            true
          ]
        },
        "ERC20._transfer": {
          "67": [
            7136,
            7156,
            true
          ],
          "68": [
            7216,
            7239,
            true
          ]
        }
      },
      "45": {
        "TennerrVotingRightsToken._checkSubscription": {
          "60": [
            4132,
            4221,
            false
          ],
          "61": [
            4589,
            4615,
            true
          ],
          "62": [
            4665,
            4684,
            true
          ],
          "63": [
            4731,
            4739,
            false
          ]
        },
        "TennerrVotingRightsToken.beforeAgreementCreated": {
          "58": [
            2384,
            2408,
            true
          ],
          "59": [
            2458,
            2489,
            true
          ]
        }
      },
      "6": {},
      "8": {}
    },
    "statements": {
      "1": {
        "Ownable.owner": {
          "21": [
            1150,
            1163
          ]
        },
        "Ownable.renounceOwnership": {
          "17": [
            1781,
            1826
          ],
          "18": [
            1836,
            1855
          ]
        },
        "Ownable.transferOwnership": {
          "28": [
            2091,
            2164
          ],
          "29": [
            2174,
            2217
          ],
          "30": [
            2227,
            2244
          ]
        }
      },
      "10": {
        "Context._msgSender": {
          "31": [
            678,
            695
          ]
        }
      },
      "2": {
        "SafeMath.add": {
          "45": [
            2794,
            2840
          ],
          "46": [
            2850,
            2858
          ]
        },
        "SafeMath.sub": {
          "43": [
            5537,
            5566
          ],
          "44": [
            5576,
            5588
          ]
        }
      },
      "26": {
        "SuperAppBase.afterAgreementTerminated": {
          "14": [
            2684,
            2743
          ]
        },
        "SuperAppBase.beforeAgreementTerminated": {
          "15": [
            2250,
            2311
          ]
        }
      },
      "28": {},
      "29": {},
      "30": {},
      "31": {},
      "32": {},
      "33": {},
      "34": {},
      "35": {},
      "36": {},
      "37": {},
      "38": {},
      "4": {
        "ERC20._approve": {
          "32": [
            9448,
            9516
          ],
          "33": [
            9526,
            9594
          ],
          "34": [
            9605,
            9641
          ],
          "35": [
            9651,
            9688
          ]
        },
        "ERC20._mint": {
          "47": [
            7907,
            7972
          ],
          "48": [
            7983,
            8032
          ],
          "49": [
            8043,
            8082
          ],
          "50": [
            8092,
            8143
          ],
          "51": [
            8153,
            8195
          ]
        },
        "ERC20._transfer": {
          "52": [
            7128,
            7198
          ],
          "53": [
            7208,
            7279
          ],
          "54": [
            7290,
            7337
          ],
          "55": [
            7348,
            7439
          ],
          "56": [
            7449,
            7504
          ],
          "57": [
            7514,
            7554
          ]
        },
        "ERC20.allowance": {
          "27": [
            4065,
            4099
          ]
        },
        "ERC20.approve": {
          "1": [
            4343,
            4382
          ],
          "2": [
            4392,
            4403
          ]
        },
        "ERC20.balanceOf": {
          "16": [
            3492,
            3517
          ]
        },
        "ERC20.decimals": {
          "12": [
            3152,
            3168
          ]
        },
        "ERC20.decreaseAllowance": {
          "25": [
            6400,
            6529
          ]
        },
        "ERC20.increaseAllowance": {
          "13": [
            5693,
            5776
          ]
        },
        "ERC20.name": {
          "0": [
            2238,
            2250
          ]
        },
        "ERC20.symbol": {
          "24": [
            2442,
            2456
          ]
        },
        "ERC20.totalSupply": {
          "3": [
            3315,
            3334
          ]
        },
        "ERC20.transfer": {
          "26": [
            3829,
            3871
          ]
        },
        "ERC20.transferFrom": {
          "6": [
            4999,
            5035
          ],
          "7": [
            5045,
            5166
          ],
          "8": [
            5176,
            5187
          ]
        }
      },
      "45": {
        "TennerrVotingRightsToken._checkSubscription": {
          "36": [
            4391,
            4517
          ],
          "37": [
            4581,
            4643
          ],
          "38": [
            4657,
            4712
          ],
          "39": [
            4759,
            4815
          ]
        },
        "TennerrVotingRightsToken._transfer": {
          "40": [
            6575,
            6617
          ],
          "41": [
            6628,
            6988
          ],
          "42": [
            6999,
            7365
          ]
        },
        "TennerrVotingRightsToken.afterAgreementUpdated": {
          "4": [
            3759,
            3807
          ],
          "5": [
            3817,
            3829
          ]
        },
        "TennerrVotingRightsToken.beforeAgreementCreated": {
          "9": [
            2376,
            2440
          ],
          "10": [
            2450,
            2520
          ],
          "11": [
            2530,
            2549
          ]
        },
        "TennerrVotingRightsToken.distribute": {
          "22": [
            5859,
            5924
          ],
          "23": [
            5935,
            6250
          ]
        },
        "TennerrVotingRightsToken.issue": {
          "19": [
            5140,
            5172
          ],
          "20": [
            5183,
            5559
          ]
        }
      },
      "6": {},
      "8": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC20",
    "superfluid-finance/superfluid@1.0.0/ERC20WithTokenInfo",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC777",
    "superfluid-finance/superfluid@1.0.0/IInstantDistributionAgreementV1",
    "superfluid-finance/superfluid@1.0.0/ISuperAgreement",
    "superfluid-finance/superfluid@1.0.0/ISuperApp",
    "superfluid-finance/superfluid@1.0.0/ISuperToken",
    "superfluid-finance/superfluid@1.0.0/ISuperTokenFactory",
    "superfluid-finance/superfluid@1.0.0/ISuperfluid",
    "superfluid-finance/superfluid@1.0.0/ISuperfluidGovernance",
    "superfluid-finance/superfluid@1.0.0/ISuperfluidToken",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath",
    "superfluid-finance/superfluid@1.0.0/SuperAppBase",
    "superfluid-finance/superfluid@1.0.0/SuperAppDefinitions",
    "superfluid-finance/superfluid@1.0.0/TokenInfo"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "814:6561:45:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4244:166;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3235:106::-;;;:::i;:::-;;;;;;;:::i;3441:395:45:-;;;;;;:::i;:::-;;:::i;4877:317:4:-;;;;;;:::i;:::-;;:::i;2084:472:45:-;;;;;;:::i;:::-;;:::i;3086:89:4:-;;;:::i;:::-;;;;;;;:::i;5589:215::-;;;;;;:::i;:::-;;:::i;2324:426:26:-;;;;;;:::i;:::-;;:::i;1911:407::-;;;;;;:::i;:::-;;:::i;3399:125:4:-;;;;;;:::i;:::-;;:::i;1717:145:1:-;;;:::i;:::-;;4910:656:45;;;;;;:::i;:::-;;:::i;899:35::-;;;:::i;:::-;;;;;;;:::i;1085:85:1:-;;;:::i;:::-;;;;;;;:::i;1112:46:45:-;;;;;;:::i;:::-;;:::i;5637:620::-;;;;;;:::i;:::-;;:::i;2370:93:4:-;;;:::i;6291:266::-;;;;;;:::i;:::-;;:::i;3727:172::-;;;;;;:::i;:::-;;:::i;3957:149::-;;;;;;:::i;:::-;;:::i;2011:240:1:-;;;;;;:::i;:::-;;:::i;2168:89:4:-;2245:5;2238:12;;;;;;;;-1:-1:-1;;2238:12:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2213:13;;2238:12;;2245:5;;2238:12;;2245:5;2238:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;:::o;4244:166::-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;-1:-1:-1;4399:4:4;4244:166;;;;;:::o;3235:106::-;3322:12;;3235:106;:::o;3441:395:45:-;3724:19;3759:48;3778:10;3790:3;;3795:11;3759:18;:48::i;:::-;3826:3;;3817:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3817:12:45;;3441:395;-1:-1:-1;;;;;;;;;;;;;3441:395:45:o;4877:317:4:-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5076:19:4;;;;;;:11;:19;;;;;;5096:12;:10;:12::i;:::-;-1:-1:-1;;;;;5076:33:4;;;;;;;;;;;;-1:-1:-1;5076:33:4;;;:89;:37;:89::i;:::-;5045:8;:121::i;:::-;-1:-1:-1;5183:4:4;4877:317;;;;;:::o;2084:472:45:-;2398:10;;2343:17;;-1:-1:-1;;;;;2384:24:45;;;2398:10;;;;;2384:24;2376:64;;;;-1:-1:-1;;;2376:64:45;;;;;;;:::i;:::-;;;;;;;;;2484:4;;-1:-1:-1;;;;;2458:31:45;;;2484:4;;2458:31;2450:70;;;;-1:-1:-1;;;2450:70:45;;;;;;;:::i;:::-;-1:-1:-1;;2537:12:45;;;2547:1;2537:12;;;;;;;;;2530:19;-1:-1:-1;;;;;;2084:472:45:o;3086:89:4:-;3159:9;;;;3086:89;:::o;5589:215::-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;-1:-1:-1;;;;;5725:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;5725:25:4;;;:34;;;;;;;;;;;:38;:50::i;2324:426:26:-;2645:12;2684:59;;-1:-1:-1;;;2684:59:26;;;;;;;:::i;1911:407::-;2211:12;2250:61;;-1:-1:-1;;;2250:61:26;;;;;;;:::i;3399:125:4:-;-1:-1:-1;;;;;3499:18:4;3473:7;3499:18;;;:9;:18;;;;;;;3399:125::o;1717:145:1:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;-1:-1:-1;;;1289:68:1;;;;;;;:::i;:::-;1823:1:::1;1807:6:::0;;1786:40:::1;::::0;-1:-1:-1;;;;;1807:6:1;;::::1;::::0;1786:40:::1;::::0;1823:1;;1786:40:::1;1853:1;1836:19:::0;;-1:-1:-1;;;;;;1836:19:1::1;::::0;;1717:145::o;4910:656:45:-;1308:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;-1:-1:-1;;;1289:68:1;;;;;;;:::i;:::-;5045:21:45::1;5069:22;5079:11;5069:9;:22::i;:::-;5045:46;;5140:32;5152:11;5165:6;5140:11;:32::i;:::-;5183:5;::::0;5216:4:::1;::::0;5324:10:::1;::::0;5465:12:::1;::::0;;5183:5:::1;5465:12:::0;;;::::1;::::0;::::1;::::0;;;-1:-1:-1;;;;;5183:5:45;;::::1;::::0;:19:::1;::::0;5216:4;::::1;::::0;-1:-1:-1;;;5274:32:45;5234:276:::1;::::0;5183:5:::1;5324:10:::0;;::::1;::::0;;::::1;::::0;5183:5;5378:11;;5407:40;;::::1;::::0;5234:276;;;::::1;:::i;:::-;;::::0;;-1:-1:-1;;5234:276:45;;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;5234:276:45::1;-1:-1:-1::0;;;;;;5234:276:45;;::::1;;::::0;;5524:12;;-1:-1:-1;5524:12:45;;;;::::1;::::0;;;;5183:376:::1;::::0;;;;;;;;::::1;::::0;;;;;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;5183:376:45::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;;1367:1:1;4910:656:45::0;;:::o;899:35::-;933:1;899:35;:::o;1085:85:1:-;1131:7;1157:6;-1:-1:-1;;;;;1157:6:1;1085:85;:::o;1112:46:45:-;;;;;;;;;;;;;;;:::o;5637:620::-;1308:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;-1:-1:-1;;;1289:68:1;;;;;;;:::i;:::-;5736:4:45::1;::::0;5776:10:::1;::::0;5736:112:::1;::::0;-1:-1:-1;;;5736:112:45;;5707:24:::1;::::0;-1:-1:-1;;;;;5736:4:45;;::::1;::::0;:26:::1;::::0;:112:::1;::::0;:4:::1;5776:10:::0;;::::1;::::0;;::::1;::::0;5808:4:::1;::::0;5707:24;;5837:10;;5736:112:::1;;;:::i;:::-;;::::0;::::1;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5859:10:45::1;::::0;5706:142;;-1:-1:-1;5859:10:45::1;::::0;::::1;-1:-1:-1::0;;;;;5859:10:45::1;:23;5883:7;:5;:7::i;:::-;5900:4;5907:16;5859:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5935:5:45::1;::::0;5968:4:::1;::::0;6068:10:::1;::::0;6156:12:::1;::::0;;5935:5:::1;6156:12:::0;;;::::1;::::0;::::1;::::0;;;-1:-1:-1;;;;;5935:5:45;;::::1;::::0;:19:::1;::::0;5968:4;::::1;::::0;-1:-1:-1;;;6026:24:45;5986:215:::1;::::0;5935:5:::1;6068:10:::0;;::::1;::::0;;::::1;::::0;5935:5;6122:16;;5986:215;;;::::1;:::i;:::-;;::::0;;-1:-1:-1;;5986:215:45;;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;5986:215:45::1;-1:-1:-1::0;;;;;;5986:215:45;;::::1;;::::0;;6215:12;;-1:-1:-1;6215:12:45;;;;::::1;::::0;;;;5935:315:::1;::::0;;;;;;;;::::1;::::0;;;;;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;5935:315:45::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;;1367:1:1;5637:620:45::0;:::o;2370:93:4:-;2449:7;2442:14;;;;;;;;-1:-1:-1;;2442:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2417:13;;2442:14;;2449:7;;2442:14;;2449:7;2442:14;;;;;;;;;;;;;;;;;;;;;;;;6291:266;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;-1:-1:-1;;;;;6432:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;6432:25:4;;;:34;;;;;;;;;;;:96;:38;:96::i;3727:172::-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;3957:149::-;-1:-1:-1;;;;;4072:18:4;;;4046:7;4072:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3957:149::o;2011:240:1:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;-1:-1:-1;;;1289:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2099:22:1;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:1::1;;;;;;;:::i;:::-;2200:6;::::0;;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:1;;::::1;::::0;2200:6;::::1;::::0;2179:38:::1;::::0;::::1;2227:6;:17:::0;;-1:-1:-1;;;;;;2227:17:1::1;-1:-1:-1::0;;;;;2227:17:1;;;::::1;::::0;;;::::1;::::0;;2011:240::o;598:104:10:-;685:10;598:104;:::o;9355:340:4:-;-1:-1:-1;;;;;9456:19:4;;9448:68;;;;-1:-1:-1;;;9448:68:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;9534:21:4;;9526:68;;;;-1:-1:-1;;;9526:68:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;9605:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;9656:32;;;;;9635:6;;9656:32;:::i;:::-;;;;;;;;9355:340;;;:::o;3842:1004:45:-;3995:34;;:::i;:::-;4032:5;;:20;;-1:-1:-1;;;4032:20:45;;-1:-1:-1;;;;;4032:5:45;;;;:15;;:20;;4048:3;;;;4032:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4032:20:45;;;;;;;;;;;;:::i;:::-;4132:25;;;;3995:57;;-1:-1:-1;;;;;;;4132:89:45;-1:-1:-1;;;4132:89:45;4128:712;;;4468:4;;:49;;-1:-1:-1;;;4468:49:45;;4237:17;;;;;;;;;;-1:-1:-1;;;;;4468:4:45;;:24;;:49;;4493:10;;4505:11;;4468:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4391:126;;-1:-1:-1;4391:126:45;;-1:-1:-1;4391:126:45;-1:-1:-1;4391:126:45;-1:-1:-1;4391:126:45;-1:-1:-1;;;;;;4589:26:45;;4610:4;4589:26;4581:62;;;;-1:-1:-1;;;4581:62:45;;;;;;;:::i;:::-;4665:19;;;;4657:55;;;;-1:-1:-1;;;4657:55:45;;;;;;;:::i;:::-;4731:8;4727:103;;;4773:17;;;;-1:-1:-1;;;;;4759:49:45;;;;;:13;:49;;;;;:56;;-1:-1:-1;;4759:56:45;4811:4;4759:56;;;4727:103;4128:712;;;;;;3842:1004;;;;;:::o;6301:1071::-;6399:19;6429:23;6445:6;6429:15;:23::i;:::-;6399:54;;6463:22;6496:26;6512:9;6496:15;:26::i;:::-;6463:60;;6575:42;6591:6;6599:9;6610:6;6575:15;:42::i;:::-;6628:5;;6661:4;;6769:10;;6894:12;;;6628:5;6894:12;;;;;;;;;-1:-1:-1;;;;;6628:5:45;;;;:19;;6661:4;;;-1:-1:-1;;;6719:32:45;6679:260;;6628:5;6769:10;;;;;;;6628:5;6823:6;;6847:29;;;;6679:260;;;;:::i;:::-;;;;-1:-1:-1;;6679:260:45;;;;;;;;;;;;;;;-1:-1:-1;;;;;6679:260:45;-1:-1:-1;;;;;;6679:260:45;;;;;;6953:12;;-1:-1:-1;6953:12:45;;;;;;;;;6628:360;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6628:360:45;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6999:5:45;;7032:4;;7140:10;;7271:12;;;6999:5;7271:12;;;;;;;;;-1:-1:-1;;;;;6999:5:45;;;;:19;;7032:4;;;-1:-1:-1;;;7090:32:45;7050:266;;6999:5;7140:10;;;;;;;6999:5;7194:9;;7221:32;;;;7050:266;;;;:::i;:::-;;;;-1:-1:-1;;7050:266:45;;;;;;;;;;;;;;;-1:-1:-1;;;;;7050:266:45;-1:-1:-1;;;;;;7050:266:45;;;;;;7330:12;;-1:-1:-1;7330:12:45;;;;;;;;;6999:366;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6999:366:45;;;;;;;;;;;;:::i;:::-;;6301:1071;;;;;:::o;5432:163:2:-;5518:7;5553:12;5545:6;;;;5537:29;;;;-1:-1:-1;;;5537:29:2;;;;;;;;:::i;:::-;-1:-1:-1;;;5583:5:2;;;5432:163::o;2690:175::-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;-1:-1:-1;;;2794:46:2;;;;;;;:::i;:::-;2857:1;2690:175;-1:-1:-1;;;2690:175:2:o;7832:370:4:-;-1:-1:-1;;;;;7915:21:4;;7907:65;;;;-1:-1:-1;;;7907:65:4;;;;;;;:::i;:::-;7983:49;8012:1;8016:7;8025:6;7983:20;:49::i;:::-;8058:12;;:24;;8075:6;8058:16;:24::i;:::-;8043:12;:39;-1:-1:-1;;;;;8113:18:4;;;;;;:9;:18;;;;;;:30;;8136:6;8113:22;:30::i;:::-;-1:-1:-1;;;;;8092:18:4;;;;;;:9;:18;;;;;;:51;;;;8158:37;;8092:18;;;8158:37;;;;8188:6;;8158:37;:::i;:::-;;;;;;;;7832:370;;:::o;7031:530::-;-1:-1:-1;;;;;7136:20:4;;7128:70;;;;-1:-1:-1;;;7128:70:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;7216:23:4;;7208:71;;;;-1:-1:-1;;;7208:71:4;;;;;;;:::i;:::-;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7368:17:4;;;;;;:9;:17;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7348:17:4;;;;;;;:9;:17;;;;;;:91;;;;7472:20;;;;;;;:32;;7497:6;7472:24;:32::i;:::-;-1:-1:-1;;;;;7449:20:4;;;;;;;:9;:20;;;;;;;:55;;;;7519:35;;;;;;;;;;7547:6;;7519:35;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;142:134::-;220:13;;238:33;220:13;238:33;:::i;283:128::-;358:13;;30305;;30298:21;32653:32;;32643:2;;32699:1;;32689:12;555:132;632:13;;-1:-1;;;;;;30471:78;;32897:34;;32887:2;;32945:1;;32935:12;708:336;;;822:3;815:4;807:6;803:17;799:27;789:2;;-1:-1;;830:12;789:2;-1:-1;860:20;;900:18;889:30;;886:2;;;-1:-1;;922:12;886:2;966:4;958:6;954:17;942:29;;1017:3;966:4;997:17;958:6;983:32;;980:41;977:2;;;1034:1;;1024:12;977:2;782:262;;;;;:::o;1053:442::-;;1165:3;1158:4;1150:6;1146:17;1142:27;1132:2;;-1:-1;;1173:12;1132:2;1213:6;1207:13;29356:18;29348:6;29345:30;29342:2;;;-1:-1;;29378:12;29342:2;1235:64;29451:9;29432:17;;-1:-1;;29428:33;29519:4;29509:15;1235:64;:::i;:::-;1226:73;;1319:6;1312:5;1305:21;1423:3;29519:4;1414:6;1347;1405:16;;1402:25;1399:2;;;1440:1;;1430:12;1399:2;1450:39;1482:6;29519:4;1381:5;1377:16;29519:4;1347:6;1343:17;1450:39;:::i;:::-;;1125:370;;;;:::o;3779:134::-;3857:13;;-1:-1;;;;;30820:46;;33308:35;;33298:2;;33357:1;;33347:12;4337:130;4413:13;;31251:4;31240:16;;33676:33;;33666:2;;33723:1;;33713:12;4474:241;;4578:2;4566:9;4557:7;4553:23;4549:32;4546:2;;;-1:-1;;4584:12;4546:2;85:6;72:20;97:33;124:5;97:33;:::i;4722:366::-;;;4843:2;4831:9;4822:7;4818:23;4814:32;4811:2;;;-1:-1;;4849:12;4811:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;4901:63;-1:-1;5001:2;5040:22;;72:20;97:33;72:20;97:33;:::i;:::-;5009:63;;;;4805:283;;;;;:::o;5095:491::-;;;;5233:2;5221:9;5212:7;5208:23;5204:32;5201:2;;;-1:-1;;5239:12;5201:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;5291:63;-1:-1;5391:2;5430:22;;72:20;97:33;72:20;97:33;:::i;:::-;5195:391;;5399:63;;-1:-1;;;5499:2;5538:22;;;;3987:20;;5195:391::o;5593:366::-;;;5714:2;5702:9;5693:7;5689:23;5685:32;5682:2;;;-1:-1;;5720:12;5682:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;5772:63;5872:2;5911:22;;;;3987:20;;-1:-1;;;5676:283::o;5966:801::-;;;;;;6145:3;6133:9;6124:7;6120:23;6116:33;6113:2;;;-1:-1;;6152:12;6113:2;226:6;220:13;238:33;265:5;238:33;:::i;:::-;6315:2;6364:22;;4275:13;6204:74;;-1:-1;31157:10;31146:22;;33555:34;;33545:2;;-1:-1;;33593:12;33545:2;6323:73;-1:-1;6451:61;6504:7;6433:2;6480:22;;6451:61;:::i;:::-;6441:71;;6567:64;6623:7;6549:2;6603:9;6599:22;6567:64;:::i;:::-;6557:74;;6668:3;6723:9;6719:22;4135:13;6677:74;;6107:660;;;;;;;;:::o;6774:257::-;;6886:2;6874:9;6865:7;6861:23;6857:32;6854:2;;;-1:-1;;6892:12;6854:2;6954:61;7007:7;6983:22;6954:61;:::i;7038:360::-;;7162:2;7150:9;7141:7;7137:23;7133:32;7130:2;;;-1:-1;;7168:12;7130:2;7219:17;7213:24;7257:18;7249:6;7246:30;7243:2;;;-1:-1;;7279:12;7243:2;7309:73;7374:7;7365:6;7354:9;7350:22;7309:73;:::i;:::-;7299:83;7124:274;-1:-1;;;;7124:274::o;7405:1033::-;;;;;;;;7636:3;7624:9;7615:7;7611:23;7607:33;7604:2;;;-1:-1;;7643:12;7604:2;1604:6;1591:20;1616:54;1664:5;1616:54;:::i;:::-;7695:84;-1:-1;7816:2;7855:22;;72:20;97:33;72:20;97:33;:::i;:::-;7824:63;-1:-1;7924:2;7963:22;;485:20;;-1:-1;8060:2;8045:18;;8032:32;8084:18;8073:30;;;8070:2;;;-1:-1;;8106:12;8070:2;8144:64;8200:7;8191:6;8180:9;8176:22;8144:64;:::i;:::-;8126:82;;-1:-1;8126:82;-1:-1;8273:3;8258:19;;8245:33;;-1:-1;8287:30;;;8284:2;;;-1:-1;;8320:12;8284:2;;8358:64;8414:7;8405:6;8394:9;8390:22;8358:64;:::i;:::-;7598:840;;;;-1:-1;7598:840;;-1:-1;7598:840;;;;8340:82;;-1:-1;;;7598:840::o;8445:1283::-;;;;;;;;;;8712:3;8700:9;8691:7;8687:23;8683:33;8680:2;;;-1:-1;;8719:12;8680:2;1604:6;1591:20;1616:54;1664:5;1616:54;:::i;:::-;8771:84;-1:-1;8892:2;8931:22;;72:20;97:33;72:20;97:33;:::i;:::-;8900:63;-1:-1;9000:2;9039:22;;485:20;;-1:-1;9136:2;9121:18;;9108:32;9160:18;9149:30;;;9146:2;;;-1:-1;;9182:12;9146:2;9220:64;9276:7;9267:6;9256:9;9252:22;9220:64;:::i;:::-;9202:82;;-1:-1;9202:82;-1:-1;9349:3;9334:19;;9321:33;;-1:-1;9363:30;;;9360:2;;;-1:-1;;9396:12;9360:2;9434:64;9490:7;9481:6;9470:9;9466:22;9434:64;:::i;:::-;9416:82;;-1:-1;9416:82;-1:-1;9563:3;9548:19;;9535:33;;-1:-1;9577:30;;;9574:2;;;-1:-1;;9610:12;9574:2;;9648:64;9704:7;9695:6;9684:9;9680:22;9648:64;:::i;:::-;9630:82;;;;;;;;;;8674:1054;;;;;;;;;;;:::o;9735:392::-;;9875:2;9863:9;9854:7;9850:23;9846:32;9843:2;;;-1:-1;;9881:12;9843:2;9932:17;9926:24;9970:18;;9962:6;9959:30;9956:2;;;-1:-1;;9992:12;9956:2;10094:6;10083:9;10079:22;;;1979:6;;1967:9;1962:3;1958:19;1954:32;1951:2;;;-1:-1;;1989:12;1951:2;2017:22;1979:6;2017:22;:::i;:::-;2008:31;;2125:58;2179:3;2155:22;2125:58;:::i;:::-;2107:16;2100:84;2282:58;2336:3;9875:2;2316:9;2312:22;2282:58;:::i;:::-;9875:2;2268:5;2264:16;2257:84;2407:2;2476:9;2472:22;4135:13;2407:2;2426:5;2422:16;2415:86;2600:60;2656:3;2567:2;2636:9;2632:22;2600:60;:::i;:::-;2567:2;2586:5;2582:16;2575:86;2769:59;2824:3;2735;2804:9;2800:22;2769:59;:::i;:::-;2735:3;2755:5;2751:16;2744:85;2915:3;2904:9;2900:19;2894:26;9970:18;2932:6;2929:30;2926:2;;;-1:-1;;2962:12;2926:2;3007:69;3072:3;3063:6;3052:9;3048:22;3007:69;:::i;:::-;2915:3;2993:5;2989:16;2982:95;;3153:3;3223:9;3219:22;4135:13;3153:3;3173:5;3169:16;3162:86;3323:3;3393:9;3389:22;4135:13;3323:3;3343:5;3339:16;3332:86;3491:3;;;;3562:9;3558:22;1759:13;3491:3;3511:5;3507:18;3500:87;3654:3;;;3690:60;3746:3;3654;3726:9;3722:22;3690:60;:::i;:::-;3670:18;;;3663:88;;;;3674:5;9837:290;-1:-1;;;;9837:290::o;10134:241::-;;10238:2;10226:9;10217:7;10213:23;10209:32;10206:2;;;-1:-1;;10244:12;10206:2;-1:-1;3987:20;;10200:175;-1:-1;10200:175::o;10382:399::-;;;10514:2;10502:9;10493:7;10489:23;10485:32;10482:2;;;-1:-1;;10520:12;10482:2;4141:6;4135:13;10572:74;;10701:64;10757:7;10683:2;10737:9;10733:22;10701:64;:::i;:::-;10691:74;;10476:305;;;;;:::o;11467:343::-;;11609:5;29628:12;29913:6;29908:3;29901:19;11702:52;11747:6;29950:4;29945:3;29941:14;29950:4;11728:5;11724:16;11702:52;:::i;:::-;29451:9;32436:14;-1:-1;;32432:28;11766:39;;;;29950:4;11766:39;;11557:253;-1:-1;;11557:253::o;17752:222::-;-1:-1;;;;;30940:54;;;;10859:37;;17879:2;17864:18;;17850:124::o;17981:444::-;-1:-1;;;;;30940:54;;;10859:37;;30940:54;;;;18328:2;18313:18;;10859:37;18411:2;18396:18;;11090:37;;;;18164:2;18149:18;;18135:290::o;18432:210::-;30305:13;;30298:21;10973:34;;18553:2;18538:18;;18524:118::o;18649:326::-;;18804:2;18825:17;18818:47;29913:6;18804:2;18793:9;18789:18;29901:19;32019:6;32014:3;29941:14;18793:9;29941:14;31996:30;32057:16;;;29941:14;32057:16;;;32050:27;;;;29451:9;32436:14;;;-1:-1;;32432:28;11414:39;;;18775:200;-1:-1;18775:200::o;18982:306::-;;19127:2;19148:17;19141:47;19202:76;19127:2;19116:9;19112:18;19264:6;19202:76;:::i;19295:692::-;-1:-1;;;;;30940:54;;11928:90;;19554:2;19712;19697:18;;19690:48;;;19295:692;;19752:76;;19539:18;;19814:6;19752:76;:::i;:::-;19876:9;19870:4;19866:20;19861:2;19850:9;19846:18;19839:48;19901:76;19972:4;19963:6;19901:76;:::i;:::-;19893:84;19525:462;-1:-1;;;;;;19525:462::o;19994:594::-;-1:-1;;;;;30940:54;;;11928:90;;30940:54;;;;20410:2;20395:18;;10859:37;31157:10;31146:22;20491:2;20476:18;;17590:36;20574:2;20559:18;;11090:37;;;;20224:3;20209:19;;20195:393::o;20595:375::-;-1:-1;;;;;30940:54;;;;11928:90;;20956:2;20941:18;;11090:37;20771:2;20756:18;;20742:228::o;20977:790::-;-1:-1;;;;;30940:54;;;11928:90;;31157:10;31146:22;;21437:2;21422:18;;17590:36;30940:54;;21520:2;21505:18;;10859:37;-1:-1;;;;;30820:46;;21603:2;21588:18;;17352:37;30951:42;21640:3;21625:19;;21618:49;;;20977:790;;21681:76;;21238:19;;21743:6;21681:76;:::i;:::-;21673:84;21224:543;-1:-1;;;;;;;21224:543::o;21774:678::-;;30482:66;;30951:42;;;30221:5;30940:54;11935:3;11928:90;31157:10;17619:5;31146:22;22206:2;22195:9;22191:18;17590:36;11120:5;22289:2;22278:9;22274:18;11090:37;22022:3;22326:2;22315:9;22311:18;22304:48;22366:76;22022:3;22011:9;22007:19;22428:6;22366:76;:::i;22776:416::-;22976:2;22990:47;;;12784:2;22961:18;;;29901:19;12820:34;29941:14;;;12800:55;-1:-1;;;12875:12;;;12868:27;12914:12;;;22947:245::o;23199:416::-;23399:2;23413:47;;;13165:2;23384:18;;;29901:19;13201:34;29941:14;;;13181:55;-1:-1;;;13256:12;;;13249:30;13298:12;;;23370:245::o;23622:416::-;23822:2;23836:47;;;13549:2;23807:18;;;29901:19;13585:34;29941:14;;;13565:55;-1:-1;;;13640:12;;;13633:26;13678:12;;;23793:245::o;24045:416::-;24245:2;24259:47;;;13929:2;24230:18;;;29901:19;13965:29;29941:14;;;13945:50;14014:12;;;24216:245::o;24468:416::-;24668:2;24682:47;;;14265:2;24653:18;;;29901:19;14301:34;29941:14;;;14281:55;-1:-1;;;14356:12;;;14349:43;14411:12;;;24639:245::o;24891:416::-;25091:2;25105:47;;;14662:2;25076:18;;;29901:19;14698:28;29941:14;;;14678:49;14746:12;;;25062:245::o;25314:416::-;25514:2;25528:47;;;14997:2;25499:18;;;29901:19;15033:29;29941:14;;;15013:50;15082:12;;;25485:245::o;25737:416::-;25937:2;25951:47;;;25922:18;;;29901:19;15369:34;29941:14;;;15349:55;15423:12;;;25908:245::o;26160:416::-;26360:2;26374:47;;;15674:2;26345:18;;;29901:19;15710:25;29941:14;;;15690:46;15755:12;;;26331:245::o;26583:416::-;26783:2;26797:47;;;16006:2;26768:18;;;29901:19;16042:34;29941:14;;;16022:55;-1:-1;;;16097:12;;;16090:29;16138:12;;;26754:245::o;27006:416::-;27206:2;27220:47;;;16389:2;27191:18;;;29901:19;16425:34;29941:14;;;16405:55;-1:-1;;;16480:12;;;16473:28;16520:12;;;27177:245::o;27429:416::-;27629:2;27643:47;;;16771:2;27614:18;;;29901:19;16807:34;29941:14;;;16787:55;-1:-1;;;16862:12;;;16855:41;16915:12;;;27600:245::o;27852:416::-;28052:2;28066:47;;;17166:2;28037:18;;;29901:19;17202:33;29941:14;;;17182:54;17255:12;;;28023:245::o;28275:222::-;11090:37;;;28402:2;28387:18;;28373:124::o;28504:218::-;31157:10;31146:22;;;;17590:36;;28629:2;28614:18;;28600:122::o;28729:214::-;31251:4;31240:16;;;;17705:35;;28852:2;28837:18;;28823:120::o;28950:256::-;29012:2;29006:9;29038:17;;;29113:18;29098:34;;29134:22;;;29095:62;29092:2;;;29170:1;;29160:12;29092:2;29012;29179:22;28990:216;;-1:-1;28990:216::o;32092:268::-;32157:1;32164:101;32178:6;32175:1;32172:13;32164:101;;;32245:11;;;32239:18;32226:11;;;32219:39;32200:2;32193:10;32164:101;;;32280:6;32277:1;32274:13;32271:2;;;-1:-1;;32157:1;32327:16;;32320:27;32141:219::o;32473:117::-;-1:-1;;;;;30940:54;;32532:35;;32522:2;;32581:1;;32571:12;32522:2;32516:74;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "distribute(uint256)": {
        "details": "Distribute `amount` of cash among all token holders"
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "issue(address,uint256)": {
        "details": "Issue new `amount` of giths to `beneficiary`"
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "notice": "The dividends rights token show cases two use cases 1. Use Instant distribution agreement to distribute tokens to token holders. 2. Use SuperApp framework to update `isSubscribing` when new subscription is approved by token holder.",
    "version": 1
  },
  "offset": [
    814,
    7375
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x867904B4 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xD86ED3E5 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F8 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x867904B4 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x884D1F40 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x8C7F0959 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x915E3364 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x91C05B0B EQ PUSH2 0x2A4 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x53C11F99 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x5F9E7D77 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x24A JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x230DBD29 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x30D9C915 EQ PUSH2 0x1D6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x165 PUSH2 0x30B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0x14D5 JUMP JUMPDEST PUSH2 0x3A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x18C6 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1D60 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0x165E JUMP JUMPDEST PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x1D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1495 JUMP JUMPDEST PUSH2 0x418 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0x49F JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1D7A JUMP JUMPDEST PUSH2 0x18E PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0x14D5 JUMP JUMPDEST PUSH2 0x52E JUMP JUMPDEST PUSH2 0x165 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0x165E JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST PUSH2 0x165 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0x596 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x1441 JUMP JUMPDEST PUSH2 0x5B0 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x5CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x252 PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0x14D5 JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST PUSH2 0x26F PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1D69 JUMP JUMPDEST PUSH2 0x284 PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x188E JUMP JUMPDEST PUSH2 0x18E PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x1441 JUMP JUMPDEST PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x181E JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x165 PUSH2 0xA3F JUMP JUMPDEST PUSH2 0x18E PUSH2 0x2CD CALLDATASIZE PUSH1 0x4 PUSH2 0x14D5 JUMP JUMPDEST PUSH2 0xAA0 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x2E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x14D5 JUMP JUMPDEST PUSH2 0xB08 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x145D JUMP JUMPDEST PUSH2 0xB1C JUMP JUMPDEST PUSH2 0x252 PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x1441 JUMP JUMPDEST PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x397 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x397 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B5 PUSH2 0x3AE PUSH2 0xC07 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xC0B JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3D3 DUP11 DUP5 DUP5 DUP12 PUSH2 0xCBF JUMP JUMPDEST DUP3 DUP3 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x425 DUP5 DUP5 DUP5 PUSH2 0xE8B JUMP JUMPDEST PUSH2 0x495 DUP5 PUSH2 0x431 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x490 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E1A PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x46F PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST PUSH2 0xC0B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 AND EQ PUSH2 0x50A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B5 PUSH2 0x53B PUSH2 0xC07 JUMP JUMPDEST DUP5 PUSH2 0x490 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x54C PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1CD8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1B22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5D3 PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5E4 PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x60A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1BE3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x65C PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x66D PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x693 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1BE3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x69E DUP4 PUSH2 0x5B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x6AA DUP4 DUP4 PUSH2 0x110F JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0x39255D5B SWAP5 DUP2 AND SWAP4 PUSH4 0x465A56B PUSH1 0xE3 SHL SWAP4 PUSH2 0x6FF SWAP4 PUSH2 0x100 SWAP1 SWAP3 DIV SWAP1 SWAP3 AND SWAP2 SWAP1 DUP11 SWAP1 DUP10 DUP12 ADD SWAP1 PUSH1 0x44 DUP2 ADD PUSH2 0x199B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP6 DUP7 AND OR SWAP1 MSTORE DUP2 MLOAD PUSH1 0x0 DUP2 MSTORE SWAP1 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP7 SWAP1 SHL SWAP1 SWAP4 AND SWAP1 MSTORE PUSH2 0x753 SWAP3 SWAP2 PUSH1 0x24 DUP2 ADD PUSH2 0x1913 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x781 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x7A9 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1587 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x7E0 PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7F1 PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1BE3 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2266EABB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 PUSH4 0x899BAAEC SWAP3 PUSH2 0x85B SWAP3 PUSH2 0x100 SWAP1 SWAP3 DIV SWAP1 SWAP2 AND SWAP1 ADDRESS SWAP1 DUP7 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x872 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x886 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8AA SWAP2 SWAP1 PUSH2 0x1836 JUMP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD PUSH2 0x8CC PUSH2 0x7B4 JUMP JUMPDEST ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8EC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18A2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x91A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x93E SWAP2 SWAP1 PUSH2 0x156C JUMP JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0x39255D5B SWAP5 DUP2 AND SWAP4 PUSH4 0x5CB398E1 PUSH1 0xE1 SHL SWAP4 PUSH2 0x990 SWAP4 PUSH2 0x100 SWAP1 SWAP3 DIV SWAP1 SWAP3 AND SWAP2 SWAP1 DUP9 SWAP1 PUSH1 0x44 DUP2 ADD PUSH2 0x19ED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP6 DUP7 AND OR SWAP1 MSTORE DUP2 MLOAD PUSH1 0x0 DUP2 MSTORE SWAP1 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP7 SWAP1 SHL SWAP1 SWAP4 AND SWAP1 MSTORE PUSH2 0x9E4 SWAP3 SWAP2 PUSH1 0x24 DUP2 ADD PUSH2 0x1913 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xA3A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1587 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x397 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x397 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B5 PUSH2 0xAAD PUSH2 0xC07 JUMP JUMPDEST DUP5 PUSH2 0x490 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E42 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xAD7 PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B5 PUSH2 0xB15 PUSH2 0xC07 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xE8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB4F PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB60 PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1BE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1A63 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1C94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0xCB2 SWAP1 DUP6 SWAP1 PUSH2 0x1D60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xCC7 PUSH2 0x12E4 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1FB6491D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x3F6C923A SWAP1 PUSH2 0xCF9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x18D1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD25 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xD4D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1725 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x567A5361 PUSH1 0xE1 SHL EQ ISZERO PUSH2 0xE84 JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xCD7245C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xCD7245C5 SWAP1 PUSH2 0xDA8 SWAP1 DUP14 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x1982 JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDD4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF8 SWAP2 SWAP1 PUSH2 0x1500 JUMP JUMPDEST SWAP4 SWAP9 POP SWAP2 SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ADDRESS EQ PUSH2 0xE2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1C18 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP5 AND ISZERO PUSH2 0xE50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1C18 JUMP JUMPDEST DUP3 ISZERO PUSH2 0xE7E JUMPI PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST POP POP POP POP POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE96 DUP5 PUSH2 0x5B0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEA3 DUP5 PUSH2 0x5B0 JUMP JUMPDEST SWAP1 POP PUSH2 0xEB0 DUP6 DUP6 DUP6 PUSH2 0x11CF JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0x39255D5B SWAP5 DUP2 AND SWAP4 PUSH4 0x465A56B PUSH1 0xE3 SHL SWAP4 PUSH2 0xF05 SWAP4 PUSH2 0x100 SWAP1 SWAP3 DIV SWAP1 SWAP3 AND SWAP2 SWAP1 DUP13 SWAP1 DUP12 DUP12 SUB SWAP1 PUSH1 0x44 DUP2 ADD PUSH2 0x199B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP6 DUP7 AND OR SWAP1 MSTORE DUP2 MLOAD PUSH1 0x0 DUP2 MSTORE SWAP1 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP7 SWAP1 SHL SWAP1 SWAP4 AND SWAP1 MSTORE PUSH2 0xF59 SWAP3 SWAP2 PUSH1 0x24 DUP2 ADD PUSH2 0x1913 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xFAF SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1587 JUMP JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0x39255D5B SWAP5 DUP2 AND SWAP4 PUSH4 0x465A56B PUSH1 0xE3 SHL SWAP4 PUSH2 0x1005 SWAP4 PUSH2 0x100 SWAP1 SWAP3 DIV SWAP1 SWAP3 AND SWAP2 SWAP1 DUP12 SWAP1 DUP10 DUP13 ADD SWAP1 PUSH1 0x44 DUP2 ADD PUSH2 0x199B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP6 DUP7 AND OR SWAP1 MSTORE DUP2 MLOAD PUSH1 0x0 DUP2 MSTORE SWAP1 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP7 SWAP1 SHL SWAP1 SWAP4 AND SWAP1 MSTORE PUSH2 0x1059 SWAP3 SWAP2 PUSH1 0x24 DUP2 ADD PUSH2 0x1913 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1073 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1087 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x10AF SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1587 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x10DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x1900 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1108 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1AEB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1135 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH2 0x1141 PUSH1 0x0 DUP4 DUP4 PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x114E SWAP1 DUP3 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1174 SWAP1 DUP3 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x11C3 SWAP1 DUP6 SWAP1 PUSH2 0x1D60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x121B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH2 0x1226 DUP4 DUP4 DUP4 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0x1263 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DF4 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1292 SWAP1 DUP3 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xCB2 SWAP1 DUP6 SWAP1 PUSH2 0x1D60 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x3B9 DUP2 PUSH2 0x1DDB JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x137B JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1392 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x13AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13C1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13D7 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x13EA PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1D88 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1412 DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1DAF JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1452 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1108 DUP2 PUSH2 0x1DDB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x146F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x147A DUP2 PUSH2 0x1DDB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x148A DUP2 PUSH2 0x1DDB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14A9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x14B4 DUP2 PUSH2 0x1DDB JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x14C4 DUP2 PUSH2 0x1DDB JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14E7 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x14F2 DUP2 PUSH2 0x1DDB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1517 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 MLOAD PUSH2 0x1522 DUP2 PUSH2 0x1DDB JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD SWAP1 SWAP6 POP PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x153B JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 POP PUSH2 0x154A DUP8 PUSH1 0x40 DUP9 ADD PUSH2 0x1342 JUMP JUMPDEST SWAP3 POP PUSH2 0x1559 DUP8 PUSH1 0x60 DUP9 ADD PUSH2 0x1419 JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP7 ADD MLOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x157D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1108 DUP4 DUP4 PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1598 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15AE JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x15BA DUP5 DUP3 DUP6 ADD PUSH2 0x13B1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x15DC JUMPI DUP2 DUP3 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x15E7 DUP2 PUSH2 0x1DDB JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x15F7 DUP2 PUSH2 0x1DDB JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x161A JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x1626 DUP12 DUP4 DUP13 ADD PUSH2 0x136A JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x163E JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x164B DUP11 DUP3 DUP12 ADD PUSH2 0x136A JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x167B JUMPI DUP3 DUP4 REVERT JUMPDEST DUP10 CALLDATALOAD PUSH2 0x1686 DUP2 PUSH2 0x1DDB JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD PUSH2 0x1696 DUP2 PUSH2 0x1DDB JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16B9 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x16C5 DUP14 DUP4 DUP15 ADD PUSH2 0x136A JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x80 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x16DD JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x16E9 DUP14 DUP4 DUP15 ADD PUSH2 0x136A JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0xA0 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1701 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x170E DUP13 DUP3 DUP14 ADD PUSH2 0x136A JUMP JUMPDEST SWAP2 POP DUP1 SWAP4 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1736 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x174D JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP PUSH2 0x140 DUP1 DUP4 DUP8 SUB SLT ISZERO PUSH2 0x1763 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x176C DUP2 PUSH2 0x1D88 JUMP JUMPDEST SWAP1 POP PUSH2 0x1778 DUP7 DUP5 PUSH2 0x1430 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x1787 DUP7 PUSH1 0x20 DUP6 ADD PUSH2 0x1430 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x17A3 DUP7 PUSH1 0x60 DUP6 ADD PUSH2 0x1337 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x17B5 DUP7 PUSH1 0x80 DUP6 ADD PUSH2 0x1352 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x17CB JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x17D7 DUP8 DUP3 DUP7 ADD PUSH2 0x13B1 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 SWAP2 POP DUP2 DUP4 ADD MLOAD DUP3 DUP3 ADD MSTORE PUSH2 0x120 SWAP2 POP PUSH2 0x180F DUP7 DUP4 DUP6 ADD PUSH2 0x1337 JUMP JUMPDEST SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x182F JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1848 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD SWAP2 POP PUSH2 0x1859 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x1419 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x187A DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 PUSH1 0x20 DUP4 ADD MSTORE DUP3 DUP5 PUSH1 0x40 DUP5 ADD CALLDATACOPY DUP2 DUP4 ADD PUSH1 0x40 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x1108 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1937 SWAP1 DUP4 ADD DUP6 PUSH2 0x1862 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1949 DUP2 DUP6 PUSH2 0x1862 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE PUSH4 0xFFFFFFFF DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x19E2 SWAP1 DUP4 ADD DUP5 PUSH2 0x1862 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE PUSH4 0xFFFFFFFF DUP6 AND PUSH1 0x20 DUP4 ADD MSTORE DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1949 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x33 SWAP1 DUP3 ADD MSTORE PUSH32 0x556E737570706F727465642063616C6C6261636B202D20204265666F72652041 PUSH1 0x40 DUP3 ADD MSTORE PUSH19 0x19DC99595B595B9D0815195C9B5A5B985D1959 PUSH1 0x6A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x4452543A20556E737570706F727465642061677265656D656E74000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x4452543A20556E737570706F72746564206361736820746F6B656E0000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x4452543A207075626C6973686572206D69736D61746368000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x556E737570706F727465642063616C6C6261636B202D20416674657220416772 PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x19595B595B9D0815195C9B5A5B985D1959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1DA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DCA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DB2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x7A9 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1DF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212202535 EXP MOD DUP7 NUMBER 0xB8 SWAP7 DELEGATECALL NOT RETURNDATACOPY PUSH28 0xDDF4668C9E0C27AE17CA6D624937C13FD5576C1564736F6C63430007 ADD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        814,
        7375
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "CALLVALUE",
      "path": "45"
    },
    "6": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "7": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "8": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "12": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "REVERT",
      "path": "45"
    },
    "16": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "17": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "POP",
      "path": "45"
    },
    "18": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "21": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "LT",
      "path": "45"
    },
    "22": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x158"
    },
    "25": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "26": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "29": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "SHR",
      "path": "45"
    },
    "32": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "33": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x867904B4"
    },
    "38": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "GT",
      "path": "45"
    },
    "39": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xC3"
    },
    "42": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "43": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "44": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x95D89B41"
    },
    "49": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "GT",
      "path": "45"
    },
    "50": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "54": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "55": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x95D89B41"
    },
    "60": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "EQ",
      "path": "45"
    },
    "61": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2B7"
    },
    "64": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "65": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "66": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xA457C2D7"
    },
    "71": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "EQ",
      "path": "45"
    },
    "72": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2BF"
    },
    "75": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "76": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "77": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xA9059CBB"
    },
    "82": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "EQ",
      "path": "45"
    },
    "83": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2D2"
    },
    "86": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "87": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "88": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xD86ED3E5"
    },
    "93": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "EQ",
      "path": "45"
    },
    "94": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1B0"
    },
    "97": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "98": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "99": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "EQ",
      "path": "45"
    },
    "105": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2E5"
    },
    "108": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "109": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "110": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xF2FDE38B"
    },
    "115": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "EQ",
      "path": "45"
    },
    "116": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2F8"
    },
    "119": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "120": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x158"
    },
    "123": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMP",
      "path": "45"
    },
    "124": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "125": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "126": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x867904B4"
    },
    "131": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "EQ",
      "path": "45"
    },
    "132": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x254"
    },
    "135": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "136": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "137": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x884D1F40"
    },
    "142": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "EQ",
      "path": "45"
    },
    "143": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1D6"
    },
    "146": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "147": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "148": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x8C7F0959"
    },
    "153": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "EQ",
      "path": "45"
    },
    "154": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x267"
    },
    "157": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "158": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "159": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x8DA5CB5B"
    },
    "164": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "EQ",
      "path": "45"
    },
    "165": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x27C"
    },
    "168": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "169": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "170": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x915E3364"
    },
    "175": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "EQ",
      "path": "45"
    },
    "176": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x291"
    },
    "179": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "180": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "181": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x91C05B0B"
    },
    "186": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "EQ",
      "path": "45"
    },
    "187": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2A4"
    },
    "190": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "191": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x158"
    },
    "194": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMP",
      "path": "45"
    },
    "195": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "196": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "197": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x313CE567"
    },
    "202": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "GT",
      "path": "45"
    },
    "203": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x115"
    },
    "206": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "207": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "208": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x313CE567"
    },
    "213": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "EQ",
      "path": "45"
    },
    "214": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1E9"
    },
    "217": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "218": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "219": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x39509351"
    },
    "224": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "EQ",
      "path": "45"
    },
    "225": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1FE"
    },
    "228": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "229": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "230": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x53C11F99"
    },
    "235": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "EQ",
      "path": "45"
    },
    "236": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x211"
    },
    "239": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "240": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "241": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x5F9E7D77"
    },
    "246": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "EQ",
      "path": "45"
    },
    "247": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x224"
    },
    "250": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "251": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "252": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x70A08231"
    },
    "257": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "EQ",
      "path": "45"
    },
    "258": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x237"
    },
    "261": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "262": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "263": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x715018A6"
    },
    "268": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "EQ",
      "path": "45"
    },
    "269": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x24A"
    },
    "272": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "273": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x158"
    },
    "276": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMP",
      "path": "45"
    },
    "277": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "278": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "279": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x6FDDE03"
    },
    "284": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "EQ",
      "path": "45"
    },
    "285": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x15D"
    },
    "288": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "289": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "290": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x95EA7B3"
    },
    "295": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "EQ",
      "path": "45"
    },
    "296": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x17B"
    },
    "299": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "300": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "301": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x18160DDD"
    },
    "306": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "EQ",
      "path": "45"
    },
    "307": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x19B"
    },
    "310": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "311": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "312": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x230DBD29"
    },
    "317": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "EQ",
      "path": "45"
    },
    "318": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1B0"
    },
    "321": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "322": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "323": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x23B872DD"
    },
    "328": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "EQ",
      "path": "45"
    },
    "329": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1C3"
    },
    "332": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "333": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "334": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x30D9C915"
    },
    "339": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "EQ",
      "path": "45"
    },
    "340": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1D6"
    },
    "343": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "344": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "345": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "347": {
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "DUP1",
      "path": "45"
    },
    "348": {
      "first_revert": true,
      "fn": null,
      "offset": [
        814,
        7375
      ],
      "op": "REVERT",
      "path": "45"
    },
    "349": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "350": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x165"
    },
    "353": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x30B"
    },
    "356": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMP",
      "path": "4"
    },
    "357": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "358": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "360": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "361": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x172"
    },
    "364": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "365": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "366": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1900"
    },
    "369": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMP",
      "path": "4"
    },
    "370": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "371": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "373": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "374": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP1",
      "path": "4"
    },
    "375": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "376": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SUB",
      "path": "4"
    },
    "377": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "378": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "RETURN",
      "path": "4"
    },
    "379": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "380": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18E"
    },
    "383": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x189"
    },
    "386": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "387": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "389": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14D5"
    },
    "392": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMP",
      "path": "4"
    },
    "393": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "394": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3A1"
    },
    "397": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMP",
      "path": "4"
    },
    "398": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "399": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "401": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "402": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x172"
    },
    "405": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "406": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "407": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18C6"
    },
    "410": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMP",
      "path": "4"
    },
    "411": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "412": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A3"
    },
    "415": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3BF"
    },
    "418": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3235,
        3341
      ],
      "op": "JUMP",
      "path": "4"
    },
    "419": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "420": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "422": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "423": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x172"
    },
    "426": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "427": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "428": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D60"
    },
    "431": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3235,
        3341
      ],
      "op": "JUMP",
      "path": "4"
    },
    "432": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3441,
        3836
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "433": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3441,
        3836
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x165"
    },
    "436": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3441,
        3836
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1BE"
    },
    "439": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3441,
        3836
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "440": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3441,
        3836
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "442": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3441,
        3836
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x165E"
    },
    "445": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "jump": "i",
      "offset": [
        3441,
        3836
      ],
      "op": "JUMP",
      "path": "45"
    },
    "446": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3441,
        3836
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "447": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3441,
        3836
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x3C5"
    },
    "450": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "jump": "i",
      "offset": [
        3441,
        3836
      ],
      "op": "JUMP",
      "path": "45"
    },
    "451": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "452": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18E"
    },
    "455": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D1"
    },
    "458": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "459": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "461": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1495"
    },
    "464": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4877,
        5194
      ],
      "op": "JUMP",
      "path": "4"
    },
    "465": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "466": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x418"
    },
    "469": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4877,
        5194
      ],
      "op": "JUMP",
      "path": "4"
    },
    "470": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2084,
        2556
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "471": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2084,
        2556
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x165"
    },
    "474": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2084,
        2556
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1E4"
    },
    "477": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2084,
        2556
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "478": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2084,
        2556
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "480": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2084,
        2556
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x15C2"
    },
    "483": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "jump": "i",
      "offset": [
        2084,
        2556
      ],
      "op": "JUMP",
      "path": "45"
    },
    "484": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2084,
        2556
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "485": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2084,
        2556
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x49F"
    },
    "488": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "jump": "i",
      "offset": [
        2084,
        2556
      ],
      "op": "JUMP",
      "path": "45"
    },
    "489": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "490": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F1"
    },
    "493": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x525"
    },
    "496": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        3086,
        3175
      ],
      "op": "JUMP",
      "path": "4"
    },
    "497": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "498": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "500": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "501": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x172"
    },
    "504": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "505": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "506": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D7A"
    },
    "509": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        3086,
        3175
      ],
      "op": "JUMP",
      "path": "4"
    },
    "510": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "511": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18E"
    },
    "514": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x20C"
    },
    "517": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "518": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "520": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14D5"
    },
    "523": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5589,
        5804
      ],
      "op": "JUMP",
      "path": "4"
    },
    "524": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "525": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x52E"
    },
    "528": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5589,
        5804
      ],
      "op": "JUMP",
      "path": "4"
    },
    "529": {
      "fn": "SuperAppBase.afterAgreementTerminated",
      "offset": [
        2324,
        2750
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "530": {
      "fn": "SuperAppBase.afterAgreementTerminated",
      "offset": [
        2324,
        2750
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x165"
    },
    "533": {
      "fn": "SuperAppBase.afterAgreementTerminated",
      "offset": [
        2324,
        2750
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x21F"
    },
    "536": {
      "fn": "SuperAppBase.afterAgreementTerminated",
      "offset": [
        2324,
        2750
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "537": {
      "fn": "SuperAppBase.afterAgreementTerminated",
      "offset": [
        2324,
        2750
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "539": {
      "fn": "SuperAppBase.afterAgreementTerminated",
      "offset": [
        2324,
        2750
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x165E"
    },
    "542": {
      "fn": "SuperAppBase.afterAgreementTerminated",
      "jump": "i",
      "offset": [
        2324,
        2750
      ],
      "op": "JUMP",
      "path": "26"
    },
    "543": {
      "fn": "SuperAppBase.afterAgreementTerminated",
      "offset": [
        2324,
        2750
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "544": {
      "fn": "SuperAppBase.afterAgreementTerminated",
      "offset": [
        2324,
        2750
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x57C"
    },
    "547": {
      "fn": "SuperAppBase.afterAgreementTerminated",
      "jump": "i",
      "offset": [
        2324,
        2750
      ],
      "op": "JUMP",
      "path": "26"
    },
    "548": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "549": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x165"
    },
    "552": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x232"
    },
    "555": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "556": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "558": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x15C2"
    },
    "561": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "jump": "i",
      "offset": [
        1911,
        2318
      ],
      "op": "JUMP",
      "path": "26"
    },
    "562": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "563": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x596"
    },
    "566": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "jump": "i",
      "offset": [
        1911,
        2318
      ],
      "op": "JUMP",
      "path": "26"
    },
    "567": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "568": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A3"
    },
    "571": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x245"
    },
    "574": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "575": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "577": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1441"
    },
    "580": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3399,
        3524
      ],
      "op": "JUMP",
      "path": "4"
    },
    "581": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "582": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5B0"
    },
    "585": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3399,
        3524
      ],
      "op": "JUMP",
      "path": "4"
    },
    "586": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "587": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x252"
    },
    "590": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5CB"
    },
    "593": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMP",
      "path": "1"
    },
    "594": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "595": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "STOP",
      "path": "1"
    },
    "596": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        4910,
        5566
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "597": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        4910,
        5566
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x252"
    },
    "600": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        4910,
        5566
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x262"
    },
    "603": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        4910,
        5566
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "604": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        4910,
        5566
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "606": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        4910,
        5566
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x14D5"
    },
    "609": {
      "fn": "TennerrVotingRightsToken.issue",
      "jump": "i",
      "offset": [
        4910,
        5566
      ],
      "op": "JUMP",
      "path": "45"
    },
    "610": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        4910,
        5566
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "611": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        4910,
        5566
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x654"
    },
    "614": {
      "fn": "TennerrVotingRightsToken.issue",
      "jump": "i",
      "offset": [
        4910,
        5566
      ],
      "op": "JUMP",
      "path": "45"
    },
    "615": {
      "offset": [
        899,
        934
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "616": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        899,
        934
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x26F"
    },
    "619": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        899,
        934
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x7AF"
    },
    "622": {
      "fn": "TennerrVotingRightsToken.issue",
      "jump": "i",
      "offset": [
        899,
        934
      ],
      "op": "JUMP",
      "path": "45"
    },
    "623": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        899,
        934
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "624": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        899,
        934
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "626": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        899,
        934
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "627": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        899,
        934
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x172"
    },
    "630": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        899,
        934
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "631": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        899,
        934
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "632": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        899,
        934
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1D69"
    },
    "635": {
      "fn": "TennerrVotingRightsToken.issue",
      "jump": "i",
      "offset": [
        899,
        934
      ],
      "op": "JUMP",
      "path": "45"
    },
    "636": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "637": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x284"
    },
    "640": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7B4"
    },
    "643": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMP",
      "path": "1"
    },
    "644": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "645": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "647": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "648": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x172"
    },
    "651": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "652": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "653": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x188E"
    },
    "656": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMP",
      "path": "1"
    },
    "657": {
      "offset": [
        1112,
        1158
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "658": {
      "fn": "Ownable.owner",
      "offset": [
        1112,
        1158
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x18E"
    },
    "661": {
      "fn": "Ownable.owner",
      "offset": [
        1112,
        1158
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x29F"
    },
    "664": {
      "fn": "Ownable.owner",
      "offset": [
        1112,
        1158
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "665": {
      "fn": "Ownable.owner",
      "offset": [
        1112,
        1158
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "667": {
      "fn": "Ownable.owner",
      "offset": [
        1112,
        1158
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1441"
    },
    "670": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1112,
        1158
      ],
      "op": "JUMP",
      "path": "45"
    },
    "671": {
      "fn": "Ownable.owner",
      "offset": [
        1112,
        1158
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "672": {
      "fn": "Ownable.owner",
      "offset": [
        1112,
        1158
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x7C3"
    },
    "675": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1112,
        1158
      ],
      "op": "JUMP",
      "path": "45"
    },
    "676": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5637,
        6257
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "677": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5637,
        6257
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x252"
    },
    "680": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5637,
        6257
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2B2"
    },
    "683": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5637,
        6257
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "684": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5637,
        6257
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "686": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5637,
        6257
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x181E"
    },
    "689": {
      "fn": "TennerrVotingRightsToken.distribute",
      "jump": "i",
      "offset": [
        5637,
        6257
      ],
      "op": "JUMP",
      "path": "45"
    },
    "690": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5637,
        6257
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "691": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5637,
        6257
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x7D8"
    },
    "694": {
      "fn": "TennerrVotingRightsToken.distribute",
      "jump": "i",
      "offset": [
        5637,
        6257
      ],
      "op": "JUMP",
      "path": "45"
    },
    "695": {
      "fn": "ERC20.symbol",
      "offset": [
        2370,
        2463
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "696": {
      "fn": "ERC20.symbol",
      "offset": [
        2370,
        2463
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x165"
    },
    "699": {
      "fn": "ERC20.symbol",
      "offset": [
        2370,
        2463
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA3F"
    },
    "702": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2370,
        2463
      ],
      "op": "JUMP",
      "path": "4"
    },
    "703": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "704": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18E"
    },
    "707": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2CD"
    },
    "710": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "711": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "713": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14D5"
    },
    "716": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6291,
        6557
      ],
      "op": "JUMP",
      "path": "4"
    },
    "717": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "718": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAA0"
    },
    "721": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6291,
        6557
      ],
      "op": "JUMP",
      "path": "4"
    },
    "722": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "723": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18E"
    },
    "726": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2E0"
    },
    "729": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "730": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "732": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14D5"
    },
    "735": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3727,
        3899
      ],
      "op": "JUMP",
      "path": "4"
    },
    "736": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "737": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB08"
    },
    "740": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3727,
        3899
      ],
      "op": "JUMP",
      "path": "4"
    },
    "741": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "742": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A3"
    },
    "745": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2F3"
    },
    "748": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "749": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "751": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x145D"
    },
    "754": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3957,
        4106
      ],
      "op": "JUMP",
      "path": "4"
    },
    "755": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "756": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB1C"
    },
    "759": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3957,
        4106
      ],
      "op": "JUMP",
      "path": "4"
    },
    "760": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "761": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x252"
    },
    "764": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x306"
    },
    "767": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "768": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "770": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1441"
    },
    "773": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMP",
      "path": "1"
    },
    "774": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "775": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB47"
    },
    "778": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMP",
      "path": "1"
    },
    "779": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "780": {
      "fn": "ERC20.name",
      "offset": [
        2245,
        2250
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 0,
      "value": "0x4"
    },
    "782": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP1",
      "path": "4"
    },
    "783": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "784": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "786": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP1",
      "path": "4"
    },
    "787": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "788": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "790": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "792": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "796": {
      "op": "NOT"
    },
    "797": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "800": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "802": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP9",
      "path": "4"
    },
    "803": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "AND",
      "path": "4"
    },
    "804": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "805": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MUL",
      "path": "4"
    },
    "806": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "4"
    },
    "807": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "808": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "809": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "AND",
      "path": "4"
    },
    "810": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "811": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "812": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "813": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DIV",
      "path": "4"
    },
    "814": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "815": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP5",
      "path": "4"
    },
    "816": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "4"
    },
    "817": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP2",
      "path": "4"
    },
    "818": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "819": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DIV",
      "path": "4"
    },
    "820": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP2",
      "path": "4"
    },
    "821": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MUL",
      "path": "4"
    },
    "822": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP3",
      "path": "4"
    },
    "823": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "4"
    },
    "824": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP2",
      "path": "4"
    },
    "825": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "4"
    },
    "826": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "827": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "828": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "829": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP3",
      "path": "4"
    },
    "830": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP2",
      "path": "4"
    },
    "831": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "832": {
      "fn": "ERC20.name",
      "offset": [
        2213,
        2226
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "834": {
      "fn": "ERC20.name",
      "offset": [
        2213,
        2226
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "835": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "836": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "837": {
      "fn": "ERC20.name",
      "offset": [
        2245,
        2250
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "838": {
      "fn": "ERC20.name",
      "offset": [
        2245,
        2250
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "839": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP4",
      "path": "4"
    },
    "840": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "4"
    },
    "841": {
      "fn": "ERC20.name",
      "offset": [
        2245,
        2250
      ],
      "op": "DUP3",
      "path": "4"
    },
    "842": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP3",
      "path": "4"
    },
    "843": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP1",
      "path": "4"
    },
    "844": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "845": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x397"
    },
    "848": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "849": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP1",
      "path": "4"
    },
    "850": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "852": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "LT",
      "path": "4"
    },
    "853": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x36C"
    },
    "856": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "857": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "860": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP1",
      "path": "4"
    },
    "861": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP4",
      "path": "4"
    },
    "862": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "863": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DIV",
      "path": "4"
    },
    "864": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MUL",
      "path": "4"
    },
    "865": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP4",
      "path": "4"
    },
    "866": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "867": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "868": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "870": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "4"
    },
    "871": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "872": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x397"
    },
    "875": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "JUMP",
      "path": "4"
    },
    "876": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "877": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP3",
      "path": "4"
    },
    "878": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "4"
    },
    "879": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "880": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "881": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "883": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "884": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "886": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "888": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "889": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "890": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "891": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP2",
      "path": "4"
    },
    "892": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "893": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP2",
      "path": "4"
    },
    "894": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "895": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "896": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "898": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "4"
    },
    "899": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "900": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "902": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "4"
    },
    "903": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP1",
      "path": "4"
    },
    "904": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP4",
      "path": "4"
    },
    "905": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "GT",
      "path": "4"
    },
    "906": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x37A"
    },
    "909": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "910": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP3",
      "path": "4"
    },
    "911": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "912": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SUB",
      "path": "4"
    },
    "913": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "915": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "AND",
      "path": "4"
    },
    "916": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP3",
      "path": "4"
    },
    "917": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "4"
    },
    "918": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "919": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "920": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "POP",
      "path": "4"
    },
    "921": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "POP",
      "path": "4"
    },
    "922": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "POP",
      "path": "4"
    },
    "923": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "POP",
      "path": "4"
    },
    "924": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "POP",
      "path": "4"
    },
    "925": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "926": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "POP",
      "path": "4"
    },
    "927": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "928": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMP",
      "path": "4"
    },
    "929": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "930": {
      "fn": "ERC20.approve",
      "offset": [
        4327,
        4331
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "932": {
      "fn": "ERC20.approve",
      "offset": [
        4343,
        4382
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 1,
      "value": "0x3B5"
    },
    "935": {
      "fn": "ERC20.approve",
      "offset": [
        4352,
        4364
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3AE"
    },
    "938": {
      "fn": "ERC20.approve",
      "offset": [
        4352,
        4362
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC07"
    },
    "941": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4352,
        4364
      ],
      "op": "JUMP",
      "path": "4"
    },
    "942": {
      "fn": "ERC20.approve",
      "offset": [
        4352,
        4364
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "943": {
      "fn": "ERC20.approve",
      "offset": [
        4366,
        4373
      ],
      "op": "DUP5",
      "path": "4"
    },
    "944": {
      "fn": "ERC20.approve",
      "offset": [
        4375,
        4381
      ],
      "op": "DUP5",
      "path": "4"
    },
    "945": {
      "fn": "ERC20.approve",
      "offset": [
        4343,
        4351
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC0B"
    },
    "948": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4343,
        4382
      ],
      "op": "JUMP",
      "path": "4"
    },
    "949": {
      "fn": "ERC20.approve",
      "offset": [
        4343,
        4382
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "950": {
      "op": "POP"
    },
    "951": {
      "fn": "ERC20.approve",
      "offset": [
        4399,
        4403
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 2,
      "value": "0x1"
    },
    "953": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "954": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "955": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "956": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "POP",
      "path": "4"
    },
    "957": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "POP",
      "path": "4"
    },
    "958": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMP",
      "path": "4"
    },
    "959": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "960": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3322,
        3334
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 3,
      "value": "0x3"
    },
    "962": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3322,
        3334
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "963": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "964": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        3235,
        3341
      ],
      "op": "JUMP",
      "path": "4"
    },
    "965": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3441,
        3836
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "966": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3724,
        3743
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x60"
    },
    "968": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3759,
        3807
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 4,
      "value": "0x3D3"
    },
    "971": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3778,
        3788
      ],
      "op": "DUP11",
      "path": "45"
    },
    "972": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3790,
        3793
      ],
      "op": "DUP5",
      "path": "45"
    },
    "973": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3790,
        3793
      ],
      "op": "DUP5",
      "path": "45"
    },
    "974": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3795,
        3806
      ],
      "op": "DUP12",
      "path": "45"
    },
    "975": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3759,
        3777
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xCBF"
    },
    "978": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "jump": "i",
      "offset": [
        3759,
        3807
      ],
      "op": "JUMP",
      "path": "45"
    },
    "979": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3759,
        3807
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "980": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3826,
        3829
      ],
      "op": "DUP3",
      "path": "45",
      "statement": 5
    },
    "981": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3826,
        3829
      ],
      "op": "DUP3",
      "path": "45"
    },
    "982": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "DUP1",
      "path": "45"
    },
    "983": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "DUP1",
      "path": "45"
    },
    "984": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "986": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "ADD",
      "path": "45"
    },
    "987": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "989": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "DUP1",
      "path": "45"
    },
    "990": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "991": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "DIV",
      "path": "45"
    },
    "992": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "MUL",
      "path": "45"
    },
    "993": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "995": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "ADD",
      "path": "45"
    },
    "996": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "998": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "999": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1000": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1001": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "ADD",
      "path": "45"
    },
    "1002": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1004": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1005": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1006": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "1007": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "1008": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1009": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1010": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1011": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1012": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1013": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1015": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "ADD",
      "path": "45"
    },
    "1016": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1017": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1018": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1019": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1020": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "DUP5",
      "path": "45"
    },
    "1021": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "CALLDATACOPY",
      "path": "45"
    },
    "1022": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1024": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "1025": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "ADD",
      "path": "45"
    },
    "1026": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1027": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1028": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1029": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1030": {
      "op": "POP"
    },
    "1031": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "1032": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3817,
        3829
      ],
      "op": "SWAP14",
      "path": "45"
    },
    "1033": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "offset": [
        3441,
        3836
      ],
      "op": "SWAP13",
      "path": "45"
    },
    "1034": {
      "op": "POP"
    },
    "1035": {
      "op": "POP"
    },
    "1036": {
      "op": "POP"
    },
    "1037": {
      "op": "POP"
    },
    "1038": {
      "op": "POP"
    },
    "1039": {
      "op": "POP"
    },
    "1040": {
      "op": "POP"
    },
    "1041": {
      "op": "POP"
    },
    "1042": {
      "op": "POP"
    },
    "1043": {
      "op": "POP"
    },
    "1044": {
      "op": "POP"
    },
    "1045": {
      "op": "POP"
    },
    "1046": {
      "op": "POP"
    },
    "1047": {
      "fn": "TennerrVotingRightsToken.afterAgreementUpdated",
      "jump": "o",
      "offset": [
        3441,
        3836
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1048": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1049": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4983,
        4987
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1051": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4999,
        5035
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 6,
      "value": "0x425"
    },
    "1054": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5009,
        5015
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1055": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5017,
        5026
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1056": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5028,
        5034
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1057": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4999,
        5008
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE8B"
    },
    "1060": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4999,
        5035
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1061": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4999,
        5035
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1062": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5045,
        5166
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 7,
      "value": "0x495"
    },
    "1065": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5054,
        5060
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1066": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5074
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x431"
    },
    "1069": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5072
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC07"
    },
    "1072": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5062,
        5074
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1073": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5074
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1074": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x490"
    },
    "1077": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5114,
        5120
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1078": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1080": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1081": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1082": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "1084": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "ADD",
      "path": "4"
    },
    "1085": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1087": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1088": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1089": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x28"
    },
    "1091": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1092": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1093": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1095": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "ADD",
      "path": "4"
    },
    "1096": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E1A"
    },
    "1099": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x28"
    },
    "1101": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1102": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1109": {
      "op": "SHL"
    },
    "1110": {
      "op": "SUB"
    },
    "1111": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "DUP11",
      "path": "4"
    },
    "1112": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "AND",
      "path": "4"
    },
    "1113": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1115": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1116": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1117": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1118": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5087
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1120": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1122": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1123": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1125": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1126": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1127": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1128": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5096,
        5108
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x46F"
    },
    "1131": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5096,
        5106
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC07"
    },
    "1134": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5096,
        5108
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1135": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5096,
        5108
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1142": {
      "op": "SHL"
    },
    "1143": {
      "op": "SUB"
    },
    "1144": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "AND",
      "path": "4"
    },
    "1145": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1146": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1147": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1149": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1150": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "ADD",
      "path": "4"
    },
    "1151": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1152": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1153": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1154": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1155": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1157": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "ADD",
      "path": "4"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1160": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1161": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1162": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1163": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1164": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5113
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10B7"
    },
    "1167": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5076,
        5165
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1168": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1169": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5045,
        5053
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC0B"
    },
    "1172": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5045,
        5166
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1173": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5045,
        5166
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1174": {
      "op": "POP"
    },
    "1175": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5183,
        5187
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 8,
      "value": "0x1"
    },
    "1177": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1178": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1179": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "POP",
      "path": "4"
    },
    "1180": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "POP",
      "path": "4"
    },
    "1181": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "POP",
      "path": "4"
    },
    "1182": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4877,
        5194
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1183": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2084,
        2556
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1184": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2398,
        2408
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 9,
      "value": "0x6"
    },
    "1186": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2398,
        2408
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "1187": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2343,
        2360
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x60"
    },
    "1189": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2343,
        2360
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1196": {
      "op": "SHL"
    },
    "1197": {
      "op": "SUB"
    },
    "1198": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2384,
        2408
      ],
      "op": "DUP10",
      "path": "45"
    },
    "1199": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2384,
        2408
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1200": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2384,
        2408
      ],
      "op": "AND",
      "path": "45"
    },
    "1201": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2398,
        2408
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "1204": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2398,
        2408
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1205": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2398,
        2408
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "1206": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2398,
        2408
      ],
      "op": "DIV",
      "path": "45"
    },
    "1207": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2398,
        2408
      ],
      "op": "AND",
      "path": "45"
    },
    "1208": {
      "branch": 58,
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2384,
        2408
      ],
      "op": "EQ",
      "path": "45"
    },
    "1209": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2376,
        2440
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x4DD"
    },
    "1212": {
      "branch": 58,
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2376,
        2440
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1213": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2376,
        2440
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1215": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2376,
        2440
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1216": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1222": {
      "op": "SHL"
    },
    "1223": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2376,
        2440
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1224": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2376,
        2440
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1225": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2376,
        2440
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1227": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2376,
        2440
      ],
      "op": "ADD",
      "path": "45"
    },
    "1228": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2376,
        2440
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x4D4"
    },
    "1231": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2376,
        2440
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1232": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2376,
        2440
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1BAC"
    },
    "1235": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "jump": "i",
      "offset": [
        2376,
        2440
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1236": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2376,
        2440
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1237": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2376,
        2440
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1239": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2376,
        2440
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1240": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2376,
        2440
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1241": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2376,
        2440
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1242": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2376,
        2440
      ],
      "op": "SUB",
      "path": "45"
    },
    "1243": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2376,
        2440
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1244": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2376,
        2440
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1245": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2376,
        2440
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1246": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2484,
        2488
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 10,
      "value": "0x8"
    },
    "1248": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2484,
        2488
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1255": {
      "op": "SHL"
    },
    "1256": {
      "op": "SUB"
    },
    "1257": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2458,
        2489
      ],
      "op": "DUP9",
      "path": "45"
    },
    "1258": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2458,
        2489
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1259": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2458,
        2489
      ],
      "op": "AND",
      "path": "45"
    },
    "1260": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2484,
        2488
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1261": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2484,
        2488
      ],
      "op": "AND",
      "path": "45"
    },
    "1262": {
      "branch": 59,
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2458,
        2489
      ],
      "op": "EQ",
      "path": "45"
    },
    "1263": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2450,
        2520
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x50A"
    },
    "1266": {
      "branch": 59,
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2450,
        2520
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1267": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2450,
        2520
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1269": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2450,
        2520
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1270": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1276": {
      "op": "SHL"
    },
    "1277": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2450,
        2520
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1278": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2450,
        2520
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1279": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2450,
        2520
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1281": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2450,
        2520
      ],
      "op": "ADD",
      "path": "45"
    },
    "1282": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2450,
        2520
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x4D4"
    },
    "1285": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2450,
        2520
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1286": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2450,
        2520
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1B75"
    },
    "1289": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "jump": "i",
      "offset": [
        2450,
        2520
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1290": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2450,
        2520
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1291": {
      "op": "POP"
    },
    "1292": {
      "op": "POP"
    },
    "1293": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2537,
        2549
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 11,
      "value": "0x40"
    },
    "1295": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2537,
        2549
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1296": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2537,
        2549
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1297": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2547,
        2548
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1299": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2537,
        2549
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1300": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2537,
        2549
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1301": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2537,
        2549
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1303": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2537,
        2549
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1304": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2537,
        2549
      ],
      "op": "ADD",
      "path": "45"
    },
    "1305": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2537,
        2549
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1306": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2537,
        2549
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1307": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2537,
        2549
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1308": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2537,
        2549
      ],
      "op": "SWAP7",
      "path": "45"
    },
    "1309": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "offset": [
        2530,
        2549
      ],
      "op": "SWAP6",
      "path": "45"
    },
    "1310": {
      "op": "POP"
    },
    "1311": {
      "op": "POP"
    },
    "1312": {
      "op": "POP"
    },
    "1313": {
      "op": "POP"
    },
    "1314": {
      "op": "POP"
    },
    "1315": {
      "op": "POP"
    },
    "1316": {
      "fn": "TennerrVotingRightsToken.beforeAgreementCreated",
      "jump": "o",
      "offset": [
        2084,
        2556
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1317": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1318": {
      "fn": "ERC20.decimals",
      "offset": [
        3159,
        3168
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 12,
      "value": "0x6"
    },
    "1320": {
      "fn": "ERC20.decimals",
      "offset": [
        3159,
        3168
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1321": {
      "fn": "ERC20.decimals",
      "offset": [
        3159,
        3168
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "1323": {
      "fn": "ERC20.decimals",
      "offset": [
        3159,
        3168
      ],
      "op": "AND",
      "path": "4"
    },
    "1324": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1325": {
      "fn": "ERC20.decimals",
      "jump": "o",
      "offset": [
        3086,
        3175
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1326": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1327": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1329": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5693,
        5776
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 13,
      "value": "0x3B5"
    },
    "1332": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5702,
        5714
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x53B"
    },
    "1335": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5702,
        5712
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC07"
    },
    "1338": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5702,
        5714
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1339": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5702,
        5714
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1340": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5716,
        5723
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1341": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5775
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x490"
    },
    "1344": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5764,
        5774
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1345": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5736
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1347": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1349": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5737,
        5749
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x54C"
    },
    "1352": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5737,
        5747
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC07"
    },
    "1355": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5737,
        5749
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1356": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5737,
        5749
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1363": {
      "op": "SHL"
    },
    "1364": {
      "op": "SUB"
    },
    "1365": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1366": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1367": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "AND",
      "path": "4"
    },
    "1368": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1369": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1370": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1372": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1373": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1374": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "ADD",
      "path": "4"
    },
    "1375": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1376": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1377": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1378": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1379": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1381": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1382": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1383": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "ADD",
      "path": "4"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1386": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1387": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1388": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1389": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1390": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "DUP13",
      "path": "4"
    },
    "1391": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "AND",
      "path": "4"
    },
    "1392": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1393": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1394": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1395": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1396": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1397": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1398": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1399": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1400": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5763
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10E3"
    },
    "1403": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5725,
        5775
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1404": {
      "fn": "SuperAppBase.afterAgreementTerminated",
      "offset": [
        2324,
        2750
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1405": {
      "fn": "SuperAppBase.afterAgreementTerminated",
      "offset": [
        2645,
        2657
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "1407": {
      "fn": "SuperAppBase.afterAgreementTerminated",
      "offset": [
        2684,
        2743
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 14,
      "value": "0x40"
    },
    "1409": {
      "fn": "SuperAppBase.afterAgreementTerminated",
      "offset": [
        2684,
        2743
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1410": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1416": {
      "op": "SHL"
    },
    "1417": {
      "fn": "SuperAppBase.afterAgreementTerminated",
      "offset": [
        2684,
        2743
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1418": {
      "fn": "SuperAppBase.afterAgreementTerminated",
      "offset": [
        2684,
        2743
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1419": {
      "fn": "SuperAppBase.afterAgreementTerminated",
      "offset": [
        2684,
        2743
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1421": {
      "fn": "SuperAppBase.afterAgreementTerminated",
      "offset": [
        2684,
        2743
      ],
      "op": "ADD",
      "path": "26"
    },
    "1422": {
      "fn": "SuperAppBase.afterAgreementTerminated",
      "offset": [
        2684,
        2743
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x4D4"
    },
    "1425": {
      "fn": "SuperAppBase.afterAgreementTerminated",
      "offset": [
        2684,
        2743
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1426": {
      "fn": "SuperAppBase.afterAgreementTerminated",
      "offset": [
        2684,
        2743
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1CD8"
    },
    "1429": {
      "fn": "SuperAppBase.afterAgreementTerminated",
      "jump": "i",
      "offset": [
        2684,
        2743
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1430": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1431": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2211,
        2223
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "1433": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 15,
      "value": "0x40"
    },
    "1435": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1436": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1442": {
      "op": "SHL"
    },
    "1443": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1444": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1445": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1447": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "ADD",
      "path": "26"
    },
    "1448": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x4D4"
    },
    "1451": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1452": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1B22"
    },
    "1455": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "jump": "i",
      "offset": [
        2250,
        2311
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1456": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1463": {
      "op": "SHL"
    },
    "1464": {
      "op": "SUB"
    },
    "1465": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "AND",
      "path": "4",
      "statement": 16
    },
    "1466": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3473,
        3480
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1468": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1469": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1470": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1471": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3508
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1473": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1475": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1476": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1478": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1479": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1480": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1481": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1482": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3399,
        3524
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1483": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1484": {
      "offset": [
        1308,
        1320
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5D3"
    },
    "1487": {
      "offset": [
        1308,
        1318
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC07"
    },
    "1490": {
      "jump": "i",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1491": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1498": {
      "op": "SHL"
    },
    "1499": {
      "op": "SUB"
    },
    "1500": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "1"
    },
    "1501": {
      "offset": [
        1297,
        1304
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5E4"
    },
    "1504": {
      "offset": [
        1297,
        1302
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7B4"
    },
    "1507": {
      "jump": "i",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1508": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1515": {
      "op": "SHL"
    },
    "1516": {
      "op": "SUB"
    },
    "1517": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "1"
    },
    "1518": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1297,
        1320
      ],
      "op": "EQ",
      "path": "1"
    },
    "1519": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x60A"
    },
    "1522": {
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1523": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1525": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1526": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1532": {
      "op": "SHL"
    },
    "1533": {
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1534": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1535": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1537": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "1"
    },
    "1538": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4D4"
    },
    "1541": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1542": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BE3"
    },
    "1545": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1289,
        1357
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1546": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1547": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1823,
        1824
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 17,
      "value": "0x0"
    },
    "1549": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1550": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1551": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1553": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1560": {
      "op": "SHL"
    },
    "1561": {
      "op": "SUB"
    },
    "1562": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1563": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1564": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "AND",
      "path": "1"
    },
    "1565": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1566": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1599": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1600": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1823,
        1824
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1601": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1823,
        1824
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1602": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1603": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1853,
        1854
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 18,
      "value": "0x0"
    },
    "1605": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1606": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1613": {
      "op": "SHL"
    },
    "1614": {
      "op": "SUB"
    },
    "1615": {
      "op": "NOT"
    },
    "1616": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "AND",
      "path": "1"
    },
    "1617": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1618": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1619": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1620": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        4910,
        5566
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1621": {
      "offset": [
        1308,
        1320
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x65C"
    },
    "1624": {
      "offset": [
        1308,
        1318
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC07"
    },
    "1627": {
      "jump": "i",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1628": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1635": {
      "op": "SHL"
    },
    "1636": {
      "op": "SUB"
    },
    "1637": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "1"
    },
    "1638": {
      "offset": [
        1297,
        1304
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66D"
    },
    "1641": {
      "offset": [
        1297,
        1302
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7B4"
    },
    "1644": {
      "jump": "i",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1645": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1652": {
      "op": "SHL"
    },
    "1653": {
      "op": "SUB"
    },
    "1654": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "1"
    },
    "1655": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        1297,
        1320
      ],
      "op": "EQ",
      "path": "1"
    },
    "1656": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x693"
    },
    "1659": {
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1660": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1662": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1663": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1669": {
      "op": "SHL"
    },
    "1670": {
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1671": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1672": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1674": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "1"
    },
    "1675": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4D4"
    },
    "1678": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1679": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BE3"
    },
    "1682": {
      "fn": "TennerrVotingRightsToken.issue",
      "jump": "i",
      "offset": [
        1289,
        1357
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1683": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1684": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5045,
        5066
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1686": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5069,
        5091
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x69E"
    },
    "1689": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5079,
        5090
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1690": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5069,
        5078
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x5B0"
    },
    "1693": {
      "fn": "TennerrVotingRightsToken.issue",
      "jump": "i",
      "offset": [
        5069,
        5091
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1694": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5069,
        5091
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1695": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5045,
        5091
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1696": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5045,
        5091
      ],
      "op": "POP",
      "path": "45"
    },
    "1697": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5140,
        5172
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 19,
      "value": "0x6AA"
    },
    "1700": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5152,
        5163
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1701": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5165,
        5171
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1702": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5140,
        5151
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x110F"
    },
    "1705": {
      "fn": "TennerrVotingRightsToken.issue",
      "jump": "i",
      "offset": [
        5140,
        5172
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1706": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5140,
        5172
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1707": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5188
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 20,
      "value": "0x7"
    },
    "1709": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5188
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "1710": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5216,
        5220
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x8"
    },
    "1712": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5216,
        5220
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "1713": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5324,
        5334
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x6"
    },
    "1715": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5324,
        5334
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "1716": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5465,
        5477
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1718": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5465,
        5477
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1719": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5465,
        5477
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1720": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1722": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5465,
        5477
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1723": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5465,
        5477
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1724": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5465,
        5477
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1725": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5465,
        5477
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1727": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5465,
        5477
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1728": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5465,
        5477
      ],
      "op": "ADD",
      "path": "45"
    },
    "1729": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5465,
        5477
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1730": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5465,
        5477
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "1731": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5465,
        5477
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1738": {
      "op": "SHL"
    },
    "1739": {
      "op": "SUB"
    },
    "1740": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5188
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "1741": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5188
      ],
      "op": "DUP6",
      "path": "45"
    },
    "1742": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5188
      ],
      "op": "AND",
      "path": "45"
    },
    "1743": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5188
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "1744": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5202
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x39255D5B"
    },
    "1749": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5202
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "1750": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5216,
        5220
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1751": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5216,
        5220
      ],
      "op": "AND",
      "path": "45"
    },
    "1752": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5216,
        5220
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "1753": {
      "op": "PUSH4",
      "value": "0x465A56B"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1760": {
      "op": "SHL"
    },
    "1761": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5274,
        5306
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "1762": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x6FF"
    },
    "1765": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "1766": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5188
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "1769": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5324,
        5334
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1770": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5324,
        5334
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "1771": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5324,
        5334
      ],
      "op": "DIV",
      "path": "45"
    },
    "1772": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5324,
        5334
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1773": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5324,
        5334
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "1774": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5324,
        5334
      ],
      "op": "AND",
      "path": "45"
    },
    "1775": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5324,
        5334
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1776": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5188
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1777": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5378,
        5389
      ],
      "op": "DUP11",
      "path": "45"
    },
    "1778": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5378,
        5389
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1779": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5407,
        5447
      ],
      "op": "DUP10",
      "path": "45"
    },
    "1780": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5407,
        5447
      ],
      "op": "DUP12",
      "path": "45"
    },
    "1781": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5407,
        5447
      ],
      "op": "ADD",
      "path": "45"
    },
    "1782": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5407,
        5447
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1783": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x44"
    },
    "1785": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1786": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "ADD",
      "path": "45"
    },
    "1787": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x199B"
    },
    "1790": {
      "fn": "TennerrVotingRightsToken.issue",
      "jump": "i",
      "offset": [
        5234,
        5510
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1791": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1792": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1794": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1795": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1798": {
      "op": "NOT"
    },
    "1799": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1800": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "DUP5",
      "path": "45"
    },
    "1801": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "SUB",
      "path": "45"
    },
    "1802": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "ADD",
      "path": "45"
    },
    "1803": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1804": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1805": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1806": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1807": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1808": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1810": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1811": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1812": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "ADD",
      "path": "45"
    },
    "1813": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1814": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1821": {
      "op": "SHL"
    },
    "1822": {
      "op": "SUB"
    },
    "1823": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "AND",
      "path": "45"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1828": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1830": {
      "op": "SHL"
    },
    "1831": {
      "op": "SUB"
    },
    "1832": {
      "op": "NOT"
    },
    "1833": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "SWAP6",
      "path": "45"
    },
    "1834": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "DUP7",
      "path": "45"
    },
    "1835": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "AND",
      "path": "45"
    },
    "1836": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "OR",
      "path": "45"
    },
    "1837": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1838": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5234,
        5510
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1839": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5524,
        5536
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1840": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5524,
        5536
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1843": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5524,
        5536
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1844": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5524,
        5536
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1845": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5524,
        5536
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1846": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5524,
        5536
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1847": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5524,
        5536
      ],
      "op": "ADD",
      "path": "45"
    },
    "1848": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5524,
        5536
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1849": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5524,
        5536
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1850": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5524,
        5536
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1851": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5524,
        5536
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1852": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xE0"
    },
    "1854": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "DUP7",
      "path": "45"
    },
    "1855": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1856": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "SHL",
      "path": "45"
    },
    "1857": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1858": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "1859": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "AND",
      "path": "45"
    },
    "1860": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1861": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1862": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x753"
    },
    "1865": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "1866": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1867": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x24"
    },
    "1869": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1870": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "ADD",
      "path": "45"
    },
    "1871": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1913"
    },
    "1874": {
      "fn": "TennerrVotingRightsToken.issue",
      "jump": "i",
      "offset": [
        5183,
        5559
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1875": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1876": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1878": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1880": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1881": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1882": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1883": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "SUB",
      "path": "45"
    },
    "1884": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1885": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1887": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "DUP8",
      "path": "45"
    },
    "1888": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1889": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "EXTCODESIZE",
      "path": "45"
    },
    "1890": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1891": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1892": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1893": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x76D"
    },
    "1896": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1897": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1899": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1900": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1901": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1902": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "POP",
      "path": "45"
    },
    "1903": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "GAS",
      "path": "45"
    },
    "1904": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "CALL",
      "path": "45"
    },
    "1905": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1906": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1907": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1908": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x781"
    },
    "1911": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1912": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "1913": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1915": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1916": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "RETURNDATACOPY",
      "path": "45"
    },
    "1917": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "1918": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1920": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1921": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1922": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "POP",
      "path": "45"
    },
    "1923": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "POP",
      "path": "45"
    },
    "1924": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "POP",
      "path": "45"
    },
    "1925": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "POP",
      "path": "45"
    },
    "1926": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1928": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1929": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "1930": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1932": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1933": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "RETURNDATACOPY",
      "path": "45"
    },
    "1934": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "1936": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "1937": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1938": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1939": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "ADD",
      "path": "45"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1942": {
      "op": "NOT"
    },
    "1943": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "AND",
      "path": "45"
    },
    "1944": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1945": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "ADD",
      "path": "45"
    },
    "1946": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1948": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1949": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x7A9"
    },
    "1952": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1953": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1954": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1955": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "ADD",
      "path": "45"
    },
    "1956": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1957": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1587"
    },
    "1960": {
      "fn": "TennerrVotingRightsToken.issue",
      "jump": "i",
      "offset": [
        5183,
        5559
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1961": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1962": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        5183,
        5559
      ],
      "op": "POP",
      "path": "45"
    },
    "1963": {
      "offset": [
        1367,
        1368
      ],
      "op": "POP",
      "path": "1"
    },
    "1964": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        4910,
        5566
      ],
      "op": "POP",
      "path": "45"
    },
    "1965": {
      "fn": "TennerrVotingRightsToken.issue",
      "offset": [
        4910,
        5566
      ],
      "op": "POP",
      "path": "45"
    },
    "1966": {
      "fn": "TennerrVotingRightsToken.issue",
      "jump": "o",
      "offset": [
        4910,
        5566
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1967": {
      "offset": [
        899,
        934
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1968": {
      "offset": [
        933,
        934
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1970": {
      "offset": [
        899,
        934
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1971": {
      "fn": "TennerrVotingRightsToken.issue",
      "jump": "o",
      "offset": [
        899,
        934
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1972": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1973": {
      "fn": "Ownable.owner",
      "offset": [
        1131,
        1138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1975": {
      "fn": "Ownable.owner",
      "offset": [
        1157,
        1163
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 21
    },
    "1976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1982": {
      "op": "SHL"
    },
    "1983": {
      "op": "SUB"
    },
    "1984": {
      "fn": "Ownable.owner",
      "offset": [
        1157,
        1163
      ],
      "op": "AND",
      "path": "1"
    },
    "1985": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1986": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1987": {
      "offset": [
        1112,
        1158
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1988": {
      "fn": "Ownable.owner",
      "offset": [
        1112,
        1158
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x9"
    },
    "1990": {
      "fn": "Ownable.owner",
      "offset": [
        1112,
        1158
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1992": {
      "fn": "Ownable.owner",
      "offset": [
        1112,
        1158
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1993": {
      "fn": "Ownable.owner",
      "offset": [
        1112,
        1158
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1995": {
      "fn": "Ownable.owner",
      "offset": [
        1112,
        1158
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1996": {
      "fn": "Ownable.owner",
      "offset": [
        1112,
        1158
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1997": {
      "fn": "Ownable.owner",
      "offset": [
        1112,
        1158
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1998": {
      "fn": "Ownable.owner",
      "offset": [
        1112,
        1158
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2000": {
      "fn": "Ownable.owner",
      "offset": [
        1112,
        1158
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2001": {
      "fn": "Ownable.owner",
      "offset": [
        1112,
        1158
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "2002": {
      "fn": "Ownable.owner",
      "offset": [
        1112,
        1158
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "2003": {
      "fn": "Ownable.owner",
      "offset": [
        1112,
        1158
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xFF"
    },
    "2005": {
      "fn": "Ownable.owner",
      "offset": [
        1112,
        1158
      ],
      "op": "AND",
      "path": "45"
    },
    "2006": {
      "fn": "Ownable.owner",
      "offset": [
        1112,
        1158
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2007": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        1112,
        1158
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2008": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5637,
        6257
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2009": {
      "offset": [
        1308,
        1320
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7E0"
    },
    "2012": {
      "offset": [
        1308,
        1318
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC07"
    },
    "2015": {
      "jump": "i",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2016": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2023": {
      "op": "SHL"
    },
    "2024": {
      "op": "SUB"
    },
    "2025": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "1"
    },
    "2026": {
      "offset": [
        1297,
        1304
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7F1"
    },
    "2029": {
      "offset": [
        1297,
        1302
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7B4"
    },
    "2032": {
      "jump": "i",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2033": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2040": {
      "op": "SHL"
    },
    "2041": {
      "op": "SUB"
    },
    "2042": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "1"
    },
    "2043": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        1297,
        1320
      ],
      "op": "EQ",
      "path": "1"
    },
    "2044": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x817"
    },
    "2047": {
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2048": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2050": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2051": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2055": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2057": {
      "op": "SHL"
    },
    "2058": {
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2059": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2060": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2062": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "1"
    },
    "2063": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4D4"
    },
    "2066": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2067": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BE3"
    },
    "2070": {
      "fn": "TennerrVotingRightsToken.distribute",
      "jump": "i",
      "offset": [
        1289,
        1357
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2071": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2072": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5740
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x8"
    },
    "2074": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5740
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "2075": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5776,
        5786
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x6"
    },
    "2077": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5776,
        5786
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "2078": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2080": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2081": {
      "op": "PUSH4",
      "value": "0x2266EABB"
    },
    "2086": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2088": {
      "op": "SHL"
    },
    "2089": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2090": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2091": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5707,
        5731
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2093": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5707,
        5731
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2100": {
      "op": "SHL"
    },
    "2101": {
      "op": "SUB"
    },
    "2102": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5740
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2103": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5740
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2104": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5740
      ],
      "op": "AND",
      "path": "45"
    },
    "2105": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5740
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2106": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5762
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x899BAAEC"
    },
    "2111": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5762
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2112": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x85B"
    },
    "2115": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2116": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5740
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "2119": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5776,
        5786
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2120": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5776,
        5786
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2121": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5776,
        5786
      ],
      "op": "DIV",
      "path": "45"
    },
    "2122": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5776,
        5786
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2123": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5776,
        5786
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2124": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5776,
        5786
      ],
      "op": "AND",
      "path": "45"
    },
    "2125": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5776,
        5786
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2126": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5808,
        5812
      ],
      "op": "ADDRESS",
      "path": "45"
    },
    "2127": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5808,
        5812
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2128": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5707,
        5731
      ],
      "op": "DUP7",
      "path": "45"
    },
    "2129": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5707,
        5731
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2130": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5837,
        5847
      ],
      "op": "DUP9",
      "path": "45"
    },
    "2131": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5837,
        5847
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2132": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "2134": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "ADD",
      "path": "45"
    },
    "2135": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1953"
    },
    "2138": {
      "fn": "TennerrVotingRightsToken.distribute",
      "jump": "i",
      "offset": [
        5736,
        5848
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2139": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2140": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2142": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2143": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2144": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2145": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2146": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "SUB",
      "path": "45"
    },
    "2147": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2148": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "DUP7",
      "path": "45"
    },
    "2149": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2150": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "EXTCODESIZE",
      "path": "45"
    },
    "2151": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2152": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2153": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2154": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x872"
    },
    "2157": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2158": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2160": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2161": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "REVERT",
      "path": "45"
    },
    "2162": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2163": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "POP",
      "path": "45"
    },
    "2164": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "GAS",
      "path": "45"
    },
    "2165": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "STATICCALL",
      "path": "45"
    },
    "2166": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2167": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2168": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2169": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x886"
    },
    "2172": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2173": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "2174": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2176": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2177": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "RETURNDATACOPY",
      "path": "45"
    },
    "2178": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "2179": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2181": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "REVERT",
      "path": "45"
    },
    "2182": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2183": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "POP",
      "path": "45"
    },
    "2184": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "POP",
      "path": "45"
    },
    "2185": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "POP",
      "path": "45"
    },
    "2186": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "POP",
      "path": "45"
    },
    "2187": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2189": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2190": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "2191": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "2193": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "NOT",
      "path": "45"
    },
    "2194": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "2196": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2197": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "ADD",
      "path": "45"
    },
    "2198": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "AND",
      "path": "45"
    },
    "2199": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2200": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "ADD",
      "path": "45"
    },
    "2201": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2202": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2204": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2205": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "POP",
      "path": "45"
    },
    "2206": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2207": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "ADD",
      "path": "45"
    },
    "2208": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2209": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x8AA"
    },
    "2212": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2213": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2214": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1836"
    },
    "2217": {
      "fn": "TennerrVotingRightsToken.distribute",
      "jump": "i",
      "offset": [
        5736,
        5848
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2218": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5736,
        5848
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2219": {
      "op": "POP"
    },
    "2220": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5869
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 22,
      "value": "0x6"
    },
    "2222": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5869
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "2223": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5706,
        5848
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2224": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5706,
        5848
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2225": {
      "op": "POP"
    },
    "2226": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5869
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "2229": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5869
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2230": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5869
      ],
      "op": "DIV",
      "path": "45"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2237": {
      "op": "SHL"
    },
    "2238": {
      "op": "SUB"
    },
    "2239": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5869
      ],
      "op": "AND",
      "path": "45"
    },
    "2240": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5882
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x23B872DD"
    },
    "2245": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5883,
        5890
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x8CC"
    },
    "2248": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5883,
        5888
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x7B4"
    },
    "2251": {
      "fn": "TennerrVotingRightsToken.distribute",
      "jump": "i",
      "offset": [
        5883,
        5890
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2252": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5883,
        5890
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2253": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5900,
        5904
      ],
      "op": "ADDRESS",
      "path": "45"
    },
    "2254": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5907,
        5923
      ],
      "op": "DUP5",
      "path": "45"
    },
    "2255": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2257": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2258": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "DUP5",
      "path": "45"
    },
    "2259": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "2264": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "AND",
      "path": "45"
    },
    "2265": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xE0"
    },
    "2267": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "SHL",
      "path": "45"
    },
    "2268": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2269": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2270": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "2272": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "ADD",
      "path": "45"
    },
    "2273": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x8EC"
    },
    "2276": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "2277": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2278": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2279": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2280": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x18A2"
    },
    "2283": {
      "fn": "TennerrVotingRightsToken.distribute",
      "jump": "i",
      "offset": [
        5859,
        5924
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2284": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2285": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2287": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2289": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2290": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2291": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2292": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "SUB",
      "path": "45"
    },
    "2293": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2294": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2296": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "DUP8",
      "path": "45"
    },
    "2297": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2298": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "EXTCODESIZE",
      "path": "45"
    },
    "2299": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2300": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2301": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2302": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x906"
    },
    "2305": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2306": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2308": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2309": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "REVERT",
      "path": "45"
    },
    "2310": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2311": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "POP",
      "path": "45"
    },
    "2312": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "GAS",
      "path": "45"
    },
    "2313": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "CALL",
      "path": "45"
    },
    "2314": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2315": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2316": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2317": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x91A"
    },
    "2320": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2321": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "2322": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2324": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2325": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "RETURNDATACOPY",
      "path": "45"
    },
    "2326": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "2327": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2329": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "REVERT",
      "path": "45"
    },
    "2330": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2331": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "POP",
      "path": "45"
    },
    "2332": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "POP",
      "path": "45"
    },
    "2333": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "POP",
      "path": "45"
    },
    "2334": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "POP",
      "path": "45"
    },
    "2335": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2337": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2338": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "2339": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "2341": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "NOT",
      "path": "45"
    },
    "2342": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "2344": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2345": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "ADD",
      "path": "45"
    },
    "2346": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "AND",
      "path": "45"
    },
    "2347": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2348": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "ADD",
      "path": "45"
    },
    "2349": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2350": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2352": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2353": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "POP",
      "path": "45"
    },
    "2354": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2355": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "ADD",
      "path": "45"
    },
    "2356": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2357": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x93E"
    },
    "2360": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2361": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2362": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x156C"
    },
    "2365": {
      "fn": "TennerrVotingRightsToken.distribute",
      "jump": "i",
      "offset": [
        5859,
        5924
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2366": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5859,
        5924
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2367": {
      "op": "POP"
    },
    "2368": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        5940
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 23,
      "value": "0x7"
    },
    "2370": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        5940
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "2371": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5968,
        5972
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x8"
    },
    "2373": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5968,
        5972
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "2374": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6068,
        6078
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x6"
    },
    "2376": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6068,
        6078
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "2377": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6156,
        6168
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2379": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6156,
        6168
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2380": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6156,
        6168
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2381": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        5940
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2383": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6156,
        6168
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2384": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6156,
        6168
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2385": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6156,
        6168
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2386": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6156,
        6168
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2388": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6156,
        6168
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2389": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6156,
        6168
      ],
      "op": "ADD",
      "path": "45"
    },
    "2390": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6156,
        6168
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2391": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6156,
        6168
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2392": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6156,
        6168
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2399": {
      "op": "SHL"
    },
    "2400": {
      "op": "SUB"
    },
    "2401": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        5940
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "2402": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        5940
      ],
      "op": "DUP6",
      "path": "45"
    },
    "2403": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        5940
      ],
      "op": "AND",
      "path": "45"
    },
    "2404": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        5940
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "2405": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        5954
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x39255D5B"
    },
    "2410": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        5954
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "2411": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5968,
        5972
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2412": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5968,
        5972
      ],
      "op": "AND",
      "path": "45"
    },
    "2413": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5968,
        5972
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "2414": {
      "op": "PUSH4",
      "value": "0x5CB398E1"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2421": {
      "op": "SHL"
    },
    "2422": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6026,
        6050
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "2423": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x990"
    },
    "2426": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "2427": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        5940
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "2430": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6068,
        6078
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2431": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6068,
        6078
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2432": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6068,
        6078
      ],
      "op": "DIV",
      "path": "45"
    },
    "2433": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6068,
        6078
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2434": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6068,
        6078
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2435": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6068,
        6078
      ],
      "op": "AND",
      "path": "45"
    },
    "2436": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6068,
        6078
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2437": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        5940
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2438": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6122,
        6138
      ],
      "op": "DUP9",
      "path": "45"
    },
    "2439": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6122,
        6138
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2440": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x44"
    },
    "2442": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2443": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "ADD",
      "path": "45"
    },
    "2444": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x19ED"
    },
    "2447": {
      "fn": "TennerrVotingRightsToken.distribute",
      "jump": "i",
      "offset": [
        5986,
        6201
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2448": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2449": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2451": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2452": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2455": {
      "op": "NOT"
    },
    "2456": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2457": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "DUP5",
      "path": "45"
    },
    "2458": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "SUB",
      "path": "45"
    },
    "2459": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "ADD",
      "path": "45"
    },
    "2460": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2461": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2462": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2463": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2464": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2465": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2467": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2468": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2469": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "ADD",
      "path": "45"
    },
    "2470": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2471": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2478": {
      "op": "SHL"
    },
    "2479": {
      "op": "SUB"
    },
    "2480": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "AND",
      "path": "45"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2487": {
      "op": "SHL"
    },
    "2488": {
      "op": "SUB"
    },
    "2489": {
      "op": "NOT"
    },
    "2490": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "SWAP6",
      "path": "45"
    },
    "2491": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "DUP7",
      "path": "45"
    },
    "2492": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "AND",
      "path": "45"
    },
    "2493": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "OR",
      "path": "45"
    },
    "2494": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2495": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5986,
        6201
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2496": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6215,
        6227
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2497": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6215,
        6227
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2500": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6215,
        6227
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2501": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6215,
        6227
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2502": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6215,
        6227
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2503": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6215,
        6227
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2504": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6215,
        6227
      ],
      "op": "ADD",
      "path": "45"
    },
    "2505": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6215,
        6227
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2506": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6215,
        6227
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2507": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6215,
        6227
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2508": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        6215,
        6227
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2509": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xE0"
    },
    "2511": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "DUP7",
      "path": "45"
    },
    "2512": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2513": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "SHL",
      "path": "45"
    },
    "2514": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2515": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "2516": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "AND",
      "path": "45"
    },
    "2517": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2518": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2519": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x9E4"
    },
    "2522": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2523": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2524": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x24"
    },
    "2526": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2527": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "ADD",
      "path": "45"
    },
    "2528": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1913"
    },
    "2531": {
      "fn": "TennerrVotingRightsToken.distribute",
      "jump": "i",
      "offset": [
        5935,
        6250
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2532": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2533": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2535": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2537": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2538": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2539": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2540": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "SUB",
      "path": "45"
    },
    "2541": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2542": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2544": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "DUP8",
      "path": "45"
    },
    "2545": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2546": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "EXTCODESIZE",
      "path": "45"
    },
    "2547": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2548": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2549": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2550": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x9FE"
    },
    "2553": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2554": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2556": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2557": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "REVERT",
      "path": "45"
    },
    "2558": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2559": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "POP",
      "path": "45"
    },
    "2560": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "GAS",
      "path": "45"
    },
    "2561": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "CALL",
      "path": "45"
    },
    "2562": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2563": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2564": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2565": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xA12"
    },
    "2568": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2569": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "2570": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2572": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2573": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "RETURNDATACOPY",
      "path": "45"
    },
    "2574": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "2575": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2577": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "REVERT",
      "path": "45"
    },
    "2578": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2579": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "POP",
      "path": "45"
    },
    "2580": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "POP",
      "path": "45"
    },
    "2581": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "POP",
      "path": "45"
    },
    "2582": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "POP",
      "path": "45"
    },
    "2583": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2585": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2586": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "2587": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2589": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2590": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "RETURNDATACOPY",
      "path": "45"
    },
    "2591": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "2593": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "2594": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2595": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2596": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "ADD",
      "path": "45"
    },
    "2597": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2599": {
      "op": "NOT"
    },
    "2600": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "AND",
      "path": "45"
    },
    "2601": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2602": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "ADD",
      "path": "45"
    },
    "2603": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2605": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2606": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xA3A"
    },
    "2609": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2610": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2611": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2612": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "ADD",
      "path": "45"
    },
    "2613": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2614": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1587"
    },
    "2617": {
      "fn": "TennerrVotingRightsToken.distribute",
      "jump": "i",
      "offset": [
        5935,
        6250
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2618": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2619": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5935,
        6250
      ],
      "op": "POP",
      "path": "45"
    },
    "2620": {
      "offset": [
        1367,
        1368
      ],
      "op": "POP",
      "path": "1"
    },
    "2621": {
      "fn": "TennerrVotingRightsToken.distribute",
      "offset": [
        5637,
        6257
      ],
      "op": "POP",
      "path": "45"
    },
    "2622": {
      "fn": "TennerrVotingRightsToken.distribute",
      "jump": "o",
      "offset": [
        5637,
        6257
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2623": {
      "fn": "ERC20.symbol",
      "offset": [
        2370,
        2463
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2624": {
      "fn": "ERC20.symbol",
      "offset": [
        2449,
        2456
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 24,
      "value": "0x5"
    },
    "2626": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2627": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2628": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2630": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2631": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2632": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2634": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2636": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2640": {
      "op": "NOT"
    },
    "2641": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "2644": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2646": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP9",
      "path": "4"
    },
    "2647": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "AND",
      "path": "4"
    },
    "2648": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2649": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "MUL",
      "path": "4"
    },
    "2650": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "ADD",
      "path": "4"
    },
    "2651": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2652": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "2653": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "AND",
      "path": "4"
    },
    "2654": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2655": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2656": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2657": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DIV",
      "path": "4"
    },
    "2658": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2659": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2660": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "ADD",
      "path": "4"
    },
    "2661": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2662": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2663": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DIV",
      "path": "4"
    },
    "2664": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2665": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "MUL",
      "path": "4"
    },
    "2666": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2667": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "ADD",
      "path": "4"
    },
    "2668": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2669": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "ADD",
      "path": "4"
    },
    "2670": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2671": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2672": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2673": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2674": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2675": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2676": {
      "fn": "ERC20.symbol",
      "offset": [
        2417,
        2430
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "2678": {
      "fn": "ERC20.symbol",
      "offset": [
        2417,
        2430
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2679": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2680": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2681": {
      "fn": "ERC20.symbol",
      "offset": [
        2449,
        2456
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2682": {
      "fn": "ERC20.symbol",
      "offset": [
        2449,
        2456
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2683": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2684": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "ADD",
      "path": "4"
    },
    "2685": {
      "fn": "ERC20.symbol",
      "offset": [
        2449,
        2456
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2686": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2687": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2688": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2689": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x397"
    },
    "2692": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2693": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2694": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2696": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "LT",
      "path": "4"
    },
    "2697": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x36C"
    },
    "2700": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2701": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "2704": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2705": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2706": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2707": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DIV",
      "path": "4"
    },
    "2708": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "MUL",
      "path": "4"
    },
    "2709": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2710": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2711": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2712": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2714": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "ADD",
      "path": "4"
    },
    "2715": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2716": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x397"
    },
    "2719": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2720": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2721": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6384,
        6388
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2723": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6400,
        6529
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 25,
      "value": "0x3B5"
    },
    "2726": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6409,
        6421
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAAD"
    },
    "2729": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6409,
        6419
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC07"
    },
    "2732": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6409,
        6421
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2733": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6409,
        6421
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2734": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6423,
        6430
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2735": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x490"
    },
    "2738": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6471,
        6486
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2739": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2741": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2742": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2743": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "2745": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "ADD",
      "path": "4"
    },
    "2746": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2748": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2749": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2750": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x25"
    },
    "2752": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2753": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2754": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2756": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "ADD",
      "path": "4"
    },
    "2757": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E42"
    },
    "2760": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x25"
    },
    "2762": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2763": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "2764": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6443
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2766": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2768": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6444,
        6456
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAD7"
    },
    "2771": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6444,
        6454
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC07"
    },
    "2774": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6444,
        6456
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2775": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6444,
        6456
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2782": {
      "op": "SHL"
    },
    "2783": {
      "op": "SUB"
    },
    "2784": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2785": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2786": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "AND",
      "path": "4"
    },
    "2787": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2788": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2789": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2791": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2792": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2793": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "ADD",
      "path": "4"
    },
    "2794": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2795": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2796": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2797": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2798": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2800": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2801": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2802": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "ADD",
      "path": "4"
    },
    "2803": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2805": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2806": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2807": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2808": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2809": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "DUP14",
      "path": "4"
    },
    "2810": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "AND",
      "path": "4"
    },
    "2811": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2812": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2813": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2814": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2815": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2816": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2817": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2818": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2819": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2820": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6470
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10B7"
    },
    "2823": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6432,
        6528
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2824": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2825": {
      "fn": "ERC20.transfer",
      "offset": [
        3813,
        3817
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2827": {
      "fn": "ERC20.transfer",
      "offset": [
        3829,
        3871
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 26,
      "value": "0x3B5"
    },
    "2830": {
      "fn": "ERC20.transfer",
      "offset": [
        3839,
        3851
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB15"
    },
    "2833": {
      "fn": "ERC20.transfer",
      "offset": [
        3839,
        3849
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC07"
    },
    "2836": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3839,
        3851
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2837": {
      "fn": "ERC20.transfer",
      "offset": [
        3839,
        3851
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2838": {
      "fn": "ERC20.transfer",
      "offset": [
        3853,
        3862
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2839": {
      "fn": "ERC20.transfer",
      "offset": [
        3864,
        3870
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2840": {
      "fn": "ERC20.transfer",
      "offset": [
        3829,
        3838
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE8B"
    },
    "2843": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3829,
        3871
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2844": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2851": {
      "op": "SHL"
    },
    "2852": {
      "op": "SUB"
    },
    "2853": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 27
    },
    "2854": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2855": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "AND",
      "path": "4"
    },
    "2856": {
      "fn": "ERC20.allowance",
      "offset": [
        4046,
        4053
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2858": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2859": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2860": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2861": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4083
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2863": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2865": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2866": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2867": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2868": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2870": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2871": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2872": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2873": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2874": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2875": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2876": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "AND",
      "path": "4"
    },
    "2877": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2878": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2879": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2880": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2881": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2882": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2883": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2884": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2885": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2886": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        3957,
        4106
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2887": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2888": {
      "offset": [
        1308,
        1320
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB4F"
    },
    "2891": {
      "offset": [
        1308,
        1318
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC07"
    },
    "2894": {
      "jump": "i",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2895": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2900": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2902": {
      "op": "SHL"
    },
    "2903": {
      "op": "SUB"
    },
    "2904": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "1"
    },
    "2905": {
      "offset": [
        1297,
        1304
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB60"
    },
    "2908": {
      "offset": [
        1297,
        1302
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7B4"
    },
    "2911": {
      "jump": "i",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2912": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2919": {
      "op": "SHL"
    },
    "2920": {
      "op": "SUB"
    },
    "2921": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "1"
    },
    "2922": {
      "branch": 69,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1297,
        1320
      ],
      "op": "EQ",
      "path": "1"
    },
    "2923": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB86"
    },
    "2926": {
      "branch": 69,
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2927": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2929": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2930": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2934": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2936": {
      "op": "SHL"
    },
    "2937": {
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2938": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2939": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2941": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "1"
    },
    "2942": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4D4"
    },
    "2945": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2946": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BE3"
    },
    "2949": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1289,
        1357
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2950": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2957": {
      "op": "SHL"
    },
    "2958": {
      "op": "SUB"
    },
    "2959": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2099,
        2121
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 28
    },
    "2960": {
      "branch": 70,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2099,
        2121
      ],
      "op": "AND",
      "path": "1"
    },
    "2961": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBAC"
    },
    "2964": {
      "branch": 70,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2965": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2967": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2968": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2974": {
      "op": "SHL"
    },
    "2975": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2976": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2977": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2979": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "ADD",
      "path": "1"
    },
    "2980": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4D4"
    },
    "2983": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2984": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A63"
    },
    "2987": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2091,
        2164
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2988": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2989": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 29,
      "value": "0x0"
    },
    "2991": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2992": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2993": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2995": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3002": {
      "op": "SHL"
    },
    "3003": {
      "op": "SUB"
    },
    "3004": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3005": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3006": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "AND",
      "path": "1"
    },
    "3007": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3008": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3009": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "AND",
      "path": "1"
    },
    "3010": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3011": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3044": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3045": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "LOG3",
      "path": "1"
    },
    "3046": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2233
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 30,
      "value": "0x0"
    },
    "3048": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3049": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3054": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3056": {
      "op": "SHL"
    },
    "3057": {
      "op": "SUB"
    },
    "3058": {
      "op": "NOT"
    },
    "3059": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "AND",
      "path": "1"
    },
    "3060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3066": {
      "op": "SHL"
    },
    "3067": {
      "op": "SUB"
    },
    "3068": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3069": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3070": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3071": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "AND",
      "path": "1"
    },
    "3072": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3073": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3074": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3075": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "OR",
      "path": "1"
    },
    "3076": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3077": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3078": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3079": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3080": {
      "fn": "Context._msgSender",
      "offset": [
        685,
        695
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 31
    },
    "3081": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3082": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        598,
        702
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3083": {
      "fn": "ERC20._approve",
      "offset": [
        9355,
        9695
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3088": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3090": {
      "op": "SHL"
    },
    "3091": {
      "op": "SUB"
    },
    "3092": {
      "fn": "ERC20._approve",
      "offset": [
        9456,
        9475
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 32
    },
    "3093": {
      "branch": 64,
      "fn": "ERC20._approve",
      "offset": [
        9456,
        9475
      ],
      "op": "AND",
      "path": "4"
    },
    "3094": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC31"
    },
    "3097": {
      "branch": 64,
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3098": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3100": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3101": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3105": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3107": {
      "op": "SHL"
    },
    "3108": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3109": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3110": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3112": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "ADD",
      "path": "4"
    },
    "3113": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4D4"
    },
    "3116": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3117": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C94"
    },
    "3120": {
      "fn": "ERC20._approve",
      "jump": "i",
      "offset": [
        9448,
        9516
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3121": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3126": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3128": {
      "op": "SHL"
    },
    "3129": {
      "op": "SUB"
    },
    "3130": {
      "fn": "ERC20._approve",
      "offset": [
        9534,
        9555
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 33
    },
    "3131": {
      "branch": 65,
      "fn": "ERC20._approve",
      "offset": [
        9534,
        9555
      ],
      "op": "AND",
      "path": "4"
    },
    "3132": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC57"
    },
    "3135": {
      "branch": 65,
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3136": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3138": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3139": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3143": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3145": {
      "op": "SHL"
    },
    "3146": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3147": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3148": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3150": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "ADD",
      "path": "4"
    },
    "3151": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4D4"
    },
    "3154": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3155": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1AA9"
    },
    "3158": {
      "fn": "ERC20._approve",
      "jump": "i",
      "offset": [
        9526,
        9594
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3159": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3166": {
      "op": "SHL"
    },
    "3167": {
      "op": "SUB"
    },
    "3168": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 34
    },
    "3169": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3170": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "AND",
      "path": "4"
    },
    "3171": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3173": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3174": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3175": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3176": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9616
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "3178": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3180": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3181": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3182": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3183": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3185": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3186": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3187": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3188": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "3189": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "DUP8",
      "path": "4"
    },
    "3190": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "AND",
      "path": "4"
    },
    "3191": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3192": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3193": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3194": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "3195": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3196": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3197": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3198": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3199": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3200": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3201": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3202": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9641
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3203": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9641
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3204": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9641
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3205": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "MLOAD",
      "path": "4",
      "statement": 35
    },
    "3206": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "3239": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3240": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCB2"
    },
    "3243": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3244": {
      "fn": "ERC20._approve",
      "offset": [
        9635,
        9641
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3245": {
      "fn": "ERC20._approve",
      "offset": [
        9635,
        9641
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3246": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D60"
    },
    "3249": {
      "fn": "ERC20._approve",
      "jump": "i",
      "offset": [
        9656,
        9688
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3250": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3251": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3253": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3254": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3255": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3256": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "SUB",
      "path": "4"
    },
    "3257": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3258": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "LOG3",
      "path": "4"
    },
    "3259": {
      "fn": "ERC20._approve",
      "offset": [
        9355,
        9695
      ],
      "op": "POP",
      "path": "4"
    },
    "3260": {
      "fn": "ERC20._approve",
      "offset": [
        9355,
        9695
      ],
      "op": "POP",
      "path": "4"
    },
    "3261": {
      "fn": "ERC20._approve",
      "offset": [
        9355,
        9695
      ],
      "op": "POP",
      "path": "4"
    },
    "3262": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9355,
        9695
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3263": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        3842,
        4846
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3264": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        3995,
        4029
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xCC7"
    },
    "3267": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        3995,
        4029
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x12E4"
    },
    "3270": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "jump": "i",
      "offset": [
        3995,
        4029
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3271": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        3995,
        4029
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3272": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4037
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x7"
    },
    "3274": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4037
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "3275": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3277": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3278": {
      "op": "PUSH4",
      "value": "0x1FB6491D"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3285": {
      "op": "SHL"
    },
    "3286": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3287": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3294": {
      "op": "SHL"
    },
    "3295": {
      "op": "SUB"
    },
    "3296": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4037
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3297": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4037
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3298": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4037
      ],
      "op": "AND",
      "path": "45"
    },
    "3299": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4037
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3300": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4047
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x3F6C923A"
    },
    "3305": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4047
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3306": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xCF9"
    },
    "3309": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3310": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4048,
        4051
      ],
      "op": "DUP8",
      "path": "45"
    },
    "3311": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4048,
        4051
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3312": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4048,
        4051
      ],
      "op": "DUP8",
      "path": "45"
    },
    "3313": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4048,
        4051
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3314": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "3316": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "ADD",
      "path": "45"
    },
    "3317": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x18D1"
    },
    "3320": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "jump": "i",
      "offset": [
        4032,
        4052
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3321": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3322": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3324": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3326": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3327": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3328": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3329": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "SUB",
      "path": "45"
    },
    "3330": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3331": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "DUP7",
      "path": "45"
    },
    "3332": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3333": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "EXTCODESIZE",
      "path": "45"
    },
    "3334": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3335": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3336": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3337": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xD11"
    },
    "3340": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3341": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3343": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3344": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "REVERT",
      "path": "45"
    },
    "3345": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3346": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "POP",
      "path": "45"
    },
    "3347": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "GAS",
      "path": "45"
    },
    "3348": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "STATICCALL",
      "path": "45"
    },
    "3349": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3350": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3351": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3352": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xD25"
    },
    "3355": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3356": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "3357": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3359": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3360": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "RETURNDATACOPY",
      "path": "45"
    },
    "3361": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "3362": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3364": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "REVERT",
      "path": "45"
    },
    "3365": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3366": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "POP",
      "path": "45"
    },
    "3367": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "POP",
      "path": "45"
    },
    "3368": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "POP",
      "path": "45"
    },
    "3369": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "POP",
      "path": "45"
    },
    "3370": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3372": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3373": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "3374": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3376": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3377": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "RETURNDATACOPY",
      "path": "45"
    },
    "3378": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "3380": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "3381": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3382": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3383": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "ADD",
      "path": "45"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3386": {
      "op": "NOT"
    },
    "3387": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "AND",
      "path": "45"
    },
    "3388": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3389": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "ADD",
      "path": "45"
    },
    "3390": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3392": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3393": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xD4D"
    },
    "3396": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3397": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3398": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3399": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "ADD",
      "path": "45"
    },
    "3400": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3401": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1725"
    },
    "3404": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "jump": "i",
      "offset": [
        4032,
        4052
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3405": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4032,
        4052
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3406": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4132,
        4157
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x80"
    },
    "3408": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4132,
        4157
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3409": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4132,
        4157
      ],
      "op": "ADD",
      "path": "45"
    },
    "3410": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4132,
        4157
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3411": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        3995,
        4052
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3412": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        3995,
        4052
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3413": {
      "op": "POP"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3420": {
      "op": "SHL"
    },
    "3421": {
      "op": "SUB"
    },
    "3422": {
      "op": "NOT"
    },
    "3423": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4132,
        4221
      ],
      "op": "AND",
      "path": "45"
    },
    "3424": {
      "op": "PUSH4",
      "value": "0x567A5361"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3431": {
      "op": "SHL"
    },
    "3432": {
      "branch": 60,
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4132,
        4221
      ],
      "op": "EQ",
      "path": "45"
    },
    "3433": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4128,
        4840
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3434": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4128,
        4840
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xE84"
    },
    "3437": {
      "branch": 60,
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4128,
        4840
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3438": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4472
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 36,
      "value": "0x8"
    },
    "3440": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4472
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "3441": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3443": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3444": {
      "op": "PUSH4",
      "value": "0xCD7245C5"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3451": {
      "op": "SHL"
    },
    "3452": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3453": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3454": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4237,
        4254
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3456": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4237,
        4254
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3457": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4237,
        4254
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3458": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4237,
        4254
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3459": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4237,
        4254
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3460": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4237,
        4254
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3461": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4237,
        4254
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3462": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4237,
        4254
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3463": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4237,
        4254
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3464": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4237,
        4254
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3471": {
      "op": "SHL"
    },
    "3472": {
      "op": "SUB"
    },
    "3473": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4472
      ],
      "op": "AND",
      "path": "45"
    },
    "3474": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4472
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3475": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4492
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xCD7245C5"
    },
    "3480": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4492
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3481": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xDA8"
    },
    "3484": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3485": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4493,
        4503
      ],
      "op": "DUP14",
      "path": "45"
    },
    "3486": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4493,
        4503
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3487": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4505,
        4516
      ],
      "op": "DUP12",
      "path": "45"
    },
    "3488": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4505,
        4516
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3489": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "3491": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "ADD",
      "path": "45"
    },
    "3492": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1982"
    },
    "3495": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "jump": "i",
      "offset": [
        4468,
        4517
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3496": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3497": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xA0"
    },
    "3499": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3501": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3502": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3503": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3504": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "SUB",
      "path": "45"
    },
    "3505": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3506": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "DUP7",
      "path": "45"
    },
    "3507": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3508": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "EXTCODESIZE",
      "path": "45"
    },
    "3509": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3510": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3511": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3512": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xDC0"
    },
    "3515": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3516": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3518": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3519": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "REVERT",
      "path": "45"
    },
    "3520": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3521": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "POP",
      "path": "45"
    },
    "3522": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "GAS",
      "path": "45"
    },
    "3523": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "STATICCALL",
      "path": "45"
    },
    "3524": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3525": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3526": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3527": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xDD4"
    },
    "3530": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3531": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "3532": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3534": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3535": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "RETURNDATACOPY",
      "path": "45"
    },
    "3536": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "3537": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3539": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "REVERT",
      "path": "45"
    },
    "3540": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3541": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "POP",
      "path": "45"
    },
    "3542": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "POP",
      "path": "45"
    },
    "3543": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "POP",
      "path": "45"
    },
    "3544": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "POP",
      "path": "45"
    },
    "3545": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3547": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3548": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "3549": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "3551": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "NOT",
      "path": "45"
    },
    "3552": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "3554": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3555": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "ADD",
      "path": "45"
    },
    "3556": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "AND",
      "path": "45"
    },
    "3557": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3558": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "ADD",
      "path": "45"
    },
    "3559": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3560": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3562": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3563": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "POP",
      "path": "45"
    },
    "3564": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3565": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "ADD",
      "path": "45"
    },
    "3566": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3567": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xDF8"
    },
    "3570": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3571": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3572": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1500"
    },
    "3575": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "jump": "i",
      "offset": [
        4468,
        4517
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3576": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4468,
        4517
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3577": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4391,
        4517
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "3578": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4391,
        4517
      ],
      "op": "SWAP9",
      "path": "45"
    },
    "3579": {
      "op": "POP"
    },
    "3580": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4391,
        4517
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3581": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4391,
        4517
      ],
      "op": "SWAP7",
      "path": "45"
    },
    "3582": {
      "op": "POP"
    },
    "3583": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4391,
        4517
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "3584": {
      "op": "POP"
    },
    "3585": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4391,
        4517
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "3586": {
      "op": "POP"
    },
    "3587": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4391,
        4517
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3588": {
      "op": "POP"
    },
    "3589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3595": {
      "op": "SHL"
    },
    "3596": {
      "op": "SUB"
    },
    "3597": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4589,
        4615
      ],
      "op": "DUP6",
      "path": "45",
      "statement": 37
    },
    "3598": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4589,
        4615
      ],
      "op": "AND",
      "path": "45"
    },
    "3599": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4610,
        4614
      ],
      "op": "ADDRESS",
      "path": "45"
    },
    "3600": {
      "branch": 61,
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4589,
        4615
      ],
      "op": "EQ",
      "path": "45"
    },
    "3601": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4581,
        4643
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xE2C"
    },
    "3604": {
      "branch": 61,
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4581,
        4643
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3605": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4581,
        4643
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3607": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4581,
        4643
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3608": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3612": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3614": {
      "op": "SHL"
    },
    "3615": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4581,
        4643
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3616": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4581,
        4643
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3617": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4581,
        4643
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "3619": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4581,
        4643
      ],
      "op": "ADD",
      "path": "45"
    },
    "3620": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4581,
        4643
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x4D4"
    },
    "3623": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4581,
        4643
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3624": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4581,
        4643
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1C18"
    },
    "3627": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "jump": "i",
      "offset": [
        4581,
        4643
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3628": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4581,
        4643
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3629": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4665,
        4684
      ],
      "op": "PUSH4",
      "path": "45",
      "statement": 38,
      "value": "0xFFFFFFFF"
    },
    "3634": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4665,
        4684
      ],
      "op": "DUP5",
      "path": "45"
    },
    "3635": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4665,
        4684
      ],
      "op": "AND",
      "path": "45"
    },
    "3636": {
      "branch": 62,
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4665,
        4684
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3637": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4657,
        4712
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xE50"
    },
    "3640": {
      "branch": 62,
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4657,
        4712
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3641": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4657,
        4712
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3643": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4657,
        4712
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3644": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3648": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3650": {
      "op": "SHL"
    },
    "3651": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4657,
        4712
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3652": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4657,
        4712
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3653": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4657,
        4712
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "3655": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4657,
        4712
      ],
      "op": "ADD",
      "path": "45"
    },
    "3656": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4657,
        4712
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x4D4"
    },
    "3659": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4657,
        4712
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3660": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4657,
        4712
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1C18"
    },
    "3663": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "jump": "i",
      "offset": [
        4657,
        4712
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3664": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4657,
        4712
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3665": {
      "branch": 63,
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4731,
        4739
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3666": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4727,
        4830
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3667": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4727,
        4830
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xE7E"
    },
    "3670": {
      "branch": 63,
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4727,
        4830
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3671": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4773,
        4790
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 39,
      "value": "0x60"
    },
    "3673": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4773,
        4790
      ],
      "op": "DUP7",
      "path": "45"
    },
    "3674": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4773,
        4790
      ],
      "op": "ADD",
      "path": "45"
    },
    "3675": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4773,
        4790
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3682": {
      "op": "SHL"
    },
    "3683": {
      "op": "SUB"
    },
    "3684": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4759,
        4808
      ],
      "op": "AND",
      "path": "45"
    },
    "3685": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4759,
        4808
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3687": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4759,
        4808
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3688": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4759,
        4808
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3689": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4759,
        4808
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3690": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4759,
        4772
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x9"
    },
    "3692": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4759,
        4808
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3694": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4759,
        4808
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3695": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4759,
        4808
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3697": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4759,
        4808
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3698": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4759,
        4808
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "3699": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4759,
        4815
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3700": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4759,
        4815
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3703": {
      "op": "NOT"
    },
    "3704": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4759,
        4815
      ],
      "op": "AND",
      "path": "45"
    },
    "3705": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4811,
        4815
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "3707": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4759,
        4815
      ],
      "op": "OR",
      "path": "45"
    },
    "3708": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4759,
        4815
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3709": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4759,
        4815
      ],
      "op": "SSTORE",
      "path": "45"
    },
    "3710": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4727,
        4830
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3711": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4128,
        4840
      ],
      "op": "POP",
      "path": "45"
    },
    "3712": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4128,
        4840
      ],
      "op": "POP",
      "path": "45"
    },
    "3713": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4128,
        4840
      ],
      "op": "POP",
      "path": "45"
    },
    "3714": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4128,
        4840
      ],
      "op": "POP",
      "path": "45"
    },
    "3715": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4128,
        4840
      ],
      "op": "POP",
      "path": "45"
    },
    "3716": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        4128,
        4840
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3717": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        3842,
        4846
      ],
      "op": "POP",
      "path": "45"
    },
    "3718": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        3842,
        4846
      ],
      "op": "POP",
      "path": "45"
    },
    "3719": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        3842,
        4846
      ],
      "op": "POP",
      "path": "45"
    },
    "3720": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        3842,
        4846
      ],
      "op": "POP",
      "path": "45"
    },
    "3721": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "offset": [
        3842,
        4846
      ],
      "op": "POP",
      "path": "45"
    },
    "3722": {
      "fn": "TennerrVotingRightsToken._checkSubscription",
      "jump": "o",
      "offset": [
        3842,
        4846
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3723": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6301,
        7372
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3724": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6399,
        6418
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3726": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6429,
        6452
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xE96"
    },
    "3729": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6445,
        6451
      ],
      "op": "DUP5",
      "path": "45"
    },
    "3730": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6429,
        6444
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x5B0"
    },
    "3733": {
      "fn": "TennerrVotingRightsToken._transfer",
      "jump": "i",
      "offset": [
        6429,
        6452
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3734": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6429,
        6452
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3735": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6399,
        6453
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3736": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6399,
        6453
      ],
      "op": "POP",
      "path": "45"
    },
    "3737": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6463,
        6485
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3739": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6496,
        6522
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xEA3"
    },
    "3742": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6512,
        6521
      ],
      "op": "DUP5",
      "path": "45"
    },
    "3743": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6496,
        6511
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x5B0"
    },
    "3746": {
      "fn": "TennerrVotingRightsToken._transfer",
      "jump": "i",
      "offset": [
        6496,
        6522
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3747": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6496,
        6522
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3748": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6463,
        6523
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3749": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6463,
        6523
      ],
      "op": "POP",
      "path": "45"
    },
    "3750": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6575,
        6617
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 40,
      "value": "0xEB0"
    },
    "3753": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6591,
        6597
      ],
      "op": "DUP6",
      "path": "45"
    },
    "3754": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6599,
        6608
      ],
      "op": "DUP6",
      "path": "45"
    },
    "3755": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6610,
        6616
      ],
      "op": "DUP6",
      "path": "45"
    },
    "3756": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6575,
        6590
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x11CF"
    },
    "3759": {
      "fn": "TennerrVotingRightsToken._transfer",
      "jump": "i",
      "offset": [
        6575,
        6617
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3760": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6575,
        6617
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3761": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6633
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 41,
      "value": "0x7"
    },
    "3763": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6633
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "3764": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6661,
        6665
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x8"
    },
    "3766": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6661,
        6665
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "3767": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6769,
        6779
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x6"
    },
    "3769": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6769,
        6779
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "3770": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6894,
        6906
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3772": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6894,
        6906
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3773": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6894,
        6906
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3774": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6633
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3776": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6894,
        6906
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3777": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6894,
        6906
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3778": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6894,
        6906
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3779": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6894,
        6906
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3781": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6894,
        6906
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3782": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6894,
        6906
      ],
      "op": "ADD",
      "path": "45"
    },
    "3783": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6894,
        6906
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3784": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6894,
        6906
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "3785": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6894,
        6906
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3792": {
      "op": "SHL"
    },
    "3793": {
      "op": "SUB"
    },
    "3794": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6633
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "3795": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6633
      ],
      "op": "DUP6",
      "path": "45"
    },
    "3796": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6633
      ],
      "op": "AND",
      "path": "45"
    },
    "3797": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6633
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "3798": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6647
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x39255D5B"
    },
    "3803": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6647
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "3804": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6661,
        6665
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3805": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6661,
        6665
      ],
      "op": "AND",
      "path": "45"
    },
    "3806": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6661,
        6665
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "3807": {
      "op": "PUSH4",
      "value": "0x465A56B"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "3814": {
      "op": "SHL"
    },
    "3815": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6719,
        6751
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "3816": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xF05"
    },
    "3819": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "3820": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6633
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "3823": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6769,
        6779
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3824": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6769,
        6779
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "3825": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6769,
        6779
      ],
      "op": "DIV",
      "path": "45"
    },
    "3826": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6769,
        6779
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3827": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6769,
        6779
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "3828": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6769,
        6779
      ],
      "op": "AND",
      "path": "45"
    },
    "3829": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6769,
        6779
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3830": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6633
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3831": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6823,
        6829
      ],
      "op": "DUP13",
      "path": "45"
    },
    "3832": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6823,
        6829
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3833": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6847,
        6876
      ],
      "op": "DUP12",
      "path": "45"
    },
    "3834": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6847,
        6876
      ],
      "op": "DUP12",
      "path": "45"
    },
    "3835": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6847,
        6876
      ],
      "op": "SUB",
      "path": "45"
    },
    "3836": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6847,
        6876
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3837": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x44"
    },
    "3839": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3840": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "ADD",
      "path": "45"
    },
    "3841": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x199B"
    },
    "3844": {
      "fn": "TennerrVotingRightsToken._transfer",
      "jump": "i",
      "offset": [
        6679,
        6939
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3845": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3846": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3848": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3849": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3852": {
      "op": "NOT"
    },
    "3853": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3854": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "DUP5",
      "path": "45"
    },
    "3855": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "SUB",
      "path": "45"
    },
    "3856": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "ADD",
      "path": "45"
    },
    "3857": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3858": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3859": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3860": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3861": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3862": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3864": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3865": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3866": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "ADD",
      "path": "45"
    },
    "3867": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3868": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3873": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3875": {
      "op": "SHL"
    },
    "3876": {
      "op": "SUB"
    },
    "3877": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "AND",
      "path": "45"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3884": {
      "op": "SHL"
    },
    "3885": {
      "op": "SUB"
    },
    "3886": {
      "op": "NOT"
    },
    "3887": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "SWAP6",
      "path": "45"
    },
    "3888": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "DUP7",
      "path": "45"
    },
    "3889": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "AND",
      "path": "45"
    },
    "3890": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "OR",
      "path": "45"
    },
    "3891": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3892": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6679,
        6939
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3893": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6953,
        6965
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3894": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6953,
        6965
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3897": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6953,
        6965
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3898": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6953,
        6965
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3899": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6953,
        6965
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3900": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6953,
        6965
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3901": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6953,
        6965
      ],
      "op": "ADD",
      "path": "45"
    },
    "3902": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6953,
        6965
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3903": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6953,
        6965
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3904": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6953,
        6965
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3905": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6953,
        6965
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3906": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xE0"
    },
    "3908": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "DUP7",
      "path": "45"
    },
    "3909": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3910": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "SHL",
      "path": "45"
    },
    "3911": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3912": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "3913": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "AND",
      "path": "45"
    },
    "3914": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3915": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3916": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xF59"
    },
    "3919": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "3920": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3921": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x24"
    },
    "3923": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3924": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "ADD",
      "path": "45"
    },
    "3925": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1913"
    },
    "3928": {
      "fn": "TennerrVotingRightsToken._transfer",
      "jump": "i",
      "offset": [
        6628,
        6988
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3929": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3930": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3932": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3934": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3935": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3936": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3937": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "SUB",
      "path": "45"
    },
    "3938": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3939": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3941": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "DUP8",
      "path": "45"
    },
    "3942": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3943": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "EXTCODESIZE",
      "path": "45"
    },
    "3944": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3945": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3946": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3947": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xF73"
    },
    "3950": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3951": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3953": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3954": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "REVERT",
      "path": "45"
    },
    "3955": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3956": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "POP",
      "path": "45"
    },
    "3957": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "GAS",
      "path": "45"
    },
    "3958": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "CALL",
      "path": "45"
    },
    "3959": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3960": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3961": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3962": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xF87"
    },
    "3965": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3966": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "3967": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3969": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3970": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "RETURNDATACOPY",
      "path": "45"
    },
    "3971": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "3972": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3974": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "REVERT",
      "path": "45"
    },
    "3975": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3976": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "POP",
      "path": "45"
    },
    "3977": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "POP",
      "path": "45"
    },
    "3978": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "POP",
      "path": "45"
    },
    "3979": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "POP",
      "path": "45"
    },
    "3980": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3982": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3983": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "3984": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3986": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3987": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "RETURNDATACOPY",
      "path": "45"
    },
    "3988": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "3990": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "3991": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3992": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3993": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "ADD",
      "path": "45"
    },
    "3994": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3996": {
      "op": "NOT"
    },
    "3997": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "AND",
      "path": "45"
    },
    "3998": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3999": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "ADD",
      "path": "45"
    },
    "4000": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4002": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4003": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xFAF"
    },
    "4006": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4007": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4008": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4009": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "ADD",
      "path": "45"
    },
    "4010": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4011": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1587"
    },
    "4014": {
      "fn": "TennerrVotingRightsToken._transfer",
      "jump": "i",
      "offset": [
        6628,
        6988
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4015": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6628,
        6988
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4016": {
      "op": "POP"
    },
    "4017": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7004
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 42,
      "value": "0x7"
    },
    "4019": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7004
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "4020": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7032,
        7036
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x8"
    },
    "4022": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7032,
        7036
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "4023": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7140,
        7150
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x6"
    },
    "4025": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7140,
        7150
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "4026": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7271,
        7283
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4028": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7271,
        7283
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4029": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7271,
        7283
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4030": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7004
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4032": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7271,
        7283
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4033": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7271,
        7283
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4034": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7271,
        7283
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4035": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7271,
        7283
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4037": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7271,
        7283
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4038": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7271,
        7283
      ],
      "op": "ADD",
      "path": "45"
    },
    "4039": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7271,
        7283
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4040": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7271,
        7283
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "4041": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7271,
        7283
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4048": {
      "op": "SHL"
    },
    "4049": {
      "op": "SUB"
    },
    "4050": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7004
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "4051": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7004
      ],
      "op": "DUP6",
      "path": "45"
    },
    "4052": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7004
      ],
      "op": "AND",
      "path": "45"
    },
    "4053": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7004
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "4054": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7018
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x39255D5B"
    },
    "4059": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7018
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "4060": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7032,
        7036
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4061": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7032,
        7036
      ],
      "op": "AND",
      "path": "45"
    },
    "4062": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7032,
        7036
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "4063": {
      "op": "PUSH4",
      "value": "0x465A56B"
    },
    "4068": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "4070": {
      "op": "SHL"
    },
    "4071": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7090,
        7122
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "4072": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1005"
    },
    "4075": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "4076": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7004
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "4079": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7140,
        7150
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4080": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7140,
        7150
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "4081": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7140,
        7150
      ],
      "op": "DIV",
      "path": "45"
    },
    "4082": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7140,
        7150
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4083": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7140,
        7150
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "4084": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7140,
        7150
      ],
      "op": "AND",
      "path": "45"
    },
    "4085": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7140,
        7150
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4086": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7004
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4087": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7194,
        7203
      ],
      "op": "DUP12",
      "path": "45"
    },
    "4088": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7194,
        7203
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4089": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7221,
        7253
      ],
      "op": "DUP10",
      "path": "45"
    },
    "4090": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7221,
        7253
      ],
      "op": "DUP13",
      "path": "45"
    },
    "4091": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7221,
        7253
      ],
      "op": "ADD",
      "path": "45"
    },
    "4092": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7221,
        7253
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4093": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x44"
    },
    "4095": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4096": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "ADD",
      "path": "45"
    },
    "4097": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x199B"
    },
    "4100": {
      "fn": "TennerrVotingRightsToken._transfer",
      "jump": "i",
      "offset": [
        7050,
        7316
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4101": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4102": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4104": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4105": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4106": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4108": {
      "op": "NOT"
    },
    "4109": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4110": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "DUP5",
      "path": "45"
    },
    "4111": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "SUB",
      "path": "45"
    },
    "4112": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "ADD",
      "path": "45"
    },
    "4113": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4114": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4115": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4116": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4117": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4118": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4120": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4121": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4122": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "ADD",
      "path": "45"
    },
    "4123": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4124": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4131": {
      "op": "SHL"
    },
    "4132": {
      "op": "SUB"
    },
    "4133": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "AND",
      "path": "45"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4140": {
      "op": "SHL"
    },
    "4141": {
      "op": "SUB"
    },
    "4142": {
      "op": "NOT"
    },
    "4143": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "SWAP6",
      "path": "45"
    },
    "4144": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "DUP7",
      "path": "45"
    },
    "4145": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "AND",
      "path": "45"
    },
    "4146": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "OR",
      "path": "45"
    },
    "4147": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4148": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7050,
        7316
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4149": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7330,
        7342
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4150": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7330,
        7342
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4153": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7330,
        7342
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4154": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7330,
        7342
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4155": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7330,
        7342
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4156": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7330,
        7342
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4157": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7330,
        7342
      ],
      "op": "ADD",
      "path": "45"
    },
    "4158": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7330,
        7342
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4159": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7330,
        7342
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4160": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7330,
        7342
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4161": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        7330,
        7342
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4162": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xE0"
    },
    "4164": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "DUP7",
      "path": "45"
    },
    "4165": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4166": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "SHL",
      "path": "45"
    },
    "4167": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4168": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "4169": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "AND",
      "path": "45"
    },
    "4170": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4171": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4172": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1059"
    },
    "4175": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "4176": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4177": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x24"
    },
    "4179": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4180": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "ADD",
      "path": "45"
    },
    "4181": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1913"
    },
    "4184": {
      "fn": "TennerrVotingRightsToken._transfer",
      "jump": "i",
      "offset": [
        6999,
        7365
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4185": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4186": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4188": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4190": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4191": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4192": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4193": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "SUB",
      "path": "45"
    },
    "4194": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4195": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4197": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "DUP8",
      "path": "45"
    },
    "4198": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4199": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "EXTCODESIZE",
      "path": "45"
    },
    "4200": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "4201": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4202": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "4203": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1073"
    },
    "4206": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "4207": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4209": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4210": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "REVERT",
      "path": "45"
    },
    "4211": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4212": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "POP",
      "path": "45"
    },
    "4213": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "GAS",
      "path": "45"
    },
    "4214": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "CALL",
      "path": "45"
    },
    "4215": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "4216": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4217": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "4218": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1087"
    },
    "4221": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "4222": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "4223": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4225": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4226": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "RETURNDATACOPY",
      "path": "45"
    },
    "4227": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "4228": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4230": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "REVERT",
      "path": "45"
    },
    "4231": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4232": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "POP",
      "path": "45"
    },
    "4233": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "POP",
      "path": "45"
    },
    "4234": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "POP",
      "path": "45"
    },
    "4235": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "POP",
      "path": "45"
    },
    "4236": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4238": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4239": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "4240": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4242": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4243": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "RETURNDATACOPY",
      "path": "45"
    },
    "4244": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "4246": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "4247": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4248": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4249": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "ADD",
      "path": "45"
    },
    "4250": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4252": {
      "op": "NOT"
    },
    "4253": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "AND",
      "path": "45"
    },
    "4254": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4255": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "ADD",
      "path": "45"
    },
    "4256": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4258": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4259": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x10AF"
    },
    "4262": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4263": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4264": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4265": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "ADD",
      "path": "45"
    },
    "4266": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4267": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1587"
    },
    "4270": {
      "fn": "TennerrVotingRightsToken._transfer",
      "jump": "i",
      "offset": [
        6999,
        7365
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4271": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4272": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6999,
        7365
      ],
      "op": "POP",
      "path": "45"
    },
    "4273": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6301,
        7372
      ],
      "op": "POP",
      "path": "45"
    },
    "4274": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6301,
        7372
      ],
      "op": "POP",
      "path": "45"
    },
    "4275": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6301,
        7372
      ],
      "op": "POP",
      "path": "45"
    },
    "4276": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6301,
        7372
      ],
      "op": "POP",
      "path": "45"
    },
    "4277": {
      "fn": "TennerrVotingRightsToken._transfer",
      "offset": [
        6301,
        7372
      ],
      "op": "POP",
      "path": "45"
    },
    "4278": {
      "fn": "TennerrVotingRightsToken._transfer",
      "jump": "o",
      "offset": [
        6301,
        7372
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4279": {
      "fn": "SafeMath.sub",
      "offset": [
        5432,
        5595
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4280": {
      "fn": "SafeMath.sub",
      "offset": [
        5518,
        5525
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4282": {
      "fn": "SafeMath.sub",
      "offset": [
        5553,
        5565
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 43
    },
    "4283": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4284": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4285": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "GT",
      "path": "2"
    },
    "4286": {
      "branch": 71,
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4287": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10DB"
    },
    "4290": {
      "branch": 71,
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4291": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4293": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4294": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4300": {
      "op": "SHL"
    },
    "4301": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4302": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4303": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4305": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "2"
    },
    "4306": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D4"
    },
    "4309": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4310": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4311": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1900"
    },
    "4314": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4315": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4316": {
      "op": "POP"
    },
    "4317": {
      "op": "POP"
    },
    "4318": {
      "op": "POP"
    },
    "4319": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 44
    },
    "4320": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SUB",
      "path": "2"
    },
    "4321": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4322": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        5432,
        5595
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4323": {
      "fn": "SafeMath.add",
      "offset": [
        2690,
        2865
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4324": {
      "fn": "SafeMath.add",
      "offset": [
        2748,
        2755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4326": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4327": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4328": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "ADD",
      "path": "2"
    },
    "4329": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 45
    },
    "4330": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4331": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "LT",
      "path": "2"
    },
    "4332": {
      "branch": 72,
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4333": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1108"
    },
    "4336": {
      "branch": 72,
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4337": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4339": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4340": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4344": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4346": {
      "op": "SHL"
    },
    "4347": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4348": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4349": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4351": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "2"
    },
    "4352": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D4"
    },
    "4355": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4356": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AEB"
    },
    "4359": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        2794,
        2840
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4360": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4361": {
      "fn": "SafeMath.add",
      "offset": [
        2857,
        2858
      ],
      "op": "SWAP4",
      "path": "2",
      "statement": 46
    },
    "4362": {
      "fn": "SafeMath.add",
      "offset": [
        2690,
        2865
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4363": {
      "op": "POP"
    },
    "4364": {
      "op": "POP"
    },
    "4365": {
      "op": "POP"
    },
    "4366": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        2690,
        2865
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4367": {
      "fn": "ERC20._mint",
      "offset": [
        7832,
        8202
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4374": {
      "op": "SHL"
    },
    "4375": {
      "op": "SUB"
    },
    "4376": {
      "fn": "ERC20._mint",
      "offset": [
        7915,
        7936
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 47
    },
    "4377": {
      "branch": 66,
      "fn": "ERC20._mint",
      "offset": [
        7915,
        7936
      ],
      "op": "AND",
      "path": "4"
    },
    "4378": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1135"
    },
    "4381": {
      "branch": 66,
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4382": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4384": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4385": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4389": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4391": {
      "op": "SHL"
    },
    "4392": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4393": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4394": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "4396": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "ADD",
      "path": "4"
    },
    "4397": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4D4"
    },
    "4400": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4401": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D29"
    },
    "4404": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        7907,
        7972
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4405": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4406": {
      "fn": "ERC20._mint",
      "offset": [
        7983,
        8032
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 48,
      "value": "0x1141"
    },
    "4409": {
      "fn": "ERC20._mint",
      "offset": [
        8012,
        8013
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4411": {
      "fn": "ERC20._mint",
      "offset": [
        8016,
        8023
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4412": {
      "fn": "ERC20._mint",
      "offset": [
        8025,
        8031
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4413": {
      "fn": "ERC20._mint",
      "offset": [
        7983,
        8003
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA3A"
    },
    "4416": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        7983,
        8032
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4417": {
      "fn": "ERC20._mint",
      "offset": [
        7983,
        8032
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4418": {
      "fn": "ERC20._mint",
      "offset": [
        8058,
        8070
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 49,
      "value": "0x3"
    },
    "4420": {
      "fn": "ERC20._mint",
      "offset": [
        8058,
        8070
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4421": {
      "fn": "ERC20._mint",
      "offset": [
        8058,
        8082
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x114E"
    },
    "4424": {
      "fn": "ERC20._mint",
      "offset": [
        8058,
        8082
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4425": {
      "fn": "ERC20._mint",
      "offset": [
        8075,
        8081
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4426": {
      "fn": "ERC20._mint",
      "offset": [
        8058,
        8074
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10E3"
    },
    "4429": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8058,
        8082
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4430": {
      "fn": "ERC20._mint",
      "offset": [
        8058,
        8082
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4431": {
      "fn": "ERC20._mint",
      "offset": [
        8043,
        8055
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "4433": {
      "fn": "ERC20._mint",
      "offset": [
        8043,
        8082
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "4434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4438": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4440": {
      "op": "SHL"
    },
    "4441": {
      "op": "SUB"
    },
    "4442": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 50
    },
    "4443": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "AND",
      "path": "4"
    },
    "4444": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4446": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4447": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4448": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4449": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8122
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "4451": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4453": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4454": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4456": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4457": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4458": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4459": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8143
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1174"
    },
    "4462": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8143
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4463": {
      "fn": "ERC20._mint",
      "offset": [
        8136,
        8142
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4464": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8135
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10E3"
    },
    "4467": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8113,
        8143
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4468": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8143
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4475": {
      "op": "SHL"
    },
    "4476": {
      "op": "SUB"
    },
    "4477": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4478": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "AND",
      "path": "4"
    },
    "4479": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4481": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4482": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4483": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4484": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8101
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "4486": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4488": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4489": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4491": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4492": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4493": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4494": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8143
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "4495": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8143
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4496": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8143
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "4497": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8143
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "4498": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 51
    },
    "4499": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4500": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4501": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4502": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4503": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4536": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4537": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11C3"
    },
    "4540": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4541": {
      "fn": "ERC20._mint",
      "offset": [
        8188,
        8194
      ],
      "op": "DUP6",
      "path": "4"
    },
    "4542": {
      "fn": "ERC20._mint",
      "offset": [
        8188,
        8194
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4543": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D60"
    },
    "4546": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8158,
        8195
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4547": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4548": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4550": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4551": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4552": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4553": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "SUB",
      "path": "4"
    },
    "4554": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4555": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "LOG3",
      "path": "4"
    },
    "4556": {
      "fn": "ERC20._mint",
      "offset": [
        7832,
        8202
      ],
      "op": "POP",
      "path": "4"
    },
    "4557": {
      "fn": "ERC20._mint",
      "offset": [
        7832,
        8202
      ],
      "op": "POP",
      "path": "4"
    },
    "4558": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        7832,
        8202
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4559": {
      "fn": "ERC20._transfer",
      "offset": [
        7031,
        7561
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4566": {
      "op": "SHL"
    },
    "4567": {
      "op": "SUB"
    },
    "4568": {
      "fn": "ERC20._transfer",
      "offset": [
        7136,
        7156
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 52
    },
    "4569": {
      "branch": 67,
      "fn": "ERC20._transfer",
      "offset": [
        7136,
        7156
      ],
      "op": "AND",
      "path": "4"
    },
    "4570": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11F5"
    },
    "4573": {
      "branch": 67,
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4574": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4576": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4577": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4581": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4583": {
      "op": "SHL"
    },
    "4584": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4585": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4586": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "4588": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "ADD",
      "path": "4"
    },
    "4589": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4D4"
    },
    "4592": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4593": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C4F"
    },
    "4596": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7128,
        7198
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4597": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4604": {
      "op": "SHL"
    },
    "4605": {
      "op": "SUB"
    },
    "4606": {
      "fn": "ERC20._transfer",
      "offset": [
        7216,
        7239
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 53
    },
    "4607": {
      "branch": 68,
      "fn": "ERC20._transfer",
      "offset": [
        7216,
        7239
      ],
      "op": "AND",
      "path": "4"
    },
    "4608": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x121B"
    },
    "4611": {
      "branch": 68,
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4612": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4614": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4615": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4621": {
      "op": "SHL"
    },
    "4622": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4623": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4624": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "4626": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "ADD",
      "path": "4"
    },
    "4627": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4D4"
    },
    "4630": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4631": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A20"
    },
    "4634": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7208,
        7279
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4635": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4636": {
      "fn": "ERC20._transfer",
      "offset": [
        7290,
        7337
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 54,
      "value": "0x1226"
    },
    "4639": {
      "fn": "ERC20._transfer",
      "offset": [
        7311,
        7317
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4640": {
      "fn": "ERC20._transfer",
      "offset": [
        7319,
        7328
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4641": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7336
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4642": {
      "fn": "ERC20._transfer",
      "offset": [
        7290,
        7310
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA3A"
    },
    "4645": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7290,
        7337
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4646": {
      "fn": "ERC20._transfer",
      "offset": [
        7290,
        7337
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4647": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 55,
      "value": "0x1263"
    },
    "4650": {
      "fn": "ERC20._transfer",
      "offset": [
        7390,
        7396
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4651": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4653": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4654": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4655": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "4657": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "ADD",
      "path": "4"
    },
    "4658": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4660": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4661": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4662": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x26"
    },
    "4664": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4665": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4666": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4668": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "ADD",
      "path": "4"
    },
    "4669": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DF4"
    },
    "4672": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x26"
    },
    "4674": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4675": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "4676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4682": {
      "op": "SHL"
    },
    "4683": {
      "op": "SUB"
    },
    "4684": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "DUP7",
      "path": "4"
    },
    "4685": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "AND",
      "path": "4"
    },
    "4686": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4688": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4689": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4690": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4691": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7377
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "4693": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4695": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4696": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4698": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4699": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4700": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4701": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4702": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4703": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7389
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10B7"
    },
    "4706": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7368,
        7439
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4707": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4714": {
      "op": "SHL"
    },
    "4715": {
      "op": "SUB"
    },
    "4716": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4717": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "DUP6",
      "path": "4"
    },
    "4718": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "AND",
      "path": "4"
    },
    "4719": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4721": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4722": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4723": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4724": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7357
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "4726": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4728": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4729": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4731": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4732": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4733": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4734": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7439
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "4735": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7439
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4736": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7439
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "4737": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7439
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "4738": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7492
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 56
    },
    "4739": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7492
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4740": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7492
      ],
      "op": "AND",
      "path": "4"
    },
    "4741": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7492
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4742": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7492
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4743": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7492
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4744": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7492
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4745": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7504
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1292"
    },
    "4748": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7504
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4749": {
      "fn": "ERC20._transfer",
      "offset": [
        7497,
        7503
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4750": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7496
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10E3"
    },
    "4753": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7472,
        7504
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4754": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7504
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4761": {
      "op": "SHL"
    },
    "4762": {
      "op": "SUB"
    },
    "4763": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4764": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4765": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "AND",
      "path": "4"
    },
    "4766": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4768": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4769": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4770": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4771": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7458
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "4773": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4775": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4776": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4778": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4779": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4780": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4781": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4782": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7504
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "4783": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7504
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4784": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7504
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "4785": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7504
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "4786": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 57
    },
    "4787": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4788": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4789": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "DUP6",
      "path": "4"
    },
    "4790": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "AND",
      "path": "4"
    },
    "4791": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4792": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4825": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4826": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCB2"
    },
    "4829": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4830": {
      "fn": "ERC20._transfer",
      "offset": [
        7547,
        7553
      ],
      "op": "DUP6",
      "path": "4"
    },
    "4831": {
      "fn": "ERC20._transfer",
      "offset": [
        7547,
        7553
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4832": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D60"
    },
    "4835": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7519,
        7554
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4836": {
      "op": "JUMPDEST"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4839": {
      "op": "DUP1"
    },
    "4840": {
      "op": "MLOAD"
    },
    "4841": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "4844": {
      "op": "DUP2"
    },
    "4845": {
      "op": "ADD"
    },
    "4846": {
      "op": "DUP3"
    },
    "4847": {
      "op": "MSTORE"
    },
    "4848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4850": {
      "op": "DUP1"
    },
    "4851": {
      "op": "DUP3"
    },
    "4852": {
      "op": "MSTORE"
    },
    "4853": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4855": {
      "op": "DUP3"
    },
    "4856": {
      "op": "ADD"
    },
    "4857": {
      "op": "DUP2"
    },
    "4858": {
      "op": "SWAP1"
    },
    "4859": {
      "op": "MSTORE"
    },
    "4860": {
      "op": "SWAP2"
    },
    "4861": {
      "op": "DUP2"
    },
    "4862": {
      "op": "ADD"
    },
    "4863": {
      "op": "DUP3"
    },
    "4864": {
      "op": "SWAP1"
    },
    "4865": {
      "op": "MSTORE"
    },
    "4866": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4868": {
      "op": "DUP1"
    },
    "4869": {
      "op": "DUP3"
    },
    "4870": {
      "op": "ADD"
    },
    "4871": {
      "op": "DUP4"
    },
    "4872": {
      "op": "SWAP1"
    },
    "4873": {
      "op": "MSTORE"
    },
    "4874": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4876": {
      "op": "DUP3"
    },
    "4877": {
      "op": "ADD"
    },
    "4878": {
      "op": "DUP4"
    },
    "4879": {
      "op": "SWAP1"
    },
    "4880": {
      "op": "MSTORE"
    },
    "4881": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4883": {
      "op": "DUP3"
    },
    "4884": {
      "op": "ADD"
    },
    "4885": {
      "op": "MSTORE"
    },
    "4886": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4888": {
      "op": "DUP2"
    },
    "4889": {
      "op": "ADD"
    },
    "4890": {
      "op": "DUP3"
    },
    "4891": {
      "op": "SWAP1"
    },
    "4892": {
      "op": "MSTORE"
    },
    "4893": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4895": {
      "op": "DUP2"
    },
    "4896": {
      "op": "ADD"
    },
    "4897": {
      "op": "DUP3"
    },
    "4898": {
      "op": "SWAP1"
    },
    "4899": {
      "op": "MSTORE"
    },
    "4900": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4903": {
      "op": "DUP2"
    },
    "4904": {
      "op": "ADD"
    },
    "4905": {
      "op": "DUP3"
    },
    "4906": {
      "op": "SWAP1"
    },
    "4907": {
      "op": "MSTORE"
    },
    "4908": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "4911": {
      "op": "DUP2"
    },
    "4912": {
      "op": "ADD"
    },
    "4913": {
      "op": "SWAP2"
    },
    "4914": {
      "op": "SWAP1"
    },
    "4915": {
      "op": "SWAP2"
    },
    "4916": {
      "op": "MSTORE"
    },
    "4917": {
      "op": "SWAP1"
    },
    "4918": {
      "op": "JUMP"
    },
    "4919": {
      "op": "JUMPDEST"
    },
    "4920": {
      "op": "DUP1"
    },
    "4921": {
      "op": "MLOAD"
    },
    "4922": {
      "op": "PUSH2",
      "value": "0x3B9"
    },
    "4925": {
      "op": "DUP2"
    },
    "4926": {
      "op": "PUSH2",
      "value": "0x1DDB"
    },
    "4929": {
      "op": "JUMP"
    },
    "4930": {
      "op": "JUMPDEST"
    },
    "4931": {
      "op": "DUP1"
    },
    "4932": {
      "op": "MLOAD"
    },
    "4933": {
      "op": "DUP1"
    },
    "4934": {
      "op": "ISZERO"
    },
    "4935": {
      "op": "ISZERO"
    },
    "4936": {
      "op": "DUP2"
    },
    "4937": {
      "op": "EQ"
    },
    "4938": {
      "op": "PUSH2",
      "value": "0x3B9"
    },
    "4941": {
      "op": "JUMPI"
    },
    "4942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4944": {
      "op": "DUP1"
    },
    "4945": {
      "op": "REVERT"
    },
    "4946": {
      "op": "JUMPDEST"
    },
    "4947": {
      "op": "DUP1"
    },
    "4948": {
      "op": "MLOAD"
    },
    "4949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4953": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4955": {
      "op": "SHL"
    },
    "4956": {
      "op": "SUB"
    },
    "4957": {
      "op": "NOT"
    },
    "4958": {
      "op": "DUP2"
    },
    "4959": {
      "op": "AND"
    },
    "4960": {
      "op": "DUP2"
    },
    "4961": {
      "op": "EQ"
    },
    "4962": {
      "op": "PUSH2",
      "value": "0x3B9"
    },
    "4965": {
      "op": "JUMPI"
    },
    "4966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4968": {
      "op": "DUP1"
    },
    "4969": {
      "op": "REVERT"
    },
    "4970": {
      "op": "JUMPDEST"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4973": {
      "op": "DUP1"
    },
    "4974": {
      "op": "DUP4"
    },
    "4975": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4977": {
      "op": "DUP5"
    },
    "4978": {
      "op": "ADD"
    },
    "4979": {
      "op": "SLT"
    },
    "4980": {
      "op": "PUSH2",
      "value": "0x137B"
    },
    "4983": {
      "op": "JUMPI"
    },
    "4984": {
      "op": "DUP2"
    },
    "4985": {
      "op": "DUP3"
    },
    "4986": {
      "op": "REVERT"
    },
    "4987": {
      "op": "JUMPDEST"
    },
    "4988": {
      "op": "POP"
    },
    "4989": {
      "op": "DUP2"
    },
    "4990": {
      "op": "CALLDATALOAD"
    },
    "4991": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5000": {
      "op": "DUP2"
    },
    "5001": {
      "op": "GT"
    },
    "5002": {
      "op": "ISZERO"
    },
    "5003": {
      "op": "PUSH2",
      "value": "0x1392"
    },
    "5006": {
      "op": "JUMPI"
    },
    "5007": {
      "op": "DUP2"
    },
    "5008": {
      "op": "DUP3"
    },
    "5009": {
      "op": "REVERT"
    },
    "5010": {
      "op": "JUMPDEST"
    },
    "5011": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5013": {
      "op": "DUP4"
    },
    "5014": {
      "op": "ADD"
    },
    "5015": {
      "op": "SWAP2"
    },
    "5016": {
      "op": "POP"
    },
    "5017": {
      "op": "DUP4"
    },
    "5018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5020": {
      "op": "DUP3"
    },
    "5021": {
      "op": "DUP6"
    },
    "5022": {
      "op": "ADD"
    },
    "5023": {
      "op": "ADD"
    },
    "5024": {
      "op": "GT"
    },
    "5025": {
      "op": "ISZERO"
    },
    "5026": {
      "op": "PUSH2",
      "value": "0x13AA"
    },
    "5029": {
      "op": "JUMPI"
    },
    "5030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5032": {
      "op": "DUP1"
    },
    "5033": {
      "op": "REVERT"
    },
    "5034": {
      "op": "JUMPDEST"
    },
    "5035": {
      "op": "SWAP3"
    },
    "5036": {
      "op": "POP"
    },
    "5037": {
      "op": "SWAP3"
    },
    "5038": {
      "op": "SWAP1"
    },
    "5039": {
      "op": "POP"
    },
    "5040": {
      "op": "JUMP"
    },
    "5041": {
      "op": "JUMPDEST"
    },
    "5042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5044": {
      "op": "DUP3"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5047": {
      "op": "DUP4"
    },
    "5048": {
      "op": "ADD"
    },
    "5049": {
      "op": "SLT"
    },
    "5050": {
      "op": "PUSH2",
      "value": "0x13C1"
    },
    "5053": {
      "op": "JUMPI"
    },
    "5054": {
      "op": "DUP1"
    },
    "5055": {
      "op": "DUP2"
    },
    "5056": {
      "op": "REVERT"
    },
    "5057": {
      "op": "JUMPDEST"
    },
    "5058": {
      "op": "DUP2"
    },
    "5059": {
      "op": "MLOAD"
    },
    "5060": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5069": {
      "op": "DUP2"
    },
    "5070": {
      "op": "GT"
    },
    "5071": {
      "op": "ISZERO"
    },
    "5072": {
      "op": "PUSH2",
      "value": "0x13D7"
    },
    "5075": {
      "op": "JUMPI"
    },
    "5076": {
      "op": "DUP2"
    },
    "5077": {
      "op": "DUP3"
    },
    "5078": {
      "op": "REVERT"
    },
    "5079": {
      "op": "JUMPDEST"
    },
    "5080": {
      "op": "PUSH2",
      "value": "0x13EA"
    },
    "5083": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5085": {
      "op": "DUP3"
    },
    "5086": {
      "op": "ADD"
    },
    "5087": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5089": {
      "op": "NOT"
    },
    "5090": {
      "op": "AND"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5093": {
      "op": "ADD"
    },
    "5094": {
      "op": "PUSH2",
      "value": "0x1D88"
    },
    "5097": {
      "op": "JUMP"
    },
    "5098": {
      "op": "JUMPDEST"
    },
    "5099": {
      "op": "SWAP2"
    },
    "5100": {
      "op": "POP"
    },
    "5101": {
      "op": "DUP1"
    },
    "5102": {
      "op": "DUP3"
    },
    "5103": {
      "op": "MSTORE"
    },
    "5104": {
      "op": "DUP4"
    },
    "5105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5107": {
      "op": "DUP3"
    },
    "5108": {
      "op": "DUP6"
    },
    "5109": {
      "op": "ADD"
    },
    "5110": {
      "op": "ADD"
    },
    "5111": {
      "op": "GT"
    },
    "5112": {
      "op": "ISZERO"
    },
    "5113": {
      "op": "PUSH2",
      "value": "0x1401"
    },
    "5116": {
      "op": "JUMPI"
    },
    "5117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5119": {
      "op": "DUP1"
    },
    "5120": {
      "op": "REVERT"
    },
    "5121": {
      "op": "JUMPDEST"
    },
    "5122": {
      "op": "PUSH2",
      "value": "0x1412"
    },
    "5125": {
      "op": "DUP2"
    },
    "5126": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5128": {
      "op": "DUP5"
    },
    "5129": {
      "op": "ADD"
    },
    "5130": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5132": {
      "op": "DUP7"
    },
    "5133": {
      "op": "ADD"
    },
    "5134": {
      "op": "PUSH2",
      "value": "0x1DAF"
    },
    "5137": {
      "op": "JUMP"
    },
    "5138": {
      "op": "JUMPDEST"
    },
    "5139": {
      "op": "POP"
    },
    "5140": {
      "op": "SWAP3"
    },
    "5141": {
      "op": "SWAP2"
    },
    "5142": {
      "op": "POP"
    },
    "5143": {
      "op": "POP"
    },
    "5144": {
      "op": "JUMP"
    },
    "5145": {
      "op": "JUMPDEST"
    },
    "5146": {
      "op": "DUP1"
    },
    "5147": {
      "op": "MLOAD"
    },
    "5148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5152": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5154": {
      "op": "SHL"
    },
    "5155": {
      "op": "SUB"
    },
    "5156": {
      "op": "DUP2"
    },
    "5157": {
      "op": "AND"
    },
    "5158": {
      "op": "DUP2"
    },
    "5159": {
      "op": "EQ"
    },
    "5160": {
      "op": "PUSH2",
      "value": "0x3B9"
    },
    "5163": {
      "op": "JUMPI"
    },
    "5164": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5166": {
      "op": "DUP1"
    },
    "5167": {
      "op": "REVERT"
    },
    "5168": {
      "op": "JUMPDEST"
    },
    "5169": {
      "op": "DUP1"
    },
    "5170": {
      "op": "MLOAD"
    },
    "5171": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5173": {
      "op": "DUP2"
    },
    "5174": {
      "op": "AND"
    },
    "5175": {
      "op": "DUP2"
    },
    "5176": {
      "op": "EQ"
    },
    "5177": {
      "op": "PUSH2",
      "value": "0x3B9"
    },
    "5180": {
      "op": "JUMPI"
    },
    "5181": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5183": {
      "op": "DUP1"
    },
    "5184": {
      "op": "REVERT"
    },
    "5185": {
      "op": "JUMPDEST"
    },
    "5186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5188": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5190": {
      "op": "DUP3"
    },
    "5191": {
      "op": "DUP5"
    },
    "5192": {
      "op": "SUB"
    },
    "5193": {
      "op": "SLT"
    },
    "5194": {
      "op": "ISZERO"
    },
    "5195": {
      "op": "PUSH2",
      "value": "0x1452"
    },
    "5198": {
      "op": "JUMPI"
    },
    "5199": {
      "op": "DUP1"
    },
    "5200": {
      "op": "DUP2"
    },
    "5201": {
      "op": "REVERT"
    },
    "5202": {
      "op": "JUMPDEST"
    },
    "5203": {
      "op": "DUP2"
    },
    "5204": {
      "op": "CALLDATALOAD"
    },
    "5205": {
      "op": "PUSH2",
      "value": "0x1108"
    },
    "5208": {
      "op": "DUP2"
    },
    "5209": {
      "op": "PUSH2",
      "value": "0x1DDB"
    },
    "5212": {
      "op": "JUMP"
    },
    "5213": {
      "op": "JUMPDEST"
    },
    "5214": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5216": {
      "op": "DUP1"
    },
    "5217": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5219": {
      "op": "DUP4"
    },
    "5220": {
      "op": "DUP6"
    },
    "5221": {
      "op": "SUB"
    },
    "5222": {
      "op": "SLT"
    },
    "5223": {
      "op": "ISZERO"
    },
    "5224": {
      "op": "PUSH2",
      "value": "0x146F"
    },
    "5227": {
      "op": "JUMPI"
    },
    "5228": {
      "op": "DUP1"
    },
    "5229": {
      "op": "DUP2"
    },
    "5230": {
      "op": "REVERT"
    },
    "5231": {
      "op": "JUMPDEST"
    },
    "5232": {
      "op": "DUP3"
    },
    "5233": {
      "op": "CALLDATALOAD"
    },
    "5234": {
      "op": "PUSH2",
      "value": "0x147A"
    },
    "5237": {
      "op": "DUP2"
    },
    "5238": {
      "op": "PUSH2",
      "value": "0x1DDB"
    },
    "5241": {
      "op": "JUMP"
    },
    "5242": {
      "op": "JUMPDEST"
    },
    "5243": {
      "op": "SWAP2"
    },
    "5244": {
      "op": "POP"
    },
    "5245": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5247": {
      "op": "DUP4"
    },
    "5248": {
      "op": "ADD"
    },
    "5249": {
      "op": "CALLDATALOAD"
    },
    "5250": {
      "op": "PUSH2",
      "value": "0x148A"
    },
    "5253": {
      "op": "DUP2"
    },
    "5254": {
      "op": "PUSH2",
      "value": "0x1DDB"
    },
    "5257": {
      "op": "JUMP"
    },
    "5258": {
      "op": "JUMPDEST"
    },
    "5259": {
      "op": "DUP1"
    },
    "5260": {
      "op": "SWAP2"
    },
    "5261": {
      "op": "POP"
    },
    "5262": {
      "op": "POP"
    },
    "5263": {
      "op": "SWAP3"
    },
    "5264": {
      "op": "POP"
    },
    "5265": {
      "op": "SWAP3"
    },
    "5266": {
      "op": "SWAP1"
    },
    "5267": {
      "op": "POP"
    },
    "5268": {
      "op": "JUMP"
    },
    "5269": {
      "op": "JUMPDEST"
    },
    "5270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5272": {
      "op": "DUP1"
    },
    "5273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5275": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5277": {
      "op": "DUP5"
    },
    "5278": {
      "op": "DUP7"
    },
    "5279": {
      "op": "SUB"
    },
    "5280": {
      "op": "SLT"
    },
    "5281": {
      "op": "ISZERO"
    },
    "5282": {
      "op": "PUSH2",
      "value": "0x14A9"
    },
    "5285": {
      "op": "JUMPI"
    },
    "5286": {
      "op": "DUP1"
    },
    "5287": {
      "op": "DUP2"
    },
    "5288": {
      "op": "REVERT"
    },
    "5289": {
      "op": "JUMPDEST"
    },
    "5290": {
      "op": "DUP4"
    },
    "5291": {
      "op": "CALLDATALOAD"
    },
    "5292": {
      "op": "PUSH2",
      "value": "0x14B4"
    },
    "5295": {
      "op": "DUP2"
    },
    "5296": {
      "op": "PUSH2",
      "value": "0x1DDB"
    },
    "5299": {
      "op": "JUMP"
    },
    "5300": {
      "op": "JUMPDEST"
    },
    "5301": {
      "op": "SWAP3"
    },
    "5302": {
      "op": "POP"
    },
    "5303": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5305": {
      "op": "DUP5"
    },
    "5306": {
      "op": "ADD"
    },
    "5307": {
      "op": "CALLDATALOAD"
    },
    "5308": {
      "op": "PUSH2",
      "value": "0x14C4"
    },
    "5311": {
      "op": "DUP2"
    },
    "5312": {
      "op": "PUSH2",
      "value": "0x1DDB"
    },
    "5315": {
      "op": "JUMP"
    },
    "5316": {
      "op": "JUMPDEST"
    },
    "5317": {
      "op": "SWAP3"
    },
    "5318": {
      "op": "SWAP6"
    },
    "5319": {
      "op": "SWAP3"
    },
    "5320": {
      "op": "SWAP5"
    },
    "5321": {
      "op": "POP"
    },
    "5322": {
      "op": "POP"
    },
    "5323": {
      "op": "POP"
    },
    "5324": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5326": {
      "op": "SWAP2"
    },
    "5327": {
      "op": "SWAP1"
    },
    "5328": {
      "op": "SWAP2"
    },
    "5329": {
      "op": "ADD"
    },
    "5330": {
      "op": "CALLDATALOAD"
    },
    "5331": {
      "op": "SWAP1"
    },
    "5332": {
      "op": "JUMP"
    },
    "5333": {
      "op": "JUMPDEST"
    },
    "5334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5336": {
      "op": "DUP1"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5339": {
      "op": "DUP4"
    },
    "5340": {
      "op": "DUP6"
    },
    "5341": {
      "op": "SUB"
    },
    "5342": {
      "op": "SLT"
    },
    "5343": {
      "op": "ISZERO"
    },
    "5344": {
      "op": "PUSH2",
      "value": "0x14E7"
    },
    "5347": {
      "op": "JUMPI"
    },
    "5348": {
      "op": "DUP2"
    },
    "5349": {
      "op": "DUP3"
    },
    "5350": {
      "op": "REVERT"
    },
    "5351": {
      "op": "JUMPDEST"
    },
    "5352": {
      "op": "DUP3"
    },
    "5353": {
      "op": "CALLDATALOAD"
    },
    "5354": {
      "op": "PUSH2",
      "value": "0x14F2"
    },
    "5357": {
      "op": "DUP2"
    },
    "5358": {
      "op": "PUSH2",
      "value": "0x1DDB"
    },
    "5361": {
      "op": "JUMP"
    },
    "5362": {
      "op": "JUMPDEST"
    },
    "5363": {
      "op": "SWAP5"
    },
    "5364": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5366": {
      "op": "SWAP4"
    },
    "5367": {
      "op": "SWAP1"
    },
    "5368": {
      "op": "SWAP4"
    },
    "5369": {
      "op": "ADD"
    },
    "5370": {
      "op": "CALLDATALOAD"
    },
    "5371": {
      "op": "SWAP4"
    },
    "5372": {
      "op": "POP"
    },
    "5373": {
      "op": "POP"
    },
    "5374": {
      "op": "POP"
    },
    "5375": {
      "op": "JUMP"
    },
    "5376": {
      "op": "JUMPDEST"
    },
    "5377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5379": {
      "op": "DUP1"
    },
    "5380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5382": {
      "op": "DUP1"
    },
    "5383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5387": {
      "op": "DUP7"
    },
    "5388": {
      "op": "DUP9"
    },
    "5389": {
      "op": "SUB"
    },
    "5390": {
      "op": "SLT"
    },
    "5391": {
      "op": "ISZERO"
    },
    "5392": {
      "op": "PUSH2",
      "value": "0x1517"
    },
    "5395": {
      "op": "JUMPI"
    },
    "5396": {
      "op": "DUP1"
    },
    "5397": {
      "op": "DUP2"
    },
    "5398": {
      "op": "REVERT"
    },
    "5399": {
      "op": "JUMPDEST"
    },
    "5400": {
      "op": "DUP6"
    },
    "5401": {
      "op": "MLOAD"
    },
    "5402": {
      "op": "PUSH2",
      "value": "0x1522"
    },
    "5405": {
      "op": "DUP2"
    },
    "5406": {
      "op": "PUSH2",
      "value": "0x1DDB"
    },
    "5409": {
      "op": "JUMP"
    },
    "5410": {
      "op": "JUMPDEST"
    },
    "5411": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5413": {
      "op": "DUP8"
    },
    "5414": {
      "op": "ADD"
    },
    "5415": {
      "op": "MLOAD"
    },
    "5416": {
      "op": "SWAP1"
    },
    "5417": {
      "op": "SWAP6"
    },
    "5418": {
      "op": "POP"
    },
    "5419": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "5424": {
      "op": "DUP2"
    },
    "5425": {
      "op": "AND"
    },
    "5426": {
      "op": "DUP2"
    },
    "5427": {
      "op": "EQ"
    },
    "5428": {
      "op": "PUSH2",
      "value": "0x153B"
    },
    "5431": {
      "op": "JUMPI"
    },
    "5432": {
      "op": "DUP2"
    },
    "5433": {
      "op": "DUP3"
    },
    "5434": {
      "op": "REVERT"
    },
    "5435": {
      "op": "JUMPDEST"
    },
    "5436": {
      "op": "SWAP4"
    },
    "5437": {
      "op": "POP"
    },
    "5438": {
      "op": "PUSH2",
      "value": "0x154A"
    },
    "5441": {
      "op": "DUP8"
    },
    "5442": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5444": {
      "op": "DUP9"
    },
    "5445": {
      "op": "ADD"
    },
    "5446": {
      "op": "PUSH2",
      "value": "0x1342"
    },
    "5449": {
      "op": "JUMP"
    },
    "5450": {
      "op": "JUMPDEST"
    },
    "5451": {
      "op": "SWAP3"
    },
    "5452": {
      "op": "POP"
    },
    "5453": {
      "op": "PUSH2",
      "value": "0x1559"
    },
    "5456": {
      "op": "DUP8"
    },
    "5457": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5459": {
      "op": "DUP9"
    },
    "5460": {
      "op": "ADD"
    },
    "5461": {
      "op": "PUSH2",
      "value": "0x1419"
    },
    "5464": {
      "op": "JUMP"
    },
    "5465": {
      "op": "JUMPDEST"
    },
    "5466": {
      "op": "SWAP2"
    },
    "5467": {
      "op": "POP"
    },
    "5468": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5470": {
      "op": "DUP7"
    },
    "5471": {
      "op": "ADD"
    },
    "5472": {
      "op": "MLOAD"
    },
    "5473": {
      "op": "SWAP1"
    },
    "5474": {
      "op": "POP"
    },
    "5475": {
      "op": "SWAP3"
    },
    "5476": {
      "op": "SWAP6"
    },
    "5477": {
      "op": "POP"
    },
    "5478": {
      "op": "SWAP3"
    },
    "5479": {
      "op": "SWAP6"
    },
    "5480": {
      "op": "SWAP1"
    },
    "5481": {
      "op": "SWAP4"
    },
    "5482": {
      "op": "POP"
    },
    "5483": {
      "op": "JUMP"
    },
    "5484": {
      "op": "JUMPDEST"
    },
    "5485": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5487": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5489": {
      "op": "DUP3"
    },
    "5490": {
      "op": "DUP5"
    },
    "5491": {
      "op": "SUB"
    },
    "5492": {
      "op": "SLT"
    },
    "5493": {
      "op": "ISZERO"
    },
    "5494": {
      "op": "PUSH2",
      "value": "0x157D"
    },
    "5497": {
      "op": "JUMPI"
    },
    "5498": {
      "op": "DUP1"
    },
    "5499": {
      "op": "DUP2"
    },
    "5500": {
      "op": "REVERT"
    },
    "5501": {
      "op": "JUMPDEST"
    },
    "5502": {
      "op": "PUSH2",
      "value": "0x1108"
    },
    "5505": {
      "op": "DUP4"
    },
    "5506": {
      "op": "DUP4"
    },
    "5507": {
      "op": "PUSH2",
      "value": "0x1342"
    },
    "5510": {
      "op": "JUMP"
    },
    "5511": {
      "op": "JUMPDEST"
    },
    "5512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5516": {
      "op": "DUP3"
    },
    "5517": {
      "op": "DUP5"
    },
    "5518": {
      "op": "SUB"
    },
    "5519": {
      "op": "SLT"
    },
    "5520": {
      "op": "ISZERO"
    },
    "5521": {
      "op": "PUSH2",
      "value": "0x1598"
    },
    "5524": {
      "op": "JUMPI"
    },
    "5525": {
      "op": "DUP1"
    },
    "5526": {
      "op": "DUP2"
    },
    "5527": {
      "op": "REVERT"
    },
    "5528": {
      "op": "JUMPDEST"
    },
    "5529": {
      "op": "DUP2"
    },
    "5530": {
      "op": "MLOAD"
    },
    "5531": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5540": {
      "op": "DUP2"
    },
    "5541": {
      "op": "GT"
    },
    "5542": {
      "op": "ISZERO"
    },
    "5543": {
      "op": "PUSH2",
      "value": "0x15AE"
    },
    "5546": {
      "op": "JUMPI"
    },
    "5547": {
      "op": "DUP2"
    },
    "5548": {
      "op": "DUP3"
    },
    "5549": {
      "op": "REVERT"
    },
    "5550": {
      "op": "JUMPDEST"
    },
    "5551": {
      "op": "PUSH2",
      "value": "0x15BA"
    },
    "5554": {
      "op": "DUP5"
    },
    "5555": {
      "op": "DUP3"
    },
    "5556": {
      "op": "DUP6"
    },
    "5557": {
      "op": "ADD"
    },
    "5558": {
      "op": "PUSH2",
      "value": "0x13B1"
    },
    "5561": {
      "op": "JUMP"
    },
    "5562": {
      "op": "JUMPDEST"
    },
    "5563": {
      "op": "SWAP5"
    },
    "5564": {
      "op": "SWAP4"
    },
    "5565": {
      "op": "POP"
    },
    "5566": {
      "op": "POP"
    },
    "5567": {
      "op": "POP"
    },
    "5568": {
      "op": "POP"
    },
    "5569": {
      "op": "JUMP"
    },
    "5570": {
      "op": "JUMPDEST"
    },
    "5571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5573": {
      "op": "DUP1"
    },
    "5574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5576": {
      "op": "DUP1"
    },
    "5577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5579": {
      "op": "DUP1"
    },
    "5580": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5584": {
      "op": "DUP9"
    },
    "5585": {
      "op": "DUP11"
    },
    "5586": {
      "op": "SUB"
    },
    "5587": {
      "op": "SLT"
    },
    "5588": {
      "op": "ISZERO"
    },
    "5589": {
      "op": "PUSH2",
      "value": "0x15DC"
    },
    "5592": {
      "op": "JUMPI"
    },
    "5593": {
      "op": "DUP2"
    },
    "5594": {
      "op": "DUP3"
    },
    "5595": {
      "op": "REVERT"
    },
    "5596": {
      "op": "JUMPDEST"
    },
    "5597": {
      "op": "DUP8"
    },
    "5598": {
      "op": "CALLDATALOAD"
    },
    "5599": {
      "op": "PUSH2",
      "value": "0x15E7"
    },
    "5602": {
      "op": "DUP2"
    },
    "5603": {
      "op": "PUSH2",
      "value": "0x1DDB"
    },
    "5606": {
      "op": "JUMP"
    },
    "5607": {
      "op": "JUMPDEST"
    },
    "5608": {
      "op": "SWAP7"
    },
    "5609": {
      "op": "POP"
    },
    "5610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5612": {
      "op": "DUP9"
    },
    "5613": {
      "op": "ADD"
    },
    "5614": {
      "op": "CALLDATALOAD"
    },
    "5615": {
      "op": "PUSH2",
      "value": "0x15F7"
    },
    "5618": {
      "op": "DUP2"
    },
    "5619": {
      "op": "PUSH2",
      "value": "0x1DDB"
    },
    "5622": {
      "op": "JUMP"
    },
    "5623": {
      "op": "JUMPDEST"
    },
    "5624": {
      "op": "SWAP6"
    },
    "5625": {
      "op": "POP"
    },
    "5626": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5628": {
      "op": "DUP9"
    },
    "5629": {
      "op": "ADD"
    },
    "5630": {
      "op": "CALLDATALOAD"
    },
    "5631": {
      "op": "SWAP5"
    },
    "5632": {
      "op": "POP"
    },
    "5633": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5635": {
      "op": "DUP9"
    },
    "5636": {
      "op": "ADD"
    },
    "5637": {
      "op": "CALLDATALOAD"
    },
    "5638": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5647": {
      "op": "DUP1"
    },
    "5648": {
      "op": "DUP3"
    },
    "5649": {
      "op": "GT"
    },
    "5650": {
      "op": "ISZERO"
    },
    "5651": {
      "op": "PUSH2",
      "value": "0x161A"
    },
    "5654": {
      "op": "JUMPI"
    },
    "5655": {
      "op": "DUP4"
    },
    "5656": {
      "op": "DUP5"
    },
    "5657": {
      "op": "REVERT"
    },
    "5658": {
      "op": "JUMPDEST"
    },
    "5659": {
      "op": "PUSH2",
      "value": "0x1626"
    },
    "5662": {
      "op": "DUP12"
    },
    "5663": {
      "op": "DUP4"
    },
    "5664": {
      "op": "DUP13"
    },
    "5665": {
      "op": "ADD"
    },
    "5666": {
      "op": "PUSH2",
      "value": "0x136A"
    },
    "5669": {
      "op": "JUMP"
    },
    "5670": {
      "op": "JUMPDEST"
    },
    "5671": {
      "op": "SWAP1"
    },
    "5672": {
      "op": "SWAP7"
    },
    "5673": {
      "op": "POP"
    },
    "5674": {
      "op": "SWAP5"
    },
    "5675": {
      "op": "POP"
    },
    "5676": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5678": {
      "op": "DUP11"
    },
    "5679": {
      "op": "ADD"
    },
    "5680": {
      "op": "CALLDATALOAD"
    },
    "5681": {
      "op": "SWAP2"
    },
    "5682": {
      "op": "POP"
    },
    "5683": {
      "op": "DUP1"
    },
    "5684": {
      "op": "DUP3"
    },
    "5685": {
      "op": "GT"
    },
    "5686": {
      "op": "ISZERO"
    },
    "5687": {
      "op": "PUSH2",
      "value": "0x163E"
    },
    "5690": {
      "op": "JUMPI"
    },
    "5691": {
      "op": "DUP4"
    },
    "5692": {
      "op": "DUP5"
    },
    "5693": {
      "op": "REVERT"
    },
    "5694": {
      "op": "JUMPDEST"
    },
    "5695": {
      "op": "POP"
    },
    "5696": {
      "op": "PUSH2",
      "value": "0x164B"
    },
    "5699": {
      "op": "DUP11"
    },
    "5700": {
      "op": "DUP3"
    },
    "5701": {
      "op": "DUP12"
    },
    "5702": {
      "op": "ADD"
    },
    "5703": {
      "op": "PUSH2",
      "value": "0x136A"
    },
    "5706": {
      "op": "JUMP"
    },
    "5707": {
      "op": "JUMPDEST"
    },
    "5708": {
      "op": "SWAP9"
    },
    "5709": {
      "op": "SWAP12"
    },
    "5710": {
      "op": "SWAP8"
    },
    "5711": {
      "op": "SWAP11"
    },
    "5712": {
      "op": "POP"
    },
    "5713": {
      "op": "SWAP6"
    },
    "5714": {
      "op": "SWAP9"
    },
    "5715": {
      "op": "POP"
    },
    "5716": {
      "op": "SWAP4"
    },
    "5717": {
      "op": "SWAP7"
    },
    "5718": {
      "op": "SWAP3"
    },
    "5719": {
      "op": "SWAP6"
    },
    "5720": {
      "op": "SWAP3"
    },
    "5721": {
      "op": "SWAP4"
    },
    "5722": {
      "op": "POP"
    },
    "5723": {
      "op": "POP"
    },
    "5724": {
      "op": "POP"
    },
    "5725": {
      "op": "JUMP"
    },
    "5726": {
      "op": "JUMPDEST"
    },
    "5727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5729": {
      "op": "DUP1"
    },
    "5730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5732": {
      "op": "DUP1"
    },
    "5733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5735": {
      "op": "DUP1"
    },
    "5736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5738": {
      "op": "DUP1"
    },
    "5739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5741": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5743": {
      "op": "DUP11"
    },
    "5744": {
      "op": "DUP13"
    },
    "5745": {
      "op": "SUB"
    },
    "5746": {
      "op": "SLT"
    },
    "5747": {
      "op": "ISZERO"
    },
    "5748": {
      "op": "PUSH2",
      "value": "0x167B"
    },
    "5751": {
      "op": "JUMPI"
    },
    "5752": {
      "op": "DUP3"
    },
    "5753": {
      "op": "DUP4"
    },
    "5754": {
      "op": "REVERT"
    },
    "5755": {
      "op": "JUMPDEST"
    },
    "5756": {
      "op": "DUP10"
    },
    "5757": {
      "op": "CALLDATALOAD"
    },
    "5758": {
      "op": "PUSH2",
      "value": "0x1686"
    },
    "5761": {
      "op": "DUP2"
    },
    "5762": {
      "op": "PUSH2",
      "value": "0x1DDB"
    },
    "5765": {
      "op": "JUMP"
    },
    "5766": {
      "op": "JUMPDEST"
    },
    "5767": {
      "op": "SWAP9"
    },
    "5768": {
      "op": "POP"
    },
    "5769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5771": {
      "op": "DUP11"
    },
    "5772": {
      "op": "ADD"
    },
    "5773": {
      "op": "CALLDATALOAD"
    },
    "5774": {
      "op": "PUSH2",
      "value": "0x1696"
    },
    "5777": {
      "op": "DUP2"
    },
    "5778": {
      "op": "PUSH2",
      "value": "0x1DDB"
    },
    "5781": {
      "op": "JUMP"
    },
    "5782": {
      "op": "JUMPDEST"
    },
    "5783": {
      "op": "SWAP8"
    },
    "5784": {
      "op": "POP"
    },
    "5785": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5787": {
      "op": "DUP11"
    },
    "5788": {
      "op": "ADD"
    },
    "5789": {
      "op": "CALLDATALOAD"
    },
    "5790": {
      "op": "SWAP7"
    },
    "5791": {
      "op": "POP"
    },
    "5792": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5794": {
      "op": "DUP11"
    },
    "5795": {
      "op": "ADD"
    },
    "5796": {
      "op": "CALLDATALOAD"
    },
    "5797": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5806": {
      "op": "DUP1"
    },
    "5807": {
      "op": "DUP3"
    },
    "5808": {
      "op": "GT"
    },
    "5809": {
      "op": "ISZERO"
    },
    "5810": {
      "op": "PUSH2",
      "value": "0x16B9"
    },
    "5813": {
      "op": "JUMPI"
    },
    "5814": {
      "op": "DUP5"
    },
    "5815": {
      "op": "DUP6"
    },
    "5816": {
      "op": "REVERT"
    },
    "5817": {
      "op": "JUMPDEST"
    },
    "5818": {
      "op": "PUSH2",
      "value": "0x16C5"
    },
    "5821": {
      "op": "DUP14"
    },
    "5822": {
      "op": "DUP4"
    },
    "5823": {
      "op": "DUP15"
    },
    "5824": {
      "op": "ADD"
    },
    "5825": {
      "op": "PUSH2",
      "value": "0x136A"
    },
    "5828": {
      "op": "JUMP"
    },
    "5829": {
      "op": "JUMPDEST"
    },
    "5830": {
      "op": "SWAP1"
    },
    "5831": {
      "op": "SWAP9"
    },
    "5832": {
      "op": "POP"
    },
    "5833": {
      "op": "SWAP7"
    },
    "5834": {
      "op": "POP"
    },
    "5835": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5837": {
      "op": "DUP13"
    },
    "5838": {
      "op": "ADD"
    },
    "5839": {
      "op": "CALLDATALOAD"
    },
    "5840": {
      "op": "SWAP2"
    },
    "5841": {
      "op": "POP"
    },
    "5842": {
      "op": "DUP1"
    },
    "5843": {
      "op": "DUP3"
    },
    "5844": {
      "op": "GT"
    },
    "5845": {
      "op": "ISZERO"
    },
    "5846": {
      "op": "PUSH2",
      "value": "0x16DD"
    },
    "5849": {
      "op": "JUMPI"
    },
    "5850": {
      "op": "DUP5"
    },
    "5851": {
      "op": "DUP6"
    },
    "5852": {
      "op": "REVERT"
    },
    "5853": {
      "op": "JUMPDEST"
    },
    "5854": {
      "op": "PUSH2",
      "value": "0x16E9"
    },
    "5857": {
      "op": "DUP14"
    },
    "5858": {
      "op": "DUP4"
    },
    "5859": {
      "op": "DUP15"
    },
    "5860": {
      "op": "ADD"
    },
    "5861": {
      "op": "PUSH2",
      "value": "0x136A"
    },
    "5864": {
      "op": "JUMP"
    },
    "5865": {
      "op": "JUMPDEST"
    },
    "5866": {
      "op": "SWAP1"
    },
    "5867": {
      "op": "SWAP7"
    },
    "5868": {
      "op": "POP"
    },
    "5869": {
      "op": "SWAP5"
    },
    "5870": {
      "op": "POP"
    },
    "5871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5873": {
      "op": "DUP13"
    },
    "5874": {
      "op": "ADD"
    },
    "5875": {
      "op": "CALLDATALOAD"
    },
    "5876": {
      "op": "SWAP2"
    },
    "5877": {
      "op": "POP"
    },
    "5878": {
      "op": "DUP1"
    },
    "5879": {
      "op": "DUP3"
    },
    "5880": {
      "op": "GT"
    },
    "5881": {
      "op": "ISZERO"
    },
    "5882": {
      "op": "PUSH2",
      "value": "0x1701"
    },
    "5885": {
      "op": "JUMPI"
    },
    "5886": {
      "op": "DUP4"
    },
    "5887": {
      "op": "DUP5"
    },
    "5888": {
      "op": "REVERT"
    },
    "5889": {
      "op": "JUMPDEST"
    },
    "5890": {
      "op": "POP"
    },
    "5891": {
      "op": "PUSH2",
      "value": "0x170E"
    },
    "5894": {
      "op": "DUP13"
    },
    "5895": {
      "op": "DUP3"
    },
    "5896": {
      "op": "DUP14"
    },
    "5897": {
      "op": "ADD"
    },
    "5898": {
      "op": "PUSH2",
      "value": "0x136A"
    },
    "5901": {
      "op": "JUMP"
    },
    "5902": {
      "op": "JUMPDEST"
    },
    "5903": {
      "op": "SWAP2"
    },
    "5904": {
      "op": "POP"
    },
    "5905": {
      "op": "DUP1"
    },
    "5906": {
      "op": "SWAP4"
    },
    "5907": {
      "op": "POP"
    },
    "5908": {
      "op": "POP"
    },
    "5909": {
      "op": "DUP1"
    },
    "5910": {
      "op": "SWAP2"
    },
    "5911": {
      "op": "POP"
    },
    "5912": {
      "op": "POP"
    },
    "5913": {
      "op": "SWAP3"
    },
    "5914": {
      "op": "SWAP6"
    },
    "5915": {
      "op": "SWAP9"
    },
    "5916": {
      "op": "POP"
    },
    "5917": {
      "op": "SWAP3"
    },
    "5918": {
      "op": "SWAP6"
    },
    "5919": {
      "op": "SWAP9"
    },
    "5920": {
      "op": "POP"
    },
    "5921": {
      "op": "SWAP3"
    },
    "5922": {
      "op": "SWAP6"
    },
    "5923": {
      "op": "SWAP9"
    },
    "5924": {
      "op": "JUMP"
    },
    "5925": {
      "op": "JUMPDEST"
    },
    "5926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5930": {
      "op": "DUP3"
    },
    "5931": {
      "op": "DUP5"
    },
    "5932": {
      "op": "SUB"
    },
    "5933": {
      "op": "SLT"
    },
    "5934": {
      "op": "ISZERO"
    },
    "5935": {
      "op": "PUSH2",
      "value": "0x1736"
    },
    "5938": {
      "op": "JUMPI"
    },
    "5939": {
      "op": "DUP1"
    },
    "5940": {
      "op": "DUP2"
    },
    "5941": {
      "op": "REVERT"
    },
    "5942": {
      "op": "JUMPDEST"
    },
    "5943": {
      "op": "DUP2"
    },
    "5944": {
      "op": "MLOAD"
    },
    "5945": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5954": {
      "op": "DUP1"
    },
    "5955": {
      "op": "DUP3"
    },
    "5956": {
      "op": "GT"
    },
    "5957": {
      "op": "ISZERO"
    },
    "5958": {
      "op": "PUSH2",
      "value": "0x174D"
    },
    "5961": {
      "op": "JUMPI"
    },
    "5962": {
      "op": "DUP3"
    },
    "5963": {
      "op": "DUP4"
    },
    "5964": {
      "op": "REVERT"
    },
    "5965": {
      "op": "JUMPDEST"
    },
    "5966": {
      "op": "DUP2"
    },
    "5967": {
      "op": "DUP5"
    },
    "5968": {
      "op": "ADD"
    },
    "5969": {
      "op": "SWAP2"
    },
    "5970": {
      "op": "POP"
    },
    "5971": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "5974": {
      "op": "DUP1"
    },
    "5975": {
      "op": "DUP4"
    },
    "5976": {
      "op": "DUP8"
    },
    "5977": {
      "op": "SUB"
    },
    "5978": {
      "op": "SLT"
    },
    "5979": {
      "op": "ISZERO"
    },
    "5980": {
      "op": "PUSH2",
      "value": "0x1763"
    },
    "5983": {
      "op": "JUMPI"
    },
    "5984": {
      "op": "DUP4"
    },
    "5985": {
      "op": "DUP5"
    },
    "5986": {
      "op": "REVERT"
    },
    "5987": {
      "op": "JUMPDEST"
    },
    "5988": {
      "op": "PUSH2",
      "value": "0x176C"
    },
    "5991": {
      "op": "DUP2"
    },
    "5992": {
      "op": "PUSH2",
      "value": "0x1D88"
    },
    "5995": {
      "op": "JUMP"
    },
    "5996": {
      "op": "JUMPDEST"
    },
    "5997": {
      "op": "SWAP1"
    },
    "5998": {
      "op": "POP"
    },
    "5999": {
      "op": "PUSH2",
      "value": "0x1778"
    },
    "6002": {
      "op": "DUP7"
    },
    "6003": {
      "op": "DUP5"
    },
    "6004": {
      "op": "PUSH2",
      "value": "0x1430"
    },
    "6007": {
      "op": "JUMP"
    },
    "6008": {
      "op": "JUMPDEST"
    },
    "6009": {
      "op": "DUP2"
    },
    "6010": {
      "op": "MSTORE"
    },
    "6011": {
      "op": "PUSH2",
      "value": "0x1787"
    },
    "6014": {
      "op": "DUP7"
    },
    "6015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6017": {
      "op": "DUP6"
    },
    "6018": {
      "op": "ADD"
    },
    "6019": {
      "op": "PUSH2",
      "value": "0x1430"
    },
    "6022": {
      "op": "JUMP"
    },
    "6023": {
      "op": "JUMPDEST"
    },
    "6024": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6026": {
      "op": "DUP3"
    },
    "6027": {
      "op": "ADD"
    },
    "6028": {
      "op": "MSTORE"
    },
    "6029": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6031": {
      "op": "DUP4"
    },
    "6032": {
      "op": "ADD"
    },
    "6033": {
      "op": "MLOAD"
    },
    "6034": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6036": {
      "op": "DUP3"
    },
    "6037": {
      "op": "ADD"
    },
    "6038": {
      "op": "MSTORE"
    },
    "6039": {
      "op": "PUSH2",
      "value": "0x17A3"
    },
    "6042": {
      "op": "DUP7"
    },
    "6043": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6045": {
      "op": "DUP6"
    },
    "6046": {
      "op": "ADD"
    },
    "6047": {
      "op": "PUSH2",
      "value": "0x1337"
    },
    "6050": {
      "op": "JUMP"
    },
    "6051": {
      "op": "JUMPDEST"
    },
    "6052": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6054": {
      "op": "DUP3"
    },
    "6055": {
      "op": "ADD"
    },
    "6056": {
      "op": "MSTORE"
    },
    "6057": {
      "op": "PUSH2",
      "value": "0x17B5"
    },
    "6060": {
      "op": "DUP7"
    },
    "6061": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6063": {
      "op": "DUP6"
    },
    "6064": {
      "op": "ADD"
    },
    "6065": {
      "op": "PUSH2",
      "value": "0x1352"
    },
    "6068": {
      "op": "JUMP"
    },
    "6069": {
      "op": "JUMPDEST"
    },
    "6070": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6072": {
      "op": "DUP3"
    },
    "6073": {
      "op": "ADD"
    },
    "6074": {
      "op": "MSTORE"
    },
    "6075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6077": {
      "op": "DUP4"
    },
    "6078": {
      "op": "ADD"
    },
    "6079": {
      "op": "MLOAD"
    },
    "6080": {
      "op": "DUP3"
    },
    "6081": {
      "op": "DUP2"
    },
    "6082": {
      "op": "GT"
    },
    "6083": {
      "op": "ISZERO"
    },
    "6084": {
      "op": "PUSH2",
      "value": "0x17CB"
    },
    "6087": {
      "op": "JUMPI"
    },
    "6088": {
      "op": "DUP5"
    },
    "6089": {
      "op": "DUP6"
    },
    "6090": {
      "op": "REVERT"
    },
    "6091": {
      "op": "JUMPDEST"
    },
    "6092": {
      "op": "PUSH2",
      "value": "0x17D7"
    },
    "6095": {
      "op": "DUP8"
    },
    "6096": {
      "op": "DUP3"
    },
    "6097": {
      "op": "DUP7"
    },
    "6098": {
      "op": "ADD"
    },
    "6099": {
      "op": "PUSH2",
      "value": "0x13B1"
    },
    "6102": {
      "op": "JUMP"
    },
    "6103": {
      "op": "JUMPDEST"
    },
    "6104": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6106": {
      "op": "DUP4"
    },
    "6107": {
      "op": "ADD"
    },
    "6108": {
      "op": "MSTORE"
    },
    "6109": {
      "op": "POP"
    },
    "6110": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6112": {
      "op": "DUP4"
    },
    "6113": {
      "op": "ADD"
    },
    "6114": {
      "op": "MLOAD"
    },
    "6115": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6117": {
      "op": "DUP3"
    },
    "6118": {
      "op": "ADD"
    },
    "6119": {
      "op": "MSTORE"
    },
    "6120": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6122": {
      "op": "DUP4"
    },
    "6123": {
      "op": "ADD"
    },
    "6124": {
      "op": "MLOAD"
    },
    "6125": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6127": {
      "op": "DUP3"
    },
    "6128": {
      "op": "ADD"
    },
    "6129": {
      "op": "MSTORE"
    },
    "6130": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "6133": {
      "op": "SWAP2"
    },
    "6134": {
      "op": "POP"
    },
    "6135": {
      "op": "DUP2"
    },
    "6136": {
      "op": "DUP4"
    },
    "6137": {
      "op": "ADD"
    },
    "6138": {
      "op": "MLOAD"
    },
    "6139": {
      "op": "DUP3"
    },
    "6140": {
      "op": "DUP3"
    },
    "6141": {
      "op": "ADD"
    },
    "6142": {
      "op": "MSTORE"
    },
    "6143": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "6146": {
      "op": "SWAP2"
    },
    "6147": {
      "op": "POP"
    },
    "6148": {
      "op": "PUSH2",
      "value": "0x180F"
    },
    "6151": {
      "op": "DUP7"
    },
    "6152": {
      "op": "DUP4"
    },
    "6153": {
      "op": "DUP6"
    },
    "6154": {
      "op": "ADD"
    },
    "6155": {
      "op": "PUSH2",
      "value": "0x1337"
    },
    "6158": {
      "op": "JUMP"
    },
    "6159": {
      "op": "JUMPDEST"
    },
    "6160": {
      "op": "SWAP2"
    },
    "6161": {
      "op": "DUP2"
    },
    "6162": {
      "op": "ADD"
    },
    "6163": {
      "op": "SWAP2"
    },
    "6164": {
      "op": "SWAP1"
    },
    "6165": {
      "op": "SWAP2"
    },
    "6166": {
      "op": "MSTORE"
    },
    "6167": {
      "op": "SWAP5"
    },
    "6168": {
      "op": "SWAP4"
    },
    "6169": {
      "op": "POP"
    },
    "6170": {
      "op": "POP"
    },
    "6171": {
      "op": "POP"
    },
    "6172": {
      "op": "POP"
    },
    "6173": {
      "op": "JUMP"
    },
    "6174": {
      "op": "JUMPDEST"
    },
    "6175": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6177": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6179": {
      "op": "DUP3"
    },
    "6180": {
      "op": "DUP5"
    },
    "6181": {
      "op": "SUB"
    },
    "6182": {
      "op": "SLT"
    },
    "6183": {
      "op": "ISZERO"
    },
    "6184": {
      "op": "PUSH2",
      "value": "0x182F"
    },
    "6187": {
      "op": "JUMPI"
    },
    "6188": {
      "op": "DUP1"
    },
    "6189": {
      "op": "DUP2"
    },
    "6190": {
      "op": "REVERT"
    },
    "6191": {
      "op": "JUMPDEST"
    },
    "6192": {
      "op": "POP"
    },
    "6193": {
      "op": "CALLDATALOAD"
    },
    "6194": {
      "op": "SWAP2"
    },
    "6195": {
      "op": "SWAP1"
    },
    "6196": {
      "op": "POP"
    },
    "6197": {
      "op": "JUMP"
    },
    "6198": {
      "op": "JUMPDEST"
    },
    "6199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6201": {
      "op": "DUP1"
    },
    "6202": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6204": {
      "op": "DUP4"
    },
    "6205": {
      "op": "DUP6"
    },
    "6206": {
      "op": "SUB"
    },
    "6207": {
      "op": "SLT"
    },
    "6208": {
      "op": "ISZERO"
    },
    "6209": {
      "op": "PUSH2",
      "value": "0x1848"
    },
    "6212": {
      "op": "JUMPI"
    },
    "6213": {
      "op": "DUP2"
    },
    "6214": {
      "op": "DUP3"
    },
    "6215": {
      "op": "REVERT"
    },
    "6216": {
      "op": "JUMPDEST"
    },
    "6217": {
      "op": "DUP3"
    },
    "6218": {
      "op": "MLOAD"
    },
    "6219": {
      "op": "SWAP2"
    },
    "6220": {
      "op": "POP"
    },
    "6221": {
      "op": "PUSH2",
      "value": "0x1859"
    },
    "6224": {
      "op": "DUP5"
    },
    "6225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6227": {
      "op": "DUP6"
    },
    "6228": {
      "op": "ADD"
    },
    "6229": {
      "op": "PUSH2",
      "value": "0x1419"
    },
    "6232": {
      "op": "JUMP"
    },
    "6233": {
      "op": "JUMPDEST"
    },
    "6234": {
      "op": "SWAP1"
    },
    "6235": {
      "op": "POP"
    },
    "6236": {
      "op": "SWAP3"
    },
    "6237": {
      "op": "POP"
    },
    "6238": {
      "op": "SWAP3"
    },
    "6239": {
      "op": "SWAP1"
    },
    "6240": {
      "op": "POP"
    },
    "6241": {
      "op": "JUMP"
    },
    "6242": {
      "op": "JUMPDEST"
    },
    "6243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6245": {
      "op": "DUP2"
    },
    "6246": {
      "op": "MLOAD"
    },
    "6247": {
      "op": "DUP1"
    },
    "6248": {
      "op": "DUP5"
    },
    "6249": {
      "op": "MSTORE"
    },
    "6250": {
      "op": "PUSH2",
      "value": "0x187A"
    },
    "6253": {
      "op": "DUP2"
    },
    "6254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6256": {
      "op": "DUP7"
    },
    "6257": {
      "op": "ADD"
    },
    "6258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6260": {
      "op": "DUP7"
    },
    "6261": {
      "op": "ADD"
    },
    "6262": {
      "op": "PUSH2",
      "value": "0x1DAF"
    },
    "6265": {
      "op": "JUMP"
    },
    "6266": {
      "op": "JUMPDEST"
    },
    "6267": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6269": {
      "op": "ADD"
    },
    "6270": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6272": {
      "op": "NOT"
    },
    "6273": {
      "op": "AND"
    },
    "6274": {
      "op": "SWAP3"
    },
    "6275": {
      "op": "SWAP1"
    },
    "6276": {
      "op": "SWAP3"
    },
    "6277": {
      "op": "ADD"
    },
    "6278": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6280": {
      "op": "ADD"
    },
    "6281": {
      "op": "SWAP3"
    },
    "6282": {
      "op": "SWAP2"
    },
    "6283": {
      "op": "POP"
    },
    "6284": {
      "op": "POP"
    },
    "6285": {
      "op": "JUMP"
    },
    "6286": {
      "op": "JUMPDEST"
    },
    "6287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6291": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6293": {
      "op": "SHL"
    },
    "6294": {
      "op": "SUB"
    },
    "6295": {
      "op": "SWAP2"
    },
    "6296": {
      "op": "SWAP1"
    },
    "6297": {
      "op": "SWAP2"
    },
    "6298": {
      "op": "AND"
    },
    "6299": {
      "op": "DUP2"
    },
    "6300": {
      "op": "MSTORE"
    },
    "6301": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6303": {
      "op": "ADD"
    },
    "6304": {
      "op": "SWAP1"
    },
    "6305": {
      "op": "JUMP"
    },
    "6306": {
      "op": "JUMPDEST"
    },
    "6307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6313": {
      "op": "SHL"
    },
    "6314": {
      "op": "SUB"
    },
    "6315": {
      "op": "SWAP4"
    },
    "6316": {
      "op": "DUP5"
    },
    "6317": {
      "op": "AND"
    },
    "6318": {
      "op": "DUP2"
    },
    "6319": {
      "op": "MSTORE"
    },
    "6320": {
      "op": "SWAP2"
    },
    "6321": {
      "op": "SWAP1"
    },
    "6322": {
      "op": "SWAP3"
    },
    "6323": {
      "op": "AND"
    },
    "6324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6326": {
      "op": "DUP3"
    },
    "6327": {
      "op": "ADD"
    },
    "6328": {
      "op": "MSTORE"
    },
    "6329": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6331": {
      "op": "DUP2"
    },
    "6332": {
      "op": "ADD"
    },
    "6333": {
      "op": "SWAP2"
    },
    "6334": {
      "op": "SWAP1"
    },
    "6335": {
      "op": "SWAP2"
    },
    "6336": {
      "op": "MSTORE"
    },
    "6337": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6339": {
      "op": "ADD"
    },
    "6340": {
      "op": "SWAP1"
    },
    "6341": {
      "op": "JUMP"
    },
    "6342": {
      "op": "JUMPDEST"
    },
    "6343": {
      "op": "SWAP1"
    },
    "6344": {
      "op": "ISZERO"
    },
    "6345": {
      "op": "ISZERO"
    },
    "6346": {
      "op": "DUP2"
    },
    "6347": {
      "op": "MSTORE"
    },
    "6348": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6350": {
      "op": "ADD"
    },
    "6351": {
      "op": "SWAP1"
    },
    "6352": {
      "op": "JUMP"
    },
    "6353": {
      "op": "JUMPDEST"
    },
    "6354": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6356": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6358": {
      "op": "DUP3"
    },
    "6359": {
      "op": "MSTORE"
    },
    "6360": {
      "op": "DUP3"
    },
    "6361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6363": {
      "op": "DUP4"
    },
    "6364": {
      "op": "ADD"
    },
    "6365": {
      "op": "MSTORE"
    },
    "6366": {
      "op": "DUP3"
    },
    "6367": {
      "op": "DUP5"
    },
    "6368": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6370": {
      "op": "DUP5"
    },
    "6371": {
      "op": "ADD"
    },
    "6372": {
      "op": "CALLDATACOPY"
    },
    "6373": {
      "op": "DUP2"
    },
    "6374": {
      "op": "DUP4"
    },
    "6375": {
      "op": "ADD"
    },
    "6376": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6378": {
      "op": "SWAP1"
    },
    "6379": {
      "op": "DUP2"
    },
    "6380": {
      "op": "ADD"
    },
    "6381": {
      "op": "SWAP2"
    },
    "6382": {
      "op": "SWAP1"
    },
    "6383": {
      "op": "SWAP2"
    },
    "6384": {
      "op": "MSTORE"
    },
    "6385": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6387": {
      "op": "SWAP1"
    },
    "6388": {
      "op": "SWAP3"
    },
    "6389": {
      "op": "ADD"
    },
    "6390": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6392": {
      "op": "NOT"
    },
    "6393": {
      "op": "AND"
    },
    "6394": {
      "op": "ADD"
    },
    "6395": {
      "op": "ADD"
    },
    "6396": {
      "op": "SWAP2"
    },
    "6397": {
      "op": "SWAP1"
    },
    "6398": {
      "op": "POP"
    },
    "6399": {
      "op": "JUMP"
    },
    "6400": {
      "op": "JUMPDEST"
    },
    "6401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6403": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6405": {
      "op": "DUP3"
    },
    "6406": {
      "op": "MSTORE"
    },
    "6407": {
      "op": "PUSH2",
      "value": "0x1108"
    },
    "6410": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6412": {
      "op": "DUP4"
    },
    "6413": {
      "op": "ADD"
    },
    "6414": {
      "op": "DUP5"
    },
    "6415": {
      "op": "PUSH2",
      "value": "0x1862"
    },
    "6418": {
      "op": "JUMP"
    },
    "6419": {
      "op": "JUMPDEST"
    },
    "6420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6426": {
      "op": "SHL"
    },
    "6427": {
      "op": "SUB"
    },
    "6428": {
      "op": "DUP5"
    },
    "6429": {
      "op": "AND"
    },
    "6430": {
      "op": "DUP2"
    },
    "6431": {
      "op": "MSTORE"
    },
    "6432": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6434": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6436": {
      "op": "DUP3"
    },
    "6437": {
      "op": "ADD"
    },
    "6438": {
      "op": "DUP2"
    },
    "6439": {
      "op": "SWAP1"
    },
    "6440": {
      "op": "MSTORE"
    },
    "6441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6443": {
      "op": "SWAP1"
    },
    "6444": {
      "op": "PUSH2",
      "value": "0x1937"
    },
    "6447": {
      "op": "SWAP1"
    },
    "6448": {
      "op": "DUP4"
    },
    "6449": {
      "op": "ADD"
    },
    "6450": {
      "op": "DUP6"
    },
    "6451": {
      "op": "PUSH2",
      "value": "0x1862"
    },
    "6454": {
      "op": "JUMP"
    },
    "6455": {
      "op": "JUMPDEST"
    },
    "6456": {
      "op": "DUP3"
    },
    "6457": {
      "op": "DUP2"
    },
    "6458": {
      "op": "SUB"
    },
    "6459": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6461": {
      "op": "DUP5"
    },
    "6462": {
      "op": "ADD"
    },
    "6463": {
      "op": "MSTORE"
    },
    "6464": {
      "op": "PUSH2",
      "value": "0x1949"
    },
    "6467": {
      "op": "DUP2"
    },
    "6468": {
      "op": "DUP6"
    },
    "6469": {
      "op": "PUSH2",
      "value": "0x1862"
    },
    "6472": {
      "op": "JUMP"
    },
    "6473": {
      "op": "JUMPDEST"
    },
    "6474": {
      "op": "SWAP7"
    },
    "6475": {
      "op": "SWAP6"
    },
    "6476": {
      "op": "POP"
    },
    "6477": {
      "op": "POP"
    },
    "6478": {
      "op": "POP"
    },
    "6479": {
      "op": "POP"
    },
    "6480": {
      "op": "POP"
    },
    "6481": {
      "op": "POP"
    },
    "6482": {
      "op": "JUMP"
    },
    "6483": {
      "op": "JUMPDEST"
    },
    "6484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6490": {
      "op": "SHL"
    },
    "6491": {
      "op": "SUB"
    },
    "6492": {
      "op": "SWAP5"
    },
    "6493": {
      "op": "DUP6"
    },
    "6494": {
      "op": "AND"
    },
    "6495": {
      "op": "DUP2"
    },
    "6496": {
      "op": "MSTORE"
    },
    "6497": {
      "op": "SWAP3"
    },
    "6498": {
      "op": "SWAP1"
    },
    "6499": {
      "op": "SWAP4"
    },
    "6500": {
      "op": "AND"
    },
    "6501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6503": {
      "op": "DUP4"
    },
    "6504": {
      "op": "ADD"
    },
    "6505": {
      "op": "MSTORE"
    },
    "6506": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "6511": {
      "op": "AND"
    },
    "6512": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6514": {
      "op": "DUP3"
    },
    "6515": {
      "op": "ADD"
    },
    "6516": {
      "op": "MSTORE"
    },
    "6517": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6519": {
      "op": "DUP2"
    },
    "6520": {
      "op": "ADD"
    },
    "6521": {
      "op": "SWAP2"
    },
    "6522": {
      "op": "SWAP1"
    },
    "6523": {
      "op": "SWAP2"
    },
    "6524": {
      "op": "MSTORE"
    },
    "6525": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6527": {
      "op": "ADD"
    },
    "6528": {
      "op": "SWAP1"
    },
    "6529": {
      "op": "JUMP"
    },
    "6530": {
      "op": "JUMPDEST"
    },
    "6531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6537": {
      "op": "SHL"
    },
    "6538": {
      "op": "SUB"
    },
    "6539": {
      "op": "SWAP3"
    },
    "6540": {
      "op": "SWAP1"
    },
    "6541": {
      "op": "SWAP3"
    },
    "6542": {
      "op": "AND"
    },
    "6543": {
      "op": "DUP3"
    },
    "6544": {
      "op": "MSTORE"
    },
    "6545": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6547": {
      "op": "DUP3"
    },
    "6548": {
      "op": "ADD"
    },
    "6549": {
      "op": "MSTORE"
    },
    "6550": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6552": {
      "op": "ADD"
    },
    "6553": {
      "op": "SWAP1"
    },
    "6554": {
      "op": "JUMP"
    },
    "6555": {
      "op": "JUMPDEST"
    },
    "6556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6562": {
      "op": "SHL"
    },
    "6563": {
      "op": "SUB"
    },
    "6564": {
      "op": "DUP7"
    },
    "6565": {
      "op": "DUP2"
    },
    "6566": {
      "op": "AND"
    },
    "6567": {
      "op": "DUP3"
    },
    "6568": {
      "op": "MSTORE"
    },
    "6569": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "6574": {
      "op": "DUP7"
    },
    "6575": {
      "op": "AND"
    },
    "6576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6578": {
      "op": "DUP4"
    },
    "6579": {
      "op": "ADD"
    },
    "6580": {
      "op": "MSTORE"
    },
    "6581": {
      "op": "DUP5"
    },
    "6582": {
      "op": "AND"
    },
    "6583": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6585": {
      "op": "DUP3"
    },
    "6586": {
      "op": "ADD"
    },
    "6587": {
      "op": "MSTORE"
    },
    "6588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6592": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6594": {
      "op": "SHL"
    },
    "6595": {
      "op": "SUB"
    },
    "6596": {
      "op": "DUP4"
    },
    "6597": {
      "op": "AND"
    },
    "6598": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6600": {
      "op": "DUP3"
    },
    "6601": {
      "op": "ADD"
    },
    "6602": {
      "op": "MSTORE"
    },
    "6603": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6605": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6607": {
      "op": "DUP3"
    },
    "6608": {
      "op": "ADD"
    },
    "6609": {
      "op": "DUP2"
    },
    "6610": {
      "op": "SWAP1"
    },
    "6611": {
      "op": "MSTORE"
    },
    "6612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6614": {
      "op": "SWAP1"
    },
    "6615": {
      "op": "PUSH2",
      "value": "0x19E2"
    },
    "6618": {
      "op": "SWAP1"
    },
    "6619": {
      "op": "DUP4"
    },
    "6620": {
      "op": "ADD"
    },
    "6621": {
      "op": "DUP5"
    },
    "6622": {
      "op": "PUSH2",
      "value": "0x1862"
    },
    "6625": {
      "op": "JUMP"
    },
    "6626": {
      "op": "JUMPDEST"
    },
    "6627": {
      "op": "SWAP8"
    },
    "6628": {
      "op": "SWAP7"
    },
    "6629": {
      "op": "POP"
    },
    "6630": {
      "op": "POP"
    },
    "6631": {
      "op": "POP"
    },
    "6632": {
      "op": "POP"
    },
    "6633": {
      "op": "POP"
    },
    "6634": {
      "op": "POP"
    },
    "6635": {
      "op": "POP"
    },
    "6636": {
      "op": "JUMP"
    },
    "6637": {
      "op": "JUMPDEST"
    },
    "6638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6642": {
      "op": "DUP1"
    },
    "6643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6645": {
      "op": "SHL"
    },
    "6646": {
      "op": "SUB"
    },
    "6647": {
      "op": "DUP7"
    },
    "6648": {
      "op": "AND"
    },
    "6649": {
      "op": "DUP3"
    },
    "6650": {
      "op": "MSTORE"
    },
    "6651": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "6656": {
      "op": "DUP6"
    },
    "6657": {
      "op": "AND"
    },
    "6658": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6660": {
      "op": "DUP4"
    },
    "6661": {
      "op": "ADD"
    },
    "6662": {
      "op": "MSTORE"
    },
    "6663": {
      "op": "DUP4"
    },
    "6664": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6666": {
      "op": "DUP4"
    },
    "6667": {
      "op": "ADD"
    },
    "6668": {
      "op": "MSTORE"
    },
    "6669": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6671": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6673": {
      "op": "DUP4"
    },
    "6674": {
      "op": "ADD"
    },
    "6675": {
      "op": "MSTORE"
    },
    "6676": {
      "op": "PUSH2",
      "value": "0x1949"
    },
    "6679": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6681": {
      "op": "DUP4"
    },
    "6682": {
      "op": "ADD"
    },
    "6683": {
      "op": "DUP5"
    },
    "6684": {
      "op": "PUSH2",
      "value": "0x1862"
    },
    "6687": {
      "op": "JUMP"
    },
    "6688": {
      "op": "JUMPDEST"
    },
    "6689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6691": {
      "op": "DUP1"
    },
    "6692": {
      "op": "DUP3"
    },
    "6693": {
      "op": "MSTORE"
    },
    "6694": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "6696": {
      "op": "SWAP1"
    },
    "6697": {
      "op": "DUP3"
    },
    "6698": {
      "op": "ADD"
    },
    "6699": {
      "op": "MSTORE"
    },
    "6700": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "6733": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6735": {
      "op": "DUP3"
    },
    "6736": {
      "op": "ADD"
    },
    "6737": {
      "op": "MSTORE"
    },
    "6738": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "6742": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "6744": {
      "op": "SHL"
    },
    "6745": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6747": {
      "op": "DUP3"
    },
    "6748": {
      "op": "ADD"
    },
    "6749": {
      "op": "MSTORE"
    },
    "6750": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6752": {
      "op": "ADD"
    },
    "6753": {
      "op": "SWAP1"
    },
    "6754": {
      "op": "JUMP"
    },
    "6755": {
      "op": "JUMPDEST"
    },
    "6756": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6758": {
      "op": "DUP1"
    },
    "6759": {
      "op": "DUP3"
    },
    "6760": {
      "op": "MSTORE"
    },
    "6761": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "6763": {
      "op": "SWAP1"
    },
    "6764": {
      "op": "DUP3"
    },
    "6765": {
      "op": "ADD"
    },
    "6766": {
      "op": "MSTORE"
    },
    "6767": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "6800": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6802": {
      "op": "DUP3"
    },
    "6803": {
      "op": "ADD"
    },
    "6804": {
      "op": "MSTORE"
    },
    "6805": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "6812": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "6814": {
      "op": "SHL"
    },
    "6815": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6817": {
      "op": "DUP3"
    },
    "6818": {
      "op": "ADD"
    },
    "6819": {
      "op": "MSTORE"
    },
    "6820": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6822": {
      "op": "ADD"
    },
    "6823": {
      "op": "SWAP1"
    },
    "6824": {
      "op": "JUMP"
    },
    "6825": {
      "op": "JUMPDEST"
    },
    "6826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6828": {
      "op": "DUP1"
    },
    "6829": {
      "op": "DUP3"
    },
    "6830": {
      "op": "MSTORE"
    },
    "6831": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6833": {
      "op": "SWAP1"
    },
    "6834": {
      "op": "DUP3"
    },
    "6835": {
      "op": "ADD"
    },
    "6836": {
      "op": "MSTORE"
    },
    "6837": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "6870": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6872": {
      "op": "DUP3"
    },
    "6873": {
      "op": "ADD"
    },
    "6874": {
      "op": "MSTORE"
    },
    "6875": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "6878": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6880": {
      "op": "SHL"
    },
    "6881": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6883": {
      "op": "DUP3"
    },
    "6884": {
      "op": "ADD"
    },
    "6885": {
      "op": "MSTORE"
    },
    "6886": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6888": {
      "op": "ADD"
    },
    "6889": {
      "op": "SWAP1"
    },
    "6890": {
      "op": "JUMP"
    },
    "6891": {
      "op": "JUMPDEST"
    },
    "6892": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6894": {
      "op": "DUP1"
    },
    "6895": {
      "op": "DUP3"
    },
    "6896": {
      "op": "MSTORE"
    },
    "6897": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "6899": {
      "op": "SWAP1"
    },
    "6900": {
      "op": "DUP3"
    },
    "6901": {
      "op": "ADD"
    },
    "6902": {
      "op": "MSTORE"
    },
    "6903": {
      "op": "PUSH32",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "6936": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6938": {
      "op": "DUP3"
    },
    "6939": {
      "op": "ADD"
    },
    "6940": {
      "op": "MSTORE"
    },
    "6941": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6943": {
      "op": "ADD"
    },
    "6944": {
      "op": "SWAP1"
    },
    "6945": {
      "op": "JUMP"
    },
    "6946": {
      "op": "JUMPDEST"
    },
    "6947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6949": {
      "op": "DUP1"
    },
    "6950": {
      "op": "DUP3"
    },
    "6951": {
      "op": "MSTORE"
    },
    "6952": {
      "op": "PUSH1",
      "value": "0x33"
    },
    "6954": {
      "op": "SWAP1"
    },
    "6955": {
      "op": "DUP3"
    },
    "6956": {
      "op": "ADD"
    },
    "6957": {
      "op": "MSTORE"
    },
    "6958": {
      "op": "PUSH32",
      "value": "0x556E737570706F727465642063616C6C6261636B202D20204265666F72652041"
    },
    "6991": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6993": {
      "op": "DUP3"
    },
    "6994": {
      "op": "ADD"
    },
    "6995": {
      "op": "MSTORE"
    },
    "6996": {
      "op": "PUSH19",
      "value": "0x19DC99595B595B9D0815195C9B5A5B985D1959"
    },
    "7016": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "7018": {
      "op": "SHL"
    },
    "7019": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7021": {
      "op": "DUP3"
    },
    "7022": {
      "op": "ADD"
    },
    "7023": {
      "op": "MSTORE"
    },
    "7024": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7026": {
      "op": "ADD"
    },
    "7027": {
      "op": "SWAP1"
    },
    "7028": {
      "op": "JUMP"
    },
    "7029": {
      "op": "JUMPDEST"
    },
    "7030": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7032": {
      "op": "DUP1"
    },
    "7033": {
      "op": "DUP3"
    },
    "7034": {
      "op": "MSTORE"
    },
    "7035": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "7037": {
      "op": "SWAP1"
    },
    "7038": {
      "op": "DUP3"
    },
    "7039": {
      "op": "ADD"
    },
    "7040": {
      "op": "MSTORE"
    },
    "7041": {
      "op": "PUSH32",
      "value": "0x4452543A20556E737570706F727465642061677265656D656E74000000000000"
    },
    "7074": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7076": {
      "op": "DUP3"
    },
    "7077": {
      "op": "ADD"
    },
    "7078": {
      "op": "MSTORE"
    },
    "7079": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7081": {
      "op": "ADD"
    },
    "7082": {
      "op": "SWAP1"
    },
    "7083": {
      "op": "JUMP"
    },
    "7084": {
      "op": "JUMPDEST"
    },
    "7085": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7087": {
      "op": "DUP1"
    },
    "7088": {
      "op": "DUP3"
    },
    "7089": {
      "op": "MSTORE"
    },
    "7090": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "7092": {
      "op": "SWAP1"
    },
    "7093": {
      "op": "DUP3"
    },
    "7094": {
      "op": "ADD"
    },
    "7095": {
      "op": "MSTORE"
    },
    "7096": {
      "op": "PUSH32",
      "value": "0x4452543A20556E737570706F72746564206361736820746F6B656E0000000000"
    },
    "7129": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7131": {
      "op": "DUP3"
    },
    "7132": {
      "op": "ADD"
    },
    "7133": {
      "op": "MSTORE"
    },
    "7134": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7136": {
      "op": "ADD"
    },
    "7137": {
      "op": "SWAP1"
    },
    "7138": {
      "op": "JUMP"
    },
    "7139": {
      "op": "JUMPDEST"
    },
    "7140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7142": {
      "op": "DUP1"
    },
    "7143": {
      "op": "DUP3"
    },
    "7144": {
      "op": "MSTORE"
    },
    "7145": {
      "op": "DUP2"
    },
    "7146": {
      "op": "DUP2"
    },
    "7147": {
      "op": "ADD"
    },
    "7148": {
      "op": "MSTORE"
    },
    "7149": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "7182": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7184": {
      "op": "DUP3"
    },
    "7185": {
      "op": "ADD"
    },
    "7186": {
      "op": "MSTORE"
    },
    "7187": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7189": {
      "op": "ADD"
    },
    "7190": {
      "op": "SWAP1"
    },
    "7191": {
      "op": "JUMP"
    },
    "7192": {
      "op": "JUMPDEST"
    },
    "7193": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7195": {
      "op": "DUP1"
    },
    "7196": {
      "op": "DUP3"
    },
    "7197": {
      "op": "MSTORE"
    },
    "7198": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "7200": {
      "op": "SWAP1"
    },
    "7201": {
      "op": "DUP3"
    },
    "7202": {
      "op": "ADD"
    },
    "7203": {
      "op": "MSTORE"
    },
    "7204": {
      "op": "PUSH32",
      "value": "0x4452543A207075626C6973686572206D69736D61746368000000000000000000"
    },
    "7237": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7239": {
      "op": "DUP3"
    },
    "7240": {
      "op": "ADD"
    },
    "7241": {
      "op": "MSTORE"
    },
    "7242": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7244": {
      "op": "ADD"
    },
    "7245": {
      "op": "SWAP1"
    },
    "7246": {
      "op": "JUMP"
    },
    "7247": {
      "op": "JUMPDEST"
    },
    "7248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7250": {
      "op": "DUP1"
    },
    "7251": {
      "op": "DUP3"
    },
    "7252": {
      "op": "MSTORE"
    },
    "7253": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "7255": {
      "op": "SWAP1"
    },
    "7256": {
      "op": "DUP3"
    },
    "7257": {
      "op": "ADD"
    },
    "7258": {
      "op": "MSTORE"
    },
    "7259": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "7292": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7294": {
      "op": "DUP3"
    },
    "7295": {
      "op": "ADD"
    },
    "7296": {
      "op": "MSTORE"
    },
    "7297": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "7303": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "7305": {
      "op": "SHL"
    },
    "7306": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7308": {
      "op": "DUP3"
    },
    "7309": {
      "op": "ADD"
    },
    "7310": {
      "op": "MSTORE"
    },
    "7311": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7313": {
      "op": "ADD"
    },
    "7314": {
      "op": "SWAP1"
    },
    "7315": {
      "op": "JUMP"
    },
    "7316": {
      "op": "JUMPDEST"
    },
    "7317": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7319": {
      "op": "DUP1"
    },
    "7320": {
      "op": "DUP3"
    },
    "7321": {
      "op": "MSTORE"
    },
    "7322": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7324": {
      "op": "SWAP1"
    },
    "7325": {
      "op": "DUP3"
    },
    "7326": {
      "op": "ADD"
    },
    "7327": {
      "op": "MSTORE"
    },
    "7328": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "7361": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7363": {
      "op": "DUP3"
    },
    "7364": {
      "op": "ADD"
    },
    "7365": {
      "op": "MSTORE"
    },
    "7366": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "7371": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7373": {
      "op": "SHL"
    },
    "7374": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7376": {
      "op": "DUP3"
    },
    "7377": {
      "op": "ADD"
    },
    "7378": {
      "op": "MSTORE"
    },
    "7379": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7381": {
      "op": "ADD"
    },
    "7382": {
      "op": "SWAP1"
    },
    "7383": {
      "op": "JUMP"
    },
    "7384": {
      "op": "JUMPDEST"
    },
    "7385": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7387": {
      "op": "DUP1"
    },
    "7388": {
      "op": "DUP3"
    },
    "7389": {
      "op": "MSTORE"
    },
    "7390": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "7392": {
      "op": "SWAP1"
    },
    "7393": {
      "op": "DUP3"
    },
    "7394": {
      "op": "ADD"
    },
    "7395": {
      "op": "MSTORE"
    },
    "7396": {
      "op": "PUSH32",
      "value": "0x556E737570706F727465642063616C6C6261636B202D20416674657220416772"
    },
    "7429": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7431": {
      "op": "DUP3"
    },
    "7432": {
      "op": "ADD"
    },
    "7433": {
      "op": "MSTORE"
    },
    "7434": {
      "op": "PUSH17",
      "value": "0x19595B595B9D0815195C9B5A5B985D1959"
    },
    "7452": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "7454": {
      "op": "SHL"
    },
    "7455": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7457": {
      "op": "DUP3"
    },
    "7458": {
      "op": "ADD"
    },
    "7459": {
      "op": "MSTORE"
    },
    "7460": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7462": {
      "op": "ADD"
    },
    "7463": {
      "op": "SWAP1"
    },
    "7464": {
      "op": "JUMP"
    },
    "7465": {
      "op": "JUMPDEST"
    },
    "7466": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7468": {
      "op": "DUP1"
    },
    "7469": {
      "op": "DUP3"
    },
    "7470": {
      "op": "MSTORE"
    },
    "7471": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7473": {
      "op": "SWAP1"
    },
    "7474": {
      "op": "DUP3"
    },
    "7475": {
      "op": "ADD"
    },
    "7476": {
      "op": "MSTORE"
    },
    "7477": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "7510": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7512": {
      "op": "DUP3"
    },
    "7513": {
      "op": "ADD"
    },
    "7514": {
      "op": "MSTORE"
    },
    "7515": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7517": {
      "op": "ADD"
    },
    "7518": {
      "op": "SWAP1"
    },
    "7519": {
      "op": "JUMP"
    },
    "7520": {
      "op": "JUMPDEST"
    },
    "7521": {
      "op": "SWAP1"
    },
    "7522": {
      "op": "DUP2"
    },
    "7523": {
      "op": "MSTORE"
    },
    "7524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7526": {
      "op": "ADD"
    },
    "7527": {
      "op": "SWAP1"
    },
    "7528": {
      "op": "JUMP"
    },
    "7529": {
      "op": "JUMPDEST"
    },
    "7530": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "7535": {
      "op": "SWAP2"
    },
    "7536": {
      "op": "SWAP1"
    },
    "7537": {
      "op": "SWAP2"
    },
    "7538": {
      "op": "AND"
    },
    "7539": {
      "op": "DUP2"
    },
    "7540": {
      "op": "MSTORE"
    },
    "7541": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7543": {
      "op": "ADD"
    },
    "7544": {
      "op": "SWAP1"
    },
    "7545": {
      "op": "JUMP"
    },
    "7546": {
      "op": "JUMPDEST"
    },
    "7547": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7549": {
      "op": "SWAP2"
    },
    "7550": {
      "op": "SWAP1"
    },
    "7551": {
      "op": "SWAP2"
    },
    "7552": {
      "op": "AND"
    },
    "7553": {
      "op": "DUP2"
    },
    "7554": {
      "op": "MSTORE"
    },
    "7555": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7557": {
      "op": "ADD"
    },
    "7558": {
      "op": "SWAP1"
    },
    "7559": {
      "op": "JUMP"
    },
    "7560": {
      "op": "JUMPDEST"
    },
    "7561": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7563": {
      "op": "MLOAD"
    },
    "7564": {
      "op": "DUP2"
    },
    "7565": {
      "op": "DUP2"
    },
    "7566": {
      "op": "ADD"
    },
    "7567": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7576": {
      "op": "DUP2"
    },
    "7577": {
      "op": "GT"
    },
    "7578": {
      "op": "DUP3"
    },
    "7579": {
      "op": "DUP3"
    },
    "7580": {
      "op": "LT"
    },
    "7581": {
      "op": "OR"
    },
    "7582": {
      "op": "ISZERO"
    },
    "7583": {
      "op": "PUSH2",
      "value": "0x1DA7"
    },
    "7586": {
      "op": "JUMPI"
    },
    "7587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7589": {
      "op": "DUP1"
    },
    "7590": {
      "op": "REVERT"
    },
    "7591": {
      "op": "JUMPDEST"
    },
    "7592": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7594": {
      "op": "MSTORE"
    },
    "7595": {
      "op": "SWAP2"
    },
    "7596": {
      "op": "SWAP1"
    },
    "7597": {
      "op": "POP"
    },
    "7598": {
      "op": "JUMP"
    },
    "7599": {
      "op": "JUMPDEST"
    },
    "7600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7602": {
      "op": "JUMPDEST"
    },
    "7603": {
      "op": "DUP4"
    },
    "7604": {
      "op": "DUP2"
    },
    "7605": {
      "op": "LT"
    },
    "7606": {
      "op": "ISZERO"
    },
    "7607": {
      "op": "PUSH2",
      "value": "0x1DCA"
    },
    "7610": {
      "op": "JUMPI"
    },
    "7611": {
      "op": "DUP2"
    },
    "7612": {
      "op": "DUP2"
    },
    "7613": {
      "op": "ADD"
    },
    "7614": {
      "op": "MLOAD"
    },
    "7615": {
      "op": "DUP4"
    },
    "7616": {
      "op": "DUP3"
    },
    "7617": {
      "op": "ADD"
    },
    "7618": {
      "op": "MSTORE"
    },
    "7619": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7621": {
      "op": "ADD"
    },
    "7622": {
      "op": "PUSH2",
      "value": "0x1DB2"
    },
    "7625": {
      "op": "JUMP"
    },
    "7626": {
      "op": "JUMPDEST"
    },
    "7627": {
      "op": "DUP4"
    },
    "7628": {
      "op": "DUP2"
    },
    "7629": {
      "op": "GT"
    },
    "7630": {
      "op": "ISZERO"
    },
    "7631": {
      "op": "PUSH2",
      "value": "0x7A9"
    },
    "7634": {
      "op": "JUMPI"
    },
    "7635": {
      "op": "POP"
    },
    "7636": {
      "op": "POP"
    },
    "7637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7639": {
      "op": "SWAP2"
    },
    "7640": {
      "op": "ADD"
    },
    "7641": {
      "op": "MSTORE"
    },
    "7642": {
      "op": "JUMP"
    },
    "7643": {
      "op": "JUMPDEST"
    },
    "7644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7650": {
      "op": "SHL"
    },
    "7651": {
      "op": "SUB"
    },
    "7652": {
      "op": "DUP2"
    },
    "7653": {
      "op": "AND"
    },
    "7654": {
      "op": "DUP2"
    },
    "7655": {
      "op": "EQ"
    },
    "7656": {
      "op": "PUSH2",
      "value": "0x1DF0"
    },
    "7659": {
      "op": "JUMPI"
    },
    "7660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7662": {
      "op": "DUP1"
    },
    "7663": {
      "op": "REVERT"
    },
    "7664": {
      "op": "JUMPDEST"
    },
    "7665": {
      "op": "POP"
    },
    "7666": {
      "op": "JUMP"
    }
  },
  "sha1": "e5b419e3f46135477eb9f73322e4f7ab01bff696",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.6;\npragma experimental ABIEncoderV2;\n\n\nimport {\n    ISuperfluid,\n    ISuperToken,\n    SuperAppBase,\n    SuperAppDefinitions\n} from \"@superfluid-finance/ethereum-contracts/contracts/apps/SuperAppBase.sol\";\nimport {\n    IInstantDistributionAgreementV1\n} from \"@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol\";\n\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport { ERC20 } from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n\n/**\n * The dividends rights token show cases two use cases\n * 1. Use Instant distribution agreement to distribute tokens to token holders.\n * 2. Use SuperApp framework to update `isSubscribing` when new subscription is approved by token holder.\n */\ncontract TennerrVotingRightsToken is\n    Ownable,\n    ERC20,\n    SuperAppBase\n{\n\n    uint32 public constant INDEX_ID = 0;\n\n    ISuperToken private _cashToken;\n    ISuperfluid private _host;\n    IInstantDistributionAgreementV1 private _ida;\n\n    // use callbacks to track approved subscriptions\n    mapping (address => bool) public isSubscribing;\n\n    constructor(\n        string memory name,\n        string memory symbol,\n        ISuperToken cashToken,\n        ISuperfluid host,\n        IInstantDistributionAgreementV1 ida)\n        ERC20(name, symbol)\n    {\n        _cashToken = cashToken;\n        _host = host;\n        _ida = ida;\n\n        uint256 configWord =\n            SuperAppDefinitions.APP_LEVEL_FINAL |\n            SuperAppDefinitions.BEFORE_AGREEMENT_TERMINATED_NOOP |\n            SuperAppDefinitions.AFTER_AGREEMENT_TERMINATED_NOOP;\n\n        _host.registerApp(configWord);\n\n        _host.callAgreement(\n            _ida,\n            abi.encodeWithSelector(\n                _ida.createIndex.selector,\n                _cashToken,\n                INDEX_ID,\n                new bytes(0) // placeholder ctx\n            ),\n            new bytes(0) // user data\n        );\n\n        transferOwnership(msg.sender);\n        _setupDecimals(0); // no decimals\n    }\n\n    function beforeAgreementCreated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 /* agreementId */,\n        bytes calldata /*agreementData*/,\n        bytes calldata /*ctx*/\n    )\n        external view override\n        returns (bytes memory data)\n    {\n        require(superToken == _cashToken, \"DRT: Unsupported cash token\");\n        require(agreementClass == address(_ida), \"DRT: Unsupported agreement\");\n        return new bytes(0);\n    }\n\n    function afterAgreementCreated(\n        ISuperToken superToken,\n        address /* agreementClass */,\n        bytes32 agreementId,\n        bytes calldata /*agreementData*/,\n        bytes calldata /*cbdata*/,\n        bytes calldata ctx\n    )\n        external override\n        returns(bytes memory newCtx)\n    {\n        _checkSubscription(superToken, ctx, agreementId);\n        newCtx = ctx;\n    }\n\n    function beforeAgreementUpdated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 /* agreementId */,\n        bytes calldata /*agreementData*/,\n        bytes calldata /*ctx*/\n    )\n        external view override\n        returns (bytes memory data)\n    {\n        require(superToken == _cashToken, \"DRT: Unsupported cash token\");\n        require(agreementClass == address(_ida), \"DRT: Unsupported agreement\");\n        return new bytes(0);\n    }\n\n    function afterAgreementUpdated(\n        ISuperToken superToken,\n        address /* agreementClass */,\n        bytes32 agreementId,\n        bytes calldata /*agreementData*/,\n        bytes calldata /*cbdata*/,\n        bytes calldata ctx\n    )\n        external override\n        returns(bytes memory newCtx)\n    {\n        _checkSubscription(superToken, ctx, agreementId);\n        newCtx = ctx;\n    }\n\n    function _checkSubscription(\n        ISuperToken superToken,\n        bytes calldata ctx,\n        bytes32 agreementId\n    )\n        private\n    {\n        ISuperfluid.Context memory context = _host.decodeCtx(ctx);\n        // only interested in the subscription approval callbacks\n        if (context.agreementSelector == IInstantDistributionAgreementV1.approveSubscription.selector) {\n            address publisher;\n            uint32 indexId;\n            bool approved;\n            uint128 units;\n            uint256 pendingDistribution;\n            (publisher, indexId, approved, units, pendingDistribution) =\n                _ida.getSubscriptionByID(superToken, agreementId);\n\n            // sanity checks for testing purpose\n            require(publisher == address(this), \"DRT: publisher mismatch\");\n            require(indexId == INDEX_ID, \"DRT: publisher mismatch\");\n\n            if (approved) {\n                isSubscribing[context.msgSender /* subscriber */] = true;\n            }\n        }\n    }\n\n    /// @dev Issue new `amount` of giths to `beneficiary`\n    function issue(address beneficiary, uint256 amount) external onlyOwner {\n        // then adjust beneficiary subscription units\n        uint256 currentAmount = balanceOf(beneficiary);\n\n        // first try to do ERC20 mint\n        ERC20._mint(beneficiary, amount);\n\n        _host.callAgreement(\n            _ida,\n            abi.encodeWithSelector(\n                _ida.updateSubscription.selector,\n                _cashToken,\n                INDEX_ID,\n                beneficiary,\n                uint128(currentAmount) + uint128(amount),\n                new bytes(0) // placeholder ctx\n            ),\n            new bytes(0) // user data\n        );\n    }\n\n    /// @dev Distribute `amount` of cash among all token holders\n    function distribute(uint256 cashAmount) external onlyOwner {\n        (uint256 actualCashAmount,) = _ida.calculateDistribution(\n            _cashToken,\n            address(this), INDEX_ID,\n            cashAmount);\n\n        _cashToken.transferFrom(owner(), address(this), actualCashAmount);\n\n        _host.callAgreement(\n            _ida,\n            abi.encodeWithSelector(\n                _ida.distribute.selector,\n                _cashToken,\n                INDEX_ID,\n                actualCashAmount,\n                new bytes(0) // placeholder ctx\n            ),\n            new bytes(0) // user data\n        );\n    }\n\n    /// @dev ERC20._transfer override\n    function _transfer(address sender, address recipient, uint256 amount) internal override {\n        uint128 senderUnits = uint128(ERC20.balanceOf(sender));\n        uint128 recipientUnits = uint128(ERC20.balanceOf(recipient));\n        // first try to do ERC20 transfer\n        ERC20._transfer(sender, recipient, amount);\n\n        _host.callAgreement(\n            _ida,\n            abi.encodeWithSelector(\n                _ida.updateSubscription.selector,\n                _cashToken,\n                INDEX_ID,\n                sender,\n                senderUnits - uint128(amount),\n                new bytes(0) // placeholder ctx\n            ),\n            new bytes(0) // user data\n        );\n\n        _host.callAgreement(\n            _ida,\n            abi.encodeWithSelector(\n                _ida.updateSubscription.selector,\n                _cashToken,\n                INDEX_ID,\n                recipient,\n                recipientUnits + uint128(amount),\n                new bytes(0) // placeholder ctx\n            ),\n            new bytes(0) // user data\n        );\n    }\n\n}\n",
  "sourceMap": "814:6561:45:-:0;;;1165:913;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1352:4;1358:6;884:17:1;904:12;:10;:12::i;:::-;926:6;:18;;-1:-1:-1;;;;;;926:18:1;-1:-1:-1;;;;;926:18:1;;;;;;;959:43;;926:18;;-1:-1:-1;926:18:1;-1:-1:-1;;;;;;;;;;;959:43:1;926:6;;959:43;-1:-1:-1;2032:13:4;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2055:17:4;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2082:9:4;:14;;2094:2;-1:-1:-1;;2082:14:4;;;;-1:-1:-1;;;;;;1380:22:45::1;2082:14:4::0;-1:-1:-1;;;;;1380:22:45;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;1412:5:::1;:12:::0;;-1:-1:-1;;;;;;1412:12:45;;::::1;::::0;;::::1;;::::0;;;;1434:4:::1;:10:::0;;;;::::1;::::0;;::::1;;::::0;;1667:29:::1;::::0;-1:-1:-1;;;1667:29:45;;1488:168;;-1:-1:-1;1667:5:45;::::1;::::0;:17:::1;::::0;:29:::1;::::0;1488:168;;1667:29:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1707:5:45::1;::::0;1740:4:::1;::::0;1841:10:::1;::::0;1895:12:::1;::::0;;1707:5:::1;1895:12:::0;;;::::1;::::0;::::1;::::0;;;-1:-1:-1;;;;;1707:5:45;;::::1;::::0;-1:-1:-1;1707:19:45::1;::::0;-1:-1:-1;1740:4:45;;::::1;::::0;-1:-1:-1;;;1798:25:45;1758:182:::1;::::0;1707:5:::1;1841:10:::0;::::1;::::0;;::::1;::::0;1707:5;1758:182;;;::::1;:::i;:::-;;::::0;;-1:-1:-1;;1758:182:45;;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;1758:182:45::1;-1:-1:-1::0;;;;;;1758:182:45;;::::1;;::::0;;1954:12;;-1:-1:-1;1954:12:45;;;;::::1;::::0;;;;1707:282:::1;::::0;;;;;;;;::::1;::::0;;;;;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;1707:282:45::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2000:29:45::1;2018:10;2000:17;:29::i;:::-;2039:17;2054:1;2039:14;:17::i;:::-;1165:913;::::0;;;;;814:6561;;598:104:10;685:10;598:104;:::o;2011:240:1:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;-1:-1:-1;;;1289:68:1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;2099:22:1;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:1::1;;;;;;;:::i;:::-;2200:6;::::0;;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:1;;::::1;::::0;2200:6;::::1;::::0;-1:-1:-1;;;;;;;;;;;2179:38:1;::::1;2227:6;:17:::0;;-1:-1:-1;;;;;;2227:17:1::1;-1:-1:-1::0;;;;;2227:17:1;;;::::1;::::0;;;::::1;::::0;;2011:240::o;10018:96:4:-;10086:9;:21;;-1:-1:-1;;10086:21:4;;;;;;;;;;;;10018:96::o;1085:85:1:-;1131:7;1157:6;-1:-1:-1;;;;;1157:6:1;1085:85;:::o;814:6561:45:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;814:6561:45;;;-1:-1:-1;814:6561:45;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;6:442:-1;;118:3;111:4;103:6;99:17;95:27;85:2;;-1:-1;;126:12;85:2;160:13;;-1:-1;;;;;7479:30;;;7476:2;;;-1:-1;;7512:12;7476:2;7146;7140:9;7585;7566:17;;-1:-1;;7562:33;7172:17;;7653:4;7172:17;7232:34;;;7268:22;;;7229:62;7226:2;;;-1:-1;;7294:12;7226:2;7146;7313:22;258:21;;;179:73;-1:-1;179:73;358:16;;;7653:4;358:16;355:25;-1:-1;352:2;;;393:1;;383:12;352:2;403:39;435:6;7653:4;334:5;330:16;7653:4;300:6;296:17;403:39;:::i;:::-;;;;78:370;;;;:::o;1494:360::-;;1618:2;1606:9;1597:7;1593:23;1589:32;1586:2;;;-1:-1;;1624:12;1586:2;1669:24;;-1:-1;;;;;1702:30;;1699:2;;;-1:-1;;1735:12;1699:2;1765:73;1830:7;1821:6;1810:9;1806:22;1765:73;:::i;:::-;1755:83;1580:274;-1:-1;;;;1580:274::o;1861:1169::-;;;;;;2145:3;2133:9;2124:7;2120:23;2116:33;2113:2;;;-1:-1;;2152:12;2113:2;2197:24;;-1:-1;;;;;2230:30;;;2227:2;;;-1:-1;;2263:12;2227:2;2293:74;2359:7;2350:6;2339:9;2335:22;2293:74;:::i;:::-;2283:84;;2425:2;2414:9;2410:18;2404:25;2390:39;;2241:18;2441:6;2438:30;2435:2;;;-1:-1;;2471:12;2435:2;;2501:74;2567:7;2558:6;2547:9;2543:22;2501:74;:::i;:::-;2491:84;;;2612:2;2687:9;2683:22;776:13;794:54;842:5;794:54;:::i;:::-;2752:2;2822:22;;958:13;2620:95;;-1:-1;976:53;958:13;976:53;:::i;:::-;2891:3;2982:22;;574:13;2760:94;;-1:-1;592:73;574:13;592:73;:::i;:::-;2900:114;;;;2107:923;;;;;;;;:::o;3037:343::-;;3179:5;8091:12;8247:6;8242:3;8235:19;3272:52;3317:6;8284:4;8279:3;8275:14;8284:4;3298:5;3294:16;3272:52;:::i;:::-;7585:9;10264:14;-1:-1;;10260:28;3336:39;;;;8284:4;3336:39;;3127:253;-1:-1;;3127:253::o;4737:692::-;-1:-1;;;;;9010:54;;3498:90;;4996:2;5154;5139:18;;5132:48;;;4737:692;;5194:76;;4981:18;;5256:6;5194:76;:::i;:::-;5318:9;5312:4;5308:20;5303:2;5292:9;5288:18;5281:48;5343:76;5414:4;5405:6;5343:76;:::i;:::-;5335:84;4967:462;-1:-1;;;;;;4967:462::o;5436:566::-;-1:-1;;;;;9010:54;;3498:90;;9227:10;9216:22;;5839:2;5824:18;;4689:36;5656:2;5876;5861:18;;5854:48;;;5436:566;;5916:76;;5641:18;;5978:6;5916:76;:::i;:::-;5908:84;5627:375;-1:-1;;;;;5627:375::o;6009:416::-;6209:2;6223:47;;;4000:2;6194:18;;;8235:19;4036:34;8275:14;;;4016:55;-1:-1;;;4091:12;;;4084:30;4133:12;;;6180:245::o;6432:416::-;6632:2;6646:47;;;6617:18;;;8235:19;4420:34;8275:14;;;4400:55;4474:12;;;6603:245::o;6855:222::-;4571:37;;;6982:2;6967:18;;6953:124::o;9920:268::-;9985:1;9992:101;10006:6;10003:1;10000:13;9992:101;;;10073:11;;;10067:18;10054:11;;;10047:39;10028:2;10021:10;9992:101;;;10108:6;10105:1;10102:13;10099:2;;;9985:1;10164:6;10159:3;10155:16;10148:27;10099:2;;9969:219;;;:::o;10301:197::-;-1:-1;;;;;9010:54;;10400:75;;10390:2;;10489:1;;10479:12;10390:2;10384:114;:::o;:::-;814:6561:45;;;;;;",
  "sourcePath": "contracts/TennerrVotingRightsToken.sol",
  "type": "contract"
}