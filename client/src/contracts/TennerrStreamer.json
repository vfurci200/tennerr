{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluid",
          "name": "host",
          "type": "address"
        },
        {
          "internalType": "contract IConstantFlowAgreementV1",
          "name": "cfa",
          "type": "address"
        },
        {
          "internalType": "contract ISuperToken",
          "name": "acceptedToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ReceiverChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "jobId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "flowRate",
          "type": "uint256"
        }
      ],
      "name": "accountingCache",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "_superToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_agreementClass",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_ctx",
          "type": "bytes"
        }
      ],
      "name": "afterAgreementCreated",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "_superToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_agreementClass",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_ctx",
          "type": "bytes"
        }
      ],
      "name": "afterAgreementTerminated",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "_superToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_agreementClass",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "agreementData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_ctx",
          "type": "bytes"
        }
      ],
      "name": "afterAgreementUpdated",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "beforeAgreementCreated",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "beforeAgreementTerminated",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "beforeAgreementUpdated",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newReceiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "flowRate",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "jobId",
          "type": "bytes"
        }
      ],
      "name": "createFlow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentReceiver",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "int96",
          "name": "flowRate",
          "type": "int96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "jobId",
          "type": "bytes32"
        }
      ],
      "name": "getStreamData",
      "outputs": [
        {
          "internalType": "uint256[5]",
          "name": "",
          "type": "uint256[5]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "setTennerr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "setTennerrEscrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "streamByJobId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tennerr",
      "outputs": [
        {
          "internalType": "contract Tennerr",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tennerrEscrow",
      "outputs": [
        {
          "internalType": "contract TennerrEscrow",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tennerrFactory",
      "outputs": [
        {
          "internalType": "contract TennerrFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/AccessControl.sol",
    "1": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/Ownable.sol",
    "10": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol",
    "11": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Counters.sol",
    "12": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/EnumerableSet.sol",
    "13": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/ReentrancyGuard.sol",
    "14": "/Users/vince/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/Chainlink.sol",
    "15": "/Users/vince/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/ChainlinkClient.sol",
    "16": "/Users/vince/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/VRFConsumerBase.sol",
    "17": "/Users/vince/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/VRFRequestIDBase.sol",
    "18": "/Users/vince/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/ChainlinkRequestInterface.sol",
    "19": "/Users/vince/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/ENSInterface.sol",
    "2": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "20": "/Users/vince/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/LinkTokenInterface.sol",
    "21": "/Users/vince/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/PointerInterface.sol",
    "22": "/Users/vince/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/vendor/BufferChainlink.sol",
    "23": "/Users/vince/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/vendor/CBORChainlink.sol",
    "24": "/Users/vince/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/vendor/ENSResolver.sol",
    "25": "/Users/vince/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
    "26": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/apps/SuperAppBase.sol",
    "27": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
    "29": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
    "30": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
    "31": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
    "32": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
    "33": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
    "34": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
    "35": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
    "36": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
    "37": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
    "38": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
    "39": "contracts/Tennerr.sol",
    "4": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/ERC20.sol",
    "40": "contracts/TennerrController.sol",
    "41": "contracts/TennerrDAO.sol",
    "42": "contracts/TennerrEscrow.sol",
    "43": "contracts/TennerrFactory.sol",
    "44": "contracts/TennerrStreamer.sol",
    "46": "interfaces/IAToken.sol",
    "47": "interfaces/ILendingPool.sol",
    "48": "interfaces/ILendingPoolAddressesProvider.sol",
    "49": "interfaces/IProtocolDataProvider.sol",
    "5": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/ERC20Burnable.sol",
    "50": "interfaces/IScaledBalanceToken.sol",
    "6": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
    "7": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
    "8": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC777/IERC777.sol",
    "9": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/TennerrStreamer.sol",
    "exportedSymbols": {
      "TennerrStreamer": [
        3628
      ]
    },
    "id": 3629,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2667,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:44"
      },
      {
        "id": 2668,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "57:33:44"
      },
      {
        "absolutePath": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
        "file": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
        "id": 2674,
        "nodeType": "ImportDirective",
        "scope": 3629,
        "sourceUnit": 5877,
        "src": "92:199:44",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2669,
              "name": "ISuperfluid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "105:11:44",
              "typeDescriptions": {}
            }
          },
          {
            "foreign": {
              "id": 2670,
              "name": "ISuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "122:11:44",
              "typeDescriptions": {}
            }
          },
          {
            "foreign": {
              "id": 2671,
              "name": "ISuperApp",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "139:9:44",
              "typeDescriptions": {}
            }
          },
          {
            "foreign": {
              "id": 2672,
              "name": "ISuperAgreement",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "154:15:44",
              "typeDescriptions": {}
            }
          },
          {
            "foreign": {
              "id": 2673,
              "name": "SuperAppDefinitions",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "175:19:44",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
        "file": "@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
        "id": 2676,
        "nodeType": "ImportDirective",
        "scope": 3629,
        "sourceUnit": 7809,
        "src": "411:147:44",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2675,
              "name": "IConstantFlowAgreementV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "424:24:44",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/apps/SuperAppBase.sol",
        "file": "@superfluid-finance/ethereum-contracts/contracts/apps/SuperAppBase.sol",
        "id": 2678,
        "nodeType": "ImportDirective",
        "scope": 3629,
        "sourceUnit": 7648,
        "src": "560:106:44",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2677,
              "name": "SuperAppBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "573:12:44",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 2679,
        "nodeType": "ImportDirective",
        "scope": 3629,
        "sourceUnit": 4454,
        "src": "668:58:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/TennerrEscrow.sol",
        "file": "./TennerrEscrow.sol",
        "id": 2680,
        "nodeType": "ImportDirective",
        "scope": 3629,
        "sourceUnit": 2422,
        "src": "727:29:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/TennerrFactory.sol",
        "file": "./TennerrFactory.sol",
        "id": 2681,
        "nodeType": "ImportDirective",
        "scope": 3629,
        "sourceUnit": 2666,
        "src": "757:30:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2682,
              "name": "SuperAppBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7647,
              "src": "817:12:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SuperAppBase_$7647",
                "typeString": "contract SuperAppBase"
              }
            },
            "id": 2683,
            "nodeType": "InheritanceSpecifier",
            "src": "817:12:44"
          },
          {
            "baseName": {
              "id": 2684,
              "name": "AccessControl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4453,
              "src": "831:13:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControl_$4453",
                "typeString": "contract AccessControl"
              }
            },
            "id": 2685,
            "nodeType": "InheritanceSpecifier",
            "src": "831:13:44"
          }
        ],
        "contractDependencies": [
          4453,
          7647,
          8458,
          10029
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3628,
        "linearizedBaseContracts": [
          3628,
          4453,
          8458,
          7647,
          10029
        ],
        "name": "TennerrStreamer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2688,
            "libraryName": {
              "id": 2686,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6818,
              "src": "857:8:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$6818",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "851:24:44",
            "typeName": {
              "id": 2687,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "870:4:44",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 2690,
            "mutability": "mutable",
            "name": "_host",
            "nodeType": "VariableDeclaration",
            "scope": 3628,
            "src": "881:25:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISuperfluid_$5876",
              "typeString": "contract ISuperfluid"
            },
            "typeName": {
              "id": 2689,
              "name": "ISuperfluid",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5876,
              "src": "881:11:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                "typeString": "contract ISuperfluid"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2692,
            "mutability": "mutable",
            "name": "_cfa",
            "nodeType": "VariableDeclaration",
            "scope": 3628,
            "src": "920:37:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
              "typeString": "contract IConstantFlowAgreementV1"
            },
            "typeName": {
              "id": 2691,
              "name": "IConstantFlowAgreementV1",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7808,
              "src": "920:24:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                "typeString": "contract IConstantFlowAgreementV1"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2694,
            "mutability": "mutable",
            "name": "_acceptedToken",
            "nodeType": "VariableDeclaration",
            "scope": 3628,
            "src": "1015:34:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISuperToken_$10382",
              "typeString": "contract ISuperToken"
            },
            "typeName": {
              "id": 2693,
              "name": "ISuperToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10382,
              "src": "1015:11:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISuperToken_$10382",
                "typeString": "contract ISuperToken"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2696,
            "mutability": "mutable",
            "name": "_receiver",
            "nodeType": "VariableDeclaration",
            "scope": 3628,
            "src": "1073:25:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2695,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1073:7:44",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "functionSelector": "75b238fc",
            "id": 2701,
            "mutability": "constant",
            "name": "ADMIN_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 3628,
            "src": "1115:60:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2697,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1115:7:44",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "41444d494e5f524f4c45",
                  "id": 2699,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1162:12:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
                    "typeString": "literal_string \"ADMIN_ROLE\""
                  },
                  "value": "ADMIN_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
                    "typeString": "literal_string \"ADMIN_ROLE\""
                  }
                ],
                "id": 2698,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1152:9:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 2700,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1152:23:44",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2703,
            "mutability": "mutable",
            "name": "_tennerrFactoryContractAddress",
            "nodeType": "VariableDeclaration",
            "scope": 3628,
            "src": "1219:54:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2702,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1219:15:44",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "4dbb40b2",
            "id": 2705,
            "mutability": "mutable",
            "name": "tennerrFactory",
            "nodeType": "VariableDeclaration",
            "scope": 3628,
            "src": "1303:36:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TennerrFactory_$2665",
              "typeString": "contract TennerrFactory"
            },
            "typeName": {
              "id": 2704,
              "name": "TennerrFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2665,
              "src": "1303:14:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TennerrFactory_$2665",
                "typeString": "contract TennerrFactory"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5bd7fa11",
            "id": 2707,
            "mutability": "mutable",
            "name": "tennerrEscrow",
            "nodeType": "VariableDeclaration",
            "scope": 3628,
            "src": "1371:34:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TennerrEscrow_$2421",
              "typeString": "contract TennerrEscrow"
            },
            "typeName": {
              "id": 2706,
              "name": "TennerrEscrow",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2421,
              "src": "1371:13:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TennerrEscrow_$2421",
                "typeString": "contract TennerrEscrow"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2709,
            "mutability": "mutable",
            "name": "_tennerrEscrowContractAddress",
            "nodeType": "VariableDeclaration",
            "scope": 3628,
            "src": "1411:53:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2708,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1411:15:44",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2711,
            "mutability": "mutable",
            "name": "_tennerrContractAddress",
            "nodeType": "VariableDeclaration",
            "scope": 3628,
            "src": "1509:47:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2710,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1509:15:44",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "afa78f51",
            "id": 2713,
            "mutability": "mutable",
            "name": "tennerr",
            "nodeType": "VariableDeclaration",
            "scope": 3628,
            "src": "1586:22:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Tennerr_$841",
              "typeString": "contract Tennerr"
            },
            "typeName": {
              "id": 2712,
              "name": "Tennerr",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 841,
              "src": "1586:7:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Tennerr_$841",
                "typeString": "contract Tennerr"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9883145e",
            "id": 2718,
            "mutability": "mutable",
            "name": "streamByJobId",
            "nodeType": "VariableDeclaration",
            "scope": 3628,
            "src": "1616:47:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(bytes32 => uint256[])"
            },
            "typeName": {
              "id": 2717,
              "keyType": {
                "id": 2714,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1624:7:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1616:26:44",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(bytes32 => uint256[])"
              },
              "valueType": {
                "baseType": {
                  "id": 2715,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1635:4:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 2716,
                "nodeType": "ArrayTypeName",
                "src": "1635:6:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "TennerrStreamer.Order",
            "id": 2733,
            "members": [
              {
                "constant": false,
                "id": 2720,
                "mutability": "mutable",
                "name": "orderId",
                "nodeType": "VariableDeclaration",
                "scope": 2733,
                "src": "1693:12:44",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2719,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1693:4:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2722,
                "mutability": "mutable",
                "name": "sellerId",
                "nodeType": "VariableDeclaration",
                "scope": 2733,
                "src": "1715:13:44",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2721,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1715:4:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2724,
                "mutability": "mutable",
                "name": "buyer",
                "nodeType": "VariableDeclaration",
                "scope": 2733,
                "src": "1738:13:44",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2723,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1738:7:44",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2726,
                "mutability": "mutable",
                "name": "seller",
                "nodeType": "VariableDeclaration",
                "scope": 2733,
                "src": "1761:14:44",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2725,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1761:7:44",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2728,
                "mutability": "mutable",
                "name": "jobId",
                "nodeType": "VariableDeclaration",
                "scope": 2733,
                "src": "1785:13:44",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 2727,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1785:7:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2730,
                "mutability": "mutable",
                "name": "orderPrice",
                "nodeType": "VariableDeclaration",
                "scope": 2733,
                "src": "1808:15:44",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2729,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1808:4:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2732,
                "mutability": "mutable",
                "name": "absDeadline",
                "nodeType": "VariableDeclaration",
                "scope": 2733,
                "src": "1833:16:44",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2731,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1833:4:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Order",
            "nodeType": "StructDefinition",
            "scope": 3628,
            "src": "1670:186:44",
            "visibility": "public"
          },
          {
            "body": {
              "id": 2849,
              "nodeType": "Block",
              "src": "2001:1016:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2747,
                              "name": "host",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2735,
                              "src": "2027:4:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                                "typeString": "contract ISuperfluid"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                                "typeString": "contract ISuperfluid"
                              }
                            ],
                            "id": 2746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2019:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2745,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2019:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2019:13:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2751,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2044:1:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2036:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2749,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2036:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2036:10:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2019:27:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "686f7374206973207a65726f2061646472657373",
                        "id": 2754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2048:22:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80e06bf054277e2d4b253e6927ab4cac8be70151656513c151c7f4838b6b3677",
                          "typeString": "literal_string \"host is zero address\""
                        },
                        "value": "host is zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80e06bf054277e2d4b253e6927ab4cac8be70151656513c151c7f4838b6b3677",
                          "typeString": "literal_string \"host is zero address\""
                        }
                      ],
                      "id": 2744,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2011:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2011:60:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2756,
                  "nodeType": "ExpressionStatement",
                  "src": "2011:60:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2760,
                              "name": "cfa",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2737,
                              "src": "2097:3:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                                "typeString": "contract IConstantFlowAgreementV1"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                                "typeString": "contract IConstantFlowAgreementV1"
                              }
                            ],
                            "id": 2759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2089:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2758,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2089:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2089:12:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2113:1:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2105:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2762,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2105:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2105:10:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2089:26:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636661206973207a65726f2061646472657373",
                        "id": 2767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2117:21:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d4b50fc668d687c5cc907b462c44b4c8a23b7f3826bfd26a395b722ec9a90f7",
                          "typeString": "literal_string \"cfa is zero address\""
                        },
                        "value": "cfa is zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d4b50fc668d687c5cc907b462c44b4c8a23b7f3826bfd26a395b722ec9a90f7",
                          "typeString": "literal_string \"cfa is zero address\""
                        }
                      ],
                      "id": 2757,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2081:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2081:58:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2769,
                  "nodeType": "ExpressionStatement",
                  "src": "2081:58:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2773,
                              "name": "acceptedToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2739,
                              "src": "2165:13:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$10382",
                                "typeString": "contract ISuperToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISuperToken_$10382",
                                "typeString": "contract ISuperToken"
                              }
                            ],
                            "id": 2772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2157:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2771,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2157:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2157:22:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2191:1:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2183:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2775,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2183:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2183:10:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2157:36:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6163636570746564546f6b656e206973207a65726f2061646472657373",
                        "id": 2780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2195:31:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ade05230f2953998795d971c0c3820fa539d457c22b1898a9f8048cbce5300c",
                          "typeString": "literal_string \"acceptedToken is zero address\""
                        },
                        "value": "acceptedToken is zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1ade05230f2953998795d971c0c3820fa539d457c22b1898a9f8048cbce5300c",
                          "typeString": "literal_string \"acceptedToken is zero address\""
                        }
                      ],
                      "id": 2770,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2149:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2149:78:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2782,
                  "nodeType": "ExpressionStatement",
                  "src": "2149:78:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2786,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2741,
                              "src": "2253:8:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2245:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2784,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2245:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2245:17:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2274:1:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2266:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2788,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2266:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2266:10:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2245:31:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7265636569766572206973207a65726f2061646472657373",
                        "id": 2793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2278:26:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a9ce44342bbbe45d5250bf845152ecba3ae82fdcad042cbe1ad23246cbfaa65",
                          "typeString": "literal_string \"receiver is zero address\""
                        },
                        "value": "receiver is zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a9ce44342bbbe45d5250bf845152ecba3ae82fdcad042cbe1ad23246cbfaa65",
                          "typeString": "literal_string \"receiver is zero address\""
                        }
                      ],
                      "id": 2783,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2237:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2237:68:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2795,
                  "nodeType": "ExpressionStatement",
                  "src": "2237:68:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2323:32:44",
                        "subExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2800,
                                  "name": "receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2741,
                                  "src": "2345:8:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2799,
                                "name": "ISuperApp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10029,
                                "src": "2335:9:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISuperApp_$10029_$",
                                  "typeString": "type(contract ISuperApp)"
                                }
                              },
                              "id": 2801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2335:19:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperApp_$10029",
                                "typeString": "contract ISuperApp"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISuperApp_$10029",
                                "typeString": "contract ISuperApp"
                              }
                            ],
                            "expression": {
                              "id": 2797,
                              "name": "host",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2735,
                              "src": "2324:4:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 2798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isApp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5657,
                            "src": "2324:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_contract$_ISuperApp_$10029_$returns$_t_bool_$",
                              "typeString": "function (contract ISuperApp) view external returns (bool)"
                            }
                          },
                          "id": 2802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2324:31:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "726563656976657220697320616e20617070",
                        "id": 2804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2357:20:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8354735749b6995a1a250da9c2196e6669945091c557b76eedc31e24a10728b2",
                          "typeString": "literal_string \"receiver is an app\""
                        },
                        "value": "receiver is an app"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8354735749b6995a1a250da9c2196e6669945091c557b76eedc31e24a10728b2",
                          "typeString": "literal_string \"receiver is an app\""
                        }
                      ],
                      "id": 2796,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2315:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2315:63:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2806,
                  "nodeType": "ExpressionStatement",
                  "src": "2315:63:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2808,
                        "name": "ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2701,
                        "src": "2438:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 2809,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2450:3:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2450:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2807,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4379,
                      "src": "2427:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 2811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2427:34:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2812,
                  "nodeType": "ExpressionStatement",
                  "src": "2427:34:44"
                },
                {
                  "expression": {
                    "id": 2815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2813,
                      "name": "_host",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2690,
                      "src": "2471:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                        "typeString": "contract ISuperfluid"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2814,
                      "name": "host",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2735,
                      "src": "2479:4:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                        "typeString": "contract ISuperfluid"
                      }
                    },
                    "src": "2471:12:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "id": 2816,
                  "nodeType": "ExpressionStatement",
                  "src": "2471:12:44"
                },
                {
                  "expression": {
                    "id": 2819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2817,
                      "name": "_cfa",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2692,
                      "src": "2493:4:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                        "typeString": "contract IConstantFlowAgreementV1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2818,
                      "name": "cfa",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2737,
                      "src": "2500:3:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                        "typeString": "contract IConstantFlowAgreementV1"
                      }
                    },
                    "src": "2493:10:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                      "typeString": "contract IConstantFlowAgreementV1"
                    }
                  },
                  "id": 2820,
                  "nodeType": "ExpressionStatement",
                  "src": "2493:10:44"
                },
                {
                  "expression": {
                    "id": 2823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2821,
                      "name": "_acceptedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2694,
                      "src": "2513:14:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperToken_$10382",
                        "typeString": "contract ISuperToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2822,
                      "name": "acceptedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2739,
                      "src": "2530:13:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperToken_$10382",
                        "typeString": "contract ISuperToken"
                      }
                    },
                    "src": "2513:30:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10382",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "id": 2824,
                  "nodeType": "ExpressionStatement",
                  "src": "2513:30:44"
                },
                {
                  "expression": {
                    "id": 2827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2825,
                      "name": "_receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2696,
                      "src": "2553:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2826,
                      "name": "receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2741,
                      "src": "2565:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2553:20:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2828,
                  "nodeType": "ExpressionStatement",
                  "src": "2553:20:44"
                },
                {
                  "assignments": [
                    2830
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2830,
                      "mutability": "mutable",
                      "name": "configWord",
                      "nodeType": "VariableDeclaration",
                      "scope": 2849,
                      "src": "2584:18:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2829,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2584:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2842,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2831,
                            "name": "SuperAppDefinitions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9733,
                            "src": "2617:19:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SuperAppDefinitions_$9733_$",
                              "typeString": "type(library SuperAppDefinitions)"
                            }
                          },
                          "id": 2832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "APP_LEVEL_FINAL",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9605,
                          "src": "2617:35:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "expression": {
                            "id": 2833,
                            "name": "SuperAppDefinitions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9733,
                            "src": "2667:19:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SuperAppDefinitions_$9733_$",
                              "typeString": "type(library SuperAppDefinitions)"
                            }
                          },
                          "id": 2834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "BEFORE_AGREEMENT_CREATED_NOOP",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9659,
                          "src": "2667:49:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2617:99:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "|",
                      "rightExpression": {
                        "expression": {
                          "id": 2836,
                          "name": "SuperAppDefinitions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9733,
                          "src": "2731:19:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SuperAppDefinitions_$9733_$",
                            "typeString": "type(library SuperAppDefinitions)"
                          }
                        },
                        "id": 2837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "BEFORE_AGREEMENT_UPDATED_NOOP",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9675,
                        "src": "2731:49:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2617:163:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "|",
                    "rightExpression": {
                      "expression": {
                        "id": 2839,
                        "name": "SuperAppDefinitions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9733,
                        "src": "2795:19:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SuperAppDefinitions_$9733_$",
                          "typeString": "type(library SuperAppDefinitions)"
                        }
                      },
                      "id": 2840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "BEFORE_AGREEMENT_TERMINATED_NOOP",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9691,
                      "src": "2795:52:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2617:230:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2584:263:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2846,
                        "name": "configWord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2830,
                        "src": "2998:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2843,
                        "name": "_host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2690,
                        "src": "2980:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                          "typeString": "contract ISuperfluid"
                        }
                      },
                      "id": 2845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registerApp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5641,
                      "src": "2980:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2980:29:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2848,
                  "nodeType": "ExpressionStatement",
                  "src": "2980:29:44"
                }
              ]
            },
            "id": 2850,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2735,
                  "mutability": "mutable",
                  "name": "host",
                  "nodeType": "VariableDeclaration",
                  "scope": 2850,
                  "src": "1884:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                    "typeString": "contract ISuperfluid"
                  },
                  "typeName": {
                    "id": 2734,
                    "name": "ISuperfluid",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5876,
                    "src": "1884:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2737,
                  "mutability": "mutable",
                  "name": "cfa",
                  "nodeType": "VariableDeclaration",
                  "scope": 2850,
                  "src": "1910:28:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                    "typeString": "contract IConstantFlowAgreementV1"
                  },
                  "typeName": {
                    "id": 2736,
                    "name": "IConstantFlowAgreementV1",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 7808,
                    "src": "1910:24:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                      "typeString": "contract IConstantFlowAgreementV1"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2739,
                  "mutability": "mutable",
                  "name": "acceptedToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 2850,
                  "src": "1948:25:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10382",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 2738,
                    "name": "ISuperToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10382,
                    "src": "1948:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10382",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2741,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 2850,
                  "src": "1983:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2740,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1983:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1874:126:44"
            },
            "returnParameters": {
              "id": 2743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2001:0:44"
            },
            "scope": 3628,
            "src": "1863:1154:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2885,
              "nodeType": "Block",
              "src": "3376:184:44",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2859,
                      "name": "_receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2696,
                      "src": "3390:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3411:1:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3403:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2860,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3403:7:44",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3403:10:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3390:23:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2884,
                  "nodeType": "IfStatement",
                  "src": "3386:168:44",
                  "trueBody": {
                    "id": 2883,
                    "nodeType": "Block",
                    "src": "3415:139:44",
                    "statements": [
                      {
                        "expression": {
                          "id": 2877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 2865,
                                "name": "startTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2853,
                                "src": "3430:9:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2866,
                                "name": "flowRate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2857,
                                "src": "3441:8:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int96",
                                  "typeString": "int96"
                                }
                              },
                              null,
                              null
                            ],
                            "id": 2867,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "3429:23:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_int96_$__$__$",
                              "typeString": "tuple(uint256,int96,,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2870,
                                "name": "_acceptedToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2694,
                                "src": "3468:14:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperToken_$10382",
                                  "typeString": "contract ISuperToken"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2873,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "3492:4:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TennerrStreamer_$3628",
                                      "typeString": "contract TennerrStreamer"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TennerrStreamer_$3628",
                                      "typeString": "contract TennerrStreamer"
                                    }
                                  ],
                                  "id": 2872,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3484:7:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2871,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3484:7:44",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2874,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3484:13:44",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 2875,
                                "name": "_receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2696,
                                "src": "3499:9:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ISuperToken_$10382",
                                  "typeString": "contract ISuperToken"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 2868,
                                "name": "_cfa",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2692,
                                "src": "3455:4:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                }
                              },
                              "id": 2869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getFlow",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7734,
                              "src": "3455:12:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_contract$_ISuperfluidToken_$10791_$_t_address_$_t_address_$returns$_t_uint256_$_t_int96_$_t_uint256_$_t_uint256_$",
                                "typeString": "function (contract ISuperfluidToken,address,address) view external returns (uint256,int96,uint256,uint256)"
                              }
                            },
                            "id": 2876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3455:54:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_int96_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,int96,uint256,uint256)"
                            }
                          },
                          "src": "3429:80:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2878,
                        "nodeType": "ExpressionStatement",
                        "src": "3429:80:44"
                      },
                      {
                        "expression": {
                          "id": 2881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2879,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2855,
                            "src": "3523:8:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2880,
                            "name": "_receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2696,
                            "src": "3534:9:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3523:20:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2882,
                        "nodeType": "ExpressionStatement",
                        "src": "3523:20:44"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "28d2bf94",
            "id": 2886,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "currentReceiver",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3231:2:44"
            },
            "returnParameters": {
              "id": 2858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2853,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2886,
                  "src": "3286:17:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3286:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2855,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 2886,
                  "src": "3317:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2854,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3317:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2857,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 2886,
                  "src": "3347:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 2856,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3347:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3272:99:44"
            },
            "scope": 3628,
            "src": "3207:353:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 2890,
            "name": "ReceiverChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2888,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 2890,
                  "src": "3588:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2887,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3588:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3587:18:44"
            },
            "src": "3566:40:44"
          },
          {
            "body": {
              "id": 3022,
              "nodeType": "Block",
              "src": "3806:1862:44",
              "statements": [
                {
                  "expression": {
                    "id": 2902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2900,
                      "name": "newCtx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2898,
                      "src": "3815:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2901,
                      "name": "ctx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2893,
                      "src": "3824:3:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "src": "3815:12:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 2903,
                  "nodeType": "ExpressionStatement",
                  "src": "3815:12:44"
                },
                {
                  "assignments": [
                    2905
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2905,
                      "mutability": "mutable",
                      "name": "netFlowRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 3022,
                      "src": "3920:17:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      },
                      "typeName": {
                        "id": 2904,
                        "name": "int96",
                        "nodeType": "ElementaryTypeName",
                        "src": "3920:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2914,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2908,
                        "name": "_acceptedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2694,
                        "src": "3956:14:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$10382",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2911,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3980:4:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TennerrStreamer_$3628",
                              "typeString": "contract TennerrStreamer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TennerrStreamer_$3628",
                              "typeString": "contract TennerrStreamer"
                            }
                          ],
                          "id": 2910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3972:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2909,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3972:7:44",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3972:13:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperToken_$10382",
                          "typeString": "contract ISuperToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 2906,
                        "name": "_cfa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2692,
                        "src": "3940:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                          "typeString": "contract IConstantFlowAgreementV1"
                        }
                      },
                      "id": 2907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getNetFlow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7776,
                      "src": "3940:15:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ISuperfluidToken_$10791_$_t_address_$returns$_t_int96_$",
                        "typeString": "function (contract ISuperfluidToken,address) view external returns (int96)"
                      }
                    },
                    "id": 2913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3940:46:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3920:66:44"
                },
                {
                  "assignments": [
                    null,
                    2916,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 2916,
                      "mutability": "mutable",
                      "name": "outFlowRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 3022,
                      "src": "3996:17:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      },
                      "typeName": {
                        "id": 2915,
                        "name": "int96",
                        "nodeType": "ElementaryTypeName",
                        "src": "3996:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 2926,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2919,
                        "name": "_acceptedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2694,
                        "src": "4032:14:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$10382",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2922,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4056:4:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TennerrStreamer_$3628",
                              "typeString": "contract TennerrStreamer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TennerrStreamer_$3628",
                              "typeString": "contract TennerrStreamer"
                            }
                          ],
                          "id": 2921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4048:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2920,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4048:7:44",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4048:13:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2924,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2696,
                        "src": "4063:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperToken_$10382",
                          "typeString": "contract ISuperToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2917,
                        "name": "_cfa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2692,
                        "src": "4019:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                          "typeString": "contract IConstantFlowAgreementV1"
                        }
                      },
                      "id": 2918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getFlow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7734,
                      "src": "4019:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ISuperfluidToken_$10791_$_t_address_$_t_address_$returns$_t_uint256_$_t_int96_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (contract ISuperfluidToken,address,address) view external returns (uint256,int96,uint256,uint256)"
                      }
                    },
                    "id": 2925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4019:54:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_int96_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,int96,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3994:79:44"
                },
                {
                  "assignments": [
                    2928
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2928,
                      "mutability": "mutable",
                      "name": "inFlowRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 3022,
                      "src": "4135:16:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      },
                      "typeName": {
                        "id": 2927,
                        "name": "int96",
                        "nodeType": "ElementaryTypeName",
                        "src": "4135:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2932,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    },
                    "id": 2931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2929,
                      "name": "netFlowRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2905,
                      "src": "4154:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 2930,
                      "name": "outFlowRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2916,
                      "src": "4168:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "src": "4154:25:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4135:44:44"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    },
                    "id": 2938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2933,
                      "name": "inFlowRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2928,
                      "src": "4350:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4370:1:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4364:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int96_$",
                          "typeString": "type(int96)"
                        },
                        "typeName": {
                          "id": 2934,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "4364:5:44",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4364:8:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "src": "4350:22:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      },
                      "id": 2971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2966,
                        "name": "outFlowRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2916,
                        "src": "4820:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4841:1:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4835:5:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int96_$",
                            "typeString": "type(int96)"
                          },
                          "typeName": {
                            "id": 2967,
                            "name": "int96",
                            "nodeType": "ElementaryTypeName",
                            "src": "4835:5:44",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4835:8:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      "src": "4820:23:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 3019,
                      "nodeType": "Block",
                      "src": "5202:460:44",
                      "statements": [
                        {
                          "expression": {
                            "id": 3017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "components": [
                                {
                                  "id": 2996,
                                  "name": "newCtx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2898,
                                  "src": "5299:6:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                null
                              ],
                              "id": 2997,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "TupleExpression",
                              "src": "5298:10:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$__$",
                                "typeString": "tuple(bytes memory,)"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 3000,
                                  "name": "_cfa",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2692,
                                  "src": "5357:4:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                                    "typeString": "contract IConstantFlowAgreementV1"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "expression": {
                                          "id": 3003,
                                          "name": "_cfa",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2692,
                                          "src": "5419:4:44",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                                            "typeString": "contract IConstantFlowAgreementV1"
                                          }
                                        },
                                        "id": 3004,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "createFlow",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 7702,
                                        "src": "5419:15:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$10791_$_t_address_$_t_int96_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function (contract ISuperfluidToken,address,int96,bytes memory) external returns (bytes memory)"
                                        }
                                      },
                                      "id": 3005,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "5419:24:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    {
                                      "id": 3006,
                                      "name": "_acceptedToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2694,
                                      "src": "5463:14:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ISuperToken_$10382",
                                        "typeString": "contract ISuperToken"
                                      }
                                    },
                                    {
                                      "id": 3007,
                                      "name": "_receiver",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2696,
                                      "src": "5497:9:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 3008,
                                      "name": "inFlowRate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2928,
                                      "src": "5526:10:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int96",
                                        "typeString": "int96"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 3011,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5566:1:44",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 3010,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "NewExpression",
                                        "src": "5556:9:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function (uint256) pure returns (bytes memory)"
                                        },
                                        "typeName": {
                                          "id": 3009,
                                          "name": "bytes",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5560:5:44",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                          }
                                        }
                                      },
                                      "id": 3012,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5556:12:44",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      {
                                        "typeIdentifier": "t_contract$_ISuperToken_$10382",
                                        "typeString": "contract ISuperToken"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_int96",
                                        "typeString": "int96"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "expression": {
                                      "id": 3001,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "5377:3:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 3002,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodeWithSelector",
                                    "nodeType": "MemberAccess",
                                    "src": "5377:22:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes4) pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 3013,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5377:222:44",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "hexValue": "3078",
                                  "id": 3014,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5615:4:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                    "typeString": "literal_string \"0x\""
                                  },
                                  "value": "0x"
                                },
                                {
                                  "id": 3015,
                                  "name": "newCtx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2898,
                                  "src": "5635:6:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                                    "typeString": "contract IConstantFlowAgreementV1"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                    "typeString": "literal_string \"0x\""
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 2998,
                                  "name": "_host",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2690,
                                  "src": "5311:5:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                                    "typeString": "contract ISuperfluid"
                                  }
                                },
                                "id": 2999,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "callAgreementWithContext",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5829,
                                "src": "5311:30:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$9921_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory,bytes memory) external returns (bytes memory,bytes memory)"
                                }
                              },
                              "id": 3016,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5311:342:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                                "typeString": "tuple(bytes memory,bytes memory)"
                              }
                            },
                            "src": "5298:355:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 3018,
                          "nodeType": "ExpressionStatement",
                          "src": "5298:355:44"
                        }
                      ]
                    },
                    "id": 3020,
                    "nodeType": "IfStatement",
                    "src": "4816:846:44",
                    "trueBody": {
                      "id": 2995,
                      "nodeType": "Block",
                      "src": "4844:352:44",
                      "statements": [
                        {
                          "expression": {
                            "id": 2993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "components": [
                                {
                                  "id": 2972,
                                  "name": "newCtx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2898,
                                  "src": "4855:6:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                null
                              ],
                              "id": 2973,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "TupleExpression",
                              "src": "4854:10:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$__$",
                                "typeString": "tuple(bytes memory,)"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 2976,
                                  "name": "_cfa",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2692,
                                  "src": "4911:4:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                                    "typeString": "contract IConstantFlowAgreementV1"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "expression": {
                                          "id": 2979,
                                          "name": "_cfa",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2692,
                                          "src": "4969:4:44",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                                            "typeString": "contract IConstantFlowAgreementV1"
                                          }
                                        },
                                        "id": 2980,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "updateFlow",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 7716,
                                        "src": "4969:15:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$10791_$_t_address_$_t_int96_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function (contract ISuperfluidToken,address,int96,bytes memory) external returns (bytes memory)"
                                        }
                                      },
                                      "id": 2981,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "4969:24:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    {
                                      "id": 2982,
                                      "name": "_acceptedToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2694,
                                      "src": "5011:14:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ISuperToken_$10382",
                                        "typeString": "contract ISuperToken"
                                      }
                                    },
                                    {
                                      "id": 2983,
                                      "name": "_receiver",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2696,
                                      "src": "5043:9:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 2984,
                                      "name": "inFlowRate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2928,
                                      "src": "5070:10:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int96",
                                        "typeString": "int96"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 2987,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5108:1:44",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 2986,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "NewExpression",
                                        "src": "5098:9:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function (uint256) pure returns (bytes memory)"
                                        },
                                        "typeName": {
                                          "id": 2985,
                                          "name": "bytes",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5102:5:44",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                          }
                                        }
                                      },
                                      "id": 2988,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5098:12:44",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      {
                                        "typeIdentifier": "t_contract$_ISuperToken_$10382",
                                        "typeString": "contract ISuperToken"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_int96",
                                        "typeString": "int96"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2977,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "4929:3:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 2978,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodeWithSelector",
                                    "nodeType": "MemberAccess",
                                    "src": "4929:22:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes4) pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 2989,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4929:210:44",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "hexValue": "3078",
                                  "id": 2990,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5153:4:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                    "typeString": "literal_string \"0x\""
                                  },
                                  "value": "0x"
                                },
                                {
                                  "id": 2991,
                                  "name": "newCtx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2898,
                                  "src": "5171:6:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                                    "typeString": "contract IConstantFlowAgreementV1"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                    "typeString": "literal_string \"0x\""
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 2974,
                                  "name": "_host",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2690,
                                  "src": "4867:5:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                                    "typeString": "contract ISuperfluid"
                                  }
                                },
                                "id": 2975,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "callAgreementWithContext",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5829,
                                "src": "4867:30:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$9921_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory,bytes memory) external returns (bytes memory,bytes memory)"
                                }
                              },
                              "id": 2992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4867:320:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                                "typeString": "tuple(bytes memory,bytes memory)"
                              }
                            },
                            "src": "4854:333:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2994,
                          "nodeType": "ExpressionStatement",
                          "src": "4854:333:44"
                        }
                      ]
                    }
                  },
                  "id": 3021,
                  "nodeType": "IfStatement",
                  "src": "4346:1316:44",
                  "trueBody": {
                    "id": 2965,
                    "nodeType": "Block",
                    "src": "4374:436:44",
                    "statements": [
                      {
                        "expression": {
                          "id": 2963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 2939,
                                "name": "newCtx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2898,
                                "src": "4442:6:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              null
                            ],
                            "id": 2940,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "4441:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$__$",
                              "typeString": "tuple(bytes memory,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2943,
                                "name": "_cfa",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2692,
                                "src": "4500:4:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "expression": {
                                        "id": 2946,
                                        "name": "_cfa",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2692,
                                        "src": "4562:4:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                                          "typeString": "contract IConstantFlowAgreementV1"
                                        }
                                      },
                                      "id": 2947,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "deleteFlow",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 7790,
                                      "src": "4562:15:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$10791_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (contract ISuperfluidToken,address,address,bytes memory) external returns (bytes memory)"
                                      }
                                    },
                                    "id": 2948,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "4562:24:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  {
                                    "id": 2949,
                                    "name": "_acceptedToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2694,
                                    "src": "4606:14:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISuperToken_$10382",
                                      "typeString": "contract ISuperToken"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 2952,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "4648:4:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_TennerrStreamer_$3628",
                                          "typeString": "contract TennerrStreamer"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_TennerrStreamer_$3628",
                                          "typeString": "contract TennerrStreamer"
                                        }
                                      ],
                                      "id": 2951,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4640:7:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2950,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4640:7:44",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2953,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4640:13:44",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "id": 2954,
                                    "name": "_receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2696,
                                    "src": "4673:9:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 2957,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4712:1:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 2956,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "NewExpression",
                                      "src": "4702:9:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (uint256) pure returns (bytes memory)"
                                      },
                                      "typeName": {
                                        "id": 2955,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4706:5:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_storage_ptr",
                                          "typeString": "bytes"
                                        }
                                      }
                                    },
                                    "id": 2958,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4702:12:44",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_ISuperToken_$10382",
                                      "typeString": "contract ISuperToken"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2944,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "4520:3:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 2945,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodeWithSelector",
                                  "nodeType": "MemberAccess",
                                  "src": "4520:22:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes4) pure returns (bytes memory)"
                                  }
                                },
                                "id": 2959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4520:225:44",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "hexValue": "3078",
                                "id": 2960,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4761:4:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                  "typeString": "literal_string \"0x\""
                                },
                                "value": "0x"
                              },
                              {
                                "id": 2961,
                                "name": "newCtx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2898,
                                "src": "4781:6:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                  "typeString": "literal_string \"0x\""
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 2941,
                                "name": "_host",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2690,
                                "src": "4454:5:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                                  "typeString": "contract ISuperfluid"
                                }
                              },
                              "id": 2942,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "callAgreementWithContext",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5829,
                              "src": "4454:30:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$9921_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                                "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory,bytes memory) external returns (bytes memory,bytes memory)"
                              }
                            },
                            "id": 2962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4454:345:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bytes memory,bytes memory)"
                            }
                          },
                          "src": "4441:358:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2964,
                        "nodeType": "ExpressionStatement",
                        "src": "4441:358:44"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2891,
              "nodeType": "StructuredDocumentation",
              "src": "3612:64:44",
              "text": "@dev If a new stream is opened, or an existing one is opened"
            },
            "id": 3023,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateOutflow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2893,
                  "mutability": "mutable",
                  "name": "ctx",
                  "nodeType": "VariableDeclaration",
                  "scope": 3023,
                  "src": "3705:18:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2892,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3705:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2895,
                  "mutability": "mutable",
                  "name": "userData",
                  "nodeType": "VariableDeclaration",
                  "scope": 3023,
                  "src": "3725:21:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2894,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3725:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3704:43:44"
            },
            "returnParameters": {
              "id": 2899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2898,
                  "mutability": "mutable",
                  "name": "newCtx",
                  "nodeType": "VariableDeclaration",
                  "scope": 3023,
                  "src": "3781:19:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2897,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3781:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3780:21:44"
            },
            "scope": 3628,
            "src": "3681:1987:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3089,
              "nodeType": "Block",
              "src": "5736:521:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 3034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3031,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5754:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5754:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3033,
                          "name": "_tennerrEscrowContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2709,
                          "src": "5768:29:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5754:43:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 3035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5799:16:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 3030,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5746:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5746:70:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3037,
                  "nodeType": "ExpressionStatement",
                  "src": "5746:70:44"
                },
                {
                  "assignments": [
                    3041
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3041,
                      "mutability": "mutable",
                      "name": "order",
                      "nodeType": "VariableDeclaration",
                      "scope": 3089,
                      "src": "5826:32:44",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$2062_memory_ptr",
                        "typeString": "struct TennerrEscrow.Order"
                      },
                      "typeName": {
                        "id": 3040,
                        "name": "TennerrEscrow.Order",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2062,
                        "src": "5826:19:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$2062_storage_ptr",
                          "typeString": "struct TennerrEscrow.Order"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3046,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3044,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3025,
                        "src": "5888:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 3042,
                        "name": "tennerrEscrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2707,
                        "src": "5861:13:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TennerrEscrow_$2421",
                          "typeString": "contract TennerrEscrow"
                        }
                      },
                      "id": 3043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getQuoteData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2223,
                      "src": "5861:26:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Order_$2062_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct TennerrEscrow.Order memory)"
                      }
                    },
                    "id": 3045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5861:33:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$2062_memory_ptr",
                      "typeString": "struct TennerrEscrow.Order memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5826:68:44"
                },
                {
                  "assignments": [
                    3048
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3048,
                      "mutability": "mutable",
                      "name": "buyer",
                      "nodeType": "VariableDeclaration",
                      "scope": 3089,
                      "src": "5904:13:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3047,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5904:7:44",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3051,
                  "initialValue": {
                    "expression": {
                      "id": 3049,
                      "name": "order",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3041,
                      "src": "5920:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$2062_memory_ptr",
                        "typeString": "struct TennerrEscrow.Order memory"
                      }
                    },
                    "id": 3050,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "buyer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2053,
                    "src": "5920:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5904:27:44"
                },
                {
                  "assignments": [
                    3053
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3053,
                      "mutability": "mutable",
                      "name": "seller",
                      "nodeType": "VariableDeclaration",
                      "scope": 3089,
                      "src": "5941:14:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3052,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5941:7:44",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3056,
                  "initialValue": {
                    "expression": {
                      "id": 3054,
                      "name": "order",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3041,
                      "src": "5958:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$2062_memory_ptr",
                        "typeString": "struct TennerrEscrow.Order memory"
                      }
                    },
                    "id": 3055,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "seller",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2055,
                    "src": "5958:12:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5941:29:44"
                },
                {
                  "assignments": [
                    3058
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3058,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 3089,
                      "src": "5980:11:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3057,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5980:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3061,
                  "initialValue": {
                    "expression": {
                      "id": 3059,
                      "name": "order",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3041,
                      "src": "5994:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$2062_memory_ptr",
                        "typeString": "struct TennerrEscrow.Order memory"
                      }
                    },
                    "id": 3060,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "orderPrice",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2059,
                    "src": "5994:16:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5980:30:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3063,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3058,
                          "src": "6028:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6037:1:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6028:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f72646572206e6f7420666574636865642c206a6f62206964206973737565",
                        "id": 3066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6040:33:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69ac1e6a6599122a1ae0096db9fe424075727fd11cba7549121da2215cd65635",
                          "typeString": "literal_string \"order not fetched, job id issue\""
                        },
                        "value": "order not fetched, job id issue"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_69ac1e6a6599122a1ae0096db9fe424075727fd11cba7549121da2215cd65635",
                          "typeString": "literal_string \"order not fetched, job id issue\""
                        }
                      ],
                      "id": 3062,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6020:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6020:54:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3068,
                  "nodeType": "ExpressionStatement",
                  "src": "6020:54:44"
                },
                {
                  "assignments": [
                    3070
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3070,
                      "mutability": "mutable",
                      "name": "streamStart",
                      "nodeType": "VariableDeclaration",
                      "scope": 3089,
                      "src": "6084:16:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3069,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6084:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3073,
                  "initialValue": {
                    "expression": {
                      "id": 3071,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "6103:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 3072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "6103:15:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6084:34:44"
                },
                {
                  "assignments": [
                    3075
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3075,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nodeType": "VariableDeclaration",
                      "scope": 3089,
                      "src": "6128:13:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3074,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6128:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3078,
                  "initialValue": {
                    "expression": {
                      "id": 3076,
                      "name": "order",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3041,
                      "src": "6144:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$2062_memory_ptr",
                        "typeString": "struct TennerrEscrow.Order memory"
                      }
                    },
                    "id": 3077,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "absDeadline",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2061,
                    "src": "6144:17:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6128:33:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3080,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3025,
                        "src": "6189:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 3081,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3048,
                        "src": "6195:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3082,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3053,
                        "src": "6202:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3083,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3058,
                        "src": "6210:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3084,
                        "name": "streamStart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3070,
                        "src": "6218:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3085,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3075,
                        "src": "6231:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3086,
                        "name": "flowRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3027,
                        "src": "6241:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3079,
                      "name": "_updateStreamData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3143,
                      "src": "6171:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,address,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 3087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6171:79:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3088,
                  "nodeType": "ExpressionStatement",
                  "src": "6171:79:44"
                }
              ]
            },
            "functionSelector": "a5a6eeb5",
            "id": 3090,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "accountingCache",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3025,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3090,
                  "src": "5699:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3024,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5699:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3027,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 3090,
                  "src": "5714:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3026,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5714:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5698:30:44"
            },
            "returnParameters": {
              "id": 3029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5736:0:44"
            },
            "scope": 3628,
            "src": "5674:583:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3142,
              "nodeType": "Block",
              "src": "6449:723:44",
              "statements": [
                {
                  "assignments": [
                    3108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3108,
                      "mutability": "mutable",
                      "name": "timeLeft",
                      "nodeType": "VariableDeclaration",
                      "scope": 3142,
                      "src": "6834:13:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3107,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6834:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3114,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3111,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "6863:5:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 3112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "6863:15:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3109,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3102,
                        "src": "6850:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6667,
                      "src": "6850:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6850:29:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6834:45:44"
                },
                {
                  "assignments": [
                    3116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3116,
                      "mutability": "mutable",
                      "name": "timePassed",
                      "nodeType": "VariableDeclaration",
                      "scope": 3142,
                      "src": "6889:15:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3115,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6889:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3123,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3121,
                        "name": "streamStart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3100,
                        "src": "6929:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "components": [
                          {
                            "expression": {
                              "id": 3117,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6908:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6908:15:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3119,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6907:17:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6667,
                      "src": "6907:21:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6907:34:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6889:52:44"
                },
                {
                  "assignments": [
                    3125
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3125,
                      "mutability": "mutable",
                      "name": "streamedToDate",
                      "nodeType": "VariableDeclaration",
                      "scope": 3142,
                      "src": "6951:19:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3124,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6951:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3129,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3126,
                      "name": "flowRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3104,
                      "src": "6973:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 3127,
                      "name": "timePassed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3116,
                      "src": "6984:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6973:21:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6951:43:44"
                },
                {
                  "expression": {
                    "id": 3140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3130,
                        "name": "streamByJobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2718,
                        "src": "7075:13:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$",
                          "typeString": "mapping(bytes32 => uint256[] storage ref)"
                        }
                      },
                      "id": 3132,
                      "indexExpression": {
                        "id": 3131,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3092,
                        "src": "7089:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7075:20:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "id": 3133,
                          "name": "flowRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3104,
                          "src": "7099:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3134,
                          "name": "streamedToDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3125,
                          "src": "7109:14:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3135,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3098,
                          "src": "7125:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3136,
                          "name": "streamStart",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3100,
                          "src": "7133:11:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3137,
                          "name": "timeLeft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3108,
                          "src": "7146:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3138,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3102,
                          "src": "7156:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3139,
                      "isConstant": false,
                      "isInlineArray": true,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7098:67:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$6_memory_ptr",
                        "typeString": "uint256[6] memory"
                      }
                    },
                    "src": "7075:90:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 3141,
                  "nodeType": "ExpressionStatement",
                  "src": "7075:90:44"
                }
              ]
            },
            "id": 3143,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateStreamData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3092,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3143,
                  "src": "6297:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3091,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6297:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3094,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 3143,
                  "src": "6318:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3093,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6318:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3096,
                  "mutability": "mutable",
                  "name": "seller",
                  "nodeType": "VariableDeclaration",
                  "scope": 3143,
                  "src": "6339:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6339:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3098,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3143,
                  "src": "6361:11:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3097,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6361:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3100,
                  "mutability": "mutable",
                  "name": "streamStart",
                  "nodeType": "VariableDeclaration",
                  "scope": 3143,
                  "src": "6380:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3099,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6380:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3102,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "scope": 3143,
                  "src": "6404:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3101,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6404:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3104,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 3143,
                  "src": "6425:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3103,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6425:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6289:150:44"
            },
            "returnParameters": {
              "id": 3106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6449:0:44"
            },
            "scope": 3628,
            "src": "6263:909:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3214,
              "nodeType": "Block",
              "src": "7267:655:44",
              "statements": [
                {
                  "assignments": [
                    3153
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3153,
                      "mutability": "mutable",
                      "name": "totalToStream",
                      "nodeType": "VariableDeclaration",
                      "scope": 3214,
                      "src": "7277:18:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3152,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7277:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3159,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3154,
                        "name": "streamByJobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2718,
                        "src": "7298:13:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$",
                          "typeString": "mapping(bytes32 => uint256[] storage ref)"
                        }
                      },
                      "id": 3156,
                      "indexExpression": {
                        "id": 3155,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3145,
                        "src": "7312:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7298:20:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 3158,
                    "indexExpression": {
                      "hexValue": "32",
                      "id": 3157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7319:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7298:23:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7277:44:44"
                },
                {
                  "assignments": [
                    3161
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3161,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nodeType": "VariableDeclaration",
                      "scope": 3214,
                      "src": "7331:13:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3160,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7331:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3167,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3162,
                        "name": "streamByJobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2718,
                        "src": "7347:13:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$",
                          "typeString": "mapping(bytes32 => uint256[] storage ref)"
                        }
                      },
                      "id": 3164,
                      "indexExpression": {
                        "id": 3163,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3145,
                        "src": "7361:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7347:20:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 3166,
                    "indexExpression": {
                      "hexValue": "35",
                      "id": 3165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7368:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7347:23:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7331:39:44"
                },
                {
                  "assignments": [
                    3169
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3169,
                      "mutability": "mutable",
                      "name": "streamStart",
                      "nodeType": "VariableDeclaration",
                      "scope": 3214,
                      "src": "7380:16:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3168,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7380:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3175,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3170,
                        "name": "streamByJobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2718,
                        "src": "7399:13:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$",
                          "typeString": "mapping(bytes32 => uint256[] storage ref)"
                        }
                      },
                      "id": 3172,
                      "indexExpression": {
                        "id": 3171,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3145,
                        "src": "7413:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7399:20:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 3174,
                    "indexExpression": {
                      "hexValue": "33",
                      "id": 3173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7420:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7399:23:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7380:42:44"
                },
                {
                  "assignments": [
                    3177
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3177,
                      "mutability": "mutable",
                      "name": "flowRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 3214,
                      "src": "7432:13:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3176,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7432:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3183,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3178,
                        "name": "streamByJobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2718,
                        "src": "7448:13:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$",
                          "typeString": "mapping(bytes32 => uint256[] storage ref)"
                        }
                      },
                      "id": 3180,
                      "indexExpression": {
                        "id": 3179,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3145,
                        "src": "7462:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7448:20:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 3182,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 3181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7469:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7448:23:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7432:39:44"
                },
                {
                  "assignments": [
                    3185
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3185,
                      "mutability": "mutable",
                      "name": "timeLeft",
                      "nodeType": "VariableDeclaration",
                      "scope": 3214,
                      "src": "7482:13:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3184,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7482:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3191,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3188,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7511:5:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 3189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7511:15:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3186,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3161,
                        "src": "7498:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6667,
                      "src": "7498:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7498:29:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7482:45:44"
                },
                {
                  "assignments": [
                    3193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3193,
                      "mutability": "mutable",
                      "name": "timePassed",
                      "nodeType": "VariableDeclaration",
                      "scope": 3214,
                      "src": "7593:15:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3192,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7593:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3200,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3198,
                        "name": "streamStart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3169,
                        "src": "7633:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "components": [
                          {
                            "expression": {
                              "id": 3194,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "7612:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "7612:15:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3196,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7611:17:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6667,
                      "src": "7611:21:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7611:34:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7593:52:44"
                },
                {
                  "assignments": [
                    3202
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3202,
                      "mutability": "mutable",
                      "name": "streamedToDate",
                      "nodeType": "VariableDeclaration",
                      "scope": 3214,
                      "src": "7655:19:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3201,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7655:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3206,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3203,
                      "name": "flowRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3177,
                      "src": "7677:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 3204,
                      "name": "timePassed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3193,
                      "src": "7688:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7677:21:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7655:43:44"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 3207,
                        "name": "flowRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3177,
                        "src": "7855:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3208,
                        "name": "streamedToDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3202,
                        "src": "7865:14:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3209,
                        "name": "totalToStream",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3153,
                        "src": "7881:13:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3210,
                        "name": "timeLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3185,
                        "src": "7896:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3211,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3161,
                        "src": "7906:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 3212,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7854:61:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                      "typeString": "uint256[5] memory"
                    }
                  },
                  "functionReturnParameters": 3151,
                  "id": 3213,
                  "nodeType": "Return",
                  "src": "7847:68:44"
                }
              ]
            },
            "functionSelector": "60f5bc21",
            "id": 3215,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStreamData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3145,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3215,
                  "src": "7208:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3144,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7208:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7200:22:44"
            },
            "returnParameters": {
              "id": 3151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3150,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3215,
                  "src": "7251:14:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                    "typeString": "uint256[5]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3147,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "7251:4:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3149,
                    "length": {
                      "hexValue": "35",
                      "id": 3148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7256:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "7251:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
                      "typeString": "uint256[5]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7250:16:44"
            },
            "scope": 3628,
            "src": "7178:744:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3321,
              "nodeType": "Block",
              "src": "8035:1360:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3221,
                          "name": "newReceiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3217,
                          "src": "8053:11:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8076:1:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8068:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3222,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8068:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8068:10:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "8053:25:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6577207265636569766572206973207a65726f2061646472657373",
                        "id": 3227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8080:30:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_496a5702531aac491f1d3527d5f3c42d2a1b4d1c7484089d534790e00885dae3",
                          "typeString": "literal_string \"New receiver is zero address\""
                        },
                        "value": "New receiver is zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_496a5702531aac491f1d3527d5f3c42d2a1b4d1c7484089d534790e00885dae3",
                          "typeString": "literal_string \"New receiver is zero address\""
                        }
                      ],
                      "id": 3220,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8045:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8045:66:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3229,
                  "nodeType": "ExpressionStatement",
                  "src": "8045:66:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8215:36:44",
                        "subExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3234,
                                  "name": "newReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3217,
                                  "src": "8238:11:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3233,
                                "name": "ISuperApp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10029,
                                "src": "8228:9:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISuperApp_$10029_$",
                                  "typeString": "type(contract ISuperApp)"
                                }
                              },
                              "id": 3235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8228:22:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperApp_$10029",
                                "typeString": "contract ISuperApp"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISuperApp_$10029",
                                "typeString": "contract ISuperApp"
                              }
                            ],
                            "expression": {
                              "id": 3231,
                              "name": "_host",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2690,
                              "src": "8216:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 3232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isApp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5657,
                            "src": "8216:11:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_contract$_ISuperApp_$10029_$returns$_t_bool_$",
                              "typeString": "function (contract ISuperApp) view external returns (bool)"
                            }
                          },
                          "id": 3236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8216:35:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e65772072656365697665722063616e206e6f742062652061207375706572417070",
                        "id": 3238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8253:36:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f2f729735f0dfd7f49da421cd4b6c89cc95be0ef8efc7c8304051b20105202f",
                          "typeString": "literal_string \"New receiver can not be a superApp\""
                        },
                        "value": "New receiver can not be a superApp"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f2f729735f0dfd7f49da421cd4b6c89cc95be0ef8efc7c8304051b20105202f",
                          "typeString": "literal_string \"New receiver can not be a superApp\""
                        }
                      ],
                      "id": 3230,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8207:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8207:83:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3240,
                  "nodeType": "ExpressionStatement",
                  "src": "8207:83:44"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3241,
                      "name": "newReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3217,
                      "src": "8304:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 3242,
                      "name": "_receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2696,
                      "src": "8319:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8304:24:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3245,
                  "nodeType": "IfStatement",
                  "src": "8300:38:44",
                  "trueBody": {
                    "functionReturnParameters": 3219,
                    "id": 3244,
                    "nodeType": "Return",
                    "src": "8330:8:44"
                  }
                },
                {
                  "assignments": [
                    null,
                    3247,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 3247,
                      "mutability": "mutable",
                      "name": "outFlowRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 3321,
                      "src": "8393:17:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      },
                      "typeName": {
                        "id": 3246,
                        "name": "int96",
                        "nodeType": "ElementaryTypeName",
                        "src": "8393:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 3257,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3250,
                        "name": "_acceptedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2694,
                        "src": "8429:14:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$10382",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3253,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8453:4:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TennerrStreamer_$3628",
                              "typeString": "contract TennerrStreamer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TennerrStreamer_$3628",
                              "typeString": "contract TennerrStreamer"
                            }
                          ],
                          "id": 3252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8445:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3251,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8445:7:44",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8445:13:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3255,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2696,
                        "src": "8460:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperToken_$10382",
                          "typeString": "contract ISuperToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3248,
                        "name": "_cfa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2692,
                        "src": "8416:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                          "typeString": "contract IConstantFlowAgreementV1"
                        }
                      },
                      "id": 3249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getFlow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7734,
                      "src": "8416:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ISuperfluidToken_$10791_$_t_address_$_t_address_$returns$_t_uint256_$_t_int96_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (contract ISuperfluidToken,address,address) view external returns (uint256,int96,uint256,uint256)"
                      }
                    },
                    "id": 3256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8416:54:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_int96_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,int96,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8391:79:44"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    },
                    "id": 3260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3258,
                      "name": "outFlowRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3247,
                      "src": "8536:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8550:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8536:15:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3312,
                  "nodeType": "IfStatement",
                  "src": "8533:729:44",
                  "trueBody": {
                    "id": 3311,
                    "nodeType": "Block",
                    "src": "8552:710:44",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3264,
                              "name": "_cfa",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2692,
                              "src": "8599:4:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                                "typeString": "contract IConstantFlowAgreementV1"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 3267,
                                      "name": "_cfa",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2692,
                                      "src": "8661:4:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                                        "typeString": "contract IConstantFlowAgreementV1"
                                      }
                                    },
                                    "id": 3268,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "deleteFlow",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7790,
                                    "src": "8661:15:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$10791_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (contract ISuperfluidToken,address,address,bytes memory) external returns (bytes memory)"
                                    }
                                  },
                                  "id": 3269,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "8661:24:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 3270,
                                  "name": "_acceptedToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2694,
                                  "src": "8705:14:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperToken_$10382",
                                    "typeString": "contract ISuperToken"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 3273,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "8747:4:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TennerrStreamer_$3628",
                                        "typeString": "contract TennerrStreamer"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TennerrStreamer_$3628",
                                        "typeString": "contract TennerrStreamer"
                                      }
                                    ],
                                    "id": 3272,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8739:7:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 3271,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8739:7:44",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3274,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8739:13:44",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "id": 3275,
                                  "name": "_receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2696,
                                  "src": "8772:9:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 3278,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8811:1:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 3277,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "8801:9:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (bytes memory)"
                                    },
                                    "typeName": {
                                      "id": 3276,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8805:5:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_storage_ptr",
                                        "typeString": "bytes"
                                      }
                                    }
                                  },
                                  "id": 3279,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8801:12:44",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_ISuperToken_$10382",
                                    "typeString": "contract ISuperToken"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 3265,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "8619:3:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 3266,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "8619:22:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 3280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8619:210:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "3078",
                              "id": 3281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8845:4:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                "typeString": "literal_string \"0x\""
                              },
                              "value": "0x"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                                "typeString": "contract IConstantFlowAgreementV1"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                "typeString": "literal_string \"0x\""
                              }
                            ],
                            "expression": {
                              "id": 3261,
                              "name": "_host",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2690,
                              "src": "8564:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 3263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "callAgreement",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5783,
                            "src": "8564:19:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$9921_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory) external returns (bytes memory)"
                            }
                          },
                          "id": 3282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8564:297:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 3283,
                        "nodeType": "ExpressionStatement",
                        "src": "8564:297:44"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3287,
                              "name": "_cfa",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2692,
                              "src": "8954:4:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                                "typeString": "contract IConstantFlowAgreementV1"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 3290,
                                      "name": "_cfa",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2692,
                                      "src": "9016:4:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                                        "typeString": "contract IConstantFlowAgreementV1"
                                      }
                                    },
                                    "id": 3291,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "createFlow",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7702,
                                    "src": "9016:15:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$10791_$_t_address_$_t_int96_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (contract ISuperfluidToken,address,int96,bytes memory) external returns (bytes memory)"
                                    }
                                  },
                                  "id": 3292,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "9016:24:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 3293,
                                  "name": "_acceptedToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2694,
                                  "src": "9060:14:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperToken_$10382",
                                    "typeString": "contract ISuperToken"
                                  }
                                },
                                {
                                  "id": 3294,
                                  "name": "newReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3217,
                                  "src": "9094:11:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 3297,
                                      "name": "_acceptedToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2694,
                                      "src": "9141:14:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ISuperToken_$10382",
                                        "typeString": "contract ISuperToken"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 3300,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "9165:4:44",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_TennerrStreamer_$3628",
                                            "typeString": "contract TennerrStreamer"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_TennerrStreamer_$3628",
                                            "typeString": "contract TennerrStreamer"
                                          }
                                        ],
                                        "id": 3299,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "9157:7:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 3298,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "9157:7:44",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 3301,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9157:13:44",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_ISuperToken_$10382",
                                        "typeString": "contract ISuperToken"
                                      },
                                      {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    ],
                                    "expression": {
                                      "id": 3295,
                                      "name": "_cfa",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2692,
                                      "src": "9125:4:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                                        "typeString": "contract IConstantFlowAgreementV1"
                                      }
                                    },
                                    "id": 3296,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getNetFlow",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7776,
                                    "src": "9125:15:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_contract$_ISuperfluidToken_$10791_$_t_address_$returns$_t_int96_$",
                                      "typeString": "function (contract ISuperfluidToken,address) view external returns (int96)"
                                    }
                                  },
                                  "id": 3302,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9125:46:44",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 3305,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9201:1:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 3304,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "9191:9:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (bytes memory)"
                                    },
                                    "typeName": {
                                      "id": 3303,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9195:5:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_storage_ptr",
                                        "typeString": "bytes"
                                      }
                                    }
                                  },
                                  "id": 3306,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9191:12:44",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_ISuperToken_$10382",
                                    "typeString": "contract ISuperToken"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 3288,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "8974:3:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 3289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "8974:22:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 3307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8974:245:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "3078",
                              "id": 3308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9235:4:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                "typeString": "literal_string \"0x\""
                              },
                              "value": "0x"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                                "typeString": "contract IConstantFlowAgreementV1"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                "typeString": "literal_string \"0x\""
                              }
                            ],
                            "expression": {
                              "id": 3284,
                              "name": "_host",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2690,
                              "src": "8919:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 3286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "callAgreement",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5783,
                            "src": "8919:19:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$9921_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory) external returns (bytes memory)"
                            }
                          },
                          "id": 3309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8919:332:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 3310,
                        "nodeType": "ExpressionStatement",
                        "src": "8919:332:44"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3313,
                      "name": "_receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2696,
                      "src": "9323:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3314,
                      "name": "newReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3217,
                      "src": "9335:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9323:23:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3316,
                  "nodeType": "ExpressionStatement",
                  "src": "9323:23:44"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3318,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2696,
                        "src": "9378:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3317,
                      "name": "ReceiverChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2890,
                      "src": "9362:15:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9362:26:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3320,
                  "nodeType": "EmitStatement",
                  "src": "9357:31:44"
                }
              ]
            },
            "id": 3322,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_changeReceiver",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3217,
                  "mutability": "mutable",
                  "name": "newReceiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 3322,
                  "src": "8004:19:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8004:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8002:23:44"
            },
            "returnParameters": {
              "id": 3219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8035:0:44"
            },
            "scope": 3628,
            "src": "7978:1417:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              7558
            ],
            "body": {
              "id": 3365,
              "nodeType": "Block",
              "src": "9969:139:44",
              "statements": [
                {
                  "assignments": [
                    3347
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3347,
                      "mutability": "mutable",
                      "name": "userData",
                      "nodeType": "VariableDeclaration",
                      "scope": 3365,
                      "src": "9979:21:44",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 3346,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "9979:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3359,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3352,
                              "name": "_ctx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3334,
                              "src": "10030:4:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 3350,
                              "name": "_host",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2690,
                              "src": "10014:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 3351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "decodeCtx",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5847,
                            "src": "10014:15:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_struct$_Context_$5814_memory_ptr_$",
                              "typeString": "function (bytes memory) pure external returns (struct ISuperfluid.Context memory)"
                            }
                          },
                          "id": 3353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10014:21:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Context_$5814_memory_ptr",
                            "typeString": "struct ISuperfluid.Context memory"
                          }
                        },
                        "id": 3354,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "userData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5805,
                        "src": "10014:30:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 3356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10047:5:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 3355,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "10047:5:44",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 3357,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "10046:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                          "typeString": "type(bytes storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                          "typeString": "type(bytes storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 3348,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "10003:3:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 3349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "10003:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 3358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10003:51:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9979:75:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3361,
                        "name": "_ctx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3334,
                        "src": "10086:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 3362,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3347,
                        "src": "10092:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3360,
                      "name": "_updateOutflow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3023,
                      "src": "10071:14:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_calldata_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes calldata,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 3363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10071:30:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 3345,
                  "id": 3364,
                  "nodeType": "Return",
                  "src": "10064:37:44"
                }
              ]
            },
            "functionSelector": "d86ed3e5",
            "id": 3366,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3338,
                    "name": "_superToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3324,
                    "src": "9880:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10382",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  {
                    "id": 3339,
                    "name": "_agreementClass",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3326,
                    "src": "9893:15:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3340,
                "modifierName": {
                  "id": 3337,
                  "name": "onlyExpected",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3623,
                  "src": "9867:12:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_contract$_ISuperToken_$10382_$_t_address_$",
                    "typeString": "modifier (contract ISuperToken,address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "9867:42:44"
              },
              {
                "id": 3342,
                "modifierName": {
                  "id": 3341,
                  "name": "onlyHost",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3601,
                  "src": "9918:8:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "9918:8:44"
              }
            ],
            "name": "afterAgreementCreated",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3336,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9850:8:44"
            },
            "parameters": {
              "id": 3335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3324,
                  "mutability": "mutable",
                  "name": "_superToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 3366,
                  "src": "9628:23:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10382",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 3323,
                    "name": "ISuperToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10382,
                    "src": "9628:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10382",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3326,
                  "mutability": "mutable",
                  "name": "_agreementClass",
                  "nodeType": "VariableDeclaration",
                  "scope": 3366,
                  "src": "9661:23:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9661:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3328,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3366,
                  "src": "9694:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3327,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9694:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3330,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3366,
                  "src": "9728:14:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3329,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9728:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3332,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3366,
                  "src": "9771:14:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3331,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9771:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3334,
                  "mutability": "mutable",
                  "name": "_ctx",
                  "nodeType": "VariableDeclaration",
                  "scope": 3366,
                  "src": "9807:19:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3333,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9807:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9618:214:44"
            },
            "returnParameters": {
              "id": 3345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3344,
                  "mutability": "mutable",
                  "name": "newCtx",
                  "nodeType": "VariableDeclaration",
                  "scope": 3366,
                  "src": "9944:19:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3343,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9944:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9943:21:44"
            },
            "scope": 3628,
            "src": "9588:520:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              7602
            ],
            "body": {
              "id": 3409,
              "nodeType": "Block",
              "src": "10488:140:44",
              "statements": [
                {
                  "assignments": [
                    3391
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3391,
                      "mutability": "mutable",
                      "name": "userData",
                      "nodeType": "VariableDeclaration",
                      "scope": 3409,
                      "src": "10498:21:44",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 3390,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "10498:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3403,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3396,
                              "name": "_ctx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3378,
                              "src": "10549:4:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 3394,
                              "name": "_host",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2690,
                              "src": "10533:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 3395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "decodeCtx",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5847,
                            "src": "10533:15:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_struct$_Context_$5814_memory_ptr_$",
                              "typeString": "function (bytes memory) pure external returns (struct ISuperfluid.Context memory)"
                            }
                          },
                          "id": 3397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10533:21:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Context_$5814_memory_ptr",
                            "typeString": "struct ISuperfluid.Context memory"
                          }
                        },
                        "id": 3398,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "userData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5805,
                        "src": "10533:30:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 3400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10566:5:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 3399,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "10566:5:44",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 3401,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "10565:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                          "typeString": "type(bytes storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                          "typeString": "type(bytes storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 3392,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "10522:3:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 3393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "10522:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 3402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10522:51:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10498:75:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3405,
                        "name": "_ctx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3378,
                        "src": "10605:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 3406,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3391,
                        "src": "10611:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3404,
                      "name": "_updateOutflow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3023,
                      "src": "10590:14:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_calldata_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes calldata,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 3407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10590:31:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 3389,
                  "id": 3408,
                  "nodeType": "Return",
                  "src": "10583:38:44"
                }
              ]
            },
            "functionSelector": "230dbd29",
            "id": 3410,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3382,
                    "name": "_superToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3368,
                    "src": "10399:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10382",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  {
                    "id": 3383,
                    "name": "_agreementClass",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3370,
                    "src": "10412:15:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3384,
                "modifierName": {
                  "id": 3381,
                  "name": "onlyExpected",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3623,
                  "src": "10386:12:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_contract$_ISuperToken_$10382_$_t_address_$",
                    "typeString": "modifier (contract ISuperToken,address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10386:42:44"
              },
              {
                "id": 3386,
                "modifierName": {
                  "id": 3385,
                  "name": "onlyHost",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3601,
                  "src": "10437:8:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10437:8:44"
              }
            ],
            "name": "afterAgreementUpdated",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3380,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10369:8:44"
            },
            "parameters": {
              "id": 3379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3368,
                  "mutability": "mutable",
                  "name": "_superToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 3410,
                  "src": "10154:23:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10382",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 3367,
                    "name": "ISuperToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10382,
                    "src": "10154:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10382",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3370,
                  "mutability": "mutable",
                  "name": "_agreementClass",
                  "nodeType": "VariableDeclaration",
                  "scope": 3410,
                  "src": "10187:23:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10187:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3372,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3410,
                  "src": "10220:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3371,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10220:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3374,
                  "mutability": "mutable",
                  "name": "agreementData",
                  "nodeType": "VariableDeclaration",
                  "scope": 3410,
                  "src": "10253:28:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3373,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10253:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3376,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3410,
                  "src": "10291:14:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3375,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10291:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3378,
                  "mutability": "mutable",
                  "name": "_ctx",
                  "nodeType": "VariableDeclaration",
                  "scope": 3410,
                  "src": "10326:19:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3377,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10326:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10144:207:44"
            },
            "returnParameters": {
              "id": 3389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3388,
                  "mutability": "mutable",
                  "name": "newCtx",
                  "nodeType": "VariableDeclaration",
                  "scope": 3410,
                  "src": "10463:19:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3387,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10463:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10462:21:44"
            },
            "scope": 3628,
            "src": "10114:514:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              7646
            ],
            "body": {
              "id": 3461,
              "nodeType": "Block",
              "src": "10965:314:44",
              "statements": [
                {
                  "assignments": [
                    3431
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3431,
                      "mutability": "mutable",
                      "name": "userData",
                      "nodeType": "VariableDeclaration",
                      "scope": 3461,
                      "src": "11067:21:44",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 3430,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "11067:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3443,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3436,
                              "name": "_ctx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3422,
                              "src": "11118:4:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 3434,
                              "name": "_host",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2690,
                              "src": "11102:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 3435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "decodeCtx",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5847,
                            "src": "11102:15:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_struct$_Context_$5814_memory_ptr_$",
                              "typeString": "function (bytes memory) pure external returns (struct ISuperfluid.Context memory)"
                            }
                          },
                          "id": 3437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11102:21:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Context_$5814_memory_ptr",
                            "typeString": "struct ISuperfluid.Context memory"
                          }
                        },
                        "id": 3438,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "userData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5805,
                        "src": "11102:30:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 3440,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11135:5:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 3439,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "11135:5:44",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 3441,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "11134:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                          "typeString": "type(bytes storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                          "typeString": "type(bytes storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 3432,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "11091:3:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 3433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "11091:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 3442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11091:51:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11067:75:44"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "11156:26:44",
                      "subExpression": {
                        "arguments": [
                          {
                            "id": 3445,
                            "name": "_superToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3412,
                            "src": "11170:11:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$10382",
                              "typeString": "contract ISuperToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISuperToken_$10382",
                              "typeString": "contract ISuperToken"
                            }
                          ],
                          "id": 3444,
                          "name": "_isSameToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3518,
                          "src": "11157:12:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_ISuperToken_$10382_$returns$_t_bool_$",
                            "typeString": "function (contract ISuperToken) view returns (bool)"
                          }
                        },
                        "id": 3446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11157:25:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "id": 3451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "11186:26:44",
                      "subExpression": {
                        "arguments": [
                          {
                            "id": 3449,
                            "name": "_agreementClass",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3414,
                            "src": "11196:15:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3448,
                          "name": "_isCFAv1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3536,
                          "src": "11187:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 3450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11187:25:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11156:56:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3455,
                  "nodeType": "IfStatement",
                  "src": "11152:73:44",
                  "trueBody": {
                    "expression": {
                      "id": 3453,
                      "name": "_ctx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3422,
                      "src": "11221:4:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "functionReturnParameters": 3429,
                    "id": 3454,
                    "nodeType": "Return",
                    "src": "11214:11:44"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3457,
                        "name": "_ctx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3422,
                        "src": "11257:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 3458,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3431,
                        "src": "11263:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3456,
                      "name": "_updateOutflow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3023,
                      "src": "11242:14:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_calldata_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes calldata,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 3459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11242:30:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 3429,
                  "id": 3460,
                  "nodeType": "Return",
                  "src": "11235:37:44"
                }
              ]
            },
            "functionSelector": "53c11f99",
            "id": 3462,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3426,
                "modifierName": {
                  "id": 3425,
                  "name": "onlyHost",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3601,
                  "src": "10914:8:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10914:8:44"
              }
            ],
            "name": "afterAgreementTerminated",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3424,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10897:8:44"
            },
            "parameters": {
              "id": 3423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3412,
                  "mutability": "mutable",
                  "name": "_superToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 3462,
                  "src": "10677:23:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10382",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 3411,
                    "name": "ISuperToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10382,
                    "src": "10677:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10382",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3414,
                  "mutability": "mutable",
                  "name": "_agreementClass",
                  "nodeType": "VariableDeclaration",
                  "scope": 3462,
                  "src": "10710:23:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10710:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3416,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3462,
                  "src": "10743:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3415,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10743:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3418,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3462,
                  "src": "10776:14:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3417,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10776:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3420,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3462,
                  "src": "10819:14:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3419,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10819:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3422,
                  "mutability": "mutable",
                  "name": "_ctx",
                  "nodeType": "VariableDeclaration",
                  "scope": 3462,
                  "src": "10854:19:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3421,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10854:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10667:212:44"
            },
            "returnParameters": {
              "id": 3429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3428,
                  "mutability": "mutable",
                  "name": "newCtx",
                  "nodeType": "VariableDeclaration",
                  "scope": 3462,
                  "src": "10940:19:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3427,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10940:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10939:21:44"
            },
            "scope": 3628,
            "src": "10634:645:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3499,
              "nodeType": "Block",
              "src": "11370:420:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 3475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3472,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11388:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11388:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3474,
                          "name": "_tennerrContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2711,
                          "src": "11402:23:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "11388:37:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 3476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11427:16:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 3471,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11380:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11380:64:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3478,
                  "nodeType": "ExpressionStatement",
                  "src": "11380:64:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3482,
                        "name": "_cfa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2692,
                        "src": "11491:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                          "typeString": "contract IConstantFlowAgreementV1"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 3485,
                                "name": "_cfa",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2692,
                                "src": "11557:4:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                }
                              },
                              "id": 3486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "createFlow",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7702,
                              "src": "11557:15:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$10791_$_t_address_$_t_int96_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (contract ISuperfluidToken,address,int96,bytes memory) external returns (bytes memory)"
                              }
                            },
                            "id": 3487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "11557:24:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 3488,
                            "name": "_acceptedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2694,
                            "src": "11603:14:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$10382",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          {
                            "id": 3489,
                            "name": "newReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3464,
                            "src": "11639:11:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3490,
                            "name": "flowRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3466,
                            "src": "11672:8:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3493,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11712:1:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "11702:9:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (bytes memory)"
                              },
                              "typeName": {
                                "id": 3491,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "11706:5:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes"
                                }
                              }
                            },
                            "id": 3494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11702:12:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_contract$_ISuperToken_$10382",
                              "typeString": "contract ISuperToken"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 3483,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11513:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "11513:22:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 3495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11513:219:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 3496,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3468,
                        "src": "11750:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7808",
                          "typeString": "contract IConstantFlowAgreementV1"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 3479,
                        "name": "_host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2690,
                        "src": "11454:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                          "typeString": "contract ISuperfluid"
                        }
                      },
                      "id": 3481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callAgreement",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5783,
                      "src": "11454:19:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$9921_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory) external returns (bytes memory)"
                      }
                    },
                    "id": 3497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11454:329:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 3498,
                  "nodeType": "ExpressionStatement",
                  "src": "11454:329:44"
                }
              ]
            },
            "functionSelector": "ae015adc",
            "id": 3500,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createFlow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3464,
                  "mutability": "mutable",
                  "name": "newReceiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 3500,
                  "src": "11305:19:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11305:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3466,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 3500,
                  "src": "11326:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3465,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11326:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3468,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3500,
                  "src": "11341:18:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3467,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11341:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11304:56:44"
            },
            "returnParameters": {
              "id": 3470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11370:0:44"
            },
            "scope": 3628,
            "src": "11285:505:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3517,
              "nodeType": "Block",
              "src": "11870:70:44",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 3509,
                          "name": "superToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3502,
                          "src": "11895:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$10382",
                            "typeString": "contract ISuperToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ISuperToken_$10382",
                            "typeString": "contract ISuperToken"
                          }
                        ],
                        "id": 3508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11887:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3507,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11887:7:44",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11887:19:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 3513,
                          "name": "_acceptedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2694,
                          "src": "11918:14:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$10382",
                            "typeString": "contract ISuperToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ISuperToken_$10382",
                            "typeString": "contract ISuperToken"
                          }
                        ],
                        "id": 3512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11910:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3511,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11910:7:44",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11910:23:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11887:46:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3506,
                  "id": 3516,
                  "nodeType": "Return",
                  "src": "11880:53:44"
                }
              ]
            },
            "id": 3518,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isSameToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3502,
                  "mutability": "mutable",
                  "name": "superToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 3518,
                  "src": "11818:22:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10382",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 3501,
                    "name": "ISuperToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10382,
                    "src": "11818:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10382",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11817:24:44"
            },
            "returnParameters": {
              "id": 3506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3505,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3518,
                  "src": "11864:4:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3504,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11864:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11863:6:44"
            },
            "scope": 3628,
            "src": "11796:144:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3535,
              "nodeType": "Block",
              "src": "12016:158:44",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 3533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 3526,
                              "name": "agreementClass",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3520,
                              "src": "12049:14:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3525,
                            "name": "ISuperAgreement",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9921,
                            "src": "12033:15:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISuperAgreement_$9921_$",
                              "typeString": "type(contract ISuperAgreement)"
                            }
                          },
                          "id": 3527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12033:31:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperAgreement_$9921",
                            "typeString": "contract ISuperAgreement"
                          }
                        },
                        "id": 3528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "agreementType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9904,
                        "src": "12033:45:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                          "typeString": "function () view external returns (bytes32)"
                        }
                      },
                      "id": 3529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12033:47:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e61677265656d656e74732e436f6e7374616e74466c6f7741677265656d656e742e7631",
                          "id": 3531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12106:60:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_a9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3",
                            "typeString": "literal_string \"org.superfluid-finance.agreements.ConstantFlowAgreement.v1\""
                          },
                          "value": "org.superfluid-finance.agreements.ConstantFlowAgreement.v1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_a9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3",
                            "typeString": "literal_string \"org.superfluid-finance.agreements.ConstantFlowAgreement.v1\""
                          }
                        ],
                        "id": 3530,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "12096:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 3532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12096:71:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "12033:134:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3524,
                  "id": 3534,
                  "nodeType": "Return",
                  "src": "12026:141:44"
                }
              ]
            },
            "id": 3536,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isCFAv1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3520,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nodeType": "VariableDeclaration",
                  "scope": 3536,
                  "src": "11964:22:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3519,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11964:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11963:24:44"
            },
            "returnParameters": {
              "id": 3524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3523,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3536,
                  "src": "12010:4:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3522,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12010:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12009:6:44"
            },
            "scope": 3628,
            "src": "11946:228:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3560,
              "nodeType": "Block",
              "src": "12238:194:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3543,
                            "name": "ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2701,
                            "src": "12268:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 3544,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "12280:3:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "12280:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 3542,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4242,
                          "src": "12260:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 3546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12260:31:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f7420616e2061646d696e",
                        "id": 3547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12293:24:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
                          "typeString": "literal_string \"Caller is not an admin\""
                        },
                        "value": "Caller is not an admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
                          "typeString": "literal_string \"Caller is not an admin\""
                        }
                      ],
                      "id": 3541,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12252:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12252:66:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3549,
                  "nodeType": "ExpressionStatement",
                  "src": "12252:66:44"
                },
                {
                  "expression": {
                    "id": 3552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3550,
                      "name": "_tennerrContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2711,
                      "src": "12332:23:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3551,
                      "name": "newContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3538,
                      "src": "12358:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "12332:37:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 3553,
                  "nodeType": "ExpressionStatement",
                  "src": "12332:37:44"
                },
                {
                  "expression": {
                    "id": 3558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3554,
                      "name": "tennerr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2713,
                      "src": "12383:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Tennerr_$841",
                        "typeString": "contract Tennerr"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3556,
                          "name": "_tennerrContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2711,
                          "src": "12401:23:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 3555,
                        "name": "Tennerr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 841,
                        "src": "12393:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Tennerr_$841_$",
                          "typeString": "type(contract Tennerr)"
                        }
                      },
                      "id": 3557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12393:32:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Tennerr_$841",
                        "typeString": "contract Tennerr"
                      }
                    },
                    "src": "12383:42:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Tennerr_$841",
                      "typeString": "contract Tennerr"
                    }
                  },
                  "id": 3559,
                  "nodeType": "ExpressionStatement",
                  "src": "12383:42:44"
                }
              ]
            },
            "functionSelector": "38354a93",
            "id": 3561,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTennerr",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3538,
                  "mutability": "mutable",
                  "name": "newContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 3561,
                  "src": "12200:27:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12200:15:44",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12199:29:44"
            },
            "returnParameters": {
              "id": 3540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12238:0:44"
            },
            "scope": 3628,
            "src": "12180:252:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3585,
              "nodeType": "Block",
              "src": "12502:206:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3568,
                            "name": "ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2701,
                            "src": "12528:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 3569,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "12540:3:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "12540:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 3567,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4242,
                          "src": "12520:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 3571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12520:31:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f7420616e2061646d696e",
                        "id": 3572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12553:24:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
                          "typeString": "literal_string \"Caller is not an admin\""
                        },
                        "value": "Caller is not an admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
                          "typeString": "literal_string \"Caller is not an admin\""
                        }
                      ],
                      "id": 3566,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12512:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12512:66:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3574,
                  "nodeType": "ExpressionStatement",
                  "src": "12512:66:44"
                },
                {
                  "expression": {
                    "id": 3577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3575,
                      "name": "_tennerrEscrowContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2709,
                      "src": "12588:29:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3576,
                      "name": "newContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3563,
                      "src": "12620:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "12588:43:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 3578,
                  "nodeType": "ExpressionStatement",
                  "src": "12588:43:44"
                },
                {
                  "expression": {
                    "id": 3583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3579,
                      "name": "tennerrEscrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2707,
                      "src": "12641:13:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TennerrEscrow_$2421",
                        "typeString": "contract TennerrEscrow"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3581,
                          "name": "_tennerrEscrowContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2709,
                          "src": "12671:29:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 3580,
                        "name": "TennerrEscrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2421,
                        "src": "12657:13:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TennerrEscrow_$2421_$",
                          "typeString": "type(contract TennerrEscrow)"
                        }
                      },
                      "id": 3582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12657:44:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TennerrEscrow_$2421",
                        "typeString": "contract TennerrEscrow"
                      }
                    },
                    "src": "12641:60:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TennerrEscrow_$2421",
                      "typeString": "contract TennerrEscrow"
                    }
                  },
                  "id": 3584,
                  "nodeType": "ExpressionStatement",
                  "src": "12641:60:44"
                }
              ]
            },
            "functionSelector": "4eb66fff",
            "id": 3586,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTennerrEscrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3563,
                  "mutability": "mutable",
                  "name": "newContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 3586,
                  "src": "12464:27:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12464:15:44",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12463:29:44"
            },
            "returnParameters": {
              "id": 3565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12502:0:44"
            },
            "scope": 3628,
            "src": "12438:270:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3600,
              "nodeType": "Block",
              "src": "12734:103:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3589,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12752:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12752:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 3593,
                              "name": "_host",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2690,
                              "src": "12774:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                                "typeString": "contract ISuperfluid"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISuperfluid_$5876",
                                "typeString": "contract ISuperfluid"
                              }
                            ],
                            "id": 3592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12766:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3591,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12766:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12766:14:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12752:28:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265646972656374416c6c3a20737570706f7274206f6e6c79206f6e6520686f7374",
                        "id": 3596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12782:36:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_370b7f827c282b93253ac705bbaf3986e57977ecd5cc83fb21ce3e33f6937a71",
                          "typeString": "literal_string \"RedirectAll: support only one host\""
                        },
                        "value": "RedirectAll: support only one host"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_370b7f827c282b93253ac705bbaf3986e57977ecd5cc83fb21ce3e33f6937a71",
                          "typeString": "literal_string \"RedirectAll: support only one host\""
                        }
                      ],
                      "id": 3588,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12744:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12744:75:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3598,
                  "nodeType": "ExpressionStatement",
                  "src": "12744:75:44"
                },
                {
                  "id": 3599,
                  "nodeType": "PlaceholderStatement",
                  "src": "12829:1:44"
                }
              ]
            },
            "id": 3601,
            "name": "onlyHost",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12731:2:44"
            },
            "src": "12714:123:44",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3622,
              "nodeType": "Block",
              "src": "12913:176:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3609,
                            "name": "superToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3603,
                            "src": "12944:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$10382",
                              "typeString": "contract ISuperToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISuperToken_$10382",
                              "typeString": "contract ISuperToken"
                            }
                          ],
                          "id": 3608,
                          "name": "_isSameToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3518,
                          "src": "12931:12:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_ISuperToken_$10382_$returns$_t_bool_$",
                            "typeString": "function (contract ISuperToken) view returns (bool)"
                          }
                        },
                        "id": 3610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12931:24:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265646972656374416c6c3a206e6f7420616363657074656420746f6b656e",
                        "id": 3611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12957:33:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ef6baca4dd3d614b0e5e3caec0303e130277d0a6e42356a075c29e9f489ed78",
                          "typeString": "literal_string \"RedirectAll: not accepted token\""
                        },
                        "value": "RedirectAll: not accepted token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ef6baca4dd3d614b0e5e3caec0303e130277d0a6e42356a075c29e9f489ed78",
                          "typeString": "literal_string \"RedirectAll: not accepted token\""
                        }
                      ],
                      "id": 3607,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12923:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12923:68:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3613,
                  "nodeType": "ExpressionStatement",
                  "src": "12923:68:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3616,
                            "name": "agreementClass",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3605,
                            "src": "13018:14:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3615,
                          "name": "_isCFAv1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3536,
                          "src": "13009:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 3617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13009:24:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265646972656374416c6c3a206f6e6c7920434641763120737570706f72746564",
                        "id": 3618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13035:35:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12d744cad4b1b036385df1b75d050180eb75fb35b86995093d37d66b9ca87985",
                          "typeString": "literal_string \"RedirectAll: only CFAv1 supported\""
                        },
                        "value": "RedirectAll: only CFAv1 supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12d744cad4b1b036385df1b75d050180eb75fb35b86995093d37d66b9ca87985",
                          "typeString": "literal_string \"RedirectAll: only CFAv1 supported\""
                        }
                      ],
                      "id": 3614,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13001:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13001:70:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3620,
                  "nodeType": "ExpressionStatement",
                  "src": "13001:70:44"
                },
                {
                  "id": 3621,
                  "nodeType": "PlaceholderStatement",
                  "src": "13081:1:44"
                }
              ]
            },
            "id": 3623,
            "name": "onlyExpected",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3603,
                  "mutability": "mutable",
                  "name": "superToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 3623,
                  "src": "12865:22:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10382",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 3602,
                    "name": "ISuperToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10382,
                    "src": "12865:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10382",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3605,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nodeType": "VariableDeclaration",
                  "scope": 3623,
                  "src": "12889:22:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3604,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12889:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12864:48:44"
            },
            "src": "12843:246:44",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3626,
              "nodeType": "Block",
              "src": "13122:2:44",
              "statements": []
            },
            "id": 3627,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13102:2:44"
            },
            "returnParameters": {
              "id": 3625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13122:0:44"
            },
            "scope": 3628,
            "src": "13095:29:44",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3629,
        "src": "789:12338:44"
      }
    ],
    "src": "32:13096:44"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620028363803806200283683398101604081905262000034916200039f565b6001600160a01b038416620000665760405162461bcd60e51b81526004016200005d90620004bf565b60405180910390fd5b6001600160a01b0383166200008f5760405162461bcd60e51b81526004016200005d9062000488565b6001600160a01b038216620000b85760405162461bcd60e51b81526004016200005d906200041a565b6001600160a01b038116620000e15760405162461bcd60e51b81526004016200005d9062000451565b604051631e51d6a760e11b81526001600160a01b03851690633ca3ad4e906200010f90849060040162000406565b60206040518083038186803b1580156200012857600080fd5b505afa1580156200013d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000163919062000376565b15620001835760405162461bcd60e51b81526004016200005d90620004f6565b620001af7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217753362000262565b600180546001600160a01b03199081166001600160a01b038781169190911792839055600280548316878316179055600380548316868316179055600480549092168482161782556040516315a722b960e31b8152641500000001939091169163ad3915c891620002239185910162000522565b600060405180830381600087803b1580156200023e57600080fd5b505af115801562000253573d6000803e3d6000fd5b50505050505050505062000544565b6200026e828262000272565b5050565b6000828152602081815260409091206200029791839062000ddb620002eb821b17901c565b156200026e57620002a76200030b565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000302836001600160a01b0384166200030f565b90505b92915050565b3390565b60006200031d83836200035e565b620003555750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000305565b50600062000305565b60009081526001919091016020526040902054151590565b60006020828403121562000388578081fd5b8151801515811462000398578182fd5b9392505050565b60008060008060808587031215620003b5578283fd5b8451620003c2816200052b565b6020860151909450620003d5816200052b565b6040860151909350620003e8816200052b565b6060860151909250620003fb816200052b565b939692955090935050565b6001600160a01b0391909116815260200190565b6020808252601d908201527f6163636570746564546f6b656e206973207a65726f2061646472657373000000604082015260600190565b60208082526018908201527f7265636569766572206973207a65726f20616464726573730000000000000000604082015260600190565b60208082526013908201527f636661206973207a65726f206164647265737300000000000000000000000000604082015260600190565b60208082526014908201527f686f7374206973207a65726f2061646472657373000000000000000000000000604082015260600190565b6020808252601290820152710726563656976657220697320616e206170760741b604082015260600190565b90815260200190565b6001600160a01b03811681146200054157600080fd5b50565b6122e280620005546000396000f3fe60806040526004361061016a5760003560e01c806360f5bc21116100d1578063a217fddf1161008a578063afa78f5111610064578063afa78f511461043a578063ca15c8731461044f578063d547741f1461046f578063d86ed3e51461017657610171565b8063a217fddf146103e5578063a5a6eeb5146103fa578063ae015adc1461041a57610171565b806360f5bc211461031657806375b238fc14610343578063884d1f40146103585780639010d07c1461037857806391d14854146103985780639883145e146103c557610171565b806338354a931161012357806338354a931461025f5780634dbb40b21461027f5780634eb66fff146102a157806353c11f99146102c15780635bd7fa11146102e15780635f9e7d77146102f657610171565b8063230dbd2914610176578063248a9ca3146101ac57806328d2bf94146101d95780632f2ff15d146101fd57806330d9c9151461021f57806336568abe1461023f57610171565b3661017157005b600080fd5b34801561018257600080fd5b50610196610191366004611996565b61048f565b6040516101a39190611cda565b60405180910390f35b3480156101b857600080fd5b506101cc6101c73660046117de565b6105cc565b6040516101a39190611ca2565b3480156101e557600080fd5b506101ee6105e1565b6040516101a3939291906121fb565b34801561020957600080fd5b5061021d61021836600461180e565b6106a2565b005b34801561022b57600080fd5b5061019661023a3660046118fa565b6106ea565b34801561024b57600080fd5b5061021d61025a36600461180e565b610704565b34801561026b57600080fd5b5061021d61027a366004611729565b610746565b34801561028b57600080fd5b506102946107bb565b6040516101a39190611c52565b3480156102ad57600080fd5b5061021d6102bc366004611729565b6107ca565b3480156102cd57600080fd5b506101966102dc366004611996565b61083f565b3480156102ed57600080fd5b50610294610988565b34801561030257600080fd5b506101966103113660046118fa565b610997565b34801561032257600080fd5b506103366103313660046117de565b6109b1565b6040516101a39190611c66565b34801561034f57600080fd5b506101cc610ab5565b34801561036457600080fd5b506101966103733660046118fa565b610ad9565b34801561038457600080fd5b5061029461039336600461183d565b610af3565b3480156103a457600080fd5b506103b86103b336600461180e565b610b14565b6040516101a39190611c97565b3480156103d157600080fd5b506101cc6103e036600461183d565b610b2c565b3480156103f157600080fd5b506101cc610b5a565b34801561040657600080fd5b5061021d61041536600461183d565b610b5f565b34801561042657600080fd5b5061021d61043536600461174c565b610c62565b34801561044657600080fd5b50610294610d7b565b34801561045b57600080fd5b506101cc61046a3660046117de565b610d8a565b34801561047b57600080fd5b5061021d61048a36600461180e565b610da1565b6060898961049c82610df0565b6104c15760405162461bcd60e51b81526004016104b890611f2c565b60405180910390fd5b6104ca81610e04565b6104e65760405162461bcd60e51b81526004016104b890611eeb565b6001546001600160a01b031633146105105760405162461bcd60e51b81526004016104b890611fb6565b600154604051631fb6491d60e11b81526060916001600160a01b031690633f6c923a906105439089908990600401611cab565b60006040518083038186803b15801561055b57600080fd5b505afa15801561056f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105979190810190611a78565b60a001518060200190518101906105ae919061185e565b90506105bb868683610e9f565b9d9c50505050505050505050505050565b60009081526020819052604090206002015490565b600454600090819081906001600160a01b03161561069d5760025460035460048054604051631cd43d1160e31b81526001600160a01b039485169463e6a1e888946106359490821693309392169101611d9a565b60806040518083038186803b15801561064d57600080fd5b505afa158015610661573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106859190611bea565b50506004549194506001600160a01b03909116925090505b909192565b6000828152602081905260409020600201546106c0906103b361124c565b6106dc5760405162461bcd60e51b81526004016104b890611e9c565b6106e68282611250565b5050565b606060405162461bcd60e51b81526004016104b890612135565b61070c61124c565b6001600160a01b0316816001600160a01b03161461073c5760405162461bcd60e51b81526004016104b8906121ac565b6106e682826112b9565b6107707fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177533610b14565b61078c5760405162461bcd60e51b81526004016104b890612105565b600980546001600160a01b03199081166001600160a01b039384161791829055600a8054929093169116179055565b6006546001600160a01b031681565b6107f47fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177533610b14565b6108105760405162461bcd60e51b81526004016104b890612105565b600880546001600160a01b03199081166001600160a01b03938416179182905560078054929093169116179055565b6001546060906001600160a01b0316331461086c5760405162461bcd60e51b81526004016104b890611fb6565b600154604051631fb6491d60e11b81526060916001600160a01b031690633f6c923a9061089f9087908790600401611cab565b60006040518083038186803b1580156108b757600080fd5b505afa1580156108cb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108f39190810190611a78565b60a0015180602001905181019061090a919061185e565b90506109158b610df0565b158061092757506109258a610e04565b155b1561096c5783838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092945061097b9350505050565b610977848483610e9f565b9150505b9998505050505050505050565b6007546001600160a01b031681565b606060405162461bcd60e51b81526004016104b890611f63565b6109b9611581565b6000828152600b60205260408120805460029081106109d457fe5b906000526020600020015490506000600b6000858152602001908152602001600020600581548110610a0257fe5b906000526020600020015490506000600b6000868152602001908152602001600020600381548110610a3057fe5b906000526020600020015490506000600b6000878152602001908152602001600020600081548110610a5e57fe5b60009182526020822001549150610a758442611322565b90506000610a834285611322565b6040805160a0810182528581529490910260208501528301959095526060820152608081019290925250915050919050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b606060405162461bcd60e51b81526004016104b8906120b6565b6000828152602081905260408120610b0b908361134a565b90505b92915050565b6000828152602081905260408120610b0b9083611356565b600b6020528160005260406000208181548110610b4557fe5b90600052602060002001600091509150505481565b600081565b6008546001600160a01b03163314610b895760405162461bcd60e51b81526004016104b890612184565b610b9161159f565b60075460405163ebd2d6a760e01b81526001600160a01b039091169063ebd2d6a790610bc1908690600401611ca2565b60e06040518083038186803b158015610bd957600080fd5b505afa158015610bed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c119190611b71565b6040810151606082015160a0830151929350909180610c425760405162461bcd60e51b81526004016104b89061207f565b60c08401514290610c588886868686868d61136b565b5050505050505050565b6009546001600160a01b03163314610c8c5760405162461bcd60e51b81526004016104b890612184565b6001546002546003546040805160008152602081019091526001600160a01b03938416936339255d5b9381169263317e182f60e11b92610cd792909116908990899060448101611e27565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b9092168252610d1f92918690600401611ced565b600060405180830381600087803b158015610d3957600080fd5b505af1158015610d4d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d75919081019061185e565b50505050565b600a546001600160a01b031681565b6000818152602081905260408120610b0e906113e9565b600082815260208190526040902060020154610dbf906103b361124c565b61073c5760405162461bcd60e51b81526004016104b89061202f565b6000610b0b836001600160a01b0384166113f4565b6003546001600160a01b0390811691161490565b60007fa9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3826001600160a01b0316637730599e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e6057600080fd5b505afa158015610e74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9891906117f6565b1492915050565b606083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060025460035460405163e8e7e2d160e01b815296975091956001600160a01b03918216955063e8e7e2d19450610f1193509116903090600401611d80565b60206040518083038186803b158015610f2957600080fd5b505afa158015610f3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f619190611a5d565b60025460035460048054604051631cd43d1160e31b81529495506000946001600160a01b039485169463e6a1e88894610fa39490821693309392169101611d9a565b60806040518083038186803b158015610fbb57600080fd5b505afa158015610fcf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff39190611bea565b509092505050818101600b81900b6110fa576001546002546003546004546040805160008152602081019091526001600160a01b0394851694634329d29394811693635a5999e360e11b936110549391831692309291169060448101611dbd565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b909216825261109c92918990600401611d2d565b600060405180830381600087803b1580156110b657600080fd5b505af11580156110ca573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110f29190810190611899565b509350611242565b600b82900b15611152576001546002546003546004546040805160008152602081019091526001600160a01b0394851694634329d293948116936328104d3160e11b9361105493918316921690889060448101611df1565b6001546002546003546004546040805160008152602081019091526001600160a01b0394851694634329d2939481169363317e182f60e11b936111a093918316921690889060448101611df1565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b90921682526111e892918990600401611d2d565b600060405180830381600087803b15801561120257600080fd5b505af1158015611216573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261123e9190810190611899565b5093505b5050509392505050565b3390565b60008281526020819052604090206112689082610ddb565b156106e65761127561124c565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526020819052604090206112d1908261143e565b156106e6576112de61124c565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000828211156113445760405162461bcd60e51b81526004016104b890611ff8565b50900390565b6000610b0b8383611453565b6000610b0b836001600160a01b038416611498565b60006113778342611322565b905060006113854286611322565b9050600081840290506040518060c0016040528085815260200182815260200188815260200187815260200184815260200186815250600b60008c81526020019081526020016000209060066113dc9291906115f1565b5050505050505050505050565b6000610b0e826114b0565b60006114008383611498565b61143657508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610b0e565b506000610b0e565b6000610b0b836001600160a01b0384166114b4565b815460009082106114765760405162461bcd60e51b81526004016104b890611e5a565b82600001828154811061148557fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b6000818152600183016020526040812054801561157057835460001980830191908101906000908790839081106114e757fe5b906000526020600020015490508087600001848154811061150457fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061153457fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610b0e565b6000915050610b0e565b5092915050565b6040518060a001604052806005906020820280368337509192915050565b6040518060e00160405280600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000801916815260200160008152602001600081525090565b82805482825590600052602060002090810192821561162c579160200282015b8281111561162c578251825591602001919060010190611611565b5061163892915061163c565b5090565b5b80821115611638576000815560010161163d565b8051610b0e81612294565b80516001600160e01b031981168114610b0e57600080fd5b60008083601f840112611685578182fd5b50813567ffffffffffffffff81111561169c578182fd5b6020830191508360208285010111156116b457600080fd5b9250929050565b600082601f8301126116cb578081fd5b81516116de6116d982612244565b61221d565b91508082528360208285010111156116f557600080fd5b61157a816020840160208601612268565b8051600b81900b8114610b0e57600080fd5b805160ff81168114610b0e57600080fd5b60006020828403121561173a578081fd5b813561174581612294565b9392505050565b600080600060608486031215611760578182fd5b833561176b81612294565b925060208401359150604084013567ffffffffffffffff81111561178d578182fd5b8401601f8101861361179d578182fd5b80356117ab6116d982612244565b8181528760208385010111156117bf578384fd5b8160208401602083013783602083830101528093505050509250925092565b6000602082840312156117ef578081fd5b5035919050565b600060208284031215611807578081fd5b5051919050565b60008060408385031215611820578182fd5b82359150602083013561183281612294565b809150509250929050565b6000806040838503121561184f578182fd5b50508035926020909101359150565b60006020828403121561186f578081fd5b815167ffffffffffffffff811115611885578182fd5b611891848285016116bb565b949350505050565b600080604083850312156118ab578182fd5b825167ffffffffffffffff808211156118c2578384fd5b6118ce868387016116bb565b935060208501519150808211156118e3578283fd5b506118f0858286016116bb565b9150509250929050565b600080600080600080600060a0888a031215611914578485fd5b873561191f81612294565b9650602088013561192f81612294565b955060408801359450606088013567ffffffffffffffff80821115611952578485fd5b61195e8b838c01611674565b909650945060808a0135915080821115611976578384fd5b506119838a828b01611674565b989b979a50959850939692959293505050565b600080600080600080600080600060c08a8c0312156119b3578283fd5b89356119be81612294565b985060208a01356119ce81612294565b975060408a0135965060608a013567ffffffffffffffff808211156119f1578485fd5b6119fd8d838e01611674565b909850965060808c0135915080821115611a15578485fd5b611a218d838e01611674565b909650945060a08c0135915080821115611a39578384fd5b50611a468c828d01611674565b915080935050809150509295985092959850929598565b600060208284031215611a6e578081fd5b610b0b8383611706565b600060208284031215611a89578081fd5b815167ffffffffffffffff80821115611aa0578283fd5b8184019150610140808387031215611ab6578384fd5b611abf8161221d565b9050611acb8684611718565b8152611ada8660208501611718565b602082015260408301516040820152611af68660608501611651565b6060820152611b08866080850161165c565b608082015260a083015182811115611b1e578485fd5b611b2a878286016116bb565b60a08301525060c083015160c082015260e083015160e0820152610100915081830151828201526101209150611b6286838501611651565b91810191909152949350505050565b600060e08284031215611b82578081fd5b611b8c60e061221d565b82518152602083015160208201526040830151611ba881612294565b60408201526060830151611bbb81612294565b806060830152506080830151608082015260a083015160a082015260c083015160c08201528091505092915050565b60008060008060808587031215611bff578182fd5b84519350611c108660208701611706565b6040860151606090960151949790965092505050565b60008151808452611c3e816020860160208601612268565b601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b60a08101818360005b6005811015611c8e578151835260209283019290910190600101611c6f565b50505092915050565b901515815260200190565b90815260200190565b60006020825282602083015282846040840137818301604090810191909152601f909201601f19160101919050565b600060208252610b0b6020830184611c26565b6001600160a01b0384168152606060208201819052600090611d1190830185611c26565b8281036040840152611d238185611c26565b9695505050505050565b6001600160a01b0384168152608060208201819052600090611d5190830185611c26565b8281038060408501526002825261060f60f31b602083015260408101606085015250611d236040820185611c26565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b0393841681529183166020830152909116604082015260600190565b6001600160a01b038581168252848116602083015283166040820152608060608201819052600090611d2390830184611c26565b6001600160a01b03858116825284166020820152600b83900b6040820152608060608201819052600090611d2390830184611c26565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611d2390830184611c26565b60208082526022908201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604082015261647360f01b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526e0818591b5a5b881d1bc819dc985b9d608a1b606082015260800190565b60208082526021908201527f5265646972656374416c6c3a206f6e6c7920434641763120737570706f7274656040820152601960fa1b606082015260800190565b6020808252601f908201527f5265646972656374416c6c3a206e6f7420616363657074656420746f6b656e00604082015260600190565b60208082526033908201527f556e737570706f727465642063616c6c6261636b202d20204265666f7265204160408201527219dc99595b595b9d0815195c9b5a5b985d1959606a1b606082015260800190565b60208082526022908201527f5265646972656374416c6c3a20737570706f7274206f6e6c79206f6e6520686f6040820152611cdd60f21b606082015260800190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b60208082526030908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526f2061646d696e20746f207265766f6b6560801b606082015260800190565b6020808252601f908201527f6f72646572206e6f7420666574636865642c206a6f6220696420697373756500604082015260600190565b6020808252602f908201527f556e737570706f727465642063616c6c6261636b202d204265666f726520416760408201526e1c99595b595b9d081d5c19185d1959608a1b606082015260800190565b60208082526016908201527521b0b63632b91034b9903737ba1030b71030b236b4b760511b604082015260600190565b6020808252602f908201527f556e737570706f727465642063616c6c6261636b202d204265666f726520416760408201526e1c99595b595b9d0810dc99585d1959608a1b606082015260800190565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b9283526001600160a01b03919091166020830152600b0b604082015260600190565b60405181810167ffffffffffffffff8111828210171561223c57600080fd5b604052919050565b600067ffffffffffffffff82111561225a578081fd5b50601f01601f191660200190565b60005b8381101561228357818101518382015260200161226b565b83811115610d755750506000910152565b6001600160a01b03811681146122a957600080fd5b5056fea2646970667358221220d20c89fab3fbc44fd0e84ed21adee86b0783f9e0b9a60c98598de101920fcf8964736f6c63430007010033",
  "bytecodeSha1": "0df8f6a18b0dc2cad56fba6dbb6a499a94469f66",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.1+commit.f4a555be"
  },
  "contractName": "TennerrStreamer",
  "coverageMap": {
    "branches": {
      "0": {
        "AccessControl._grantRole": {
          "75": [
            7098,
            7131,
            false
          ]
        },
        "AccessControl._revokeRole": {
          "76": [
            7289,
            7325,
            false
          ]
        },
        "AccessControl.grantRole": {
          "72": [
            4727,
            4772,
            true
          ]
        },
        "AccessControl.renounceRole": {
          "73": [
            5904,
            5927,
            true
          ]
        },
        "AccessControl.revokeRole": {
          "74": [
            5185,
            5230,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {},
      "12": {
        "EnumerableSet._add": {
          "77": [
            1724,
            1745,
            false
          ]
        },
        "EnumerableSet._at": {
          "78": [
            4546,
            4572,
            true
          ]
        },
        "EnumerableSet._remove": {
          "79": [
            2449,
            2464,
            false
          ]
        }
      },
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {},
      "19": {},
      "2": {
        "SafeMath.sub": {
          "80": [
            3221,
            3227,
            true
          ]
        }
      },
      "20": {},
      "21": {},
      "22": {},
      "23": {},
      "24": {},
      "25": {},
      "26": {},
      "27": {},
      "29": {},
      "30": {},
      "31": {},
      "32": {},
      "33": {},
      "34": {},
      "35": {},
      "36": {},
      "37": {},
      "38": {},
      "39": {},
      "4": {},
      "40": {},
      "41": {},
      "42": {},
      "43": {},
      "44": {
        "TennerrStreamer._updateOutflow": {
          "70": [
            4350,
            4372,
            false
          ],
          "71": [
            4820,
            4843,
            false
          ]
        },
        "TennerrStreamer.accountingCache": {
          "67": [
            5754,
            5797,
            true
          ],
          "68": [
            6028,
            6038,
            true
          ]
        },
        "TennerrStreamer.afterAgreementTerminated": {
          "65": [
            11157,
            11182,
            true
          ],
          "66": [
            11187,
            11212,
            false
          ]
        },
        "TennerrStreamer.afterAgreementUpdated": {
          "60": [
            12931,
            12955,
            true
          ],
          "61": [
            13009,
            13033,
            true
          ]
        },
        "TennerrStreamer.createFlow": {
          "69": [
            11388,
            11425,
            true
          ]
        },
        "TennerrStreamer.currentReceiver": {
          "62": [
            3390,
            3413,
            false
          ]
        },
        "TennerrStreamer.setTennerr": {
          "63": [
            12260,
            12291,
            true
          ]
        },
        "TennerrStreamer.setTennerrEscrow": {
          "64": [
            12520,
            12551,
            true
          ]
        }
      },
      "46": {},
      "47": {},
      "48": {},
      "49": {},
      "5": {},
      "50": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "AccessControl._grantRole": {
          "37": [
            7147,
            7192
          ]
        },
        "AccessControl._revokeRole": {
          "38": [
            7341,
            7386
          ]
        },
        "AccessControl.getRoleAdmin": {
          "1": [
            4358,
            4387
          ]
        },
        "AccessControl.getRoleMember": {
          "20": [
            4057,
            4094
          ]
        },
        "AccessControl.getRoleMemberCount": {
          "27": [
            3337,
            3373
          ]
        },
        "AccessControl.grantRole": {
          "4": [
            4719,
            4824
          ],
          "5": [
            4835,
            4860
          ]
        },
        "AccessControl.hasRole": {
          "21": [
            3035,
            3080
          ]
        },
        "AccessControl.renounceRole": {
          "7": [
            5896,
            5979
          ],
          "8": [
            5990,
            6016
          ]
        },
        "AccessControl.revokeRole": {
          "28": [
            5177,
            5283
          ]
        }
      },
      "1": {},
      "10": {
        "Context._msgSender": {
          "36": [
            678,
            695
          ]
        }
      },
      "11": {},
      "12": {
        "EnumerableSet._add": {
          "45": [
            1761,
            1784
          ],
          "46": [
            1919,
            1959
          ],
          "47": [
            1973,
            1984
          ],
          "48": [
            2015,
            2027
          ]
        },
        "EnumerableSet._at": {
          "50": [
            4538,
            4611
          ],
          "51": [
            4621,
            4646
          ]
        },
        "EnumerableSet._contains": {
          "52": [
            3894,
            3925
          ]
        },
        "EnumerableSet._length": {
          "53": [
            4088,
            4113
          ]
        },
        "EnumerableSet._remove": {
          "54": [
            3274,
            3312
          ],
          "55": [
            3378,
            3421
          ],
          "56": [
            3527,
            3544
          ],
          "57": [
            3612,
            3638
          ],
          "58": [
            3653,
            3664
          ],
          "59": [
            3695,
            3707
          ]
        },
        "EnumerableSet.add": {
          "29": [
            6515,
            6572
          ]
        },
        "EnumerableSet.at": {
          "41": [
            7770,
            7826
          ]
        },
        "EnumerableSet.contains": {
          "42": [
            7080,
            7142
          ]
        },
        "EnumerableSet.length": {
          "44": [
            7312,
            7338
          ]
        },
        "EnumerableSet.remove": {
          "49": [
            6836,
            6896
          ]
        }
      },
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {},
      "19": {},
      "2": {
        "SafeMath.sub": {
          "39": [
            3213,
            3262
          ],
          "40": [
            3272,
            3284
          ]
        }
      },
      "20": {},
      "21": {},
      "22": {},
      "23": {},
      "24": {},
      "25": {},
      "26": {
        "SuperAppBase.beforeAgreementCreated": {
          "6": [
            583,
            640
          ]
        },
        "SuperAppBase.beforeAgreementTerminated": {
          "17": [
            2250,
            2311
          ]
        },
        "SuperAppBase.beforeAgreementUpdated": {
          "19": [
            1415,
            1472
          ]
        }
      },
      "27": {},
      "29": {},
      "30": {},
      "31": {},
      "32": {},
      "33": {},
      "34": {},
      "35": {},
      "36": {},
      "37": {},
      "38": {},
      "39": {},
      "4": {},
      "40": {},
      "41": {},
      "42": {},
      "43": {},
      "44": {
        "TennerrStreamer._isCFAv1": {
          "31": [
            12026,
            12167
          ]
        },
        "TennerrStreamer._isSameToken": {
          "30": [
            11880,
            11933
          ]
        },
        "TennerrStreamer._updateOutflow": {
          "32": [
            3815,
            3827
          ],
          "33": [
            4441,
            4799
          ],
          "34": [
            4854,
            5187
          ],
          "35": [
            5298,
            5653
          ]
        },
        "TennerrStreamer._updateStreamData": {
          "43": [
            7075,
            7165
          ]
        },
        "TennerrStreamer.accountingCache": {
          "22": [
            5746,
            5816
          ],
          "23": [
            6020,
            6074
          ],
          "24": [
            6171,
            6250
          ]
        },
        "TennerrStreamer.afterAgreementTerminated": {
          "15": [
            11214,
            11225
          ],
          "16": [
            11235,
            11272
          ]
        },
        "TennerrStreamer.afterAgreementUpdated": {
          "0": [
            10583,
            10621
          ]
        },
        "TennerrStreamer.createFlow": {
          "25": [
            11380,
            11444
          ],
          "26": [
            11454,
            11783
          ]
        },
        "TennerrStreamer.currentReceiver": {
          "2": [
            3429,
            3509
          ],
          "3": [
            3523,
            3543
          ]
        },
        "TennerrStreamer.getStreamData": {
          "18": [
            7847,
            7915
          ]
        },
        "TennerrStreamer.setTennerr": {
          "9": [
            12252,
            12318
          ],
          "10": [
            12332,
            12369
          ],
          "11": [
            12383,
            12425
          ]
        },
        "TennerrStreamer.setTennerrEscrow": {
          "12": [
            12512,
            12578
          ],
          "13": [
            12588,
            12631
          ],
          "14": [
            12641,
            12701
          ]
        }
      },
      "46": {},
      "47": {},
      "48": {},
      "49": {},
      "5": {},
      "50": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.4.0/AccessControl",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Address",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/BufferChainlink",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/CBORChainlink",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/Chainlink",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/ChainlinkClient",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/ChainlinkRequestInterface",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Counters",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/ENSInterface",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/ENSResolver",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC20Burnable",
    "superfluid-finance/superfluid@1.0.0/ERC20WithTokenInfo",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/EnumerableSet",
    "IAToken",
    "superfluid-finance/superfluid@1.0.0/IConstantFlowAgreementV1",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC777",
    "ILendingPool",
    "ILendingPoolAddressesProvider",
    "IProtocolDataProvider",
    "IScaledBalanceToken",
    "superfluid-finance/superfluid@1.0.0/ISuperAgreement",
    "superfluid-finance/superfluid@1.0.0/ISuperApp",
    "superfluid-finance/superfluid@1.0.0/ISuperToken",
    "superfluid-finance/superfluid@1.0.0/ISuperTokenFactory",
    "superfluid-finance/superfluid@1.0.0/ISuperfluid",
    "superfluid-finance/superfluid@1.0.0/ISuperfluidGovernance",
    "superfluid-finance/superfluid@1.0.0/ISuperfluidToken",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/LinkTokenInterface",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Ownable",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/PointerInterface",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/SafeMathChainlink",
    "superfluid-finance/superfluid@1.0.0/SuperAppBase",
    "superfluid-finance/superfluid@1.0.0/SuperAppDefinitions",
    "Tennerr",
    "TennerrController",
    "TennerrDAO",
    "TennerrEscrow",
    "TennerrFactory",
    "superfluid-finance/superfluid@1.0.0/TokenInfo",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/VRFConsumerBase",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/VRFRequestIDBase"
  ],
  "deployedBytecode": "60806040526004361061016a5760003560e01c806360f5bc21116100d1578063a217fddf1161008a578063afa78f5111610064578063afa78f511461043a578063ca15c8731461044f578063d547741f1461046f578063d86ed3e51461017657610171565b8063a217fddf146103e5578063a5a6eeb5146103fa578063ae015adc1461041a57610171565b806360f5bc211461031657806375b238fc14610343578063884d1f40146103585780639010d07c1461037857806391d14854146103985780639883145e146103c557610171565b806338354a931161012357806338354a931461025f5780634dbb40b21461027f5780634eb66fff146102a157806353c11f99146102c15780635bd7fa11146102e15780635f9e7d77146102f657610171565b8063230dbd2914610176578063248a9ca3146101ac57806328d2bf94146101d95780632f2ff15d146101fd57806330d9c9151461021f57806336568abe1461023f57610171565b3661017157005b600080fd5b34801561018257600080fd5b50610196610191366004611996565b61048f565b6040516101a39190611cda565b60405180910390f35b3480156101b857600080fd5b506101cc6101c73660046117de565b6105cc565b6040516101a39190611ca2565b3480156101e557600080fd5b506101ee6105e1565b6040516101a3939291906121fb565b34801561020957600080fd5b5061021d61021836600461180e565b6106a2565b005b34801561022b57600080fd5b5061019661023a3660046118fa565b6106ea565b34801561024b57600080fd5b5061021d61025a36600461180e565b610704565b34801561026b57600080fd5b5061021d61027a366004611729565b610746565b34801561028b57600080fd5b506102946107bb565b6040516101a39190611c52565b3480156102ad57600080fd5b5061021d6102bc366004611729565b6107ca565b3480156102cd57600080fd5b506101966102dc366004611996565b61083f565b3480156102ed57600080fd5b50610294610988565b34801561030257600080fd5b506101966103113660046118fa565b610997565b34801561032257600080fd5b506103366103313660046117de565b6109b1565b6040516101a39190611c66565b34801561034f57600080fd5b506101cc610ab5565b34801561036457600080fd5b506101966103733660046118fa565b610ad9565b34801561038457600080fd5b5061029461039336600461183d565b610af3565b3480156103a457600080fd5b506103b86103b336600461180e565b610b14565b6040516101a39190611c97565b3480156103d157600080fd5b506101cc6103e036600461183d565b610b2c565b3480156103f157600080fd5b506101cc610b5a565b34801561040657600080fd5b5061021d61041536600461183d565b610b5f565b34801561042657600080fd5b5061021d61043536600461174c565b610c62565b34801561044657600080fd5b50610294610d7b565b34801561045b57600080fd5b506101cc61046a3660046117de565b610d8a565b34801561047b57600080fd5b5061021d61048a36600461180e565b610da1565b6060898961049c82610df0565b6104c15760405162461bcd60e51b81526004016104b890611f2c565b60405180910390fd5b6104ca81610e04565b6104e65760405162461bcd60e51b81526004016104b890611eeb565b6001546001600160a01b031633146105105760405162461bcd60e51b81526004016104b890611fb6565b600154604051631fb6491d60e11b81526060916001600160a01b031690633f6c923a906105439089908990600401611cab565b60006040518083038186803b15801561055b57600080fd5b505afa15801561056f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105979190810190611a78565b60a001518060200190518101906105ae919061185e565b90506105bb868683610e9f565b9d9c50505050505050505050505050565b60009081526020819052604090206002015490565b600454600090819081906001600160a01b03161561069d5760025460035460048054604051631cd43d1160e31b81526001600160a01b039485169463e6a1e888946106359490821693309392169101611d9a565b60806040518083038186803b15801561064d57600080fd5b505afa158015610661573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106859190611bea565b50506004549194506001600160a01b03909116925090505b909192565b6000828152602081905260409020600201546106c0906103b361124c565b6106dc5760405162461bcd60e51b81526004016104b890611e9c565b6106e68282611250565b5050565b606060405162461bcd60e51b81526004016104b890612135565b61070c61124c565b6001600160a01b0316816001600160a01b03161461073c5760405162461bcd60e51b81526004016104b8906121ac565b6106e682826112b9565b6107707fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177533610b14565b61078c5760405162461bcd60e51b81526004016104b890612105565b600980546001600160a01b03199081166001600160a01b039384161791829055600a8054929093169116179055565b6006546001600160a01b031681565b6107f47fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177533610b14565b6108105760405162461bcd60e51b81526004016104b890612105565b600880546001600160a01b03199081166001600160a01b03938416179182905560078054929093169116179055565b6001546060906001600160a01b0316331461086c5760405162461bcd60e51b81526004016104b890611fb6565b600154604051631fb6491d60e11b81526060916001600160a01b031690633f6c923a9061089f9087908790600401611cab565b60006040518083038186803b1580156108b757600080fd5b505afa1580156108cb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108f39190810190611a78565b60a0015180602001905181019061090a919061185e565b90506109158b610df0565b158061092757506109258a610e04565b155b1561096c5783838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092945061097b9350505050565b610977848483610e9f565b9150505b9998505050505050505050565b6007546001600160a01b031681565b606060405162461bcd60e51b81526004016104b890611f63565b6109b9611581565b6000828152600b60205260408120805460029081106109d457fe5b906000526020600020015490506000600b6000858152602001908152602001600020600581548110610a0257fe5b906000526020600020015490506000600b6000868152602001908152602001600020600381548110610a3057fe5b906000526020600020015490506000600b6000878152602001908152602001600020600081548110610a5e57fe5b60009182526020822001549150610a758442611322565b90506000610a834285611322565b6040805160a0810182528581529490910260208501528301959095526060820152608081019290925250915050919050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b606060405162461bcd60e51b81526004016104b8906120b6565b6000828152602081905260408120610b0b908361134a565b90505b92915050565b6000828152602081905260408120610b0b9083611356565b600b6020528160005260406000208181548110610b4557fe5b90600052602060002001600091509150505481565b600081565b6008546001600160a01b03163314610b895760405162461bcd60e51b81526004016104b890612184565b610b9161159f565b60075460405163ebd2d6a760e01b81526001600160a01b039091169063ebd2d6a790610bc1908690600401611ca2565b60e06040518083038186803b158015610bd957600080fd5b505afa158015610bed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c119190611b71565b6040810151606082015160a0830151929350909180610c425760405162461bcd60e51b81526004016104b89061207f565b60c08401514290610c588886868686868d61136b565b5050505050505050565b6009546001600160a01b03163314610c8c5760405162461bcd60e51b81526004016104b890612184565b6001546002546003546040805160008152602081019091526001600160a01b03938416936339255d5b9381169263317e182f60e11b92610cd792909116908990899060448101611e27565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b9092168252610d1f92918690600401611ced565b600060405180830381600087803b158015610d3957600080fd5b505af1158015610d4d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d75919081019061185e565b50505050565b600a546001600160a01b031681565b6000818152602081905260408120610b0e906113e9565b600082815260208190526040902060020154610dbf906103b361124c565b61073c5760405162461bcd60e51b81526004016104b89061202f565b6000610b0b836001600160a01b0384166113f4565b6003546001600160a01b0390811691161490565b60007fa9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3826001600160a01b0316637730599e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e6057600080fd5b505afa158015610e74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9891906117f6565b1492915050565b606083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060025460035460405163e8e7e2d160e01b815296975091956001600160a01b03918216955063e8e7e2d19450610f1193509116903090600401611d80565b60206040518083038186803b158015610f2957600080fd5b505afa158015610f3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f619190611a5d565b60025460035460048054604051631cd43d1160e31b81529495506000946001600160a01b039485169463e6a1e88894610fa39490821693309392169101611d9a565b60806040518083038186803b158015610fbb57600080fd5b505afa158015610fcf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff39190611bea565b509092505050818101600b81900b6110fa576001546002546003546004546040805160008152602081019091526001600160a01b0394851694634329d29394811693635a5999e360e11b936110549391831692309291169060448101611dbd565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b909216825261109c92918990600401611d2d565b600060405180830381600087803b1580156110b657600080fd5b505af11580156110ca573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110f29190810190611899565b509350611242565b600b82900b15611152576001546002546003546004546040805160008152602081019091526001600160a01b0394851694634329d293948116936328104d3160e11b9361105493918316921690889060448101611df1565b6001546002546003546004546040805160008152602081019091526001600160a01b0394851694634329d2939481169363317e182f60e11b936111a093918316921690889060448101611df1565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b90921682526111e892918990600401611d2d565b600060405180830381600087803b15801561120257600080fd5b505af1158015611216573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261123e9190810190611899565b5093505b5050509392505050565b3390565b60008281526020819052604090206112689082610ddb565b156106e65761127561124c565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526020819052604090206112d1908261143e565b156106e6576112de61124c565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000828211156113445760405162461bcd60e51b81526004016104b890611ff8565b50900390565b6000610b0b8383611453565b6000610b0b836001600160a01b038416611498565b60006113778342611322565b905060006113854286611322565b9050600081840290506040518060c0016040528085815260200182815260200188815260200187815260200184815260200186815250600b60008c81526020019081526020016000209060066113dc9291906115f1565b5050505050505050505050565b6000610b0e826114b0565b60006114008383611498565b61143657508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610b0e565b506000610b0e565b6000610b0b836001600160a01b0384166114b4565b815460009082106114765760405162461bcd60e51b81526004016104b890611e5a565b82600001828154811061148557fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b6000818152600183016020526040812054801561157057835460001980830191908101906000908790839081106114e757fe5b906000526020600020015490508087600001848154811061150457fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061153457fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610b0e565b6000915050610b0e565b5092915050565b6040518060a001604052806005906020820280368337509192915050565b6040518060e00160405280600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000801916815260200160008152602001600081525090565b82805482825590600052602060002090810192821561162c579160200282015b8281111561162c578251825591602001919060010190611611565b5061163892915061163c565b5090565b5b80821115611638576000815560010161163d565b8051610b0e81612294565b80516001600160e01b031981168114610b0e57600080fd5b60008083601f840112611685578182fd5b50813567ffffffffffffffff81111561169c578182fd5b6020830191508360208285010111156116b457600080fd5b9250929050565b600082601f8301126116cb578081fd5b81516116de6116d982612244565b61221d565b91508082528360208285010111156116f557600080fd5b61157a816020840160208601612268565b8051600b81900b8114610b0e57600080fd5b805160ff81168114610b0e57600080fd5b60006020828403121561173a578081fd5b813561174581612294565b9392505050565b600080600060608486031215611760578182fd5b833561176b81612294565b925060208401359150604084013567ffffffffffffffff81111561178d578182fd5b8401601f8101861361179d578182fd5b80356117ab6116d982612244565b8181528760208385010111156117bf578384fd5b8160208401602083013783602083830101528093505050509250925092565b6000602082840312156117ef578081fd5b5035919050565b600060208284031215611807578081fd5b5051919050565b60008060408385031215611820578182fd5b82359150602083013561183281612294565b809150509250929050565b6000806040838503121561184f578182fd5b50508035926020909101359150565b60006020828403121561186f578081fd5b815167ffffffffffffffff811115611885578182fd5b611891848285016116bb565b949350505050565b600080604083850312156118ab578182fd5b825167ffffffffffffffff808211156118c2578384fd5b6118ce868387016116bb565b935060208501519150808211156118e3578283fd5b506118f0858286016116bb565b9150509250929050565b600080600080600080600060a0888a031215611914578485fd5b873561191f81612294565b9650602088013561192f81612294565b955060408801359450606088013567ffffffffffffffff80821115611952578485fd5b61195e8b838c01611674565b909650945060808a0135915080821115611976578384fd5b506119838a828b01611674565b989b979a50959850939692959293505050565b600080600080600080600080600060c08a8c0312156119b3578283fd5b89356119be81612294565b985060208a01356119ce81612294565b975060408a0135965060608a013567ffffffffffffffff808211156119f1578485fd5b6119fd8d838e01611674565b909850965060808c0135915080821115611a15578485fd5b611a218d838e01611674565b909650945060a08c0135915080821115611a39578384fd5b50611a468c828d01611674565b915080935050809150509295985092959850929598565b600060208284031215611a6e578081fd5b610b0b8383611706565b600060208284031215611a89578081fd5b815167ffffffffffffffff80821115611aa0578283fd5b8184019150610140808387031215611ab6578384fd5b611abf8161221d565b9050611acb8684611718565b8152611ada8660208501611718565b602082015260408301516040820152611af68660608501611651565b6060820152611b08866080850161165c565b608082015260a083015182811115611b1e578485fd5b611b2a878286016116bb565b60a08301525060c083015160c082015260e083015160e0820152610100915081830151828201526101209150611b6286838501611651565b91810191909152949350505050565b600060e08284031215611b82578081fd5b611b8c60e061221d565b82518152602083015160208201526040830151611ba881612294565b60408201526060830151611bbb81612294565b806060830152506080830151608082015260a083015160a082015260c083015160c08201528091505092915050565b60008060008060808587031215611bff578182fd5b84519350611c108660208701611706565b6040860151606090960151949790965092505050565b60008151808452611c3e816020860160208601612268565b601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b60a08101818360005b6005811015611c8e578151835260209283019290910190600101611c6f565b50505092915050565b901515815260200190565b90815260200190565b60006020825282602083015282846040840137818301604090810191909152601f909201601f19160101919050565b600060208252610b0b6020830184611c26565b6001600160a01b0384168152606060208201819052600090611d1190830185611c26565b8281036040840152611d238185611c26565b9695505050505050565b6001600160a01b0384168152608060208201819052600090611d5190830185611c26565b8281038060408501526002825261060f60f31b602083015260408101606085015250611d236040820185611c26565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b0393841681529183166020830152909116604082015260600190565b6001600160a01b038581168252848116602083015283166040820152608060608201819052600090611d2390830184611c26565b6001600160a01b03858116825284166020820152600b83900b6040820152608060608201819052600090611d2390830184611c26565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611d2390830184611c26565b60208082526022908201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604082015261647360f01b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526e0818591b5a5b881d1bc819dc985b9d608a1b606082015260800190565b60208082526021908201527f5265646972656374416c6c3a206f6e6c7920434641763120737570706f7274656040820152601960fa1b606082015260800190565b6020808252601f908201527f5265646972656374416c6c3a206e6f7420616363657074656420746f6b656e00604082015260600190565b60208082526033908201527f556e737570706f727465642063616c6c6261636b202d20204265666f7265204160408201527219dc99595b595b9d0815195c9b5a5b985d1959606a1b606082015260800190565b60208082526022908201527f5265646972656374416c6c3a20737570706f7274206f6e6c79206f6e6520686f6040820152611cdd60f21b606082015260800190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b60208082526030908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526f2061646d696e20746f207265766f6b6560801b606082015260800190565b6020808252601f908201527f6f72646572206e6f7420666574636865642c206a6f6220696420697373756500604082015260600190565b6020808252602f908201527f556e737570706f727465642063616c6c6261636b202d204265666f726520416760408201526e1c99595b595b9d081d5c19185d1959608a1b606082015260800190565b60208082526016908201527521b0b63632b91034b9903737ba1030b71030b236b4b760511b604082015260600190565b6020808252602f908201527f556e737570706f727465642063616c6c6261636b202d204265666f726520416760408201526e1c99595b595b9d0810dc99585d1959608a1b606082015260800190565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b9283526001600160a01b03919091166020830152600b0b604082015260600190565b60405181810167ffffffffffffffff8111828210171561223c57600080fd5b604052919050565b600067ffffffffffffffff82111561225a578081fd5b50601f01601f191660200190565b60005b8381101561228357818101518382015260200161226b565b83811115610d755750506000910152565b6001600160a01b03811681146122a957600080fd5b5056fea2646970667358221220d20c89fab3fbc44fd0e84ed21adee86b0783f9e0b9a60c98598de101920fcf8964736f6c63430007010033",
  "deployedSourceMap": "789:12338:44:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10114:514;;;;;;;;;;-1:-1:-1;10114:514:44;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4282:112:0;;;;;;;;;;-1:-1:-1;4282:112:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3207:353:44:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;4644:223:0:-;;;;;;;;;;-1:-1:-1;4644:223:0;;;;;:::i;:::-;;:::i;:::-;;247:400:26;;;;;;;;;;-1:-1:-1;247:400:26;;;;;:::i;:::-;;:::i;5818:205:0:-;;;;;;;;;;-1:-1:-1;5818:205:0;;;;;:::i;:::-;;:::i;12180:252:44:-;;;;;;;;;;-1:-1:-1;12180:252:44;;;;;:::i;:::-;;:::i;1303:36::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;12438:270::-;;;;;;;;;;-1:-1:-1;12438:270:44;;;;;:::i;:::-;;:::i;10634:645::-;;;;;;;;;;-1:-1:-1;10634:645:44;;;;;:::i;:::-;;:::i;1371:34::-;;;;;;;;;;;;;:::i;1911:407:26:-;;;;;;;;;;-1:-1:-1;1911:407:26;;;;;:::i;:::-;;:::i;7178:744:44:-;;;;;;;;;;-1:-1:-1;7178:744:44;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1115:60::-;;;;;;;;;;;;;:::i;1079:400:26:-;;;;;;;;;;-1:-1:-1;1079:400:26;;;;;:::i;:::-;;:::i;3965:136:0:-;;;;;;;;;;-1:-1:-1;3965:136:0;;;;;:::i;:::-;;:::i;2950:137::-;;;;;;;;;;-1:-1:-1;2950:137:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1616:47:44:-;;;;;;;;;;-1:-1:-1;1616:47:44;;;;;:::i;:::-;;:::i;1727:49:0:-;;;;;;;;;;;;;:::i;5674:583:44:-;;;;;;;;;;-1:-1:-1;5674:583:44;;;;;:::i;:::-;;:::i;11285:505::-;;;;;;;;;;-1:-1:-1;11285:505:44;;;;;:::i;:::-;;:::i;1586:22::-;;;;;;;;;;;;;:::i;3255:125:0:-;;;;;;;;;;-1:-1:-1;3255:125:0;;;;;:::i;:::-;;:::i;5101:226::-;;;;;;;;;;-1:-1:-1;5101:226:0;;;;;:::i;:::-;;:::i;10114:514:44:-;10463:19;10399:11;10412:15;12931:24;12944:10;12931:12;:24::i;:::-;12923:68;;;;-1:-1:-1;;;12923:68:44;;;;;;;:::i;:::-;;;;;;;;;13009:24;13018:14;13009:8;:24::i;:::-;13001:70;;;;-1:-1:-1;;;13001:70:44;;;;;;;:::i;:::-;12774:5:::1;::::0;-1:-1:-1;;;;;12774:5:44::1;12752:10;:28;12744:75;;;;-1:-1:-1::0;;;12744:75:44::1;;;;;;;:::i;:::-;10533:5:::2;::::0;:21:::2;::::0;-1:-1:-1;;;10533:21:44;;10498::::2;::::0;-1:-1:-1;;;;;10533:5:44::2;::::0;:15:::2;::::0;:21:::2;::::0;10549:4;;;;10533:21:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;::::0;;::::2;-1:-1:-1::0;;10533:21:44::2;::::0;::::2;;::::0;::::2;::::0;;;::::2;::::0;::::2;:::i;:::-;:30;;;10522:51;;;;;;;;;;;;:::i;:::-;10498:75;;10590:31;10605:4;;10611:8;10590:14;:31::i;:::-;10583:38:::0;10114:514;-1:-1:-1;;;;;;;;;;;;;10114:514:44:o;4282:112:0:-;4339:7;4365:12;;;;;;;;;;:22;;;;4282:112::o;3207:353:44:-;3390:9;;3286:17;;;;;;-1:-1:-1;;;;;3390:9:44;:23;3386:168;;3455:4;;3468:14;;3499:9;;;3455:54;;-1:-1:-1;;;3455:54:44;;-1:-1:-1;;;;;3455:4:44;;;;:12;;:54;;3468:14;;;;3492:4;;3499:9;;;3455:54;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;3534:9:44;;3429:80;;-1:-1:-1;;;;;;3534:9:44;;;;-1:-1:-1;3429:80:44;-1:-1:-1;3386:168:44;3207:353;;;:::o;4644:223:0:-;4735:6;:12;;;;;;;;;;:22;;;4727:45;;4759:12;:10;:12::i;4727:45::-;4719:105;;;;-1:-1:-1;;;4719:105:0;;;;;;;:::i;:::-;4835:25;4846:4;4852:7;4835:10;:25::i;:::-;4644:223;;:::o;247:400:26:-;544:12;583:57;;-1:-1:-1;;;583:57:26;;;;;;;:::i;5818:205:0:-;5915:12;:10;:12::i;:::-;-1:-1:-1;;;;;5904:23:0;:7;-1:-1:-1;;;;;5904:23:0;;5896:83;;;;-1:-1:-1;;;5896:83:0;;;;;;;:::i;:::-;5990:26;6002:4;6008:7;5990:11;:26::i;12180:252:44:-;12260:31;1152:23;12280:10;12260:7;:31::i;:::-;12252:66;;;;-1:-1:-1;;;12252:66:44;;;;;;;:::i;:::-;12332:23;:37;;-1:-1:-1;;;;;;12332:37:44;;;-1:-1:-1;;;;;12332:37:44;;;;;;;;12383:7;:42;;12401:23;;;;12383:42;;;;;12180:252::o;1303:36::-;;;-1:-1:-1;;;;;1303:36:44;;:::o;12438:270::-;12520:31;1152:23;12540:10;12520:7;:31::i;:::-;12512:66;;;;-1:-1:-1;;;12512:66:44;;;;;;;:::i;:::-;12588:29;:43;;-1:-1:-1;;;;;;12588:43:44;;;-1:-1:-1;;;;;12588:43:44;;;;;;;;12641:13;:60;;12671:29;;;;12641:60;;;;;12438:270::o;10634:645::-;12774:5;;10940:19;;-1:-1:-1;;;;;12774:5:44;12752:10;:28;12744:75;;;;-1:-1:-1;;;12744:75:44;;;;;;;:::i;:::-;11102:5:::1;::::0;:21:::1;::::0;-1:-1:-1;;;11102:21:44;;11067::::1;::::0;-1:-1:-1;;;;;11102:5:44::1;::::0;:15:::1;::::0;:21:::1;::::0;11118:4;;;;11102:21:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;11102:21:44::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;:30;;;11091:51;;;;;;;;;;;;:::i;:::-;11067:75;;11157:25;11170:11;11157:12;:25::i;:::-;11156:26;:56;;;;11187:25;11196:15;11187:8;:25::i;:::-;11186:26;11156:56;11152:73;;;11221:4;;11214:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;11214:11:44;;-1:-1:-1;11214:11:44::1;::::0;-1:-1:-1;;;;11214:11:44::1;11152:73;11242:30;11257:4;;11263:8;11242:14;:30::i;:::-;11235:37;;;12829:1;10634:645:::0;;;;;;;;;;;:::o;1371:34::-;;;-1:-1:-1;;;;;1371:34:44;;:::o;1911:407:26:-;2211:12;2250:61;;-1:-1:-1;;;2250:61:26;;;;;;;:::i;7178:744:44:-;7251:14;;:::i;:::-;7277:18;7298:20;;;:13;:20;;;;;:23;;7319:1;;7298:23;;;;;;;;;;;;;;7277:44;;7331:13;7347;:20;7361:5;7347:20;;;;;;;;;;;7368:1;7347:23;;;;;;;;;;;;;;;;7331:39;;7380:16;7399:13;:20;7413:5;7399:20;;;;;;;;;;;7420:1;7399:23;;;;;;;;;;;;;;;;7380:42;;7432:13;7448;:20;7462:5;7448:20;;;;;;;;;;;7469:1;7448:23;;;;;;;;;;;;;;;;;;-1:-1:-1;7498:29:44;:8;7511:15;7498:12;:29::i;:::-;7482:45;-1:-1:-1;7593:15:44;7611:34;7612:15;7633:11;7611:21;:34::i;:::-;7847:68;;;;;;;;;;;7677:21;;;;7847:68;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7847:68:44;-1:-1:-1;;7178:744:44;;;:::o;1115:60::-;1152:23;1115:60;:::o;1079:400:26:-;1376:12;1415:57;;-1:-1:-1;;;1415:57:26;;;;;;;:::i;3965:136:0:-;4038:7;4064:12;;;;;;;;;;:30;;4088:5;4064:23;:30::i;:::-;4057:37;;3965:136;;;;;:::o;2950:137::-;3019:4;3042:12;;;;;;;;;;:38;;3072:7;3042:29;:38::i;1616:47:44:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1727:49:0:-;1772:4;1727:49;:::o;5674:583:44:-;5768:29;;-1:-1:-1;;;;;5768:29:44;5754:10;:43;5746:70;;;;-1:-1:-1;;;5746:70:44;;;;;;;:::i;:::-;5826:32;;:::i;:::-;5861:13;;:33;;-1:-1:-1;;;5861:33:44;;-1:-1:-1;;;;;5861:13:44;;;;:26;;:33;;5888:5;;5861:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5920:11;;;;5958:12;;;;5994:16;;;;5826:68;;-1:-1:-1;5920:11:44;;6028:10;6020:54;;;;-1:-1:-1;;;6020:54:44;;;;;;;:::i;:::-;6144:17;;;;6103:15;;6171:79;6189:5;6195;6202:6;6210;6103:15;6144:17;6241:8;6171:17;:79::i;:::-;5674:583;;;;;;;;:::o;11285:505::-;11402:23;;-1:-1:-1;;;;;11402:23:44;11388:10;:37;11380:64;;;;-1:-1:-1;;;11380:64:44;;;;;;;:::i;:::-;11454:5;;11491:4;;11603:14;;11702:12;;;11454:5;11702:12;;;;;;;;-1:-1:-1;;;;;11454:5:44;;;;:19;;11491:4;;;-1:-1:-1;;;11557:24:44;11513:219;;11603:14;;;;11639:11;;11672:8;;11513:219;;;;:::i;:::-;;;;-1:-1:-1;;11513:219:44;;;;;;;;;;;;;;-1:-1:-1;;;;;11513:219:44;-1:-1:-1;;;;;;11513:219:44;;;;;;11454:329;;;;;;;;;;;;;11750:5;;11454:329;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11454:329:44;;;;;;;;;;;;:::i;:::-;;11285:505;;;:::o;1586:22::-;;;-1:-1:-1;;;;;1586:22:44;;:::o;3255:125:0:-;3318:7;3344:12;;;;;;;;;;:29;;:27;:29::i;5101:226::-;5193:6;:12;;;;;;;;;;:22;;;5185:45;;5217:12;:10;:12::i;5185:45::-;5177:106;;;;-1:-1:-1;;;5177:106:0;;;;;;;:::i;6429:150:12:-;6499:4;6522:50;6527:3;-1:-1:-1;;;;;6547:23:12;;6522:4;:50::i;11796:144:44:-;11918:14;;-1:-1:-1;;;;;11918:14:44;;;11887:46;;;;11796:144::o;11946:228::-;12010:4;12096:71;12049:14;-1:-1:-1;;;;;12033:45:44;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:134;;11946:228;-1:-1:-1;;11946:228:44:o;3681:1987::-;3781:19;3824:3;;3815:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3940:4:44;;3956:14;;3940:46;;-1:-1:-1;;;3940:46:44;;3815:12;;-1:-1:-1;3815:12:44;;-1:-1:-1;;;;;3940:4:44;;;;-1:-1:-1;3940:15:44;;-1:-1:-1;3940:46:44;;-1:-1:-1;3956:14:44;;;3980:4;;3940:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4019:4;;4032:14;;4063:9;;;4019:54;;-1:-1:-1;;;4019:54:44;;3920:66;;-1:-1:-1;3996:17:44;;-1:-1:-1;;;;;4019:4:44;;;;:12;;:54;;4032:14;;;;4056:4;;4063:9;;;4019:54;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3994:79:44;;-1:-1:-1;;;4154:25:44;;;4350:22;;;;4346:1316;;4454:5;;4500:4;;4606:14;;4673:9;;4702:12;;;4454:5;4702:12;;;;;;;;-1:-1:-1;;;;;4454:5:44;;;;:30;;4500:4;;;-1:-1:-1;;;4562:24:44;4520:225;;4606:14;;;;4648:4;;4673:9;;;4520:225;;;;:::i;:::-;;;;-1:-1:-1;;4520:225:44;;;;;;;;;;;;;;-1:-1:-1;;;;;4520:225:44;-1:-1:-1;;;;;;4520:225:44;;;;;;4454:345;;;;;;;;;;;;;4781:6;;4454:345;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4454:345:44;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4441:358:44;-1:-1:-1;4346:1316:44;;;4820:23;;;;;4816:846;;4867:5;;4911:4;;5011:14;;5043:9;;5098:12;;;4867:5;5098:12;;;;;;;;-1:-1:-1;;;;;4867:5:44;;;;:30;;4911:4;;;-1:-1:-1;;;4969:24:44;4929:210;;5011:14;;;;5043:9;;5070:10;;4929:210;;;;:::i;4816:846::-;5311:5;;5357:4;;5463:14;;5497:9;;5556:12;;;5311:5;5556:12;;;;;;;;-1:-1:-1;;;;;5311:5:44;;;;:30;;5357:4;;;-1:-1:-1;;;5419:24:44;5377:222;;5463:14;;;;5497:9;;5526:10;;5377:222;;;;:::i;:::-;;;;-1:-1:-1;;5377:222:44;;;;;;;;;;;;;;-1:-1:-1;;;;;5377:222:44;-1:-1:-1;;;;;;5377:222:44;;;;;;5311:342;;;;;;;;;;;;;5635:6;;5311:342;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5311:342:44;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5298:355:44;-1:-1:-1;4816:846:44;3681:1987;;;;;;;;:::o;598:104:10:-;685:10;598:104;:::o;7025:184:0:-;7098:6;:12;;;;;;;;;;:33;;7123:7;7098:24;:33::i;:::-;7094:109;;;7179:12;:10;:12::i;:::-;-1:-1:-1;;;;;7152:40:0;7170:7;-1:-1:-1;;;;;7152:40:0;7164:4;7152:40;;;;;;;;;;7025:184;;:::o;7215:188::-;7289:6;:12;;;;;;;;;;:36;;7317:7;7289:27;:36::i;:::-;7285:112;;;7373:12;:10;:12::i;:::-;-1:-1:-1;;;;;7346:40:0;7364:7;-1:-1:-1;;;;;7346:40:0;7358:4;7346:40;;;;;;;;;;7215:188;;:::o;3136:155:2:-;3194:7;3226:1;3221;:6;;3213:49;;;;-1:-1:-1;;;3213:49:2;;;;;;;:::i;:::-;-1:-1:-1;3279:5:2;;;3136:155::o;7677:156:12:-;7751:7;7801:22;7805:3;7817:5;7801:3;:22::i;6984:165::-;7064:4;7087:55;7097:3;-1:-1:-1;;;;;7117:23:12;;7087:9;:55::i;6263:909:44:-;6834:13;6850:29;:8;6863:15;6850:12;:29::i;:::-;6834:45;-1:-1:-1;6889:15:44;6907:34;6908:15;6929:11;6907:21;:34::i;:::-;6889:52;;6951:19;6984:10;6973:8;:21;6951:43;;7075:90;;;;;;;;7099:8;7075:90;;;;7109:14;7075:90;;;;7125:6;7075:90;;;;7133:11;7075:90;;;;7146:8;7075:90;;;;7156:8;7075:90;;;:13;:20;7089:5;7075:20;;;;;;;;;;;:90;;;;;;;:::i;:::-;;6263:909;;;;;;;;;;:::o;7230:115:12:-;7293:7;7319:19;7327:3;7319:7;:19::i;1640:404::-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:12;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:12;2015:12;;6747:156;6820:4;6843:53;6851:3;-1:-1:-1;;;;;6871:23:12;;6843:7;:53::i;4452:201::-;4546:18;;4519:7;;4546:26;-1:-1:-1;4538:73:12;;;;-1:-1:-1;;;4538:73:12;;;;;;;:::i;:::-;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;3805:127::-;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;4013:107::-;4095:18;;4013:107::o;2212:1512::-;2278:4;2415:19;;;:12;;;:19;;;;;;2449:15;;2445:1273;;2878:18;;-1:-1:-1;;2830:14:12;;;;2878:22;;;;2806:21;;2878:3;;:22;;3160;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;;;;;:38;;;;3378:23;;;3420:1;3378:12;;;:23;;;;;;3404:17;;;3378:43;;3527:17;;3378:3;;3527:17;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;;;2445:1273;2212:1512;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;142:134;220:13;;238:33;220:13;238:33;:::i;714:132::-;791:13;;-1:-1;;;;;;38047:78;;41656:34;;41646:2;;41704:1;;41694:12;867:336;;;981:3;974:4;966:6;962:17;958:27;948:2;;-1:-1;;989:12;948:2;-1:-1;1019:20;;1059:18;1048:30;;1045:2;;;-1:-1;;1081:12;1045:2;1125:4;1117:6;1113:17;1101:29;;1176:3;1125:4;1156:17;1117:6;1142:32;;1139:41;1136:2;;;1193:1;;1183:12;1136:2;941:262;;;;;:::o;1661:442::-;;1773:3;1766:4;1758:6;1754:17;1750:27;1740:2;;-1:-1;;1781:12;1740:2;1821:6;1815:13;1843:64;1858:48;1899:6;1858:48;:::i;:::-;1843:64;:::i;:::-;1834:73;;1927:6;1920:5;1913:21;2031:3;1963:4;2022:6;1955;2013:16;;2010:25;2007:2;;;2048:1;;2038:12;2007:2;2058:39;2090:6;1963:4;1989:5;1985:16;1963:4;1955:6;1951:17;2058:39;:::i;2429:130::-;2505:13;;38405:2;38394:21;;;42065:33;;42055:2;;42112:1;;42102:12;6142:130;6218:13;;38705:4;38694:16;;42309:33;;42299:2;;42356:1;;42346:12;6279:257;;6391:2;6379:9;6370:7;6366:23;6362:32;6359:2;;;-1:-1;;6397:12;6359:2;371:6;358:20;383:41;418:5;383:41;:::i;:::-;6449:71;6353:183;-1:-1;;;6353:183::o;6543:595::-;;;;6690:2;6678:9;6669:7;6665:23;6661:32;6658:2;;;-1:-1;;6696:12;6658:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;6748:63;-1:-1;6848:2;6887:22;;5931:20;;-1:-1;6984:2;6969:18;;6956:32;7008:18;6997:30;;6994:2;;;-1:-1;;7030:12;6994:2;7090:22;;1306:4;1294:17;;1290:27;-1:-1;1280:2;;-1:-1;;1321:12;1280:2;1368:6;1355:20;1390:64;1405:48;1446:6;1405:48;:::i;1390:64::-;1474:6;1467:5;1460:21;1578:3;6848:2;1569:6;1502;1560:16;;1557:25;1554:2;;;-1:-1;;1585:12;1554:2;40756:6;6848:2;1502:6;1498:17;6848:2;1536:5;1532:16;40733:30;-1:-1;6848:2;40803:6;1536:5;40794:16;;40787:27;7050:72;;;;;;6652:486;;;;;:::o;7145:241::-;;7249:2;7237:9;7228:7;7224:23;7220:32;7217:2;;;-1:-1;;7255:12;7217:2;-1:-1;503:20;;7211:175;-1:-1;7211:175::o;7393:263::-;;7508:2;7496:9;7487:7;7483:23;7479:32;7476:2;;;-1:-1;;7514:12;7476:2;-1:-1;651:13;;7470:186;-1:-1;7470:186::o;7663:366::-;;;7784:2;7772:9;7763:7;7759:23;7755:32;7752:2;;;-1:-1;;7790:12;7752:2;516:6;503:20;7842:63;;7942:2;7985:9;7981:22;72:20;97:33;124:5;97:33;:::i;:::-;7950:63;;;;7746:283;;;;;:::o;8036:366::-;;;8157:2;8145:9;8136:7;8132:23;8128:32;8125:2;;;-1:-1;;8163:12;8125:2;-1:-1;;503:20;;;8315:2;8354:22;;;5931:20;;-1:-1;8119:283::o;8409:360::-;;8533:2;8521:9;8512:7;8508:23;8504:32;8501:2;;;-1:-1;;8539:12;8501:2;8590:17;8584:24;8628:18;8620:6;8617:30;8614:2;;;-1:-1;;8650:12;8614:2;8680:73;8745:7;8736:6;8725:9;8721:22;8680:73;:::i;:::-;8670:83;8495:274;-1:-1;;;;8495:274::o;8776:593::-;;;8926:2;8914:9;8905:7;8901:23;8897:32;8894:2;;;-1:-1;;8932:12;8894:2;8983:17;8977:24;9021:18;;9013:6;9010:30;9007:2;;;-1:-1;;9043:12;9007:2;9073:73;9138:7;9129:6;9118:9;9114:22;9073:73;:::i;:::-;9063:83;;9204:2;9193:9;9189:18;9183:25;9169:39;;9021:18;9220:6;9217:30;9214:2;;;-1:-1;;9250:12;9214:2;;9280:73;9345:7;9336:6;9325:9;9321:22;9280:73;:::i;:::-;9270:83;;;8888:481;;;;;:::o;9376:1033::-;;;;;;;;9607:3;9595:9;9586:7;9582:23;9578:33;9575:2;;;-1:-1;;9614:12;9575:2;2212:6;2199:20;2224:54;2272:5;2224:54;:::i;:::-;9666:84;-1:-1;9787:2;9826:22;;72:20;97:33;72:20;97:33;:::i;:::-;9795:63;-1:-1;9895:2;9934:22;;503:20;;-1:-1;10031:2;10016:18;;10003:32;10055:18;10044:30;;;10041:2;;;-1:-1;;10077:12;10041:2;10115:64;10171:7;10162:6;10151:9;10147:22;10115:64;:::i;:::-;10097:82;;-1:-1;10097:82;-1:-1;10244:3;10229:19;;10216:33;;-1:-1;10258:30;;;10255:2;;;-1:-1;;10291:12;10255:2;;10329:64;10385:7;10376:6;10365:9;10361:22;10329:64;:::i;:::-;9569:840;;;;-1:-1;9569:840;;-1:-1;9569:840;;;;10311:82;;-1:-1;;;9569:840::o;10416:1283::-;;;;;;;;;;10683:3;10671:9;10662:7;10658:23;10654:33;10651:2;;;-1:-1;;10690:12;10651:2;2212:6;2199:20;2224:54;2272:5;2224:54;:::i;:::-;10742:84;-1:-1;10863:2;10902:22;;72:20;97:33;72:20;97:33;:::i;:::-;10871:63;-1:-1;10971:2;11010:22;;503:20;;-1:-1;11107:2;11092:18;;11079:32;11131:18;11120:30;;;11117:2;;;-1:-1;;11153:12;11117:2;11191:64;11247:7;11238:6;11227:9;11223:22;11191:64;:::i;:::-;11173:82;;-1:-1;11173:82;-1:-1;11320:3;11305:19;;11292:33;;-1:-1;11334:30;;;11331:2;;;-1:-1;;11367:12;11331:2;11405:64;11461:7;11452:6;11441:9;11437:22;11405:64;:::i;:::-;11387:82;;-1:-1;11387:82;-1:-1;11534:3;11519:19;;11506:33;;-1:-1;11548:30;;;11545:2;;;-1:-1;;11581:12;11545:2;;11619:64;11675:7;11666:6;11655:9;11651:22;11619:64;:::i;:::-;11601:82;;;;;;;;;;10645:1054;;;;;;;;;;;:::o;11706:259::-;;11819:2;11807:9;11798:7;11794:23;11790:32;11787:2;;;-1:-1;;11825:12;11787:2;11887:62;11941:7;11917:22;11887:62;:::i;11972:392::-;;12112:2;12100:9;12091:7;12087:23;12083:32;12080:2;;;-1:-1;;12118:12;12080:2;12169:17;12163:24;12207:18;;12199:6;12196:30;12193:2;;;-1:-1;;12229:12;12193:2;12331:6;12320:9;12316:22;;;2724:6;;2712:9;2707:3;2703:19;2699:32;2696:2;;;-1:-1;;2734:12;2696:2;2762:22;2724:6;2762:22;:::i;:::-;2753:31;;2870:58;2924:3;2900:22;2870:58;:::i;:::-;2852:16;2845:84;3027:58;3081:3;12112:2;3061:9;3057:22;3027:58;:::i;:::-;12112:2;3013:5;3009:16;3002:84;3152:2;3221:9;3217:22;6079:13;3152:2;3171:5;3167:16;3160:86;3345:60;3401:3;3312:2;3381:9;3377:22;3345:60;:::i;:::-;3312:2;3331:5;3327:16;3320:86;3514:59;3569:3;3480;3549:9;3545:22;3514:59;:::i;:::-;3480:3;3500:5;3496:16;3489:85;3660:3;3649:9;3645:19;3639:26;12207:18;3677:6;3674:30;3671:2;;;-1:-1;;3707:12;3671:2;3752:69;3817:3;3808:6;3797:9;3793:22;3752:69;:::i;:::-;3660:3;3738:5;3734:16;3727:95;;3898:3;3968:9;3964:22;6079:13;3898:3;3918:5;3914:16;3907:86;4068:3;4138:9;4134:22;6079:13;4068:3;4088:5;4084:16;4077:86;4236:3;;;;4307:9;4303:22;2367:13;4236:3;4256:5;4252:18;4245:87;4399:3;;;4435:60;4491:3;4399;4471:9;4467:22;4435:60;:::i;:::-;4415:18;;;4408:88;;;;4419:5;12074:290;-1:-1;;;;12074:290::o;12371:310::-;;12509:3;12497:9;12488:7;12484:23;12480:33;12477:2;;;-1:-1;;12516:12;12477:2;4716:20;12509:3;4716:20;:::i;:::-;6085:6;6079:13;4803:16;4796:86;4947:2;5016:9;5012:22;6079:13;4947:2;4966:5;4962:16;4955:86;5103:2;5172:9;5168:22;220:13;238:33;265:5;238:33;:::i;:::-;5103:2;5118:16;;5111:86;5260:2;5325:22;;220:13;238:33;220:13;238:33;:::i;:::-;5293:60;5260:2;5279:5;5275:16;5268:86;;5416:3;5486:9;5482:22;651:13;5416:3;5436:5;5432:16;5425:86;5578:3;5648:9;5644:22;6079:13;5578:3;5598:5;5594:16;5587:86;5741:3;5811:9;5807:22;6079:13;5741:3;5761:5;5757:16;5750:86;12568:97;;;;12471:210;;;;:::o;12688:668::-;;;;;12852:3;12840:9;12831:7;12827:23;12823:33;12820:2;;;-1:-1;;12859:12;12820:2;6085:6;6079:13;12911:74;;13040:62;13094:7;13022:2;13074:9;13070:22;13040:62;:::i;:::-;13139:2;13189:22;;6079:13;13258:2;13308:22;;;6079:13;12814:542;;13030:72;;-1:-1;12814:542;-1:-1;;;12814:542::o;15218:343::-;;15360:5;36965:12;37383:6;37378:3;37371:19;15453:52;15498:6;37420:4;37415:3;37411:14;37420:4;15479:5;15475:16;15453:52;:::i;:::-;41189:7;41173:14;-1:-1;;41169:28;15517:39;;;;37420:4;15517:39;;15308:253;-1:-1;;15308:253::o;22320:222::-;-1:-1;;;;;38489:54;;;;13781:45;;22447:2;22432:18;;22418:124::o;22549:315::-;22722:3;22707:19;;22711:9;14354:21;22549:315;14381:258;36857:4;14403:1;14400:13;14381:258;;;14467:13;;14841:37;;13526:4;13517:14;;;;37093;;;;14428:1;14421:9;14381:258;;;14385:14;;;22693:171;;;;:::o;22871:210::-;37881:13;;37874:21;14724:34;;22992:2;22977:18;;22963:118::o;23088:222::-;14841:37;;;23215:2;23200:18;;23186:124::o;23317:326::-;;23472:2;23493:17;23486:47;37383:6;23472:2;23461:9;23457:18;37371:19;40756:6;40751:3;37411:14;23461:9;37411:14;40733:30;40794:16;;;37411:14;40794:16;;;40787:27;;;;41189:7;41173:14;;;-1:-1;;41169:28;15165:39;;;23443:200;-1:-1;23443:200::o;23650:306::-;;23795:2;23816:17;23809:47;23870:76;23795:2;23784:9;23780:18;23932:6;23870:76;:::i;23963:678::-;-1:-1;;;;;38489:54;;15672:83;;24215:2;24366;24351:18;;24344:48;;;23963:678;;24406:76;;24200:18;;24468:6;24406:76;:::i;:::-;24530:9;24524:4;24520:20;24515:2;24504:9;24500:18;24493:48;24555:76;24626:4;24617:6;24555:76;:::i;:::-;24547:84;24186:455;-1:-1;;;;;;24186:455::o;24648:982::-;-1:-1;;;;;38489:54;;15672:83;;25000:3;25152:2;25137:18;;25130:48;;;24648:982;;25192:76;;24985:19;;25254:6;25192:76;:::i;:::-;25316:9;25310:4;25306:20;;25301:2;25290:9;25286:18;25279:48;19099:1;37378:3;37371:19;-1:-1;;;25152:2;37415:3;37411:14;19114:25;25301:2;25509:20;;25504:2;25493:9;25489:18;25482:48;;25544:76;25301:2;37415:3;19158:12;25606:6;25544:76;:::i;25637:391::-;-1:-1;;;;;38489:54;;;15672:83;;38489:54;;26014:2;25999:18;;13624:58;25821:2;25806:18;;25792:236::o;26035:502::-;-1:-1;;;;;38489:54;;;15672:83;;38489:54;;;26440:2;26425:18;;13624:58;38489:54;;;26523:2;26508:18;;13781:45;26247:2;26232:18;;26218:319::o;26544:714::-;-1:-1;;;;;38489:54;;;15672:83;;38489:54;;;27012:2;26997:18;;13781:45;38489:54;;27095:2;27080:18;;13781:45;26810:3;27132:2;27117:18;;27110:48;;;26544:714;;27172:76;;26795:19;;27234:6;27172:76;:::i;27265:674::-;-1:-1;;;;;38489:54;;;15672:83;;38489:54;;27697:2;27682:18;;13781:45;38405:2;38394:21;;;27776:2;27761:18;;16560:35;27511:3;27813:2;27798:18;;27791:48;;;27265:674;;27853:76;;27496:19;;27915:6;27853:76;:::i;27946:682::-;-1:-1;;;;;38489:54;;;15672:83;;38489:54;;28382:2;28367:18;;13781:45;28465:2;28450:18;;14841:37;;;28196:3;28502:2;28487:18;;28480:48;;;27946:682;;28542:76;;28181:19;;28604:6;28542:76;:::i;29474:416::-;29674:2;29688:47;;;16832:2;29659:18;;;37371:19;16868:34;37411:14;;;16848:55;-1:-1;;;16923:12;;;16916:26;16961:12;;;29645:245::o;29897:416::-;30097:2;30111:47;;;17212:2;30082:18;;;37371:19;17248:34;37411:14;;;17228:55;-1:-1;;;17303:12;;;17296:39;17354:12;;;30068:245::o;30320:416::-;30520:2;30534:47;;;17605:2;30505:18;;;37371:19;17641:34;37411:14;;;17621:55;-1:-1;;;17696:12;;;17689:25;17733:12;;;30491:245::o;30743:416::-;30943:2;30957:47;;;17984:2;30928:18;;;37371:19;18020:33;37411:14;;;18000:54;18073:12;;;30914:245::o;31166:416::-;31366:2;31380:47;;;18324:2;31351:18;;;37371:19;18360:34;37411:14;;;18340:55;-1:-1;;;18415:12;;;18408:43;18470:12;;;31337:245::o;31589:416::-;31789:2;31803:47;;;18721:2;31774:18;;;37371:19;18757:34;37411:14;;;18737:55;-1:-1;;;18812:12;;;18805:26;18850:12;;;31760:245::o;32012:416::-;32212:2;32226:47;;;19409:2;32197:18;;;37371:19;19445:32;37411:14;;;19425:53;19497:12;;;32183:245::o;32435:416::-;32635:2;32649:47;;;19748:2;32620:18;;;37371:19;19784:34;37411:14;;;19764:55;-1:-1;;;19839:12;;;19832:40;19891:12;;;32606:245::o;32858:416::-;33058:2;33072:47;;;20142:2;33043:18;;;37371:19;20178:33;37411:14;;;20158:54;20231:12;;;33029:245::o;33281:416::-;33481:2;33495:47;;;20482:2;33466:18;;;37371:19;20518:34;37411:14;;;20498:55;-1:-1;;;20573:12;;;20566:39;20624:12;;;33452:245::o;33704:416::-;33904:2;33918:47;;;20875:2;33889:18;;;37371:19;-1:-1;;;37411:14;;;20891:45;20955:12;;;33875:245::o;34127:416::-;34327:2;34341:47;;;21206:2;34312:18;;;37371:19;21242:34;37411:14;;;21222:55;-1:-1;;;21297:12;;;21290:39;21348:12;;;34298:245::o;34550:416::-;34750:2;34764:47;;;21599:2;34735:18;;;37371:19;-1:-1;;;37411:14;;;21615:37;21671:12;;;34721:245::o;34973:416::-;35173:2;35187:47;;;21922:2;35158:18;;;37371:19;21958:34;37411:14;;;21938:55;-1:-1;;;22013:12;;;22006:39;22064:12;;;35144:245::o;35625:436::-;14841:37;;;-1:-1;;;;;38489:54;;;;35968:2;35953:18;;13781:45;38405:2;38394:21;36047:2;36032:18;;16560:35;35804:2;35789:18;;35775:286::o;36068:256::-;36130:2;36124:9;36156:17;;;36231:18;36216:34;;36252:22;;;36213:62;36210:2;;;36288:1;;36278:12;36210:2;36130;36297:22;36108:216;;-1:-1;36108:216::o;36331:321::-;;36474:18;36466:6;36463:30;36460:2;;;-1:-1;;36496:12;36460:2;-1:-1;41189:7;36550:17;-1:-1;;36546:33;36637:4;36627:15;;36397:255::o;40829:268::-;40894:1;40901:101;40915:6;40912:1;40909:13;40901:101;;;40982:11;;;40976:18;40963:11;;;40956:39;40937:2;40930:10;40901:101;;;41017:6;41014:1;41011:13;41008:2;;;-1:-1;;40894:1;41064:16;;41057:27;40878:219::o;41210:117::-;-1:-1;;;;;38489:54;;41269:35;;41259:2;;41318:1;;41308:12;41259:2;41253:74;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      }
    },
    "version": 1
  },
  "offset": [
    789,
    13127
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60F5BC21 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xAFA78F51 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAFA78F51 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0xD86ED3E5 EQ PUSH2 0x176 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0xA5A6EEB5 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xAE015ADC EQ PUSH2 0x41A JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x60F5BC21 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x884D1F40 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x9883145E EQ PUSH2 0x3C5 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x38354A93 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x38354A93 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x4DBB40B2 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x4EB66FFF EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x53C11F99 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x5BD7FA11 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x5F9E7D77 EQ PUSH2 0x2F6 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x230DBD29 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x28D2BF94 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x30D9C915 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x23F JUMPI PUSH2 0x171 JUMP JUMPDEST CALLDATASIZE PUSH2 0x171 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CC PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x17DE JUMP JUMPDEST PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x180E JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x18FA JUMP JUMPDEST PUSH2 0x6EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x180E JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0x1729 JUMP JUMPDEST PUSH2 0x746 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1729 JUMP JUMPDEST PUSH2 0x7CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0x83F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x988 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x18FA JUMP JUMPDEST PUSH2 0x997 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x336 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x17DE JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1C66 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CC PUSH2 0xAB5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x373 CALLDATASIZE PUSH1 0x4 PUSH2 0x18FA JUMP JUMPDEST PUSH2 0xAD9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x393 CALLDATASIZE PUSH1 0x4 PUSH2 0x183D JUMP JUMPDEST PUSH2 0xAF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x3B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x180E JUMP JUMPDEST PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CC PUSH2 0x3E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x183D JUMP JUMPDEST PUSH2 0xB2C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CC PUSH2 0xB5A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x415 CALLDATASIZE PUSH1 0x4 PUSH2 0x183D JUMP JUMPDEST PUSH2 0xB5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x435 CALLDATASIZE PUSH1 0x4 PUSH2 0x174C JUMP JUMPDEST PUSH2 0xC62 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0xD7B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CC PUSH2 0x46A CALLDATASIZE PUSH1 0x4 PUSH2 0x17DE JUMP JUMPDEST PUSH2 0xD8A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x48A CALLDATASIZE PUSH1 0x4 PUSH2 0x180E JUMP JUMPDEST PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x60 DUP10 DUP10 PUSH2 0x49C DUP3 PUSH2 0xDF0 JUMP JUMPDEST PUSH2 0x4C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B8 SWAP1 PUSH2 0x1F2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4CA DUP2 PUSH2 0xE04 JUMP JUMPDEST PUSH2 0x4E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B8 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x510 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B8 SWAP1 PUSH2 0x1FB6 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1FB6491D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x3F6C923A SWAP1 PUSH2 0x543 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1CAB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x55B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x56F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x597 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1A78 JUMP JUMPDEST PUSH1 0xA0 ADD MLOAD DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0x185E JUMP JUMPDEST SWAP1 POP PUSH2 0x5BB DUP7 DUP7 DUP4 PUSH2 0xE9F JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x69D JUMPI PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1CD43D11 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0xE6A1E888 SWAP5 PUSH2 0x635 SWAP5 SWAP1 DUP3 AND SWAP4 ADDRESS SWAP4 SWAP3 AND SWAP2 ADD PUSH2 0x1D9A JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x64D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x661 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x685 SWAP2 SWAP1 PUSH2 0x1BEA JUMP JUMPDEST POP POP PUSH1 0x4 SLOAD SWAP2 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP SWAP1 POP JUMPDEST SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x6C0 SWAP1 PUSH2 0x3B3 PUSH2 0x124C JUMP JUMPDEST PUSH2 0x6DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B8 SWAP1 PUSH2 0x1E9C JUMP JUMPDEST PUSH2 0x6E6 DUP3 DUP3 PUSH2 0x1250 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B8 SWAP1 PUSH2 0x2135 JUMP JUMPDEST PUSH2 0x70C PUSH2 0x124C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B8 SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH2 0x6E6 DUP3 DUP3 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x770 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0xB14 JUMP JUMPDEST PUSH2 0x78C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B8 SWAP1 PUSH2 0x2105 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x7F4 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0xB14 JUMP JUMPDEST PUSH2 0x810 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B8 SWAP1 PUSH2 0x2105 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B8 SWAP1 PUSH2 0x1FB6 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1FB6491D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x3F6C923A SWAP1 PUSH2 0x89F SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1CAB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x8F3 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1A78 JUMP JUMPDEST PUSH1 0xA0 ADD MLOAD DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x90A SWAP2 SWAP1 PUSH2 0x185E JUMP JUMPDEST SWAP1 POP PUSH2 0x915 DUP12 PUSH2 0xDF0 JUMP JUMPDEST ISZERO DUP1 PUSH2 0x927 JUMPI POP PUSH2 0x925 DUP11 PUSH2 0xE04 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x96C JUMPI DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP5 POP PUSH2 0x97B SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x977 DUP5 DUP5 DUP4 PUSH2 0xE9F JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B8 SWAP1 PUSH2 0x1F63 JUMP JUMPDEST PUSH2 0x9B9 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x2 SWAP1 DUP2 LT PUSH2 0x9D4 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 DUP2 SLOAD DUP2 LT PUSH2 0xA02 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 DUP2 SLOAD DUP2 LT PUSH2 0xA30 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0xA5E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD SWAP2 POP PUSH2 0xA75 DUP5 TIMESTAMP PUSH2 0x1322 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA83 TIMESTAMP DUP6 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE SWAP5 SWAP1 SWAP2 MUL PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B8 SWAP1 PUSH2 0x20B6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xB0B SWAP1 DUP4 PUSH2 0x134A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xB0B SWAP1 DUP4 PUSH2 0x1356 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB45 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B8 SWAP1 PUSH2 0x2184 JUMP JUMPDEST PUSH2 0xB91 PUSH2 0x159F JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xEBD2D6A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xEBD2D6A7 SWAP1 PUSH2 0xBC1 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC11 SWAP2 SWAP1 PUSH2 0x1B71 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0xA0 DUP4 ADD MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 DUP1 PUSH2 0xC42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B8 SWAP1 PUSH2 0x207F JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MLOAD TIMESTAMP SWAP1 PUSH2 0xC58 DUP9 DUP7 DUP7 DUP7 DUP7 DUP7 DUP14 PUSH2 0x136B JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B8 SWAP1 PUSH2 0x2184 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH4 0x39255D5B SWAP4 DUP2 AND SWAP3 PUSH4 0x317E182F PUSH1 0xE1 SHL SWAP3 PUSH2 0xCD7 SWAP3 SWAP1 SWAP2 AND SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x44 DUP2 ADD PUSH2 0x1E27 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP5 DUP6 AND OR SWAP1 MSTORE MLOAD PUSH1 0xE0 DUP6 SWAP1 SHL SWAP1 SWAP3 AND DUP3 MSTORE PUSH2 0xD1F SWAP3 SWAP2 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xD75 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x185E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xB0E SWAP1 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xDBF SWAP1 PUSH2 0x3B3 PUSH2 0x124C JUMP JUMPDEST PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B8 SWAP1 PUSH2 0x202F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0B DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x13F4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xA9214CC96615E0085D3BB077758DB69497DC2DCE3B2B1E97BC93C3D18D83EFD3 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7730599E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE98 SWAP2 SWAP1 PUSH2 0x17F6 JUMP JUMPDEST EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE8E7E2D1 PUSH1 0xE0 SHL DUP2 MSTORE SWAP7 SWAP8 POP SWAP2 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP6 POP PUSH4 0xE8E7E2D1 SWAP5 POP PUSH2 0xF11 SWAP4 POP SWAP2 AND SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1D80 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF3D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF61 SWAP2 SWAP1 PUSH2 0x1A5D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1CD43D11 PUSH1 0xE3 SHL DUP2 MSTORE SWAP5 SWAP6 POP PUSH1 0x0 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0xE6A1E888 SWAP5 PUSH2 0xFA3 SWAP5 SWAP1 DUP3 AND SWAP4 ADDRESS SWAP4 SWAP3 AND SWAP2 ADD PUSH2 0x1D9A JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFCF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFF3 SWAP2 SWAP1 PUSH2 0x1BEA JUMP JUMPDEST POP SWAP1 SWAP3 POP POP POP DUP2 DUP2 ADD PUSH1 0xB DUP2 SWAP1 SIGNEXTEND PUSH2 0x10FA JUMPI PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0x4329D293 SWAP5 DUP2 AND SWAP4 PUSH4 0x5A5999E3 PUSH1 0xE1 SHL SWAP4 PUSH2 0x1054 SWAP4 SWAP2 DUP4 AND SWAP3 ADDRESS SWAP3 SWAP2 AND SWAP1 PUSH1 0x44 DUP2 ADD PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP5 DUP6 AND OR SWAP1 MSTORE MLOAD PUSH1 0xE0 DUP6 SWAP1 SHL SWAP1 SWAP3 AND DUP3 MSTORE PUSH2 0x109C SWAP3 SWAP2 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D2D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x10F2 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1899 JUMP JUMPDEST POP SWAP4 POP PUSH2 0x1242 JUMP JUMPDEST PUSH1 0xB DUP3 SWAP1 SIGNEXTEND ISZERO PUSH2 0x1152 JUMPI PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0x4329D293 SWAP5 DUP2 AND SWAP4 PUSH4 0x28104D31 PUSH1 0xE1 SHL SWAP4 PUSH2 0x1054 SWAP4 SWAP2 DUP4 AND SWAP3 AND SWAP1 DUP9 SWAP1 PUSH1 0x44 DUP2 ADD PUSH2 0x1DF1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0x4329D293 SWAP5 DUP2 AND SWAP4 PUSH4 0x317E182F PUSH1 0xE1 SHL SWAP4 PUSH2 0x11A0 SWAP4 SWAP2 DUP4 AND SWAP3 AND SWAP1 DUP9 SWAP1 PUSH1 0x44 DUP2 ADD PUSH2 0x1DF1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP5 DUP6 AND OR SWAP1 MSTORE MLOAD PUSH1 0xE0 DUP6 SWAP1 SHL SWAP1 SWAP3 AND DUP3 MSTORE PUSH2 0x11E8 SWAP3 SWAP2 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D2D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1216 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x123E SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1899 JUMP JUMPDEST POP SWAP4 POP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1268 SWAP1 DUP3 PUSH2 0xDDB JUMP JUMPDEST ISZERO PUSH2 0x6E6 JUMPI PUSH2 0x1275 PUSH2 0x124C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x12D1 SWAP1 DUP3 PUSH2 0x143E JUMP JUMPDEST ISZERO PUSH2 0x6E6 JUMPI PUSH2 0x12DE PUSH2 0x124C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1344 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B8 SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0B DUP4 DUP4 PUSH2 0x1453 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0B DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1498 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1377 DUP4 TIMESTAMP PUSH2 0x1322 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1385 TIMESTAMP DUP7 PUSH2 0x1322 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 MUL SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP PUSH1 0xB PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 PUSH2 0x13DC SWAP3 SWAP2 SWAP1 PUSH2 0x15F1 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0E DUP3 PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1400 DUP4 DUP4 PUSH2 0x1498 JUMP JUMPDEST PUSH2 0x1436 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xB0E JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0B DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x14B4 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x1476 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B8 SWAP1 PUSH2 0x1E5A JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1485 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1570 JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x14E7 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1504 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x1534 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0xB0E JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x162C JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x162C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1611 JUMP JUMPDEST POP PUSH2 0x1638 SWAP3 SWAP2 POP PUSH2 0x163C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1638 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x163D JUMP JUMPDEST DUP1 MLOAD PUSH2 0xB0E DUP2 PUSH2 0x2294 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1685 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x169C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x16B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16CB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x16DE PUSH2 0x16D9 DUP3 PUSH2 0x2244 JUMP JUMPDEST PUSH2 0x221D JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x16F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x157A DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2268 JUMP JUMPDEST DUP1 MLOAD PUSH1 0xB DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0xB0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xB0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x173A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1745 DUP2 PUSH2 0x2294 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1760 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x176B DUP2 PUSH2 0x2294 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x178D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x179D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x17AB PUSH2 0x16D9 DUP3 PUSH2 0x2244 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP8 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x17BF JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY DUP4 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17EF JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1807 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1820 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1832 DUP2 PUSH2 0x2294 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x184F JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x186F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1885 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1891 DUP5 DUP3 DUP6 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18AB JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x18C2 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x18CE DUP7 DUP4 DUP8 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x18E3 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x18F0 DUP6 DUP3 DUP7 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1914 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x191F DUP2 PUSH2 0x2294 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x192F DUP2 PUSH2 0x2294 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1952 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x195E DUP12 DUP4 DUP13 ADD PUSH2 0x1674 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1976 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x1983 DUP11 DUP3 DUP12 ADD PUSH2 0x1674 JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x19B3 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP10 CALLDATALOAD PUSH2 0x19BE DUP2 PUSH2 0x2294 JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD PUSH2 0x19CE DUP2 PUSH2 0x2294 JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x19F1 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x19FD DUP14 DUP4 DUP15 ADD PUSH2 0x1674 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x80 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A15 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x1A21 DUP14 DUP4 DUP15 ADD PUSH2 0x1674 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0xA0 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A39 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x1A46 DUP13 DUP3 DUP14 ADD PUSH2 0x1674 JUMP JUMPDEST SWAP2 POP DUP1 SWAP4 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A6E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB0B DUP4 DUP4 PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A89 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1AA0 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP PUSH2 0x140 DUP1 DUP4 DUP8 SUB SLT ISZERO PUSH2 0x1AB6 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x1ABF DUP2 PUSH2 0x221D JUMP JUMPDEST SWAP1 POP PUSH2 0x1ACB DUP7 DUP5 PUSH2 0x1718 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x1ADA DUP7 PUSH1 0x20 DUP6 ADD PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1AF6 DUP7 PUSH1 0x60 DUP6 ADD PUSH2 0x1651 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1B08 DUP7 PUSH1 0x80 DUP6 ADD PUSH2 0x165C JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x1B1E JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x1B2A DUP8 DUP3 DUP7 ADD PUSH2 0x16BB JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 SWAP2 POP DUP2 DUP4 ADD MLOAD DUP3 DUP3 ADD MSTORE PUSH2 0x120 SWAP2 POP PUSH2 0x1B62 DUP7 DUP4 DUP6 ADD PUSH2 0x1651 JUMP JUMPDEST SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B82 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1B8C PUSH1 0xE0 PUSH2 0x221D JUMP JUMPDEST DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1BA8 DUP2 PUSH2 0x2294 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x1BBB DUP2 PUSH2 0x2294 JUMP JUMPDEST DUP1 PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BFF JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH2 0x1C10 DUP7 PUSH1 0x20 DUP8 ADD PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1C3E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2268 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD DUP2 DUP4 PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x1C8E JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1C6F JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 PUSH1 0x20 DUP4 ADD MSTORE DUP3 DUP5 PUSH1 0x40 DUP5 ADD CALLDATACOPY DUP2 DUP4 ADD PUSH1 0x40 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xB0B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1D11 SWAP1 DUP4 ADD DUP6 PUSH2 0x1C26 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1D23 DUP2 DUP6 PUSH2 0x1C26 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1D51 SWAP1 DUP4 ADD DUP6 PUSH2 0x1C26 JUMP JUMPDEST DUP3 DUP2 SUB DUP1 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x2 DUP3 MSTORE PUSH2 0x60F PUSH1 0xF3 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x60 DUP6 ADD MSTORE POP PUSH2 0x1D23 PUSH1 0x40 DUP3 ADD DUP6 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP4 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1D23 SWAP1 DUP4 ADD DUP5 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xB DUP4 SWAP1 SIGNEXTEND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1D23 SWAP1 DUP4 ADD DUP5 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1D23 SWAP1 DUP4 ADD DUP5 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6473 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x818591B5A5B881D1BC819DC985B9D PUSH1 0x8A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x5265646972656374416C6C3A206F6E6C7920434641763120737570706F727465 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265646972656374416C6C3A206E6F7420616363657074656420746F6B656E00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x33 SWAP1 DUP3 ADD MSTORE PUSH32 0x556E737570706F727465642063616C6C6261636B202D20204265666F72652041 PUSH1 0x40 DUP3 ADD MSTORE PUSH19 0x19DC99595B595B9D0815195C9B5A5B985D1959 PUSH1 0x6A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5265646972656374416C6C3A20737570706F7274206F6E6C79206F6E6520686F PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1CDD PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x2061646D696E20746F207265766F6B65 PUSH1 0x80 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x6F72646572206E6F7420666574636865642C206A6F6220696420697373756500 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x556E737570706F727465642063616C6C6261636B202D204265666F7265204167 PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x1C99595B595B9D081D5C19185D1959 PUSH1 0x8A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x21B0B63632B91034B9903737BA1030B71030B236B4B7 PUSH1 0x51 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x556E737570706F727465642063616C6C6261636B202D204265666F7265204167 PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x1C99595B595B9D0810DC99585D1959 PUSH1 0x8A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xB SIGNEXTEND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x223C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x225A JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2283 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x226B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xD75 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x22A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xC DUP10 STATICCALL 0xB3 0xFB 0xC4 0x4F 0xD0 0xE8 0x4E 0xD2 BYTE 0xDE 0xE8 PUSH12 0x783F9E0B9A60C98598DE101 SWAP3 0xF 0xCF DUP10 PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        789,
        13127
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "8": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "LT",
      "path": "44"
    },
    "9": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x16A"
    },
    "12": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "13": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "CALLDATALOAD",
      "path": "44"
    },
    "16": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "SHR",
      "path": "44"
    },
    "19": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "20": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x60F5BC21"
    },
    "25": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "GT",
      "path": "44"
    },
    "26": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xD1"
    },
    "29": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "30": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "31": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xA217FDDF"
    },
    "36": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "GT",
      "path": "44"
    },
    "37": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x8A"
    },
    "40": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "41": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "42": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xAFA78F51"
    },
    "47": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "GT",
      "path": "44"
    },
    "48": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x64"
    },
    "51": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "52": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "53": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xAFA78F51"
    },
    "58": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "59": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x43A"
    },
    "62": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "63": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "64": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xCA15C873"
    },
    "69": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "70": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x44F"
    },
    "73": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "74": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "75": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xD547741F"
    },
    "80": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "81": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x46F"
    },
    "84": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "85": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "86": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xD86ED3E5"
    },
    "91": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "92": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x176"
    },
    "95": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "96": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x171"
    },
    "99": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMP",
      "path": "44"
    },
    "100": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "101": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "102": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xA217FDDF"
    },
    "107": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "108": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x3E5"
    },
    "111": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "112": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "113": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xA5A6EEB5"
    },
    "118": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "119": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x3FA"
    },
    "122": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "123": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "124": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xAE015ADC"
    },
    "129": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "130": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x41A"
    },
    "133": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "134": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x171"
    },
    "137": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMP",
      "path": "44"
    },
    "138": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "139": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "140": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x60F5BC21"
    },
    "145": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "146": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x316"
    },
    "149": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "150": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "151": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x75B238FC"
    },
    "156": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "157": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x343"
    },
    "160": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "161": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "162": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x884D1F40"
    },
    "167": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "168": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x358"
    },
    "171": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "172": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "173": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x9010D07C"
    },
    "178": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "179": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x378"
    },
    "182": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "183": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "184": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x91D14854"
    },
    "189": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "190": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x398"
    },
    "193": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "194": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "195": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x9883145E"
    },
    "200": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "201": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x3C5"
    },
    "204": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "205": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x171"
    },
    "208": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMP",
      "path": "44"
    },
    "209": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "210": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "211": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x38354A93"
    },
    "216": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "GT",
      "path": "44"
    },
    "217": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x123"
    },
    "220": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "221": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "222": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x38354A93"
    },
    "227": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "228": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x25F"
    },
    "231": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "232": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "233": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x4DBB40B2"
    },
    "238": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "239": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x27F"
    },
    "242": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "243": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "244": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x4EB66FFF"
    },
    "249": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "250": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2A1"
    },
    "253": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "254": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "255": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x53C11F99"
    },
    "260": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "261": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2C1"
    },
    "264": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "265": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "266": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x5BD7FA11"
    },
    "271": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "272": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2E1"
    },
    "275": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "276": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "277": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x5F9E7D77"
    },
    "282": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "283": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2F6"
    },
    "286": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "287": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x171"
    },
    "290": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMP",
      "path": "44"
    },
    "291": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "292": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "293": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x230DBD29"
    },
    "298": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "299": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x176"
    },
    "302": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "303": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "304": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x248A9CA3"
    },
    "309": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "310": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1AC"
    },
    "313": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "314": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "315": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x28D2BF94"
    },
    "320": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "321": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1D9"
    },
    "324": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "325": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "326": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x2F2FF15D"
    },
    "331": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "332": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1FD"
    },
    "335": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "336": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "337": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x30D9C915"
    },
    "342": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "343": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x21F"
    },
    "346": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "347": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "348": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x36568ABE"
    },
    "353": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "EQ",
      "path": "44"
    },
    "354": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x23F"
    },
    "357": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "358": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x171"
    },
    "361": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMP",
      "path": "44"
    },
    "362": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "363": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "364": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x171"
    },
    "367": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "368": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "STOP",
      "path": "44"
    },
    "369": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "370": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "372": {
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "DUP1",
      "path": "44"
    },
    "373": {
      "first_revert": true,
      "fn": null,
      "offset": [
        789,
        13127
      ],
      "op": "REVERT",
      "path": "44"
    },
    "374": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "375": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "376": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "DUP1",
      "path": "44"
    },
    "377": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "378": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x182"
    },
    "381": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "382": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "384": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "DUP1",
      "path": "44"
    },
    "385": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "REVERT",
      "path": "44"
    },
    "386": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "387": {
      "op": "POP"
    },
    "388": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x196"
    },
    "391": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x191"
    },
    "394": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "395": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "397": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1996"
    },
    "400": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "jump": "i",
      "offset": [
        10114,
        10628
      ],
      "op": "JUMP",
      "path": "44"
    },
    "401": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "402": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x48F"
    },
    "405": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "jump": "i",
      "offset": [
        10114,
        10628
      ],
      "op": "JUMP",
      "path": "44"
    },
    "406": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "407": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "409": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "410": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1A3"
    },
    "413": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "414": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "415": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1CDA"
    },
    "418": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "jump": "i",
      "offset": [
        10114,
        10628
      ],
      "op": "JUMP",
      "path": "44"
    },
    "419": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "420": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "422": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "423": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "DUP1",
      "path": "44"
    },
    "424": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "425": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "SUB",
      "path": "44"
    },
    "426": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "427": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "RETURN",
      "path": "44"
    },
    "428": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "429": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "430": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "DUP1",
      "path": "0"
    },
    "431": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "432": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B8"
    },
    "435": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "436": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "438": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "DUP1",
      "path": "0"
    },
    "439": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "REVERT",
      "path": "0"
    },
    "440": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "441": {
      "op": "POP"
    },
    "442": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CC"
    },
    "445": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C7"
    },
    "448": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "449": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "451": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17DE"
    },
    "454": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMP",
      "path": "0"
    },
    "455": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "456": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CC"
    },
    "459": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMP",
      "path": "0"
    },
    "460": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "461": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "463": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "464": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A3"
    },
    "467": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "468": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "469": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CA2"
    },
    "472": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMP",
      "path": "0"
    },
    "473": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "474": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "475": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "DUP1",
      "path": "44"
    },
    "476": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "477": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1E5"
    },
    "480": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "481": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "483": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "DUP1",
      "path": "44"
    },
    "484": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "REVERT",
      "path": "44"
    },
    "485": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "486": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "POP",
      "path": "44"
    },
    "487": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1EE"
    },
    "490": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x5E1"
    },
    "493": {
      "fn": "TennerrStreamer.currentReceiver",
      "jump": "i",
      "offset": [
        3207,
        3560
      ],
      "op": "JUMP",
      "path": "44"
    },
    "494": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "495": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "497": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "498": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1A3"
    },
    "501": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "502": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "503": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "504": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "505": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x21FB"
    },
    "508": {
      "fn": "TennerrStreamer.currentReceiver",
      "jump": "i",
      "offset": [
        3207,
        3560
      ],
      "op": "JUMP",
      "path": "44"
    },
    "509": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "510": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "511": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "512": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "513": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x209"
    },
    "516": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "517": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "519": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "520": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "REVERT",
      "path": "0"
    },
    "521": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "522": {
      "op": "POP"
    },
    "523": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21D"
    },
    "526": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x218"
    },
    "529": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "530": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "532": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180E"
    },
    "535": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "536": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "537": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A2"
    },
    "540": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "541": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "542": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "STOP",
      "path": "0"
    },
    "543": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "544": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "CALLVALUE",
      "path": "26"
    },
    "545": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "DUP1",
      "path": "26"
    },
    "546": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "547": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x22B"
    },
    "550": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "551": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "553": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "DUP1",
      "path": "26"
    },
    "554": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "REVERT",
      "path": "26"
    },
    "555": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "556": {
      "op": "POP"
    },
    "557": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x196"
    },
    "560": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x23A"
    },
    "563": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "564": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "566": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x18FA"
    },
    "569": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "jump": "i",
      "offset": [
        247,
        647
      ],
      "op": "JUMP",
      "path": "26"
    },
    "570": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "571": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x6EA"
    },
    "574": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "jump": "i",
      "offset": [
        247,
        647
      ],
      "op": "JUMP",
      "path": "26"
    },
    "575": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "576": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "577": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "578": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "579": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24B"
    },
    "582": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "583": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "585": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "586": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "REVERT",
      "path": "0"
    },
    "587": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "588": {
      "op": "POP"
    },
    "589": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21D"
    },
    "592": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25A"
    },
    "595": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "596": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "598": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180E"
    },
    "601": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMP",
      "path": "0"
    },
    "602": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "603": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x704"
    },
    "606": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMP",
      "path": "0"
    },
    "607": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12180,
        12432
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "608": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12180,
        12432
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "609": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12180,
        12432
      ],
      "op": "DUP1",
      "path": "44"
    },
    "610": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12180,
        12432
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "611": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12180,
        12432
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x26B"
    },
    "614": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12180,
        12432
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "615": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12180,
        12432
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "617": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12180,
        12432
      ],
      "op": "DUP1",
      "path": "44"
    },
    "618": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12180,
        12432
      ],
      "op": "REVERT",
      "path": "44"
    },
    "619": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12180,
        12432
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "620": {
      "op": "POP"
    },
    "621": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12180,
        12432
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x21D"
    },
    "624": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12180,
        12432
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x27A"
    },
    "627": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12180,
        12432
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "628": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12180,
        12432
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "630": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12180,
        12432
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1729"
    },
    "633": {
      "fn": "TennerrStreamer.setTennerr",
      "jump": "i",
      "offset": [
        12180,
        12432
      ],
      "op": "JUMP",
      "path": "44"
    },
    "634": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12180,
        12432
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "635": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12180,
        12432
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x746"
    },
    "638": {
      "fn": "TennerrStreamer.setTennerr",
      "jump": "i",
      "offset": [
        12180,
        12432
      ],
      "op": "JUMP",
      "path": "44"
    },
    "639": {
      "offset": [
        1303,
        1339
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "640": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        1303,
        1339
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "641": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        1303,
        1339
      ],
      "op": "DUP1",
      "path": "44"
    },
    "642": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        1303,
        1339
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "643": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        1303,
        1339
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x28B"
    },
    "646": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        1303,
        1339
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "647": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        1303,
        1339
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "649": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        1303,
        1339
      ],
      "op": "DUP1",
      "path": "44"
    },
    "650": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        1303,
        1339
      ],
      "op": "REVERT",
      "path": "44"
    },
    "651": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        1303,
        1339
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "652": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        1303,
        1339
      ],
      "op": "POP",
      "path": "44"
    },
    "653": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        1303,
        1339
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x294"
    },
    "656": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        1303,
        1339
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x7BB"
    },
    "659": {
      "fn": "TennerrStreamer.setTennerr",
      "jump": "i",
      "offset": [
        1303,
        1339
      ],
      "op": "JUMP",
      "path": "44"
    },
    "660": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        1303,
        1339
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "661": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        1303,
        1339
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "663": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        1303,
        1339
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "664": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        1303,
        1339
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1A3"
    },
    "667": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        1303,
        1339
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "668": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        1303,
        1339
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "669": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        1303,
        1339
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1C52"
    },
    "672": {
      "fn": "TennerrStreamer.setTennerr",
      "jump": "i",
      "offset": [
        1303,
        1339
      ],
      "op": "JUMP",
      "path": "44"
    },
    "673": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12438,
        12708
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "674": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12438,
        12708
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "675": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12438,
        12708
      ],
      "op": "DUP1",
      "path": "44"
    },
    "676": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12438,
        12708
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "677": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12438,
        12708
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2AD"
    },
    "680": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12438,
        12708
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "681": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12438,
        12708
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "683": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12438,
        12708
      ],
      "op": "DUP1",
      "path": "44"
    },
    "684": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12438,
        12708
      ],
      "op": "REVERT",
      "path": "44"
    },
    "685": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12438,
        12708
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "686": {
      "op": "POP"
    },
    "687": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12438,
        12708
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x21D"
    },
    "690": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12438,
        12708
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2BC"
    },
    "693": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12438,
        12708
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "694": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12438,
        12708
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "696": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12438,
        12708
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1729"
    },
    "699": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "jump": "i",
      "offset": [
        12438,
        12708
      ],
      "op": "JUMP",
      "path": "44"
    },
    "700": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12438,
        12708
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "701": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12438,
        12708
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x7CA"
    },
    "704": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "jump": "i",
      "offset": [
        12438,
        12708
      ],
      "op": "JUMP",
      "path": "44"
    },
    "705": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "706": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "707": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "DUP1",
      "path": "44"
    },
    "708": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "709": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2CD"
    },
    "712": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "713": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "715": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "DUP1",
      "path": "44"
    },
    "716": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "REVERT",
      "path": "44"
    },
    "717": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "718": {
      "op": "POP"
    },
    "719": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x196"
    },
    "722": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2DC"
    },
    "725": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "726": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "728": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1996"
    },
    "731": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "jump": "i",
      "offset": [
        10634,
        11279
      ],
      "op": "JUMP",
      "path": "44"
    },
    "732": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "733": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x83F"
    },
    "736": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "jump": "i",
      "offset": [
        10634,
        11279
      ],
      "op": "JUMP",
      "path": "44"
    },
    "737": {
      "offset": [
        1371,
        1405
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "738": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1371,
        1405
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "739": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1371,
        1405
      ],
      "op": "DUP1",
      "path": "44"
    },
    "740": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1371,
        1405
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "741": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1371,
        1405
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2ED"
    },
    "744": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1371,
        1405
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "745": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1371,
        1405
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "747": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1371,
        1405
      ],
      "op": "DUP1",
      "path": "44"
    },
    "748": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1371,
        1405
      ],
      "op": "REVERT",
      "path": "44"
    },
    "749": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1371,
        1405
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "750": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1371,
        1405
      ],
      "op": "POP",
      "path": "44"
    },
    "751": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1371,
        1405
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x294"
    },
    "754": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1371,
        1405
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x988"
    },
    "757": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "jump": "i",
      "offset": [
        1371,
        1405
      ],
      "op": "JUMP",
      "path": "44"
    },
    "758": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "759": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "CALLVALUE",
      "path": "26"
    },
    "760": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "DUP1",
      "path": "26"
    },
    "761": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "762": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x302"
    },
    "765": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "766": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "768": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "DUP1",
      "path": "26"
    },
    "769": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "REVERT",
      "path": "26"
    },
    "770": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "771": {
      "op": "POP"
    },
    "772": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x196"
    },
    "775": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x311"
    },
    "778": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "779": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "781": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x18FA"
    },
    "784": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "jump": "i",
      "offset": [
        1911,
        2318
      ],
      "op": "JUMP",
      "path": "26"
    },
    "785": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "786": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x997"
    },
    "789": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "jump": "i",
      "offset": [
        1911,
        2318
      ],
      "op": "JUMP",
      "path": "26"
    },
    "790": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "791": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "792": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "DUP1",
      "path": "44"
    },
    "793": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "794": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x322"
    },
    "797": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "798": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "800": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "DUP1",
      "path": "44"
    },
    "801": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "REVERT",
      "path": "44"
    },
    "802": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "803": {
      "op": "POP"
    },
    "804": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x336"
    },
    "807": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x331"
    },
    "810": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "811": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "813": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x17DE"
    },
    "816": {
      "fn": "TennerrStreamer.getStreamData",
      "jump": "i",
      "offset": [
        7178,
        7922
      ],
      "op": "JUMP",
      "path": "44"
    },
    "817": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "818": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x9B1"
    },
    "821": {
      "fn": "TennerrStreamer.getStreamData",
      "jump": "i",
      "offset": [
        7178,
        7922
      ],
      "op": "JUMP",
      "path": "44"
    },
    "822": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "823": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "825": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "826": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1A3"
    },
    "829": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "830": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "831": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1C66"
    },
    "834": {
      "fn": "TennerrStreamer.getStreamData",
      "jump": "i",
      "offset": [
        7178,
        7922
      ],
      "op": "JUMP",
      "path": "44"
    },
    "835": {
      "offset": [
        1115,
        1175
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "836": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        1115,
        1175
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "837": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        1115,
        1175
      ],
      "op": "DUP1",
      "path": "44"
    },
    "838": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        1115,
        1175
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "839": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        1115,
        1175
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x34F"
    },
    "842": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        1115,
        1175
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "843": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        1115,
        1175
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "845": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        1115,
        1175
      ],
      "op": "DUP1",
      "path": "44"
    },
    "846": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        1115,
        1175
      ],
      "op": "REVERT",
      "path": "44"
    },
    "847": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        1115,
        1175
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "848": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        1115,
        1175
      ],
      "op": "POP",
      "path": "44"
    },
    "849": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        1115,
        1175
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1CC"
    },
    "852": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        1115,
        1175
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xAB5"
    },
    "855": {
      "fn": "TennerrStreamer.getStreamData",
      "jump": "i",
      "offset": [
        1115,
        1175
      ],
      "op": "JUMP",
      "path": "44"
    },
    "856": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "857": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "CALLVALUE",
      "path": "26"
    },
    "858": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "DUP1",
      "path": "26"
    },
    "859": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "860": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x364"
    },
    "863": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "864": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "866": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "DUP1",
      "path": "26"
    },
    "867": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "REVERT",
      "path": "26"
    },
    "868": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "869": {
      "op": "POP"
    },
    "870": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x196"
    },
    "873": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x373"
    },
    "876": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "877": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "879": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x18FA"
    },
    "882": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "jump": "i",
      "offset": [
        1079,
        1479
      ],
      "op": "JUMP",
      "path": "26"
    },
    "883": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "884": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xAD9"
    },
    "887": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "jump": "i",
      "offset": [
        1079,
        1479
      ],
      "op": "JUMP",
      "path": "26"
    },
    "888": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "889": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "890": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "891": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "892": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x384"
    },
    "895": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "896": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "898": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "899": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "REVERT",
      "path": "0"
    },
    "900": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "901": {
      "op": "POP"
    },
    "902": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x294"
    },
    "905": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x393"
    },
    "908": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "909": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "911": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183D"
    },
    "914": {
      "fn": "AccessControl.getRoleMember",
      "jump": "i",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMP",
      "path": "0"
    },
    "915": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "916": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF3"
    },
    "919": {
      "fn": "AccessControl.getRoleMember",
      "jump": "i",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMP",
      "path": "0"
    },
    "920": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "921": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "922": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "923": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "924": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A4"
    },
    "927": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "928": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "930": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "931": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "REVERT",
      "path": "0"
    },
    "932": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "933": {
      "op": "POP"
    },
    "934": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B8"
    },
    "937": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B3"
    },
    "940": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "941": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "943": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180E"
    },
    "946": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMP",
      "path": "0"
    },
    "947": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "948": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB14"
    },
    "951": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMP",
      "path": "0"
    },
    "952": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "953": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "955": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "956": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A3"
    },
    "959": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "960": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "961": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C97"
    },
    "964": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMP",
      "path": "0"
    },
    "965": {
      "offset": [
        1616,
        1663
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "966": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "967": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "DUP1",
      "path": "44"
    },
    "968": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "969": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x3D1"
    },
    "972": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "973": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "975": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "DUP1",
      "path": "44"
    },
    "976": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "REVERT",
      "path": "44"
    },
    "977": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "978": {
      "op": "POP"
    },
    "979": {
      "offset": [
        1616,
        1663
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1CC"
    },
    "982": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x3E0"
    },
    "985": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "986": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "988": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x183D"
    },
    "991": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        1616,
        1663
      ],
      "op": "JUMP",
      "path": "44"
    },
    "992": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "993": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xB2C"
    },
    "996": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        1616,
        1663
      ],
      "op": "JUMP",
      "path": "44"
    },
    "997": {
      "offset": [
        1727,
        1776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "998": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1727,
        1776
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "999": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1727,
        1776
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1000": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1727,
        1776
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1001": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1727,
        1776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F1"
    },
    "1004": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1727,
        1776
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1005": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1727,
        1776
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1007": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1727,
        1776
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1008": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1727,
        1776
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1009": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1727,
        1776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1010": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1727,
        1776
      ],
      "op": "POP",
      "path": "0"
    },
    "1011": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1727,
        1776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CC"
    },
    "1014": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1727,
        1776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5A"
    },
    "1017": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        1727,
        1776
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1018": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1019": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "1020": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1021": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1022": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x406"
    },
    "1025": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1026": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1028": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1029": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "REVERT",
      "path": "44"
    },
    "1030": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1031": {
      "op": "POP"
    },
    "1032": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x21D"
    },
    "1035": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x415"
    },
    "1038": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "1039": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "1041": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x183D"
    },
    "1044": {
      "fn": "TennerrStreamer.accountingCache",
      "jump": "i",
      "offset": [
        5674,
        6257
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1045": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1046": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xB5F"
    },
    "1049": {
      "fn": "TennerrStreamer.accountingCache",
      "jump": "i",
      "offset": [
        5674,
        6257
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1050": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11285,
        11790
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1051": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11285,
        11790
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "1052": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11285,
        11790
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1053": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11285,
        11790
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1054": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11285,
        11790
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x426"
    },
    "1057": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11285,
        11790
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1058": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11285,
        11790
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1060": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11285,
        11790
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1061": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11285,
        11790
      ],
      "op": "REVERT",
      "path": "44"
    },
    "1062": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11285,
        11790
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1063": {
      "op": "POP"
    },
    "1064": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11285,
        11790
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x21D"
    },
    "1067": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11285,
        11790
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x435"
    },
    "1070": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11285,
        11790
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "1071": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11285,
        11790
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "1073": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11285,
        11790
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x174C"
    },
    "1076": {
      "fn": "TennerrStreamer.createFlow",
      "jump": "i",
      "offset": [
        11285,
        11790
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1077": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11285,
        11790
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1078": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11285,
        11790
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xC62"
    },
    "1081": {
      "fn": "TennerrStreamer.createFlow",
      "jump": "i",
      "offset": [
        11285,
        11790
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1082": {
      "offset": [
        1586,
        1608
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1083": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        1586,
        1608
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "1084": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        1586,
        1608
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1085": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        1586,
        1608
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1086": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        1586,
        1608
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x446"
    },
    "1089": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        1586,
        1608
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1090": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        1586,
        1608
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1092": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        1586,
        1608
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1093": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        1586,
        1608
      ],
      "op": "REVERT",
      "path": "44"
    },
    "1094": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        1586,
        1608
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1095": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        1586,
        1608
      ],
      "op": "POP",
      "path": "44"
    },
    "1096": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        1586,
        1608
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x294"
    },
    "1099": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        1586,
        1608
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xD7B"
    },
    "1102": {
      "fn": "TennerrStreamer.createFlow",
      "jump": "i",
      "offset": [
        1586,
        1608
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1103": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1104": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1105": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1106": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1107": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45B"
    },
    "1110": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1111": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1113": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1114": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1115": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1116": {
      "op": "POP"
    },
    "1117": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CC"
    },
    "1120": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46A"
    },
    "1123": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1124": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1126": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17DE"
    },
    "1129": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1130": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1131": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD8A"
    },
    "1134": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1135": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1136": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1137": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1138": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1139": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47B"
    },
    "1142": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1143": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1145": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1146": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1147": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1148": {
      "op": "POP"
    },
    "1149": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21D"
    },
    "1152": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x48A"
    },
    "1155": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1156": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1158": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180E"
    },
    "1161": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1162": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1163": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA1"
    },
    "1166": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1167": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1168": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10463,
        10482
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "1170": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10399,
        10410
      ],
      "op": "DUP10",
      "path": "44"
    },
    "1171": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10412,
        10427
      ],
      "op": "DUP10",
      "path": "44"
    },
    "1172": {
      "offset": [
        12931,
        12955
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x49C"
    },
    "1175": {
      "offset": [
        12944,
        12954
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1176": {
      "offset": [
        12931,
        12943
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xDF0"
    },
    "1179": {
      "jump": "i",
      "offset": [
        12931,
        12955
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1180": {
      "branch": 60,
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12931,
        12955
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1181": {
      "offset": [
        12923,
        12991
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x4C1"
    },
    "1184": {
      "branch": 60,
      "offset": [
        12923,
        12991
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1185": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12923,
        12991
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1187": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12923,
        12991
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1188": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1194": {
      "op": "SHL"
    },
    "1195": {
      "offset": [
        12923,
        12991
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1196": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12923,
        12991
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1197": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12923,
        12991
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "1199": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12923,
        12991
      ],
      "op": "ADD",
      "path": "44"
    },
    "1200": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12923,
        12991
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x4B8"
    },
    "1203": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12923,
        12991
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1204": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12923,
        12991
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1F2C"
    },
    "1207": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "jump": "i",
      "offset": [
        12923,
        12991
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1208": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12923,
        12991
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1209": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12923,
        12991
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1211": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12923,
        12991
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1212": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12923,
        12991
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1213": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12923,
        12991
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1214": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12923,
        12991
      ],
      "op": "SUB",
      "path": "44"
    },
    "1215": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12923,
        12991
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1216": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12923,
        12991
      ],
      "op": "REVERT",
      "path": "44"
    },
    "1217": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12923,
        12991
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1218": {
      "offset": [
        13009,
        13033
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x4CA"
    },
    "1221": {
      "offset": [
        13018,
        13032
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1222": {
      "offset": [
        13009,
        13017
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xE04"
    },
    "1225": {
      "jump": "i",
      "offset": [
        13009,
        13033
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1226": {
      "branch": 61,
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        13009,
        13033
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1227": {
      "offset": [
        13001,
        13071
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x4E6"
    },
    "1230": {
      "branch": 61,
      "offset": [
        13001,
        13071
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1231": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        13001,
        13071
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1233": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        13001,
        13071
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1234": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1240": {
      "op": "SHL"
    },
    "1241": {
      "offset": [
        13001,
        13071
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1242": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        13001,
        13071
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1243": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        13001,
        13071
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "1245": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        13001,
        13071
      ],
      "op": "ADD",
      "path": "44"
    },
    "1246": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        13001,
        13071
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x4B8"
    },
    "1249": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        13001,
        13071
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1250": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        13001,
        13071
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1EEB"
    },
    "1253": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "jump": "i",
      "offset": [
        13001,
        13071
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1254": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        13001,
        13071
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1255": {
      "offset": [
        12774,
        12779
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1"
    },
    "1257": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12774,
        12779
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1264": {
      "op": "SHL"
    },
    "1265": {
      "op": "SUB"
    },
    "1266": {
      "offset": [
        12774,
        12779
      ],
      "op": "AND",
      "path": "44"
    },
    "1267": {
      "offset": [
        12752,
        12762
      ],
      "op": "CALLER",
      "path": "44"
    },
    "1268": {
      "offset": [
        12752,
        12780
      ],
      "op": "EQ",
      "path": "44"
    },
    "1269": {
      "offset": [
        12744,
        12819
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x510"
    },
    "1272": {
      "offset": [
        12744,
        12819
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1273": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12744,
        12819
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1275": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12744,
        12819
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1276": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1282": {
      "op": "SHL"
    },
    "1283": {
      "offset": [
        12744,
        12819
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1284": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12744,
        12819
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1285": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12744,
        12819
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "1287": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12744,
        12819
      ],
      "op": "ADD",
      "path": "44"
    },
    "1288": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12744,
        12819
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x4B8"
    },
    "1291": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12744,
        12819
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1292": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12744,
        12819
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1FB6"
    },
    "1295": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "jump": "i",
      "offset": [
        12744,
        12819
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1296": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12744,
        12819
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1297": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10538
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1"
    },
    "1299": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10538
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1300": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1302": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1303": {
      "op": "PUSH4",
      "value": "0x1FB6491D"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1310": {
      "op": "SHL"
    },
    "1311": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1312": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1313": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10498,
        10519
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "1315": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10498,
        10519
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1322": {
      "op": "SHL"
    },
    "1323": {
      "op": "SUB"
    },
    "1324": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10538
      ],
      "op": "AND",
      "path": "44"
    },
    "1325": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10538
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1326": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10548
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x3F6C923A"
    },
    "1331": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10548
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1332": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x543"
    },
    "1335": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1336": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10549,
        10553
      ],
      "op": "DUP10",
      "path": "44"
    },
    "1337": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10549,
        10553
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1338": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10549,
        10553
      ],
      "op": "DUP10",
      "path": "44"
    },
    "1339": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10549,
        10553
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1340": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "1342": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "ADD",
      "path": "44"
    },
    "1343": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1CAB"
    },
    "1346": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "jump": "i",
      "offset": [
        10533,
        10554
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1347": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1348": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1350": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1352": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1353": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1354": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1355": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "SUB",
      "path": "44"
    },
    "1356": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1357": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "DUP7",
      "path": "44"
    },
    "1358": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1359": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "1360": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1361": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1362": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1363": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x55B"
    },
    "1366": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1367": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1369": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1370": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "REVERT",
      "path": "44"
    },
    "1371": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1372": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "POP",
      "path": "44"
    },
    "1373": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "GAS",
      "path": "44"
    },
    "1374": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "1375": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1376": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1377": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1378": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x56F"
    },
    "1381": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1382": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "1383": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1385": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1386": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "1387": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "1388": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1390": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "REVERT",
      "path": "44"
    },
    "1391": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1392": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "POP",
      "path": "44"
    },
    "1393": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "POP",
      "path": "44"
    },
    "1394": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "POP",
      "path": "44"
    },
    "1395": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "POP",
      "path": "44"
    },
    "1396": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1398": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1399": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "1400": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1402": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1403": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "1404": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "1406": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "1407": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1408": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1409": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "ADD",
      "path": "44"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1412": {
      "op": "NOT"
    },
    "1413": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "AND",
      "path": "44"
    },
    "1414": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1415": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "ADD",
      "path": "44"
    },
    "1416": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1418": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1419": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x597"
    },
    "1422": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1423": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1424": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1425": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "ADD",
      "path": "44"
    },
    "1426": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1427": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1A78"
    },
    "1430": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "jump": "i",
      "offset": [
        10533,
        10554
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1431": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10554
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1432": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10563
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xA0"
    },
    "1434": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10563
      ],
      "op": "ADD",
      "path": "44"
    },
    "1435": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10533,
        10563
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1436": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10522,
        10573
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1437": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10522,
        10573
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1439": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10522,
        10573
      ],
      "op": "ADD",
      "path": "44"
    },
    "1440": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10522,
        10573
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1441": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10522,
        10573
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1442": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10522,
        10573
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1443": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10522,
        10573
      ],
      "op": "ADD",
      "path": "44"
    },
    "1444": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10522,
        10573
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1445": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10522,
        10573
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x5AE"
    },
    "1448": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10522,
        10573
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1449": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10522,
        10573
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1450": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10522,
        10573
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x185E"
    },
    "1453": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "jump": "i",
      "offset": [
        10522,
        10573
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1454": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10522,
        10573
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1455": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10498,
        10573
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1456": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10498,
        10573
      ],
      "op": "POP",
      "path": "44"
    },
    "1457": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10590,
        10621
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 0,
      "value": "0x5BB"
    },
    "1460": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10605,
        10609
      ],
      "op": "DUP7",
      "path": "44"
    },
    "1461": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10605,
        10609
      ],
      "op": "DUP7",
      "path": "44"
    },
    "1462": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10611,
        10619
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1463": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10590,
        10604
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xE9F"
    },
    "1466": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "jump": "i",
      "offset": [
        10590,
        10621
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1467": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10590,
        10621
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1468": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10583,
        10621
      ],
      "op": "SWAP14",
      "path": "44"
    },
    "1469": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10114,
        10628
      ],
      "op": "SWAP13",
      "path": "44"
    },
    "1470": {
      "op": "POP"
    },
    "1471": {
      "op": "POP"
    },
    "1472": {
      "op": "POP"
    },
    "1473": {
      "op": "POP"
    },
    "1474": {
      "op": "POP"
    },
    "1475": {
      "op": "POP"
    },
    "1476": {
      "op": "POP"
    },
    "1477": {
      "op": "POP"
    },
    "1478": {
      "op": "POP"
    },
    "1479": {
      "op": "POP"
    },
    "1480": {
      "op": "POP"
    },
    "1481": {
      "op": "POP"
    },
    "1482": {
      "op": "POP"
    },
    "1483": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "jump": "o",
      "offset": [
        10114,
        10628
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1484": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1485": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4339,
        4346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1487": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 1
    },
    "1488": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1489": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1490": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1492": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1493": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1494": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1495": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1497": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1498": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1499": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1501": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4387
      ],
      "op": "ADD",
      "path": "0"
    },
    "1502": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4387
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1503": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4387
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1504": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "o",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1505": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1506": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3390,
        3399
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "1508": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3390,
        3399
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1509": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3286,
        3303
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1511": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3286,
        3303
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1512": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3286,
        3303
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1513": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3286,
        3303
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1514": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3286,
        3303
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1515": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3286,
        3303
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1522": {
      "op": "SHL"
    },
    "1523": {
      "op": "SUB"
    },
    "1524": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3390,
        3399
      ],
      "op": "AND",
      "path": "44"
    },
    "1525": {
      "branch": 62,
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3390,
        3413
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1526": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3386,
        3554
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x69D"
    },
    "1529": {
      "branch": 62,
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3386,
        3554
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1530": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3459
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 2,
      "value": "0x2"
    },
    "1532": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3459
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1533": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3468,
        3482
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x3"
    },
    "1535": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3468,
        3482
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1536": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3499,
        3508
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "1538": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3499,
        3508
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1539": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3499,
        3508
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1540": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1542": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1543": {
      "op": "PUSH4",
      "value": "0x1CD43D11"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1550": {
      "op": "SHL"
    },
    "1551": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1552": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1559": {
      "op": "SHL"
    },
    "1560": {
      "op": "SUB"
    },
    "1561": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3459
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "1562": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3459
      ],
      "op": "DUP6",
      "path": "44"
    },
    "1563": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3459
      ],
      "op": "AND",
      "path": "44"
    },
    "1564": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3459
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "1565": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3467
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xE6A1E888"
    },
    "1570": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3467
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "1571": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x635"
    },
    "1574": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "1575": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3468,
        3482
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1576": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3468,
        3482
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1577": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3468,
        3482
      ],
      "op": "AND",
      "path": "44"
    },
    "1578": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3468,
        3482
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "1579": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3492,
        3496
      ],
      "op": "ADDRESS",
      "path": "44"
    },
    "1580": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3492,
        3496
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "1581": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3499,
        3508
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "1582": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3499,
        3508
      ],
      "op": "AND",
      "path": "44"
    },
    "1583": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3499,
        3508
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1584": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "ADD",
      "path": "44"
    },
    "1585": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1D9A"
    },
    "1588": {
      "fn": "TennerrStreamer.currentReceiver",
      "jump": "i",
      "offset": [
        3455,
        3509
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1589": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1590": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x80"
    },
    "1592": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1594": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1595": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1596": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1597": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "SUB",
      "path": "44"
    },
    "1598": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1599": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "DUP7",
      "path": "44"
    },
    "1600": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1601": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "1602": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1603": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1604": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1605": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x64D"
    },
    "1608": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1609": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1611": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1612": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "REVERT",
      "path": "44"
    },
    "1613": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1614": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "POP",
      "path": "44"
    },
    "1615": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "GAS",
      "path": "44"
    },
    "1616": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "1617": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1618": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1619": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1620": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x661"
    },
    "1623": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1624": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "1625": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1627": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1628": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "1629": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "1630": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1632": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "REVERT",
      "path": "44"
    },
    "1633": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1634": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "POP",
      "path": "44"
    },
    "1635": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "POP",
      "path": "44"
    },
    "1636": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "POP",
      "path": "44"
    },
    "1637": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "POP",
      "path": "44"
    },
    "1638": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1640": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1641": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "1642": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "1644": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "NOT",
      "path": "44"
    },
    "1645": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "1647": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1648": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "ADD",
      "path": "44"
    },
    "1649": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "AND",
      "path": "44"
    },
    "1650": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1651": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "ADD",
      "path": "44"
    },
    "1652": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1653": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1655": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1656": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "POP",
      "path": "44"
    },
    "1657": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1658": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "ADD",
      "path": "44"
    },
    "1659": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1660": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x685"
    },
    "1663": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1664": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1665": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1BEA"
    },
    "1668": {
      "fn": "TennerrStreamer.currentReceiver",
      "jump": "i",
      "offset": [
        3455,
        3509
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1669": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3455,
        3509
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1670": {
      "op": "POP"
    },
    "1671": {
      "op": "POP"
    },
    "1672": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3534,
        3543
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 3,
      "value": "0x4"
    },
    "1674": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3534,
        3543
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1675": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3429,
        3509
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1676": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3429,
        3509
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "1677": {
      "op": "POP"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1682": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1684": {
      "op": "SHL"
    },
    "1685": {
      "op": "SUB"
    },
    "1686": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3534,
        3543
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1687": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3534,
        3543
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1688": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3534,
        3543
      ],
      "op": "AND",
      "path": "44"
    },
    "1689": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3534,
        3543
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "1690": {
      "op": "POP"
    },
    "1691": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3429,
        3509
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1692": {
      "op": "POP"
    },
    "1693": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3386,
        3554
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1694": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1695": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1696": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3207,
        3560
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "1697": {
      "fn": "TennerrStreamer.currentReceiver",
      "jump": "o",
      "offset": [
        3207,
        3560
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1698": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1699": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4741
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x0"
    },
    "1701": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1702": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1703": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1704": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1706": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1707": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1708": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1709": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1711": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1712": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1713": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4757
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1715": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4757
      ],
      "op": "ADD",
      "path": "0"
    },
    "1716": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4757
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1717": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4727,
        4772
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C0"
    },
    "1720": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4727,
        4772
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1721": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4759,
        4771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B3"
    },
    "1724": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4759,
        4769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124C"
    },
    "1727": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4759,
        4771
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1728": {
      "branch": 72,
      "fn": "AccessControl.grantRole",
      "offset": [
        4727,
        4772
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1729": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DC"
    },
    "1732": {
      "branch": 72,
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1733": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1735": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1736": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1742": {
      "op": "SHL"
    },
    "1743": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1744": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1745": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1747": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "ADD",
      "path": "0"
    },
    "1748": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B8"
    },
    "1751": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1752": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E9C"
    },
    "1755": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4719,
        4824
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1756": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1757": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4835,
        4860
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x6E6"
    },
    "1760": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4846,
        4850
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1761": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4852,
        4859
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1762": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4835,
        4845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1250"
    },
    "1765": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4835,
        4860
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1766": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4835,
        4860
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1767": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "POP",
      "path": "0"
    },
    "1768": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "POP",
      "path": "0"
    },
    "1769": {
      "fn": "AccessControl.grantRole",
      "jump": "o",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1770": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1771": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        544,
        556
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "1773": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        583,
        640
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 6,
      "value": "0x40"
    },
    "1775": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        583,
        640
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1776": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1782": {
      "op": "SHL"
    },
    "1783": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        583,
        640
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1784": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        583,
        640
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1785": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        583,
        640
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1787": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        583,
        640
      ],
      "op": "ADD",
      "path": "26"
    },
    "1788": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        583,
        640
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x4B8"
    },
    "1791": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        583,
        640
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1792": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        583,
        640
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2135"
    },
    "1795": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "jump": "i",
      "offset": [
        583,
        640
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1796": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1797": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5915,
        5927
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 7,
      "value": "0x70C"
    },
    "1800": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5915,
        5925
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124C"
    },
    "1803": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5915,
        5927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1804": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5915,
        5927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1811": {
      "op": "SHL"
    },
    "1812": {
      "op": "SUB"
    },
    "1813": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5904,
        5927
      ],
      "op": "AND",
      "path": "0"
    },
    "1814": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5904,
        5911
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1821": {
      "op": "SHL"
    },
    "1822": {
      "op": "SUB"
    },
    "1823": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5904,
        5927
      ],
      "op": "AND",
      "path": "0"
    },
    "1824": {
      "branch": 73,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5904,
        5927
      ],
      "op": "EQ",
      "path": "0"
    },
    "1825": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x73C"
    },
    "1828": {
      "branch": 73,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1829": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1831": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1832": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1838": {
      "op": "SHL"
    },
    "1839": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1840": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1841": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1843": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "ADD",
      "path": "0"
    },
    "1844": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B8"
    },
    "1847": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1848": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21AC"
    },
    "1851": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5896,
        5979
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1852": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1853": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5990,
        6016
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 8,
      "value": "0x6E6"
    },
    "1856": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        6002,
        6006
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1857": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        6008,
        6015
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1858": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5990,
        6001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12B9"
    },
    "1861": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5990,
        6016
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1862": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12180,
        12432
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1863": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12260,
        12291
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 9,
      "value": "0x770"
    },
    "1866": {
      "offset": [
        1152,
        1175
      ],
      "op": "PUSH32",
      "path": "44",
      "value": "0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
    },
    "1899": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12280,
        12290
      ],
      "op": "CALLER",
      "path": "44"
    },
    "1900": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12260,
        12267
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xB14"
    },
    "1903": {
      "fn": "TennerrStreamer.setTennerr",
      "jump": "i",
      "offset": [
        12260,
        12291
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1904": {
      "branch": 63,
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12260,
        12291
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1905": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12252,
        12318
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x78C"
    },
    "1908": {
      "branch": 63,
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12252,
        12318
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1909": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12252,
        12318
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1911": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12252,
        12318
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1912": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1916": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1918": {
      "op": "SHL"
    },
    "1919": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12252,
        12318
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1920": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12252,
        12318
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1921": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12252,
        12318
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "1923": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12252,
        12318
      ],
      "op": "ADD",
      "path": "44"
    },
    "1924": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12252,
        12318
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x4B8"
    },
    "1927": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12252,
        12318
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1928": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12252,
        12318
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2105"
    },
    "1931": {
      "fn": "TennerrStreamer.setTennerr",
      "jump": "i",
      "offset": [
        12252,
        12318
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1932": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12252,
        12318
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1933": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12332,
        12355
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 10,
      "value": "0x9"
    },
    "1935": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12332,
        12369
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1936": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12332,
        12369
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1943": {
      "op": "SHL"
    },
    "1944": {
      "op": "SUB"
    },
    "1945": {
      "op": "NOT"
    },
    "1946": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12332,
        12369
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1947": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12332,
        12369
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1948": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12332,
        12369
      ],
      "op": "AND",
      "path": "44"
    },
    "1949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1955": {
      "op": "SHL"
    },
    "1956": {
      "op": "SUB"
    },
    "1957": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12332,
        12369
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "1958": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12332,
        12369
      ],
      "op": "DUP5",
      "path": "44"
    },
    "1959": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12332,
        12369
      ],
      "op": "AND",
      "path": "44"
    },
    "1960": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12332,
        12369
      ],
      "op": "OR",
      "path": "44"
    },
    "1961": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12332,
        12369
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1962": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12332,
        12369
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1963": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12332,
        12369
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1964": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12332,
        12369
      ],
      "op": "SSTORE",
      "path": "44"
    },
    "1965": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12383,
        12390
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 11,
      "value": "0xA"
    },
    "1967": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12383,
        12425
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1968": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12383,
        12425
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1969": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12401,
        12424
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "1970": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12401,
        12424
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1971": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12401,
        12424
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "1972": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12401,
        12424
      ],
      "op": "AND",
      "path": "44"
    },
    "1973": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12383,
        12425
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1974": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12383,
        12425
      ],
      "op": "AND",
      "path": "44"
    },
    "1975": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12383,
        12425
      ],
      "op": "OR",
      "path": "44"
    },
    "1976": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12383,
        12425
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1977": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        12383,
        12425
      ],
      "op": "SSTORE",
      "path": "44"
    },
    "1978": {
      "fn": "TennerrStreamer.setTennerr",
      "jump": "o",
      "offset": [
        12180,
        12432
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1979": {
      "offset": [
        1303,
        1339
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1980": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        1303,
        1339
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x6"
    },
    "1982": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        1303,
        1339
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1989": {
      "op": "SHL"
    },
    "1990": {
      "op": "SUB"
    },
    "1991": {
      "offset": [
        1303,
        1339
      ],
      "op": "AND",
      "path": "44"
    },
    "1992": {
      "fn": "TennerrStreamer.setTennerr",
      "offset": [
        1303,
        1339
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1993": {
      "fn": "TennerrStreamer.setTennerr",
      "jump": "o",
      "offset": [
        1303,
        1339
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1994": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12438,
        12708
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1995": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12520,
        12551
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 12,
      "value": "0x7F4"
    },
    "1998": {
      "offset": [
        1152,
        1175
      ],
      "op": "PUSH32",
      "path": "44",
      "value": "0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
    },
    "2031": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12540,
        12550
      ],
      "op": "CALLER",
      "path": "44"
    },
    "2032": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12520,
        12527
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xB14"
    },
    "2035": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "jump": "i",
      "offset": [
        12520,
        12551
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2036": {
      "branch": 64,
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12520,
        12551
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2037": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12512,
        12578
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x810"
    },
    "2040": {
      "branch": 64,
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12512,
        12578
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2041": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12512,
        12578
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2043": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12512,
        12578
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2044": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2050": {
      "op": "SHL"
    },
    "2051": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12512,
        12578
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2052": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12512,
        12578
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2053": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12512,
        12578
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "2055": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12512,
        12578
      ],
      "op": "ADD",
      "path": "44"
    },
    "2056": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12512,
        12578
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x4B8"
    },
    "2059": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12512,
        12578
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2060": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12512,
        12578
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2105"
    },
    "2063": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "jump": "i",
      "offset": [
        12512,
        12578
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2064": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12512,
        12578
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2065": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12588,
        12617
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 13,
      "value": "0x8"
    },
    "2067": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12588,
        12631
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2068": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12588,
        12631
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2075": {
      "op": "SHL"
    },
    "2076": {
      "op": "SUB"
    },
    "2077": {
      "op": "NOT"
    },
    "2078": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12588,
        12631
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2079": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12588,
        12631
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2080": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12588,
        12631
      ],
      "op": "AND",
      "path": "44"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2087": {
      "op": "SHL"
    },
    "2088": {
      "op": "SUB"
    },
    "2089": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12588,
        12631
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "2090": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12588,
        12631
      ],
      "op": "DUP5",
      "path": "44"
    },
    "2091": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12588,
        12631
      ],
      "op": "AND",
      "path": "44"
    },
    "2092": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12588,
        12631
      ],
      "op": "OR",
      "path": "44"
    },
    "2093": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12588,
        12631
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2094": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12588,
        12631
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2095": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12588,
        12631
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2096": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12588,
        12631
      ],
      "op": "SSTORE",
      "path": "44"
    },
    "2097": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12641,
        12654
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 14,
      "value": "0x7"
    },
    "2099": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12641,
        12701
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2100": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12641,
        12701
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2101": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12671,
        12700
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "2102": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12671,
        12700
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2103": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12671,
        12700
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "2104": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12671,
        12700
      ],
      "op": "AND",
      "path": "44"
    },
    "2105": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12641,
        12701
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2106": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12641,
        12701
      ],
      "op": "AND",
      "path": "44"
    },
    "2107": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12641,
        12701
      ],
      "op": "OR",
      "path": "44"
    },
    "2108": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12641,
        12701
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2109": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12641,
        12701
      ],
      "op": "SSTORE",
      "path": "44"
    },
    "2110": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "jump": "o",
      "offset": [
        12438,
        12708
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2111": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2112": {
      "offset": [
        12774,
        12779
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1"
    },
    "2114": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        12774,
        12779
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2115": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10940,
        10959
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "2117": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10940,
        10959
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2124": {
      "op": "SHL"
    },
    "2125": {
      "op": "SUB"
    },
    "2126": {
      "offset": [
        12774,
        12779
      ],
      "op": "AND",
      "path": "44"
    },
    "2127": {
      "offset": [
        12752,
        12762
      ],
      "op": "CALLER",
      "path": "44"
    },
    "2128": {
      "offset": [
        12752,
        12780
      ],
      "op": "EQ",
      "path": "44"
    },
    "2129": {
      "offset": [
        12744,
        12819
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x86C"
    },
    "2132": {
      "offset": [
        12744,
        12819
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2133": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        12744,
        12819
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2135": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        12744,
        12819
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2136": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2140": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2142": {
      "op": "SHL"
    },
    "2143": {
      "offset": [
        12744,
        12819
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2144": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        12744,
        12819
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2145": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        12744,
        12819
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "2147": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        12744,
        12819
      ],
      "op": "ADD",
      "path": "44"
    },
    "2148": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        12744,
        12819
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x4B8"
    },
    "2151": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        12744,
        12819
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2152": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        12744,
        12819
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1FB6"
    },
    "2155": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "jump": "i",
      "offset": [
        12744,
        12819
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2156": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        12744,
        12819
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2157": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11107
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1"
    },
    "2159": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11107
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2160": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2162": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2163": {
      "op": "PUSH4",
      "value": "0x1FB6491D"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2170": {
      "op": "SHL"
    },
    "2171": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2172": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2173": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11067,
        11088
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "2175": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11067,
        11088
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2182": {
      "op": "SHL"
    },
    "2183": {
      "op": "SUB"
    },
    "2184": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11107
      ],
      "op": "AND",
      "path": "44"
    },
    "2185": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11107
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2186": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11117
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x3F6C923A"
    },
    "2191": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11117
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2192": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x89F"
    },
    "2195": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2196": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11118,
        11122
      ],
      "op": "DUP8",
      "path": "44"
    },
    "2197": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11118,
        11122
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2198": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11118,
        11122
      ],
      "op": "DUP8",
      "path": "44"
    },
    "2199": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11118,
        11122
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2200": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "2202": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "ADD",
      "path": "44"
    },
    "2203": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1CAB"
    },
    "2206": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "jump": "i",
      "offset": [
        11102,
        11123
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2207": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2208": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2210": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2212": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2213": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2214": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2215": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "SUB",
      "path": "44"
    },
    "2216": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2217": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "DUP7",
      "path": "44"
    },
    "2218": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2219": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "2220": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2221": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2222": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2223": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x8B7"
    },
    "2226": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2227": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2229": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2230": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "REVERT",
      "path": "44"
    },
    "2231": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2232": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "POP",
      "path": "44"
    },
    "2233": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "GAS",
      "path": "44"
    },
    "2234": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "2235": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2236": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2237": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2238": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x8CB"
    },
    "2241": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2242": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2243": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2245": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2246": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "2247": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2248": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2250": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "REVERT",
      "path": "44"
    },
    "2251": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2252": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "POP",
      "path": "44"
    },
    "2253": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "POP",
      "path": "44"
    },
    "2254": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "POP",
      "path": "44"
    },
    "2255": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "POP",
      "path": "44"
    },
    "2256": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2258": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2259": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2260": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2262": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2263": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "2264": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "2266": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2267": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2268": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2269": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "ADD",
      "path": "44"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2272": {
      "op": "NOT"
    },
    "2273": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "AND",
      "path": "44"
    },
    "2274": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2275": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "ADD",
      "path": "44"
    },
    "2276": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2278": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2279": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x8F3"
    },
    "2282": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2283": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2284": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2285": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "ADD",
      "path": "44"
    },
    "2286": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2287": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1A78"
    },
    "2290": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "jump": "i",
      "offset": [
        11102,
        11123
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2291": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11123
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2292": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11132
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xA0"
    },
    "2294": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11132
      ],
      "op": "ADD",
      "path": "44"
    },
    "2295": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11102,
        11132
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2296": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11091,
        11142
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2297": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11091,
        11142
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2299": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11091,
        11142
      ],
      "op": "ADD",
      "path": "44"
    },
    "2300": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11091,
        11142
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2301": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11091,
        11142
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2302": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11091,
        11142
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2303": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11091,
        11142
      ],
      "op": "ADD",
      "path": "44"
    },
    "2304": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11091,
        11142
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2305": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11091,
        11142
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x90A"
    },
    "2308": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11091,
        11142
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2309": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11091,
        11142
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2310": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11091,
        11142
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x185E"
    },
    "2313": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "jump": "i",
      "offset": [
        11091,
        11142
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2314": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11091,
        11142
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2315": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11067,
        11142
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2316": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11067,
        11142
      ],
      "op": "POP",
      "path": "44"
    },
    "2317": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11157,
        11182
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x915"
    },
    "2320": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11170,
        11181
      ],
      "op": "DUP12",
      "path": "44"
    },
    "2321": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11157,
        11169
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xDF0"
    },
    "2324": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "jump": "i",
      "offset": [
        11157,
        11182
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2325": {
      "branch": 65,
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11157,
        11182
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2326": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11156,
        11182
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2327": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11156,
        11212
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2328": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11156,
        11212
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x927"
    },
    "2331": {
      "branch": 65,
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11156,
        11212
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2332": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11156,
        11212
      ],
      "op": "POP",
      "path": "44"
    },
    "2333": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11187,
        11212
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x925"
    },
    "2336": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11196,
        11211
      ],
      "op": "DUP11",
      "path": "44"
    },
    "2337": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11187,
        11195
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xE04"
    },
    "2340": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "jump": "i",
      "offset": [
        11187,
        11212
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2341": {
      "branch": 66,
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11187,
        11212
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2342": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11186,
        11212
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2343": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11156,
        11212
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2344": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11152,
        11225
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2345": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11152,
        11225
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x96C"
    },
    "2348": {
      "branch": 66,
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11152,
        11225
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2349": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11221,
        11225
      ],
      "op": "DUP4",
      "path": "44",
      "statement": 15
    },
    "2350": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11221,
        11225
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2351": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2352": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2353": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "2355": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "ADD",
      "path": "44"
    },
    "2356": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2358": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2359": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2360": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "DIV",
      "path": "44"
    },
    "2361": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "MUL",
      "path": "44"
    },
    "2362": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2364": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "ADD",
      "path": "44"
    },
    "2365": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2367": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2368": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2369": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2370": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "ADD",
      "path": "44"
    },
    "2371": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2373": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2374": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2375": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "2376": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "2377": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2378": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2379": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2380": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2381": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2382": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2384": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "ADD",
      "path": "44"
    },
    "2385": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2386": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2387": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2388": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2389": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "DUP5",
      "path": "44"
    },
    "2390": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "CALLDATACOPY",
      "path": "44"
    },
    "2391": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2393": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "2394": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "ADD",
      "path": "44"
    },
    "2395": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2396": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2397": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2398": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2399": {
      "op": "POP"
    },
    "2400": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "2401": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "2402": {
      "op": "POP"
    },
    "2403": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x97B"
    },
    "2406": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "2407": {
      "op": "POP"
    },
    "2408": {
      "op": "POP"
    },
    "2409": {
      "op": "POP"
    },
    "2410": {
      "op": "POP"
    },
    "2411": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11214,
        11225
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2412": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11152,
        11225
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2413": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11242,
        11272
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 16,
      "value": "0x977"
    },
    "2416": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11257,
        11261
      ],
      "op": "DUP5",
      "path": "44"
    },
    "2417": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11257,
        11261
      ],
      "op": "DUP5",
      "path": "44"
    },
    "2418": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11263,
        11271
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2419": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11242,
        11256
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xE9F"
    },
    "2422": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "jump": "i",
      "offset": [
        11242,
        11272
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2423": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11242,
        11272
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2424": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11235,
        11272
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2425": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11235,
        11272
      ],
      "op": "POP",
      "path": "44"
    },
    "2426": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11235,
        11272
      ],
      "op": "POP",
      "path": "44"
    },
    "2427": {
      "offset": [
        12829,
        12830
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2428": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "SWAP10",
      "path": "44"
    },
    "2429": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "SWAP9",
      "path": "44"
    },
    "2430": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "POP",
      "path": "44"
    },
    "2431": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "POP",
      "path": "44"
    },
    "2432": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "POP",
      "path": "44"
    },
    "2433": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "POP",
      "path": "44"
    },
    "2434": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "POP",
      "path": "44"
    },
    "2435": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "POP",
      "path": "44"
    },
    "2436": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "POP",
      "path": "44"
    },
    "2437": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "POP",
      "path": "44"
    },
    "2438": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10634,
        11279
      ],
      "op": "POP",
      "path": "44"
    },
    "2439": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "jump": "o",
      "offset": [
        10634,
        11279
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2440": {
      "offset": [
        1371,
        1405
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2441": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1371,
        1405
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x7"
    },
    "2443": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1371,
        1405
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2450": {
      "op": "SHL"
    },
    "2451": {
      "op": "SUB"
    },
    "2452": {
      "offset": [
        1371,
        1405
      ],
      "op": "AND",
      "path": "44"
    },
    "2453": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1371,
        1405
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2454": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "jump": "o",
      "offset": [
        1371,
        1405
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2455": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2456": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2211,
        2223
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "2458": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 17,
      "value": "0x40"
    },
    "2460": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2461": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2465": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2467": {
      "op": "SHL"
    },
    "2468": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2469": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2470": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2472": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "ADD",
      "path": "26"
    },
    "2473": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x4B8"
    },
    "2476": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2477": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1F63"
    },
    "2480": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "jump": "i",
      "offset": [
        2250,
        2311
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2481": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2482": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7251,
        7265
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x9B9"
    },
    "2485": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7251,
        7265
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1581"
    },
    "2488": {
      "fn": "TennerrStreamer.getStreamData",
      "jump": "i",
      "offset": [
        7251,
        7265
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2489": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7251,
        7265
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2490": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7277,
        7295
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2492": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7318
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2493": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7318
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2494": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7318
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2495": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7311
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xB"
    },
    "2497": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7318
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2499": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7318
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2500": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7318
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2502": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7318
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2503": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7318
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "2504": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7321
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2505": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7321
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2506": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7319,
        7320
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x2"
    },
    "2508": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7319,
        7320
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2509": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7321
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2510": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7321
      ],
      "op": "LT",
      "path": "44"
    },
    "2511": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7321
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x9D4"
    },
    "2514": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7321
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2515": {
      "dev": "Index out of range",
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7321
      ],
      "op": "INVALID",
      "path": "44"
    },
    "2516": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7321
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2517": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7321
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2518": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7321
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2520": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7321
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2521": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7321
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2523": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7321
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2525": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7321
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "2526": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7321
      ],
      "op": "ADD",
      "path": "44"
    },
    "2527": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7298,
        7321
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2528": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7277,
        7321
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2529": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7277,
        7321
      ],
      "op": "POP",
      "path": "44"
    },
    "2530": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7331,
        7344
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2532": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7360
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xB"
    },
    "2534": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7367
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2536": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7361,
        7366
      ],
      "op": "DUP6",
      "path": "44"
    },
    "2537": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7367
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2538": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7367
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2539": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7367
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2541": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7367
      ],
      "op": "ADD",
      "path": "44"
    },
    "2542": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7367
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2543": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7367
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2544": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7367
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2545": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7367
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2547": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7367
      ],
      "op": "ADD",
      "path": "44"
    },
    "2548": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7367
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2550": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7367
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "2551": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7368,
        7369
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x5"
    },
    "2553": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7370
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2554": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7370
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2555": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7370
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2556": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7370
      ],
      "op": "LT",
      "path": "44"
    },
    "2557": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7370
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xA02"
    },
    "2560": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7370
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2561": {
      "dev": "Index out of range",
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7370
      ],
      "op": "INVALID",
      "path": "44"
    },
    "2562": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7370
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2563": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7370
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2564": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7370
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2566": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7370
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2567": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7370
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2569": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7370
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2571": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7370
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "2572": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7370
      ],
      "op": "ADD",
      "path": "44"
    },
    "2573": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7347,
        7370
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2574": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7331,
        7370
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2575": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7331,
        7370
      ],
      "op": "POP",
      "path": "44"
    },
    "2576": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7380,
        7396
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2578": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7412
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xB"
    },
    "2580": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7419
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2582": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7413,
        7418
      ],
      "op": "DUP7",
      "path": "44"
    },
    "2583": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7419
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2584": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7419
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2585": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7419
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2587": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7419
      ],
      "op": "ADD",
      "path": "44"
    },
    "2588": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7419
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2589": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7419
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2590": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7419
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2591": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7419
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2593": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7419
      ],
      "op": "ADD",
      "path": "44"
    },
    "2594": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7419
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2596": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7419
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "2597": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7420,
        7421
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x3"
    },
    "2599": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7422
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2600": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7422
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2601": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7422
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2602": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7422
      ],
      "op": "LT",
      "path": "44"
    },
    "2603": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7422
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xA30"
    },
    "2606": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7422
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2607": {
      "dev": "Index out of range",
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7422
      ],
      "op": "INVALID",
      "path": "44"
    },
    "2608": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7422
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2609": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7422
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2610": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7422
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2612": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7422
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2613": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7422
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2615": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7422
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2617": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7422
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "2618": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7422
      ],
      "op": "ADD",
      "path": "44"
    },
    "2619": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7399,
        7422
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2620": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7380,
        7422
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2621": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7380,
        7422
      ],
      "op": "POP",
      "path": "44"
    },
    "2622": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7432,
        7445
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2624": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7461
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xB"
    },
    "2626": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7468
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2628": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7462,
        7467
      ],
      "op": "DUP8",
      "path": "44"
    },
    "2629": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7468
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2630": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7468
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2631": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7468
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2633": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7468
      ],
      "op": "ADD",
      "path": "44"
    },
    "2634": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7468
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2635": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7468
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2636": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7468
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2637": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7468
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2639": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7468
      ],
      "op": "ADD",
      "path": "44"
    },
    "2640": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7468
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2642": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7468
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "2643": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7469,
        7470
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2645": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7471
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2646": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7471
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2647": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7471
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2648": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7471
      ],
      "op": "LT",
      "path": "44"
    },
    "2649": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7471
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xA5E"
    },
    "2652": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7471
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2653": {
      "dev": "Index out of range",
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7471
      ],
      "op": "INVALID",
      "path": "44"
    },
    "2654": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7471
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2655": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7471
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2657": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7471
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2658": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7471
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2659": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7471
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2660": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7471
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2662": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7471
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2663": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7471
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "2664": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7471
      ],
      "op": "ADD",
      "path": "44"
    },
    "2665": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7471
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2666": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7448,
        7471
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2667": {
      "op": "POP"
    },
    "2668": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7498,
        7527
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xA75"
    },
    "2671": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7498,
        7506
      ],
      "op": "DUP5",
      "path": "44"
    },
    "2672": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7511,
        7526
      ],
      "op": "TIMESTAMP",
      "path": "44"
    },
    "2673": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7498,
        7510
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1322"
    },
    "2676": {
      "fn": "TennerrStreamer.getStreamData",
      "jump": "i",
      "offset": [
        7498,
        7527
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2677": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7498,
        7527
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2678": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7482,
        7527
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2679": {
      "op": "POP"
    },
    "2680": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7593,
        7608
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2682": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7611,
        7645
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xA83"
    },
    "2685": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7612,
        7627
      ],
      "op": "TIMESTAMP",
      "path": "44"
    },
    "2686": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7633,
        7644
      ],
      "op": "DUP6",
      "path": "44"
    },
    "2687": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7611,
        7632
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1322"
    },
    "2690": {
      "fn": "TennerrStreamer.getStreamData",
      "jump": "i",
      "offset": [
        7611,
        7645
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2691": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7611,
        7645
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2692": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 18,
      "value": "0x40"
    },
    "2694": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2695": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2696": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xA0"
    },
    "2698": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2699": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "ADD",
      "path": "44"
    },
    "2700": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2701": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2702": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "DUP6",
      "path": "44"
    },
    "2703": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2704": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2705": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7677,
        7698
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "2706": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7677,
        7698
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2707": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7677,
        7698
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2708": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7677,
        7698
      ],
      "op": "MUL",
      "path": "44"
    },
    "2709": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2711": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "DUP6",
      "path": "44"
    },
    "2712": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "ADD",
      "path": "44"
    },
    "2713": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2714": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2715": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "ADD",
      "path": "44"
    },
    "2716": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "SWAP6",
      "path": "44"
    },
    "2717": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2718": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "SWAP6",
      "path": "44"
    },
    "2719": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2720": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "2722": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2723": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "ADD",
      "path": "44"
    },
    "2724": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2725": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x80"
    },
    "2727": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2728": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "ADD",
      "path": "44"
    },
    "2729": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "2730": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2731": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "2732": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2733": {
      "op": "POP"
    },
    "2734": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7847,
        7915
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2735": {
      "op": "POP"
    },
    "2736": {
      "op": "POP"
    },
    "2737": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2738": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2739": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7178,
        7922
      ],
      "op": "POP",
      "path": "44"
    },
    "2740": {
      "fn": "TennerrStreamer.getStreamData",
      "jump": "o",
      "offset": [
        7178,
        7922
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2741": {
      "offset": [
        1115,
        1175
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2742": {
      "offset": [
        1152,
        1175
      ],
      "op": "PUSH32",
      "path": "44",
      "value": "0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
    },
    "2775": {
      "offset": [
        1115,
        1175
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2776": {
      "fn": "TennerrStreamer.getStreamData",
      "jump": "o",
      "offset": [
        1115,
        1175
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2777": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2778": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1376,
        1388
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "2780": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1415,
        1472
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 19,
      "value": "0x40"
    },
    "2782": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1415,
        1472
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2783": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2787": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2789": {
      "op": "SHL"
    },
    "2790": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1415,
        1472
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2791": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1415,
        1472
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2792": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1415,
        1472
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2794": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1415,
        1472
      ],
      "op": "ADD",
      "path": "26"
    },
    "2795": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1415,
        1472
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x4B8"
    },
    "2798": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1415,
        1472
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2799": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1415,
        1472
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x20B6"
    },
    "2802": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "jump": "i",
      "offset": [
        1415,
        1472
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2803": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2804": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4038,
        4045
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2806": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 20
    },
    "2807": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2808": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2809": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2811": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2812": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2813": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2814": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2816": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2817": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2818": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0B"
    },
    "2821": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4094
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2822": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4088,
        4093
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2823": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x134A"
    },
    "2826": {
      "fn": "AccessControl.getRoleMember",
      "jump": "i",
      "offset": [
        4064,
        4094
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2827": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4094
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2828": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4057,
        4094
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2829": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4057,
        4094
      ],
      "op": "POP",
      "path": "0"
    },
    "2830": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2831": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2832": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2833": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "POP",
      "path": "0"
    },
    "2834": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "POP",
      "path": "0"
    },
    "2835": {
      "fn": "AccessControl.getRoleMember",
      "jump": "o",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2836": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2837": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3019,
        3023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2839": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 21
    },
    "2840": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2841": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2842": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2844": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2845": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2846": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2847": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2849": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2850": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2851": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3080
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0B"
    },
    "2854": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3080
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2855": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3072,
        3079
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2856": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1356"
    },
    "2859": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        3042,
        3080
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2860": {
      "offset": [
        1616,
        1663
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2861": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xB"
    },
    "2863": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2865": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2866": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2867": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2869": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2870": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2872": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2874": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "2875": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2876": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2877": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2878": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2879": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "LT",
      "path": "44"
    },
    "2880": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xB45"
    },
    "2883": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2884": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "INVALID",
      "path": "44"
    },
    "2885": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2886": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2887": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2889": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2890": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2892": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2894": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "2895": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "ADD",
      "path": "44"
    },
    "2896": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2898": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2899": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "POP",
      "path": "44"
    },
    "2900": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2901": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "POP",
      "path": "44"
    },
    "2902": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "POP",
      "path": "44"
    },
    "2903": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2904": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1616,
        1663
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2905": {
      "fn": "AccessControl.hasRole",
      "jump": "o",
      "offset": [
        1616,
        1663
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2906": {
      "offset": [
        1727,
        1776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2907": {
      "offset": [
        1772,
        1776
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2909": {
      "offset": [
        1727,
        1776
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2910": {
      "fn": "AccessControl.hasRole",
      "jump": "o",
      "offset": [
        1727,
        1776
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2911": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2912": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5768,
        5797
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 22,
      "value": "0x8"
    },
    "2914": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5768,
        5797
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2921": {
      "op": "SHL"
    },
    "2922": {
      "op": "SUB"
    },
    "2923": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5768,
        5797
      ],
      "op": "AND",
      "path": "44"
    },
    "2924": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5754,
        5764
      ],
      "op": "CALLER",
      "path": "44"
    },
    "2925": {
      "branch": 67,
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5754,
        5797
      ],
      "op": "EQ",
      "path": "44"
    },
    "2926": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5746,
        5816
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xB89"
    },
    "2929": {
      "branch": 67,
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5746,
        5816
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2930": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5746,
        5816
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2932": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5746,
        5816
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2933": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2939": {
      "op": "SHL"
    },
    "2940": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5746,
        5816
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2941": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5746,
        5816
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2942": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5746,
        5816
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "2944": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5746,
        5816
      ],
      "op": "ADD",
      "path": "44"
    },
    "2945": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5746,
        5816
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x4B8"
    },
    "2948": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5746,
        5816
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2949": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5746,
        5816
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2184"
    },
    "2952": {
      "fn": "TennerrStreamer.accountingCache",
      "jump": "i",
      "offset": [
        5746,
        5816
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2953": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5746,
        5816
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2954": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5826,
        5858
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xB91"
    },
    "2957": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5826,
        5858
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x159F"
    },
    "2960": {
      "fn": "TennerrStreamer.accountingCache",
      "jump": "i",
      "offset": [
        5826,
        5858
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2961": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5826,
        5858
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2962": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5874
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x7"
    },
    "2964": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5874
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2965": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2967": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2968": {
      "op": "PUSH4",
      "value": "0xEBD2D6A7"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2975": {
      "op": "SHL"
    },
    "2976": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2977": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2984": {
      "op": "SHL"
    },
    "2985": {
      "op": "SUB"
    },
    "2986": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5874
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2987": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5874
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2988": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5874
      ],
      "op": "AND",
      "path": "44"
    },
    "2989": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5874
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2990": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5887
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xEBD2D6A7"
    },
    "2995": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5887
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2996": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xBC1"
    },
    "2999": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3000": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5888,
        5893
      ],
      "op": "DUP7",
      "path": "44"
    },
    "3001": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5888,
        5893
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3002": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "3004": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "ADD",
      "path": "44"
    },
    "3005": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1CA2"
    },
    "3008": {
      "fn": "TennerrStreamer.accountingCache",
      "jump": "i",
      "offset": [
        5861,
        5894
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3009": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3010": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xE0"
    },
    "3012": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3014": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3015": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3016": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3017": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "SUB",
      "path": "44"
    },
    "3018": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3019": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "DUP7",
      "path": "44"
    },
    "3020": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3021": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "3022": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3023": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3024": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3025": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xBD9"
    },
    "3028": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3029": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3031": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3032": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "REVERT",
      "path": "44"
    },
    "3033": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3034": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "POP",
      "path": "44"
    },
    "3035": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "GAS",
      "path": "44"
    },
    "3036": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "3037": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3038": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3039": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3040": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xBED"
    },
    "3043": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3044": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3045": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3047": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3048": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "3049": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3050": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3052": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "REVERT",
      "path": "44"
    },
    "3053": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3054": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "POP",
      "path": "44"
    },
    "3055": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "POP",
      "path": "44"
    },
    "3056": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "POP",
      "path": "44"
    },
    "3057": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "POP",
      "path": "44"
    },
    "3058": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3060": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3061": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3062": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3064": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "NOT",
      "path": "44"
    },
    "3065": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3067": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3068": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "ADD",
      "path": "44"
    },
    "3069": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "AND",
      "path": "44"
    },
    "3070": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3071": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "ADD",
      "path": "44"
    },
    "3072": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3073": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3075": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3076": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "POP",
      "path": "44"
    },
    "3077": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3078": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "ADD",
      "path": "44"
    },
    "3079": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3080": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xC11"
    },
    "3083": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3084": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3085": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1B71"
    },
    "3088": {
      "fn": "TennerrStreamer.accountingCache",
      "jump": "i",
      "offset": [
        5861,
        5894
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3089": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5861,
        5894
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3090": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5920,
        5931
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3092": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5920,
        5931
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3093": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5920,
        5931
      ],
      "op": "ADD",
      "path": "44"
    },
    "3094": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5920,
        5931
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3095": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5958,
        5970
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "3097": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5958,
        5970
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3098": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5958,
        5970
      ],
      "op": "ADD",
      "path": "44"
    },
    "3099": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5958,
        5970
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3100": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5994,
        6010
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xA0"
    },
    "3102": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5994,
        6010
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3103": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5994,
        6010
      ],
      "op": "ADD",
      "path": "44"
    },
    "3104": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5994,
        6010
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3105": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5826,
        5894
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "3106": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5826,
        5894
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "3107": {
      "op": "POP"
    },
    "3108": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5920,
        5931
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3109": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5920,
        5931
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3110": {
      "branch": 68,
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6028,
        6038
      ],
      "op": "DUP1",
      "path": "44",
      "statement": 23
    },
    "3111": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6020,
        6074
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xC42"
    },
    "3114": {
      "branch": 68,
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6020,
        6074
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3115": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6020,
        6074
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3117": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6020,
        6074
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3118": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3124": {
      "op": "SHL"
    },
    "3125": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6020,
        6074
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3126": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6020,
        6074
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3127": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6020,
        6074
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "3129": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6020,
        6074
      ],
      "op": "ADD",
      "path": "44"
    },
    "3130": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6020,
        6074
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x4B8"
    },
    "3133": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6020,
        6074
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3134": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6020,
        6074
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x207F"
    },
    "3137": {
      "fn": "TennerrStreamer.accountingCache",
      "jump": "i",
      "offset": [
        6020,
        6074
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3138": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6020,
        6074
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3139": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6144,
        6161
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xC0"
    },
    "3141": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6144,
        6161
      ],
      "op": "DUP5",
      "path": "44"
    },
    "3142": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6144,
        6161
      ],
      "op": "ADD",
      "path": "44"
    },
    "3143": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6144,
        6161
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3144": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6103,
        6118
      ],
      "op": "TIMESTAMP",
      "path": "44"
    },
    "3145": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6103,
        6118
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3146": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6171,
        6250
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 24,
      "value": "0xC58"
    },
    "3149": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6189,
        6194
      ],
      "op": "DUP9",
      "path": "44"
    },
    "3150": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6195,
        6200
      ],
      "op": "DUP7",
      "path": "44"
    },
    "3151": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6202,
        6208
      ],
      "op": "DUP7",
      "path": "44"
    },
    "3152": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6210,
        6216
      ],
      "op": "DUP7",
      "path": "44"
    },
    "3153": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6103,
        6118
      ],
      "op": "DUP7",
      "path": "44"
    },
    "3154": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6144,
        6161
      ],
      "op": "DUP7",
      "path": "44"
    },
    "3155": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6241,
        6249
      ],
      "op": "DUP14",
      "path": "44"
    },
    "3156": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6171,
        6188
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x136B"
    },
    "3159": {
      "fn": "TennerrStreamer.accountingCache",
      "jump": "i",
      "offset": [
        6171,
        6250
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3160": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        6171,
        6250
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3161": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "POP",
      "path": "44"
    },
    "3162": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "POP",
      "path": "44"
    },
    "3163": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "POP",
      "path": "44"
    },
    "3164": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "POP",
      "path": "44"
    },
    "3165": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "POP",
      "path": "44"
    },
    "3166": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "POP",
      "path": "44"
    },
    "3167": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "POP",
      "path": "44"
    },
    "3168": {
      "fn": "TennerrStreamer.accountingCache",
      "offset": [
        5674,
        6257
      ],
      "op": "POP",
      "path": "44"
    },
    "3169": {
      "fn": "TennerrStreamer.accountingCache",
      "jump": "o",
      "offset": [
        5674,
        6257
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3170": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11285,
        11790
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3171": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11402,
        11425
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 25,
      "value": "0x9"
    },
    "3173": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11402,
        11425
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "3174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3180": {
      "op": "SHL"
    },
    "3181": {
      "op": "SUB"
    },
    "3182": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11402,
        11425
      ],
      "op": "AND",
      "path": "44"
    },
    "3183": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11388,
        11398
      ],
      "op": "CALLER",
      "path": "44"
    },
    "3184": {
      "branch": 69,
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11388,
        11425
      ],
      "op": "EQ",
      "path": "44"
    },
    "3185": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11380,
        11444
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xC8C"
    },
    "3188": {
      "branch": 69,
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11380,
        11444
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3189": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11380,
        11444
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3191": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11380,
        11444
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3192": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3196": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3198": {
      "op": "SHL"
    },
    "3199": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11380,
        11444
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3200": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11380,
        11444
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3201": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11380,
        11444
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "3203": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11380,
        11444
      ],
      "op": "ADD",
      "path": "44"
    },
    "3204": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11380,
        11444
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x4B8"
    },
    "3207": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11380,
        11444
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3208": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11380,
        11444
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2184"
    },
    "3211": {
      "fn": "TennerrStreamer.createFlow",
      "jump": "i",
      "offset": [
        11380,
        11444
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3212": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11380,
        11444
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3213": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11459
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 26,
      "value": "0x1"
    },
    "3215": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11459
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "3216": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11491,
        11495
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x2"
    },
    "3218": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11491,
        11495
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "3219": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11603,
        11617
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x3"
    },
    "3221": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11603,
        11617
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "3222": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11702,
        11714
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3224": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11702,
        11714
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3225": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11702,
        11714
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3226": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11459
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3228": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11702,
        11714
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3229": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11702,
        11714
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3230": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11702,
        11714
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3232": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11702,
        11714
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3233": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11702,
        11714
      ],
      "op": "ADD",
      "path": "44"
    },
    "3234": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11702,
        11714
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3235": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11702,
        11714
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3236": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11702,
        11714
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3241": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3243": {
      "op": "SHL"
    },
    "3244": {
      "op": "SUB"
    },
    "3245": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11459
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "3246": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11459
      ],
      "op": "DUP5",
      "path": "44"
    },
    "3247": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11459
      ],
      "op": "AND",
      "path": "44"
    },
    "3248": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11459
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "3249": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11473
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x39255D5B"
    },
    "3254": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11473
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "3255": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11491,
        11495
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3256": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11491,
        11495
      ],
      "op": "AND",
      "path": "44"
    },
    "3257": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11491,
        11495
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "3258": {
      "op": "PUSH4",
      "value": "0x317E182F"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3265": {
      "op": "SHL"
    },
    "3266": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11557,
        11581
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "3267": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xCD7"
    },
    "3270": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "3271": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11603,
        11617
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3272": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11603,
        11617
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3273": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11603,
        11617
      ],
      "op": "AND",
      "path": "44"
    },
    "3274": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11603,
        11617
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3275": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11639,
        11650
      ],
      "op": "DUP10",
      "path": "44"
    },
    "3276": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11639,
        11650
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3277": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11672,
        11680
      ],
      "op": "DUP10",
      "path": "44"
    },
    "3278": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11672,
        11680
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3279": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x44"
    },
    "3281": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3282": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "ADD",
      "path": "44"
    },
    "3283": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1E27"
    },
    "3286": {
      "fn": "TennerrStreamer.createFlow",
      "jump": "i",
      "offset": [
        11513,
        11732
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3287": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3288": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3290": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3291": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3294": {
      "op": "NOT"
    },
    "3295": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3296": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "DUP5",
      "path": "44"
    },
    "3297": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "SUB",
      "path": "44"
    },
    "3298": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "ADD",
      "path": "44"
    },
    "3299": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3300": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3301": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3302": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3303": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3304": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3306": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3307": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "ADD",
      "path": "44"
    },
    "3308": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3309": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3316": {
      "op": "SHL"
    },
    "3317": {
      "op": "SUB"
    },
    "3318": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "AND",
      "path": "44"
    },
    "3319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3323": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3325": {
      "op": "SHL"
    },
    "3326": {
      "op": "SUB"
    },
    "3327": {
      "op": "NOT"
    },
    "3328": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "3329": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "DUP6",
      "path": "44"
    },
    "3330": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "AND",
      "path": "44"
    },
    "3331": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "OR",
      "path": "44"
    },
    "3332": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3333": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11513,
        11732
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3334": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3335": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xE0"
    },
    "3337": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "DUP6",
      "path": "44"
    },
    "3338": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3339": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "SHL",
      "path": "44"
    },
    "3340": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3341": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "3342": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "AND",
      "path": "44"
    },
    "3343": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3344": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3345": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xD1F"
    },
    "3348": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "3349": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3350": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11750,
        11755
      ],
      "op": "DUP7",
      "path": "44"
    },
    "3351": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11750,
        11755
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3352": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "3354": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "ADD",
      "path": "44"
    },
    "3355": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1CED"
    },
    "3358": {
      "fn": "TennerrStreamer.createFlow",
      "jump": "i",
      "offset": [
        11454,
        11783
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3359": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3360": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3362": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3364": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3365": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3366": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3367": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "SUB",
      "path": "44"
    },
    "3368": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3369": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3371": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "DUP8",
      "path": "44"
    },
    "3372": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3373": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "3374": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3375": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3376": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3377": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xD39"
    },
    "3380": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3381": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3383": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3384": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "REVERT",
      "path": "44"
    },
    "3385": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3386": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "POP",
      "path": "44"
    },
    "3387": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "GAS",
      "path": "44"
    },
    "3388": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "CALL",
      "path": "44"
    },
    "3389": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3390": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3391": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3392": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xD4D"
    },
    "3395": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3396": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3397": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3399": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3400": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "3401": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3402": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3404": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "REVERT",
      "path": "44"
    },
    "3405": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3406": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "POP",
      "path": "44"
    },
    "3407": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "POP",
      "path": "44"
    },
    "3408": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "POP",
      "path": "44"
    },
    "3409": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "POP",
      "path": "44"
    },
    "3410": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3412": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3413": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3414": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3416": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3417": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "3418": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3420": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3421": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3422": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3423": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "ADD",
      "path": "44"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3426": {
      "op": "NOT"
    },
    "3427": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "AND",
      "path": "44"
    },
    "3428": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3429": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "ADD",
      "path": "44"
    },
    "3430": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3432": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3433": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xD75"
    },
    "3436": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3437": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3438": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3439": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "ADD",
      "path": "44"
    },
    "3440": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3441": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x185E"
    },
    "3444": {
      "fn": "TennerrStreamer.createFlow",
      "jump": "i",
      "offset": [
        11454,
        11783
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3445": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3446": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11454,
        11783
      ],
      "op": "POP",
      "path": "44"
    },
    "3447": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11285,
        11790
      ],
      "op": "POP",
      "path": "44"
    },
    "3448": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11285,
        11790
      ],
      "op": "POP",
      "path": "44"
    },
    "3449": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11285,
        11790
      ],
      "op": "POP",
      "path": "44"
    },
    "3450": {
      "fn": "TennerrStreamer.createFlow",
      "jump": "o",
      "offset": [
        11285,
        11790
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3451": {
      "offset": [
        1586,
        1608
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3452": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        1586,
        1608
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xA"
    },
    "3454": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        1586,
        1608
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "3455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3461": {
      "op": "SHL"
    },
    "3462": {
      "op": "SUB"
    },
    "3463": {
      "offset": [
        1586,
        1608
      ],
      "op": "AND",
      "path": "44"
    },
    "3464": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        1586,
        1608
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3465": {
      "fn": "TennerrStreamer.createFlow",
      "jump": "o",
      "offset": [
        1586,
        1608
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3466": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3467": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3318,
        3325
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3469": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 27
    },
    "3470": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3471": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3472": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3474": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3475": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3476": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3477": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3479": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3480": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3481": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3373
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0E"
    },
    "3484": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3373
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3485": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3371
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13E9"
    },
    "3488": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        3344,
        3373
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3489": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3490": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5199
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 28,
      "value": "0x0"
    },
    "3492": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3493": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3494": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3495": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3497": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3498": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3499": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3500": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3502": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3503": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3504": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5215
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3506": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5215
      ],
      "op": "ADD",
      "path": "0"
    },
    "3507": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5215
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3508": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5185,
        5230
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDBF"
    },
    "3511": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5185,
        5230
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3512": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5217,
        5229
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B3"
    },
    "3515": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5217,
        5227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124C"
    },
    "3518": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5217,
        5229
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3519": {
      "branch": 74,
      "fn": "AccessControl.revokeRole",
      "offset": [
        5185,
        5230
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3520": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x73C"
    },
    "3523": {
      "branch": 74,
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3524": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3526": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3527": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3531": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3533": {
      "op": "SHL"
    },
    "3534": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3535": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3536": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3538": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "ADD",
      "path": "0"
    },
    "3539": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B8"
    },
    "3542": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3543": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x202F"
    },
    "3546": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5177,
        5283
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3547": {
      "fn": "EnumerableSet.add",
      "offset": [
        6429,
        6579
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3548": {
      "fn": "EnumerableSet.add",
      "offset": [
        6499,
        6503
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3550": {
      "fn": "EnumerableSet.add",
      "offset": [
        6522,
        6572
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 29,
      "value": "0xB0B"
    },
    "3553": {
      "fn": "EnumerableSet.add",
      "offset": [
        6527,
        6530
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3560": {
      "op": "SHL"
    },
    "3561": {
      "op": "SUB"
    },
    "3562": {
      "fn": "EnumerableSet.add",
      "offset": [
        6547,
        6570
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3563": {
      "fn": "EnumerableSet.add",
      "offset": [
        6547,
        6570
      ],
      "op": "AND",
      "path": "12"
    },
    "3564": {
      "fn": "EnumerableSet.add",
      "offset": [
        6522,
        6526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13F4"
    },
    "3567": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        6522,
        6572
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3568": {
      "fn": "TennerrStreamer._isSameToken",
      "offset": [
        11796,
        11940
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3569": {
      "fn": "TennerrStreamer._isSameToken",
      "offset": [
        11918,
        11932
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 30,
      "value": "0x3"
    },
    "3571": {
      "fn": "TennerrStreamer._isSameToken",
      "offset": [
        11918,
        11932
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "3572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3576": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3578": {
      "op": "SHL"
    },
    "3579": {
      "op": "SUB"
    },
    "3580": {
      "fn": "TennerrStreamer._isSameToken",
      "offset": [
        11918,
        11932
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3581": {
      "fn": "TennerrStreamer._isSameToken",
      "offset": [
        11918,
        11932
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3582": {
      "fn": "TennerrStreamer._isSameToken",
      "offset": [
        11918,
        11932
      ],
      "op": "AND",
      "path": "44"
    },
    "3583": {
      "fn": "TennerrStreamer._isSameToken",
      "offset": [
        11887,
        11933
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3584": {
      "fn": "TennerrStreamer._isSameToken",
      "offset": [
        11887,
        11933
      ],
      "op": "AND",
      "path": "44"
    },
    "3585": {
      "fn": "TennerrStreamer._isSameToken",
      "offset": [
        11887,
        11933
      ],
      "op": "EQ",
      "path": "44"
    },
    "3586": {
      "fn": "TennerrStreamer._isSameToken",
      "offset": [
        11887,
        11933
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3587": {
      "fn": "TennerrStreamer._isSameToken",
      "jump": "o",
      "offset": [
        11796,
        11940
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3588": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        11946,
        12174
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3589": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12010,
        12014
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3591": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12096,
        12167
      ],
      "op": "PUSH32",
      "path": "44",
      "statement": 31,
      "value": "0xA9214CC96615E0085D3BB077758DB69497DC2DCE3B2B1E97BC93C3D18D83EFD3"
    },
    "3624": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12049,
        12063
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3631": {
      "op": "SHL"
    },
    "3632": {
      "op": "SUB"
    },
    "3633": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12078
      ],
      "op": "AND",
      "path": "44"
    },
    "3634": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12078
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x7730599E"
    },
    "3639": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3641": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3642": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3643": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xFFFFFFFF"
    },
    "3648": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "AND",
      "path": "44"
    },
    "3649": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xE0"
    },
    "3651": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "SHL",
      "path": "44"
    },
    "3652": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3653": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3654": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "3656": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "ADD",
      "path": "44"
    },
    "3657": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3659": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3661": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3662": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3663": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3664": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "SUB",
      "path": "44"
    },
    "3665": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3666": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "DUP7",
      "path": "44"
    },
    "3667": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3668": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "3669": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3670": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3671": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3672": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xE60"
    },
    "3675": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3676": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3678": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3679": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "REVERT",
      "path": "44"
    },
    "3680": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3681": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "POP",
      "path": "44"
    },
    "3682": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "GAS",
      "path": "44"
    },
    "3683": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "3684": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3685": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3686": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3687": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xE74"
    },
    "3690": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3691": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3692": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3694": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3695": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "3696": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3697": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3699": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "REVERT",
      "path": "44"
    },
    "3700": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3701": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "POP",
      "path": "44"
    },
    "3702": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "POP",
      "path": "44"
    },
    "3703": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "POP",
      "path": "44"
    },
    "3704": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "POP",
      "path": "44"
    },
    "3705": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3707": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3708": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3709": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3711": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "NOT",
      "path": "44"
    },
    "3712": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3714": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3715": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "ADD",
      "path": "44"
    },
    "3716": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "AND",
      "path": "44"
    },
    "3717": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3718": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "ADD",
      "path": "44"
    },
    "3719": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3720": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3722": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3723": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "POP",
      "path": "44"
    },
    "3724": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3725": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "ADD",
      "path": "44"
    },
    "3726": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3727": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xE98"
    },
    "3730": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3731": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3732": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x17F6"
    },
    "3735": {
      "fn": "TennerrStreamer._isCFAv1",
      "jump": "i",
      "offset": [
        12033,
        12080
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3736": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12080
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3737": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12167
      ],
      "op": "EQ",
      "path": "44"
    },
    "3738": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12033,
        12167
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "3739": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        11946,
        12174
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3740": {
      "op": "POP"
    },
    "3741": {
      "op": "POP"
    },
    "3742": {
      "fn": "TennerrStreamer._isCFAv1",
      "jump": "o",
      "offset": [
        11946,
        12174
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3743": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3681,
        5668
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3744": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3781,
        3800
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "3746": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3824,
        3827
      ],
      "op": "DUP4",
      "path": "44",
      "statement": 32
    },
    "3747": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3824,
        3827
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3748": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3749": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3750": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3752": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "ADD",
      "path": "44"
    },
    "3753": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3755": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3756": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3757": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "DIV",
      "path": "44"
    },
    "3758": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "MUL",
      "path": "44"
    },
    "3759": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3761": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "ADD",
      "path": "44"
    },
    "3762": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3764": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3765": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3766": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3767": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "ADD",
      "path": "44"
    },
    "3768": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3770": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3771": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3772": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "3773": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "3774": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3775": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3776": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3777": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3778": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3779": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3781": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "ADD",
      "path": "44"
    },
    "3782": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3783": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3784": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3785": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3786": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "DUP5",
      "path": "44"
    },
    "3787": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "CALLDATACOPY",
      "path": "44"
    },
    "3788": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3790": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "3791": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "ADD",
      "path": "44"
    },
    "3792": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3793": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3794": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3795": {
      "op": "POP"
    },
    "3796": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3944
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x2"
    },
    "3798": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3944
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "3799": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3956,
        3970
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x3"
    },
    "3801": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3956,
        3970
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "3802": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3804": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3805": {
      "op": "PUSH4",
      "value": "0xE8E7E2D1"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3812": {
      "op": "SHL"
    },
    "3813": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3814": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3815": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "SWAP7",
      "path": "44"
    },
    "3816": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "SWAP8",
      "path": "44"
    },
    "3817": {
      "op": "POP"
    },
    "3818": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3819": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3815,
        3827
      ],
      "op": "SWAP6",
      "path": "44"
    },
    "3820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3826": {
      "op": "SHL"
    },
    "3827": {
      "op": "SUB"
    },
    "3828": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3944
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3829": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3944
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3830": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3944
      ],
      "op": "AND",
      "path": "44"
    },
    "3831": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3944
      ],
      "op": "SWAP6",
      "path": "44"
    },
    "3832": {
      "op": "POP"
    },
    "3833": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3955
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xE8E7E2D1"
    },
    "3838": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3955
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "3839": {
      "op": "POP"
    },
    "3840": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xF11"
    },
    "3843": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "3844": {
      "op": "POP"
    },
    "3845": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3956,
        3970
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3846": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3956,
        3970
      ],
      "op": "AND",
      "path": "44"
    },
    "3847": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3956,
        3970
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3848": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3980,
        3984
      ],
      "op": "ADDRESS",
      "path": "44"
    },
    "3849": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3980,
        3984
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3850": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "3852": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "ADD",
      "path": "44"
    },
    "3853": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1D80"
    },
    "3856": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "i",
      "offset": [
        3940,
        3986
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3857": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3858": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3860": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3862": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3863": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3864": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3865": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "SUB",
      "path": "44"
    },
    "3866": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3867": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "DUP7",
      "path": "44"
    },
    "3868": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3869": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "3870": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3871": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3872": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3873": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xF29"
    },
    "3876": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3877": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3879": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3880": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "REVERT",
      "path": "44"
    },
    "3881": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3882": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "POP",
      "path": "44"
    },
    "3883": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "GAS",
      "path": "44"
    },
    "3884": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "3885": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3886": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3887": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3888": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xF3D"
    },
    "3891": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3892": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3893": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3895": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3896": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "3897": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3898": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3900": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "REVERT",
      "path": "44"
    },
    "3901": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3902": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "POP",
      "path": "44"
    },
    "3903": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "POP",
      "path": "44"
    },
    "3904": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "POP",
      "path": "44"
    },
    "3905": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "POP",
      "path": "44"
    },
    "3906": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3908": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3909": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3910": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3912": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "NOT",
      "path": "44"
    },
    "3913": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3915": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3916": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "ADD",
      "path": "44"
    },
    "3917": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "AND",
      "path": "44"
    },
    "3918": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3919": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "ADD",
      "path": "44"
    },
    "3920": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3921": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3923": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3924": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "POP",
      "path": "44"
    },
    "3925": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3926": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "ADD",
      "path": "44"
    },
    "3927": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3928": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xF61"
    },
    "3931": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3932": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3933": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1A5D"
    },
    "3936": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "i",
      "offset": [
        3940,
        3986
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3937": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3940,
        3986
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3938": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4023
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x2"
    },
    "3940": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4023
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "3941": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4032,
        4046
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x3"
    },
    "3943": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4032,
        4046
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "3944": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4063,
        4072
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "3946": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4063,
        4072
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3947": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4063,
        4072
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "3948": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3950": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3951": {
      "op": "PUSH4",
      "value": "0x1CD43D11"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "3958": {
      "op": "SHL"
    },
    "3959": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3960": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3961": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3920,
        3986
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "3962": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3920,
        3986
      ],
      "op": "SWAP6",
      "path": "44"
    },
    "3963": {
      "op": "POP"
    },
    "3964": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3996,
        4013
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3966": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3996,
        4013
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "3967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3973": {
      "op": "SHL"
    },
    "3974": {
      "op": "SUB"
    },
    "3975": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4023
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "3976": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4023
      ],
      "op": "DUP6",
      "path": "44"
    },
    "3977": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4023
      ],
      "op": "AND",
      "path": "44"
    },
    "3978": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4023
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "3979": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4031
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xE6A1E888"
    },
    "3984": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4031
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "3985": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xFA3"
    },
    "3988": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "3989": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4032,
        4046
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3990": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4032,
        4046
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3991": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4032,
        4046
      ],
      "op": "AND",
      "path": "44"
    },
    "3992": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4032,
        4046
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "3993": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4056,
        4060
      ],
      "op": "ADDRESS",
      "path": "44"
    },
    "3994": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4056,
        4060
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "3995": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4063,
        4072
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "3996": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4063,
        4072
      ],
      "op": "AND",
      "path": "44"
    },
    "3997": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4063,
        4072
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3998": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "ADD",
      "path": "44"
    },
    "3999": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1D9A"
    },
    "4002": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "i",
      "offset": [
        4019,
        4073
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4003": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4004": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x80"
    },
    "4006": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4008": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4009": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4010": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "DUP4",
      "path": "44"
    },
    "4011": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "SUB",
      "path": "44"
    },
    "4012": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4013": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "DUP7",
      "path": "44"
    },
    "4014": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4015": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "4016": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4017": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4018": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4019": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xFBB"
    },
    "4022": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "4023": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4025": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4026": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "REVERT",
      "path": "44"
    },
    "4027": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4028": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "POP",
      "path": "44"
    },
    "4029": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "GAS",
      "path": "44"
    },
    "4030": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "4031": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4032": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4033": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4034": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xFCF"
    },
    "4037": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "4038": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4039": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4041": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4042": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "4043": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4044": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4046": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "REVERT",
      "path": "44"
    },
    "4047": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4048": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "POP",
      "path": "44"
    },
    "4049": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "POP",
      "path": "44"
    },
    "4050": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "POP",
      "path": "44"
    },
    "4051": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "POP",
      "path": "44"
    },
    "4052": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4054": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4055": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4056": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "4058": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "NOT",
      "path": "44"
    },
    "4059": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "4061": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4062": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "ADD",
      "path": "44"
    },
    "4063": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "AND",
      "path": "44"
    },
    "4064": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4065": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "ADD",
      "path": "44"
    },
    "4066": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4067": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4069": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4070": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "POP",
      "path": "44"
    },
    "4071": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4072": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "ADD",
      "path": "44"
    },
    "4073": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4074": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xFF3"
    },
    "4077": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4078": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4079": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1BEA"
    },
    "4082": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "i",
      "offset": [
        4019,
        4073
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4083": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4019,
        4073
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4084": {
      "op": "POP"
    },
    "4085": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3994,
        4073
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4086": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3994,
        4073
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "4087": {
      "op": "POP"
    },
    "4088": {
      "op": "POP"
    },
    "4089": {
      "op": "POP"
    },
    "4090": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4154,
        4179
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4091": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4154,
        4179
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4092": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4154,
        4179
      ],
      "op": "ADD",
      "path": "44"
    },
    "4093": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4350,
        4372
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xB"
    },
    "4095": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4350,
        4372
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4096": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4350,
        4372
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4097": {
      "branch": 70,
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4350,
        4372
      ],
      "op": "SIGNEXTEND",
      "path": "44"
    },
    "4098": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4346,
        5662
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x10FA"
    },
    "4101": {
      "branch": 70,
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4346,
        5662
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "4102": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4459
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 33,
      "value": "0x1"
    },
    "4104": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4459
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "4105": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4500,
        4504
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x2"
    },
    "4107": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4500,
        4504
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "4108": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4606,
        4620
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x3"
    },
    "4110": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4606,
        4620
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "4111": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4673,
        4682
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "4113": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4673,
        4682
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "4114": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4702,
        4714
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4116": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4702,
        4714
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4117": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4702,
        4714
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4118": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4459
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4120": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4702,
        4714
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4121": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4702,
        4714
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4122": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4702,
        4714
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4124": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4702,
        4714
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4125": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4702,
        4714
      ],
      "op": "ADD",
      "path": "44"
    },
    "4126": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4702,
        4714
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4127": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4702,
        4714
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4128": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4702,
        4714
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4135": {
      "op": "SHL"
    },
    "4136": {
      "op": "SUB"
    },
    "4137": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4459
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "4138": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4459
      ],
      "op": "DUP6",
      "path": "44"
    },
    "4139": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4459
      ],
      "op": "AND",
      "path": "44"
    },
    "4140": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4459
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "4141": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4484
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x4329D293"
    },
    "4146": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4484
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "4147": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4500,
        4504
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4148": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4500,
        4504
      ],
      "op": "AND",
      "path": "44"
    },
    "4149": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4500,
        4504
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "4150": {
      "op": "PUSH4",
      "value": "0x5A5999E3"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4157": {
      "op": "SHL"
    },
    "4158": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4562,
        4586
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "4159": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1054"
    },
    "4162": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "4163": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4606,
        4620
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4164": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4606,
        4620
      ],
      "op": "DUP4",
      "path": "44"
    },
    "4165": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4606,
        4620
      ],
      "op": "AND",
      "path": "44"
    },
    "4166": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4606,
        4620
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "4167": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4648,
        4652
      ],
      "op": "ADDRESS",
      "path": "44"
    },
    "4168": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4648,
        4652
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "4169": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4673,
        4682
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4170": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4673,
        4682
      ],
      "op": "AND",
      "path": "44"
    },
    "4171": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4673,
        4682
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4172": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x44"
    },
    "4174": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4175": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "ADD",
      "path": "44"
    },
    "4176": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1DBD"
    },
    "4179": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "i",
      "offset": [
        4520,
        4745
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4180": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4181": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4183": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4184": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4185": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4187": {
      "op": "NOT"
    },
    "4188": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4189": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "DUP5",
      "path": "44"
    },
    "4190": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "SUB",
      "path": "44"
    },
    "4191": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "ADD",
      "path": "44"
    },
    "4192": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4193": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4194": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4195": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4196": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4197": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4199": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4200": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "ADD",
      "path": "44"
    },
    "4201": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4202": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4207": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4209": {
      "op": "SHL"
    },
    "4210": {
      "op": "SUB"
    },
    "4211": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "AND",
      "path": "44"
    },
    "4212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4216": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4218": {
      "op": "SHL"
    },
    "4219": {
      "op": "SUB"
    },
    "4220": {
      "op": "NOT"
    },
    "4221": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "4222": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "DUP6",
      "path": "44"
    },
    "4223": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "AND",
      "path": "44"
    },
    "4224": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "OR",
      "path": "44"
    },
    "4225": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4226": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4520,
        4745
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4227": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4228": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xE0"
    },
    "4230": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "DUP6",
      "path": "44"
    },
    "4231": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4232": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "SHL",
      "path": "44"
    },
    "4233": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4234": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "4235": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "AND",
      "path": "44"
    },
    "4236": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4237": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4238": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x109C"
    },
    "4241": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "4242": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4243": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4781,
        4787
      ],
      "op": "DUP10",
      "path": "44"
    },
    "4244": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4781,
        4787
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4245": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "4247": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "ADD",
      "path": "44"
    },
    "4248": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1D2D"
    },
    "4251": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "i",
      "offset": [
        4454,
        4799
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4252": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4253": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4255": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4257": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4258": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4259": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "DUP4",
      "path": "44"
    },
    "4260": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "SUB",
      "path": "44"
    },
    "4261": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4262": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4264": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "DUP8",
      "path": "44"
    },
    "4265": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4266": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "4267": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4268": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4269": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4270": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x10B6"
    },
    "4273": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "4274": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4276": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4277": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "REVERT",
      "path": "44"
    },
    "4278": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4279": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "POP",
      "path": "44"
    },
    "4280": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "GAS",
      "path": "44"
    },
    "4281": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "CALL",
      "path": "44"
    },
    "4282": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4283": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4284": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4285": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x10CA"
    },
    "4288": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "4289": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4290": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4292": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4293": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "4294": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4295": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4297": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "REVERT",
      "path": "44"
    },
    "4298": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4299": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "POP",
      "path": "44"
    },
    "4300": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "POP",
      "path": "44"
    },
    "4301": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "POP",
      "path": "44"
    },
    "4302": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "POP",
      "path": "44"
    },
    "4303": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4305": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4306": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4307": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4309": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4310": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "4311": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "4313": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4314": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4315": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4316": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "ADD",
      "path": "44"
    },
    "4317": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4319": {
      "op": "NOT"
    },
    "4320": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "AND",
      "path": "44"
    },
    "4321": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4322": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "ADD",
      "path": "44"
    },
    "4323": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4325": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4326": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x10F2"
    },
    "4329": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4330": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4331": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4332": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "ADD",
      "path": "44"
    },
    "4333": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4334": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1899"
    },
    "4337": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "i",
      "offset": [
        4454,
        4799
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4338": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4454,
        4799
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4339": {
      "op": "POP"
    },
    "4340": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4441,
        4799
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "4341": {
      "op": "POP"
    },
    "4342": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4346,
        5662
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1242"
    },
    "4345": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4346,
        5662
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4346": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4346,
        5662
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4347": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4820,
        4843
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xB"
    },
    "4349": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4820,
        4843
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4350": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4820,
        4843
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4351": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4820,
        4843
      ],
      "op": "SIGNEXTEND",
      "path": "44"
    },
    "4352": {
      "branch": 71,
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4820,
        4843
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4353": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4816,
        5662
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1152"
    },
    "4356": {
      "branch": 71,
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4816,
        5662
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "4357": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4867,
        4872
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 34,
      "value": "0x1"
    },
    "4359": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4867,
        4872
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "4360": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4911,
        4915
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x2"
    },
    "4362": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4911,
        4915
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "4363": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5011,
        5025
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x3"
    },
    "4365": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5011,
        5025
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "4366": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5043,
        5052
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "4368": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5043,
        5052
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "4369": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5098,
        5110
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4371": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5098,
        5110
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4372": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5098,
        5110
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4373": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4867,
        4872
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4375": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5098,
        5110
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4376": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5098,
        5110
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4377": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5098,
        5110
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4379": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5098,
        5110
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4380": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5098,
        5110
      ],
      "op": "ADD",
      "path": "44"
    },
    "4381": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5098,
        5110
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4382": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5098,
        5110
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4383": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5098,
        5110
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4388": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4390": {
      "op": "SHL"
    },
    "4391": {
      "op": "SUB"
    },
    "4392": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4867,
        4872
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "4393": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4867,
        4872
      ],
      "op": "DUP6",
      "path": "44"
    },
    "4394": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4867,
        4872
      ],
      "op": "AND",
      "path": "44"
    },
    "4395": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4867,
        4872
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "4396": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4867,
        4897
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x4329D293"
    },
    "4401": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4867,
        4897
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "4402": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4911,
        4915
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4403": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4911,
        4915
      ],
      "op": "AND",
      "path": "44"
    },
    "4404": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4911,
        4915
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "4405": {
      "op": "PUSH4",
      "value": "0x28104D31"
    },
    "4410": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4412": {
      "op": "SHL"
    },
    "4413": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4969,
        4993
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "4414": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4929,
        5139
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1054"
    },
    "4417": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4929,
        5139
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "4418": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5011,
        5025
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4419": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5011,
        5025
      ],
      "op": "DUP4",
      "path": "44"
    },
    "4420": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5011,
        5025
      ],
      "op": "AND",
      "path": "44"
    },
    "4421": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5011,
        5025
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "4422": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5043,
        5052
      ],
      "op": "AND",
      "path": "44"
    },
    "4423": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5043,
        5052
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4424": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5070,
        5080
      ],
      "op": "DUP9",
      "path": "44"
    },
    "4425": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5070,
        5080
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4426": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4929,
        5139
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x44"
    },
    "4428": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4929,
        5139
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4429": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4929,
        5139
      ],
      "op": "ADD",
      "path": "44"
    },
    "4430": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4929,
        5139
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1DF1"
    },
    "4433": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "i",
      "offset": [
        4929,
        5139
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4434": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4816,
        5662
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4435": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5316
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 35,
      "value": "0x1"
    },
    "4437": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5316
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "4438": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5357,
        5361
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x2"
    },
    "4440": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5357,
        5361
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "4441": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5463,
        5477
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x3"
    },
    "4443": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5463,
        5477
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "4444": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5497,
        5506
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "4446": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5497,
        5506
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "4447": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5556,
        5568
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4449": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5556,
        5568
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4450": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5556,
        5568
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4451": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5316
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4453": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5556,
        5568
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4454": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5556,
        5568
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4455": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5556,
        5568
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4457": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5556,
        5568
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4458": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5556,
        5568
      ],
      "op": "ADD",
      "path": "44"
    },
    "4459": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5556,
        5568
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4460": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5556,
        5568
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4461": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5556,
        5568
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4468": {
      "op": "SHL"
    },
    "4469": {
      "op": "SUB"
    },
    "4470": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5316
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "4471": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5316
      ],
      "op": "DUP6",
      "path": "44"
    },
    "4472": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5316
      ],
      "op": "AND",
      "path": "44"
    },
    "4473": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5316
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "4474": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5341
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x4329D293"
    },
    "4479": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5341
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "4480": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5357,
        5361
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4481": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5357,
        5361
      ],
      "op": "AND",
      "path": "44"
    },
    "4482": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5357,
        5361
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "4483": {
      "op": "PUSH4",
      "value": "0x317E182F"
    },
    "4488": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4490": {
      "op": "SHL"
    },
    "4491": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5419,
        5443
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "4492": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x11A0"
    },
    "4495": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "4496": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5463,
        5477
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4497": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5463,
        5477
      ],
      "op": "DUP4",
      "path": "44"
    },
    "4498": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5463,
        5477
      ],
      "op": "AND",
      "path": "44"
    },
    "4499": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5463,
        5477
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "4500": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5497,
        5506
      ],
      "op": "AND",
      "path": "44"
    },
    "4501": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5497,
        5506
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4502": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5526,
        5536
      ],
      "op": "DUP9",
      "path": "44"
    },
    "4503": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5526,
        5536
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4504": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x44"
    },
    "4506": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4507": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "ADD",
      "path": "44"
    },
    "4508": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1DF1"
    },
    "4511": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "i",
      "offset": [
        5377,
        5599
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4512": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4513": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4515": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4516": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4517": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4519": {
      "op": "NOT"
    },
    "4520": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4521": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "DUP5",
      "path": "44"
    },
    "4522": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "SUB",
      "path": "44"
    },
    "4523": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "ADD",
      "path": "44"
    },
    "4524": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4525": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4526": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4527": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4528": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4529": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4531": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4532": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "ADD",
      "path": "44"
    },
    "4533": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4534": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4541": {
      "op": "SHL"
    },
    "4542": {
      "op": "SUB"
    },
    "4543": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "AND",
      "path": "44"
    },
    "4544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4548": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4550": {
      "op": "SHL"
    },
    "4551": {
      "op": "SUB"
    },
    "4552": {
      "op": "NOT"
    },
    "4553": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "4554": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "DUP6",
      "path": "44"
    },
    "4555": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "AND",
      "path": "44"
    },
    "4556": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "OR",
      "path": "44"
    },
    "4557": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4558": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5377,
        5599
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4559": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4560": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xE0"
    },
    "4562": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "DUP6",
      "path": "44"
    },
    "4563": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4564": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "SHL",
      "path": "44"
    },
    "4565": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4566": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "4567": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "AND",
      "path": "44"
    },
    "4568": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4569": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4570": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x11E8"
    },
    "4573": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "4574": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4575": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5635,
        5641
      ],
      "op": "DUP10",
      "path": "44"
    },
    "4576": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5635,
        5641
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4577": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "4579": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "ADD",
      "path": "44"
    },
    "4580": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1D2D"
    },
    "4583": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "i",
      "offset": [
        5311,
        5653
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4584": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4585": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4587": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4589": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4590": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4591": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "DUP4",
      "path": "44"
    },
    "4592": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "SUB",
      "path": "44"
    },
    "4593": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4594": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4596": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "DUP8",
      "path": "44"
    },
    "4597": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4598": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "4599": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4600": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4601": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4602": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1202"
    },
    "4605": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "4606": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4608": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4609": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "REVERT",
      "path": "44"
    },
    "4610": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4611": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "POP",
      "path": "44"
    },
    "4612": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "GAS",
      "path": "44"
    },
    "4613": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "CALL",
      "path": "44"
    },
    "4614": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4615": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4616": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4617": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1216"
    },
    "4620": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "4621": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4622": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4624": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4625": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "4626": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4627": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4629": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "REVERT",
      "path": "44"
    },
    "4630": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4631": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "POP",
      "path": "44"
    },
    "4632": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "POP",
      "path": "44"
    },
    "4633": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "POP",
      "path": "44"
    },
    "4634": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "POP",
      "path": "44"
    },
    "4635": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4637": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4638": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4639": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4641": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4642": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "4643": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "4645": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4646": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4647": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4648": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "ADD",
      "path": "44"
    },
    "4649": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4651": {
      "op": "NOT"
    },
    "4652": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "AND",
      "path": "44"
    },
    "4653": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4654": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "ADD",
      "path": "44"
    },
    "4655": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4657": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4658": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x123E"
    },
    "4661": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4662": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4663": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4664": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "ADD",
      "path": "44"
    },
    "4665": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4666": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1899"
    },
    "4669": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "i",
      "offset": [
        5311,
        5653
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4670": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5311,
        5653
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4671": {
      "op": "POP"
    },
    "4672": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5298,
        5653
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "4673": {
      "op": "POP"
    },
    "4674": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4816,
        5662
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4675": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3681,
        5668
      ],
      "op": "POP",
      "path": "44"
    },
    "4676": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3681,
        5668
      ],
      "op": "POP",
      "path": "44"
    },
    "4677": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3681,
        5668
      ],
      "op": "POP",
      "path": "44"
    },
    "4678": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3681,
        5668
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "4679": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3681,
        5668
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "4680": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3681,
        5668
      ],
      "op": "POP",
      "path": "44"
    },
    "4681": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3681,
        5668
      ],
      "op": "POP",
      "path": "44"
    },
    "4682": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3681,
        5668
      ],
      "op": "POP",
      "path": "44"
    },
    "4683": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "o",
      "offset": [
        3681,
        5668
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4684": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4685": {
      "fn": "Context._msgSender",
      "offset": [
        685,
        695
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 36
    },
    "4686": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4687": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        598,
        702
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4688": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7025,
        7209
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4689": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7104
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4691": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4692": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4693": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4694": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4696": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4697": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4698": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4699": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4701": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4702": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4703": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7131
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1268"
    },
    "4706": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4707": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7123,
        7130
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4708": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7122
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDB"
    },
    "4711": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        7098,
        7131
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4712": {
      "branch": 75,
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7131
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4713": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7094,
        7203
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4714": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7094,
        7203
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E6"
    },
    "4717": {
      "branch": 75,
      "fn": "AccessControl._grantRole",
      "offset": [
        7094,
        7203
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4718": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7179,
        7191
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 37,
      "value": "0x1275"
    },
    "4721": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7179,
        7189
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124C"
    },
    "4724": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        7179,
        7191
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4725": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7179,
        7191
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4730": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4732": {
      "op": "SHL"
    },
    "4733": {
      "op": "SUB"
    },
    "4734": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "AND",
      "path": "0"
    },
    "4735": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7170,
        7177
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4740": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4742": {
      "op": "SHL"
    },
    "4743": {
      "op": "SUB"
    },
    "4744": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "AND",
      "path": "0"
    },
    "4745": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7164,
        7168
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4746": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
    },
    "4779": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4781": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4782": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4784": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4785": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4786": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4787": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "SUB",
      "path": "0"
    },
    "4788": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4789": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "LOG4",
      "path": "0"
    },
    "4790": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7025,
        7209
      ],
      "op": "POP",
      "path": "0"
    },
    "4791": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7025,
        7209
      ],
      "op": "POP",
      "path": "0"
    },
    "4792": {
      "fn": "AccessControl._grantRole",
      "jump": "o",
      "offset": [
        7025,
        7209
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4793": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7215,
        7403
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4794": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4796": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4797": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4798": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4799": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4801": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4802": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4803": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4804": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4806": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4807": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4808": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7325
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D1"
    },
    "4811": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7325
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4812": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7317,
        7324
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4813": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7316
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143E"
    },
    "4816": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        7289,
        7325
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4817": {
      "branch": 76,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7325
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4818": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7285,
        7397
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4819": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7285,
        7397
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E6"
    },
    "4822": {
      "branch": 76,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7285,
        7397
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4823": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7373,
        7385
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 38,
      "value": "0x12DE"
    },
    "4826": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7373,
        7383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124C"
    },
    "4829": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        7373,
        7385
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4830": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7373,
        7385
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4835": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4837": {
      "op": "SHL"
    },
    "4838": {
      "op": "SUB"
    },
    "4839": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "AND",
      "path": "0"
    },
    "4840": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7364,
        7371
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4847": {
      "op": "SHL"
    },
    "4848": {
      "op": "SUB"
    },
    "4849": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "AND",
      "path": "0"
    },
    "4850": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7358,
        7362
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4851": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
    },
    "4884": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4886": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4887": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4889": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4890": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4891": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4892": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "SUB",
      "path": "0"
    },
    "4893": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4894": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "LOG4",
      "path": "0"
    },
    "4895": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7215,
        7403
      ],
      "op": "POP",
      "path": "0"
    },
    "4896": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7215,
        7403
      ],
      "op": "POP",
      "path": "0"
    },
    "4897": {
      "fn": "AccessControl._revokeRole",
      "jump": "o",
      "offset": [
        7215,
        7403
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4898": {
      "fn": "SafeMath.sub",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4899": {
      "fn": "SafeMath.sub",
      "offset": [
        3194,
        3201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4901": {
      "fn": "SafeMath.sub",
      "offset": [
        3226,
        3227
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 39
    },
    "4902": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3222
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4903": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "GT",
      "path": "2"
    },
    "4904": {
      "branch": 80,
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4905": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1344"
    },
    "4908": {
      "branch": 80,
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4909": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4911": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4912": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4916": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4918": {
      "op": "SHL"
    },
    "4919": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4920": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4921": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4923": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "2"
    },
    "4924": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4B8"
    },
    "4927": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4928": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FF8"
    },
    "4931": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4932": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4933": {
      "op": "POP"
    },
    "4934": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 40
    },
    "4935": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SUB",
      "path": "2"
    },
    "4936": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4937": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4938": {
      "fn": "EnumerableSet.at",
      "offset": [
        7677,
        7833
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4939": {
      "fn": "EnumerableSet.at",
      "offset": [
        7751,
        7758
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4941": {
      "fn": "EnumerableSet.at",
      "offset": [
        7801,
        7823
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 41,
      "value": "0xB0B"
    },
    "4944": {
      "fn": "EnumerableSet.at",
      "offset": [
        7805,
        7808
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4945": {
      "fn": "EnumerableSet.at",
      "offset": [
        7817,
        7822
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4946": {
      "fn": "EnumerableSet.at",
      "offset": [
        7801,
        7804
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1453"
    },
    "4949": {
      "fn": "EnumerableSet.at",
      "jump": "i",
      "offset": [
        7801,
        7823
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4950": {
      "fn": "EnumerableSet.contains",
      "offset": [
        6984,
        7149
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4951": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7064,
        7068
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4953": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7087,
        7142
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 42,
      "value": "0xB0B"
    },
    "4956": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7097,
        7100
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4963": {
      "op": "SHL"
    },
    "4964": {
      "op": "SUB"
    },
    "4965": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7117,
        7140
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4966": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7117,
        7140
      ],
      "op": "AND",
      "path": "12"
    },
    "4967": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7087,
        7096
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1498"
    },
    "4970": {
      "fn": "EnumerableSet.contains",
      "jump": "i",
      "offset": [
        7087,
        7142
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4971": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6263,
        7172
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4972": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6834,
        6847
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4974": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6850,
        6879
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1377"
    },
    "4977": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6850,
        6858
      ],
      "op": "DUP4",
      "path": "44"
    },
    "4978": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6863,
        6878
      ],
      "op": "TIMESTAMP",
      "path": "44"
    },
    "4979": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6850,
        6862
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1322"
    },
    "4982": {
      "fn": "TennerrStreamer._updateStreamData",
      "jump": "i",
      "offset": [
        6850,
        6879
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4983": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6850,
        6879
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4984": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6834,
        6879
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4985": {
      "op": "POP"
    },
    "4986": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6889,
        6904
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4988": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6907,
        6941
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1385"
    },
    "4991": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6908,
        6923
      ],
      "op": "TIMESTAMP",
      "path": "44"
    },
    "4992": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6929,
        6940
      ],
      "op": "DUP7",
      "path": "44"
    },
    "4993": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6907,
        6928
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1322"
    },
    "4996": {
      "fn": "TennerrStreamer._updateStreamData",
      "jump": "i",
      "offset": [
        6907,
        6941
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4997": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6907,
        6941
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4998": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6889,
        6941
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4999": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6889,
        6941
      ],
      "op": "POP",
      "path": "44"
    },
    "5000": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6951,
        6970
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "5002": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6984,
        6994
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5003": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6973,
        6981
      ],
      "op": "DUP5",
      "path": "44"
    },
    "5004": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6973,
        6994
      ],
      "op": "MUL",
      "path": "44"
    },
    "5005": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6951,
        6994
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5006": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6951,
        6994
      ],
      "op": "POP",
      "path": "44"
    },
    "5007": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 43,
      "value": "0x40"
    },
    "5009": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "5010": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5011": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xC0"
    },
    "5013": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "ADD",
      "path": "44"
    },
    "5014": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "5016": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5017": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5018": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7099,
        7107
      ],
      "op": "DUP6",
      "path": "44"
    },
    "5019": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5020": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5021": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "5023": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "ADD",
      "path": "44"
    },
    "5024": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7109,
        7123
      ],
      "op": "DUP3",
      "path": "44"
    },
    "5025": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5026": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5027": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "5029": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "ADD",
      "path": "44"
    },
    "5030": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7125,
        7131
      ],
      "op": "DUP9",
      "path": "44"
    },
    "5031": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5032": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5033": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "5035": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "ADD",
      "path": "44"
    },
    "5036": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7133,
        7144
      ],
      "op": "DUP8",
      "path": "44"
    },
    "5037": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5038": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5039": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "5041": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "ADD",
      "path": "44"
    },
    "5042": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7146,
        7154
      ],
      "op": "DUP5",
      "path": "44"
    },
    "5043": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5044": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5045": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "5047": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "ADD",
      "path": "44"
    },
    "5048": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7156,
        7164
      ],
      "op": "DUP7",
      "path": "44"
    },
    "5049": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5050": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5051": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "POP",
      "path": "44"
    },
    "5052": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7088
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xB"
    },
    "5054": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7095
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "5056": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7089,
        7094
      ],
      "op": "DUP13",
      "path": "44"
    },
    "5057": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7095
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5058": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7095
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5059": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7095
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "5061": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7095
      ],
      "op": "ADD",
      "path": "44"
    },
    "5062": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7095
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5063": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7095
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5064": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7095
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5065": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7095
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "5067": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7095
      ],
      "op": "ADD",
      "path": "44"
    },
    "5068": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7095
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "5070": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7095
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "5071": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5072": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x6"
    },
    "5074": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x13DC"
    },
    "5077": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "5078": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "5079": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5080": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x15F1"
    },
    "5083": {
      "fn": "TennerrStreamer._updateStreamData",
      "jump": "i",
      "offset": [
        7075,
        7165
      ],
      "op": "JUMP",
      "path": "44"
    },
    "5084": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "5085": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7075,
        7165
      ],
      "op": "POP",
      "path": "44"
    },
    "5086": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6263,
        7172
      ],
      "op": "POP",
      "path": "44"
    },
    "5087": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6263,
        7172
      ],
      "op": "POP",
      "path": "44"
    },
    "5088": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6263,
        7172
      ],
      "op": "POP",
      "path": "44"
    },
    "5089": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6263,
        7172
      ],
      "op": "POP",
      "path": "44"
    },
    "5090": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6263,
        7172
      ],
      "op": "POP",
      "path": "44"
    },
    "5091": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6263,
        7172
      ],
      "op": "POP",
      "path": "44"
    },
    "5092": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6263,
        7172
      ],
      "op": "POP",
      "path": "44"
    },
    "5093": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6263,
        7172
      ],
      "op": "POP",
      "path": "44"
    },
    "5094": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6263,
        7172
      ],
      "op": "POP",
      "path": "44"
    },
    "5095": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6263,
        7172
      ],
      "op": "POP",
      "path": "44"
    },
    "5096": {
      "fn": "TennerrStreamer._updateStreamData",
      "jump": "o",
      "offset": [
        6263,
        7172
      ],
      "op": "JUMP",
      "path": "44"
    },
    "5097": {
      "fn": "EnumerableSet.length",
      "offset": [
        7230,
        7345
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5098": {
      "fn": "EnumerableSet.length",
      "offset": [
        7293,
        7300
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5100": {
      "fn": "EnumerableSet.length",
      "offset": [
        7319,
        7338
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 44,
      "value": "0xB0E"
    },
    "5103": {
      "fn": "EnumerableSet.length",
      "offset": [
        7327,
        7330
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5104": {
      "fn": "EnumerableSet.length",
      "offset": [
        7319,
        7326
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14B0"
    },
    "5107": {
      "fn": "EnumerableSet.length",
      "jump": "i",
      "offset": [
        7319,
        7338
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5108": {
      "fn": "EnumerableSet._add",
      "offset": [
        1640,
        2044
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5109": {
      "fn": "EnumerableSet._add",
      "offset": [
        1703,
        1707
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5111": {
      "fn": "EnumerableSet._add",
      "offset": [
        1724,
        1745
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1400"
    },
    "5114": {
      "fn": "EnumerableSet._add",
      "offset": [
        1734,
        1737
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5115": {
      "fn": "EnumerableSet._add",
      "offset": [
        1739,
        1744
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5116": {
      "fn": "EnumerableSet._add",
      "offset": [
        1724,
        1733
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1498"
    },
    "5119": {
      "fn": "EnumerableSet._add",
      "jump": "i",
      "offset": [
        1724,
        1745
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5120": {
      "branch": 77,
      "fn": "EnumerableSet._add",
      "offset": [
        1724,
        1745
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5121": {
      "fn": "EnumerableSet._add",
      "offset": [
        1719,
        2038
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1436"
    },
    "5124": {
      "branch": 77,
      "fn": "EnumerableSet._add",
      "offset": [
        1719,
        2038
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5125": {
      "op": "POP"
    },
    "5126": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 45
    },
    "5127": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5128": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5130": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5131": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5132": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "ADD",
      "path": "12"
    },
    "5133": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5134": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5135": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1772
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5137": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5138": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5139": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5140": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5142": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5143": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5144": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5145": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5146": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "5147": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "ADD",
      "path": "12"
    },
    "5148": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5149": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5150": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5151": {
      "fn": "EnumerableSet._add",
      "offset": [
        1941,
        1959
      ],
      "op": "DUP5",
      "path": "12",
      "statement": 46
    },
    "5152": {
      "fn": "EnumerableSet._add",
      "offset": [
        1941,
        1959
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5153": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5154": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5155": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5156": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1931
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5157": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1931
      ],
      "op": "DUP7",
      "path": "12"
    },
    "5158": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1931
      ],
      "op": "ADD",
      "path": "12"
    },
    "5159": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5160": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "5161": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5162": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5164": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5165": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5166": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5167": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5168": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5169": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5170": {
      "fn": "EnumerableSet._add",
      "offset": [
        1973,
        1984
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 47,
      "value": "0xB0E"
    },
    "5173": {
      "fn": "EnumerableSet._add",
      "offset": [
        1973,
        1984
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5174": {
      "fn": "EnumerableSet._add",
      "offset": [
        1719,
        2038
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5175": {
      "op": "POP"
    },
    "5176": {
      "fn": "EnumerableSet._add",
      "offset": [
        2022,
        2027
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 48,
      "value": "0x0"
    },
    "5178": {
      "fn": "EnumerableSet._add",
      "offset": [
        2015,
        2027
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB0E"
    },
    "5181": {
      "fn": "EnumerableSet._add",
      "offset": [
        2015,
        2027
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5182": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6747,
        6903
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5183": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6820,
        6824
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5185": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6843,
        6896
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 49,
      "value": "0xB0B"
    },
    "5188": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6851,
        6854
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5195": {
      "op": "SHL"
    },
    "5196": {
      "op": "SUB"
    },
    "5197": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6871,
        6894
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5198": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6871,
        6894
      ],
      "op": "AND",
      "path": "12"
    },
    "5199": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6843,
        6850
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14B4"
    },
    "5202": {
      "fn": "EnumerableSet.remove",
      "jump": "i",
      "offset": [
        6843,
        6896
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5203": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5204": {
      "fn": "EnumerableSet._at",
      "offset": [
        4546,
        4564
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 50
    },
    "5205": {
      "fn": "EnumerableSet._at",
      "offset": [
        4546,
        4564
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5206": {
      "fn": "EnumerableSet._at",
      "offset": [
        4519,
        4526
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5208": {
      "fn": "EnumerableSet._at",
      "offset": [
        4519,
        4526
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5209": {
      "branch": 78,
      "fn": "EnumerableSet._at",
      "offset": [
        4546,
        4572
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5210": {
      "op": "LT"
    },
    "5211": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1476"
    },
    "5214": {
      "branch": 78,
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5215": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5217": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5218": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5222": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5224": {
      "op": "SHL"
    },
    "5225": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5226": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5227": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5229": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "ADD",
      "path": "12"
    },
    "5230": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4B8"
    },
    "5233": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5234": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E5A"
    },
    "5237": {
      "fn": "EnumerableSet._at",
      "jump": "i",
      "offset": [
        4538,
        4611
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5238": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5239": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4631
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 51
    },
    "5240": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4639
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5242": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4639
      ],
      "op": "ADD",
      "path": "12"
    },
    "5243": {
      "fn": "EnumerableSet._at",
      "offset": [
        4640,
        4645
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5244": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5245": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5246": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5247": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "LT",
      "path": "12"
    },
    "5248": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1485"
    },
    "5251": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5252": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "INVALID",
      "path": "12"
    },
    "5253": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5254": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5255": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5257": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5258": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5260": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5262": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5263": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "ADD",
      "path": "12"
    },
    "5264": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5265": {
      "fn": "EnumerableSet._at",
      "offset": [
        4621,
        4646
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5266": {
      "fn": "EnumerableSet._at",
      "offset": [
        4621,
        4646
      ],
      "op": "POP",
      "path": "12"
    },
    "5267": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5268": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5269": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "POP",
      "path": "12"
    },
    "5270": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "POP",
      "path": "12"
    },
    "5271": {
      "fn": "EnumerableSet._at",
      "jump": "o",
      "offset": [
        4452,
        4653
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5272": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3805,
        3932
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5273": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3878,
        3882
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5275": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "SWAP1",
      "path": "12",
      "statement": 52
    },
    "5276": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5277": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5278": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5280": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5281": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5282": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5283": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "ADD",
      "path": "12"
    },
    "5284": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5286": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5287": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5289": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5290": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5291": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5292": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3925
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5293": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3925
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5294": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3925
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5295": {
      "fn": "EnumerableSet._contains",
      "jump": "o",
      "offset": [
        3805,
        3932
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5296": {
      "fn": "EnumerableSet._length",
      "offset": [
        4013,
        4120
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5297": {
      "fn": "EnumerableSet._length",
      "offset": [
        4095,
        4113
      ],
      "op": "SLOAD",
      "path": "12",
      "statement": 53
    },
    "5298": {
      "fn": "EnumerableSet._length",
      "offset": [
        4095,
        4113
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5299": {
      "fn": "EnumerableSet._length",
      "jump": "o",
      "offset": [
        4013,
        4120
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5300": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2212,
        3724
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5301": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2278,
        2282
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5303": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5304": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5305": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5306": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5308": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2427
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5309": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2427
      ],
      "op": "ADD",
      "path": "12"
    },
    "5310": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5312": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5313": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5315": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5316": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5317": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5318": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2449,
        2464
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5319": {
      "branch": 79,
      "fn": "EnumerableSet._remove",
      "offset": [
        2449,
        2464
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5320": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2445,
        3718
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1570"
    },
    "5323": {
      "branch": 79,
      "fn": "EnumerableSet._remove",
      "offset": [
        2445,
        3718
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5324": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2896
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5325": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2896
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5328": {
      "op": "NOT"
    },
    "5329": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5330": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5331": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "ADD",
      "path": "12"
    },
    "5332": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5333": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5334": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5335": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "ADD",
      "path": "12"
    },
    "5336": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5337": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2806,
        2827
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5339": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2806,
        2827
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5340": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2881
      ],
      "op": "DUP8",
      "path": "12"
    },
    "5341": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2881
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5342": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5343": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5344": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5345": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "LT",
      "path": "12"
    },
    "5346": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14E7"
    },
    "5349": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5350": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "INVALID",
      "path": "12"
    },
    "5351": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5352": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5353": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5355": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5356": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5358": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5360": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5361": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "ADD",
      "path": "12"
    },
    "5362": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5363": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3140,
        3182
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5364": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3140,
        3182
      ],
      "op": "POP",
      "path": "12"
    },
    "5365": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3303,
        3312
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 54
    },
    "5366": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3277
      ],
      "op": "DUP8",
      "path": "12"
    },
    "5367": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3285
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5369": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3285
      ],
      "op": "ADD",
      "path": "12"
    },
    "5370": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3286,
        3299
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5371": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5372": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5373": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5374": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "LT",
      "path": "12"
    },
    "5375": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1504"
    },
    "5378": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5379": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "INVALID",
      "path": "12"
    },
    "5380": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5381": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5383": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5384": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5385": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5386": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5388": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5389": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5390": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5391": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5392": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5393": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "ADD",
      "path": "12"
    },
    "5394": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5395": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5396": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5397": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5398": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 55
    },
    "5399": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5400": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5401": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3420,
        3421
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5403": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3390
      ],
      "op": "DUP10",
      "path": "12"
    },
    "5404": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3390
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5405": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3390
      ],
      "op": "ADD",
      "path": "12"
    },
    "5406": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5407": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5408": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5409": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5411": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5412": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5413": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3404,
        3421
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5414": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3404,
        3421
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5415": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3404,
        3421
      ],
      "op": "ADD",
      "path": "12"
    },
    "5416": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3421
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5417": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3421
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5418": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP7",
      "path": "12",
      "statement": 56
    },
    "5419": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5420": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3381
      ],
      "op": "DUP8",
      "path": "12"
    },
    "5421": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3381
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5422": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5423": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1534"
    },
    "5426": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5427": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "INVALID",
      "path": "12"
    },
    "5428": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5429": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5431": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5432": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SUB",
      "path": "12"
    },
    "5433": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5434": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5435": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5436": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5438": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5439": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5441": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5443": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5444": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "ADD",
      "path": "12"
    },
    "5445": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5447": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5448": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5449": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5450": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5451": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3622
      ],
      "op": "DUP7",
      "path": "12",
      "statement": 57
    },
    "5452": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5454": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3631
      ],
      "op": "ADD",
      "path": "12"
    },
    "5455": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5457": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3632,
        3637
      ],
      "op": "DUP8",
      "path": "12"
    },
    "5458": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5459": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5460": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5462": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "ADD",
      "path": "12"
    },
    "5463": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5464": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5465": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5466": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5468": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "ADD",
      "path": "12"
    },
    "5469": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5471": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5472": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3612,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5474": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3612,
        3638
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5475": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3612,
        3638
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5476": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3660,
        3664
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 58,
      "value": "0x1"
    },
    "5478": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "5479": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "5480": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "5481": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "5482": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "5483": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "5484": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB0E"
    },
    "5487": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5488": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2445,
        3718
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5489": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3702,
        3707
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 59,
      "value": "0x0"
    },
    "5491": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5492": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "POP",
      "path": "12"
    },
    "5493": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "POP",
      "path": "12"
    },
    "5494": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB0E"
    },
    "5497": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5498": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2445,
        3718
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5499": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2212,
        3724
      ],
      "op": "POP",
      "path": "12"
    },
    "5500": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2212,
        3724
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5501": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2212,
        3724
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5502": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2212,
        3724
      ],
      "op": "POP",
      "path": "12"
    },
    "5503": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2212,
        3724
      ],
      "op": "POP",
      "path": "12"
    },
    "5504": {
      "fn": "EnumerableSet._remove",
      "jump": "o",
      "offset": [
        2212,
        3724
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5505": {
      "op": "JUMPDEST"
    },
    "5506": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5508": {
      "op": "MLOAD"
    },
    "5509": {
      "op": "DUP1"
    },
    "5510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5512": {
      "op": "ADD"
    },
    "5513": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5515": {
      "op": "MSTORE"
    },
    "5516": {
      "op": "DUP1"
    },
    "5517": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5519": {
      "op": "SWAP1"
    },
    "5520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5522": {
      "op": "DUP3"
    },
    "5523": {
      "op": "MUL"
    },
    "5524": {
      "op": "DUP1"
    },
    "5525": {
      "op": "CALLDATASIZE"
    },
    "5526": {
      "op": "DUP4"
    },
    "5527": {
      "op": "CALLDATACOPY"
    },
    "5528": {
      "op": "POP"
    },
    "5529": {
      "op": "SWAP2"
    },
    "5530": {
      "op": "SWAP3"
    },
    "5531": {
      "op": "SWAP2"
    },
    "5532": {
      "op": "POP"
    },
    "5533": {
      "op": "POP"
    },
    "5534": {
      "op": "JUMP"
    },
    "5535": {
      "op": "JUMPDEST"
    },
    "5536": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5538": {
      "op": "MLOAD"
    },
    "5539": {
      "op": "DUP1"
    },
    "5540": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5542": {
      "op": "ADD"
    },
    "5543": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5545": {
      "op": "MSTORE"
    },
    "5546": {
      "op": "DUP1"
    },
    "5547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5549": {
      "op": "DUP2"
    },
    "5550": {
      "op": "MSTORE"
    },
    "5551": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5553": {
      "op": "ADD"
    },
    "5554": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5556": {
      "op": "DUP2"
    },
    "5557": {
      "op": "MSTORE"
    },
    "5558": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5560": {
      "op": "ADD"
    },
    "5561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5567": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5569": {
      "op": "SHL"
    },
    "5570": {
      "op": "SUB"
    },
    "5571": {
      "op": "AND"
    },
    "5572": {
      "op": "DUP2"
    },
    "5573": {
      "op": "MSTORE"
    },
    "5574": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5576": {
      "op": "ADD"
    },
    "5577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5583": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5585": {
      "op": "SHL"
    },
    "5586": {
      "op": "SUB"
    },
    "5587": {
      "op": "AND"
    },
    "5588": {
      "op": "DUP2"
    },
    "5589": {
      "op": "MSTORE"
    },
    "5590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5592": {
      "op": "ADD"
    },
    "5593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5595": {
      "op": "DUP1"
    },
    "5596": {
      "op": "NOT"
    },
    "5597": {
      "op": "AND"
    },
    "5598": {
      "op": "DUP2"
    },
    "5599": {
      "op": "MSTORE"
    },
    "5600": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5602": {
      "op": "ADD"
    },
    "5603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5605": {
      "op": "DUP2"
    },
    "5606": {
      "op": "MSTORE"
    },
    "5607": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5609": {
      "op": "ADD"
    },
    "5610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5612": {
      "op": "DUP2"
    },
    "5613": {
      "op": "MSTORE"
    },
    "5614": {
      "op": "POP"
    },
    "5615": {
      "op": "SWAP1"
    },
    "5616": {
      "op": "JUMP"
    },
    "5617": {
      "op": "JUMPDEST"
    },
    "5618": {
      "op": "DUP3"
    },
    "5619": {
      "op": "DUP1"
    },
    "5620": {
      "op": "SLOAD"
    },
    "5621": {
      "op": "DUP3"
    },
    "5622": {
      "op": "DUP3"
    },
    "5623": {
      "op": "SSTORE"
    },
    "5624": {
      "op": "SWAP1"
    },
    "5625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5627": {
      "op": "MSTORE"
    },
    "5628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5632": {
      "op": "KECCAK256"
    },
    "5633": {
      "op": "SWAP1"
    },
    "5634": {
      "op": "DUP2"
    },
    "5635": {
      "op": "ADD"
    },
    "5636": {
      "op": "SWAP3"
    },
    "5637": {
      "op": "DUP3"
    },
    "5638": {
      "op": "ISZERO"
    },
    "5639": {
      "op": "PUSH2",
      "value": "0x162C"
    },
    "5642": {
      "op": "JUMPI"
    },
    "5643": {
      "op": "SWAP2"
    },
    "5644": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5646": {
      "op": "MUL"
    },
    "5647": {
      "op": "DUP3"
    },
    "5648": {
      "op": "ADD"
    },
    "5649": {
      "op": "JUMPDEST"
    },
    "5650": {
      "op": "DUP3"
    },
    "5651": {
      "op": "DUP2"
    },
    "5652": {
      "op": "GT"
    },
    "5653": {
      "op": "ISZERO"
    },
    "5654": {
      "op": "PUSH2",
      "value": "0x162C"
    },
    "5657": {
      "op": "JUMPI"
    },
    "5658": {
      "op": "DUP3"
    },
    "5659": {
      "op": "MLOAD"
    },
    "5660": {
      "op": "DUP3"
    },
    "5661": {
      "op": "SSTORE"
    },
    "5662": {
      "op": "SWAP2"
    },
    "5663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5665": {
      "op": "ADD"
    },
    "5666": {
      "op": "SWAP2"
    },
    "5667": {
      "op": "SWAP1"
    },
    "5668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5670": {
      "op": "ADD"
    },
    "5671": {
      "op": "SWAP1"
    },
    "5672": {
      "op": "PUSH2",
      "value": "0x1611"
    },
    "5675": {
      "op": "JUMP"
    },
    "5676": {
      "op": "JUMPDEST"
    },
    "5677": {
      "op": "POP"
    },
    "5678": {
      "op": "PUSH2",
      "value": "0x1638"
    },
    "5681": {
      "op": "SWAP3"
    },
    "5682": {
      "op": "SWAP2"
    },
    "5683": {
      "op": "POP"
    },
    "5684": {
      "op": "PUSH2",
      "value": "0x163C"
    },
    "5687": {
      "op": "JUMP"
    },
    "5688": {
      "op": "JUMPDEST"
    },
    "5689": {
      "op": "POP"
    },
    "5690": {
      "op": "SWAP1"
    },
    "5691": {
      "op": "JUMP"
    },
    "5692": {
      "op": "JUMPDEST"
    },
    "5693": {
      "op": "JUMPDEST"
    },
    "5694": {
      "op": "DUP1"
    },
    "5695": {
      "op": "DUP3"
    },
    "5696": {
      "op": "GT"
    },
    "5697": {
      "op": "ISZERO"
    },
    "5698": {
      "op": "PUSH2",
      "value": "0x1638"
    },
    "5701": {
      "op": "JUMPI"
    },
    "5702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5704": {
      "op": "DUP2"
    },
    "5705": {
      "op": "SSTORE"
    },
    "5706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5708": {
      "op": "ADD"
    },
    "5709": {
      "op": "PUSH2",
      "value": "0x163D"
    },
    "5712": {
      "op": "JUMP"
    },
    "5713": {
      "op": "JUMPDEST"
    },
    "5714": {
      "op": "DUP1"
    },
    "5715": {
      "op": "MLOAD"
    },
    "5716": {
      "op": "PUSH2",
      "value": "0xB0E"
    },
    "5719": {
      "op": "DUP2"
    },
    "5720": {
      "op": "PUSH2",
      "value": "0x2294"
    },
    "5723": {
      "op": "JUMP"
    },
    "5724": {
      "op": "JUMPDEST"
    },
    "5725": {
      "op": "DUP1"
    },
    "5726": {
      "op": "MLOAD"
    },
    "5727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5731": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5733": {
      "op": "SHL"
    },
    "5734": {
      "op": "SUB"
    },
    "5735": {
      "op": "NOT"
    },
    "5736": {
      "op": "DUP2"
    },
    "5737": {
      "op": "AND"
    },
    "5738": {
      "op": "DUP2"
    },
    "5739": {
      "op": "EQ"
    },
    "5740": {
      "op": "PUSH2",
      "value": "0xB0E"
    },
    "5743": {
      "op": "JUMPI"
    },
    "5744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5746": {
      "op": "DUP1"
    },
    "5747": {
      "op": "REVERT"
    },
    "5748": {
      "op": "JUMPDEST"
    },
    "5749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5751": {
      "op": "DUP1"
    },
    "5752": {
      "op": "DUP4"
    },
    "5753": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5755": {
      "op": "DUP5"
    },
    "5756": {
      "op": "ADD"
    },
    "5757": {
      "op": "SLT"
    },
    "5758": {
      "op": "PUSH2",
      "value": "0x1685"
    },
    "5761": {
      "op": "JUMPI"
    },
    "5762": {
      "op": "DUP2"
    },
    "5763": {
      "op": "DUP3"
    },
    "5764": {
      "op": "REVERT"
    },
    "5765": {
      "op": "JUMPDEST"
    },
    "5766": {
      "op": "POP"
    },
    "5767": {
      "op": "DUP2"
    },
    "5768": {
      "op": "CALLDATALOAD"
    },
    "5769": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5778": {
      "op": "DUP2"
    },
    "5779": {
      "op": "GT"
    },
    "5780": {
      "op": "ISZERO"
    },
    "5781": {
      "op": "PUSH2",
      "value": "0x169C"
    },
    "5784": {
      "op": "JUMPI"
    },
    "5785": {
      "op": "DUP2"
    },
    "5786": {
      "op": "DUP3"
    },
    "5787": {
      "op": "REVERT"
    },
    "5788": {
      "op": "JUMPDEST"
    },
    "5789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5791": {
      "op": "DUP4"
    },
    "5792": {
      "op": "ADD"
    },
    "5793": {
      "op": "SWAP2"
    },
    "5794": {
      "op": "POP"
    },
    "5795": {
      "op": "DUP4"
    },
    "5796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5798": {
      "op": "DUP3"
    },
    "5799": {
      "op": "DUP6"
    },
    "5800": {
      "op": "ADD"
    },
    "5801": {
      "op": "ADD"
    },
    "5802": {
      "op": "GT"
    },
    "5803": {
      "op": "ISZERO"
    },
    "5804": {
      "op": "PUSH2",
      "value": "0x16B4"
    },
    "5807": {
      "op": "JUMPI"
    },
    "5808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5810": {
      "op": "DUP1"
    },
    "5811": {
      "op": "REVERT"
    },
    "5812": {
      "op": "JUMPDEST"
    },
    "5813": {
      "op": "SWAP3"
    },
    "5814": {
      "op": "POP"
    },
    "5815": {
      "op": "SWAP3"
    },
    "5816": {
      "op": "SWAP1"
    },
    "5817": {
      "op": "POP"
    },
    "5818": {
      "op": "JUMP"
    },
    "5819": {
      "op": "JUMPDEST"
    },
    "5820": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5822": {
      "op": "DUP3"
    },
    "5823": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5825": {
      "op": "DUP4"
    },
    "5826": {
      "op": "ADD"
    },
    "5827": {
      "op": "SLT"
    },
    "5828": {
      "op": "PUSH2",
      "value": "0x16CB"
    },
    "5831": {
      "op": "JUMPI"
    },
    "5832": {
      "op": "DUP1"
    },
    "5833": {
      "op": "DUP2"
    },
    "5834": {
      "op": "REVERT"
    },
    "5835": {
      "op": "JUMPDEST"
    },
    "5836": {
      "op": "DUP2"
    },
    "5837": {
      "op": "MLOAD"
    },
    "5838": {
      "op": "PUSH2",
      "value": "0x16DE"
    },
    "5841": {
      "op": "PUSH2",
      "value": "0x16D9"
    },
    "5844": {
      "op": "DUP3"
    },
    "5845": {
      "op": "PUSH2",
      "value": "0x2244"
    },
    "5848": {
      "op": "JUMP"
    },
    "5849": {
      "op": "JUMPDEST"
    },
    "5850": {
      "op": "PUSH2",
      "value": "0x221D"
    },
    "5853": {
      "op": "JUMP"
    },
    "5854": {
      "op": "JUMPDEST"
    },
    "5855": {
      "op": "SWAP2"
    },
    "5856": {
      "op": "POP"
    },
    "5857": {
      "op": "DUP1"
    },
    "5858": {
      "op": "DUP3"
    },
    "5859": {
      "op": "MSTORE"
    },
    "5860": {
      "op": "DUP4"
    },
    "5861": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5863": {
      "op": "DUP3"
    },
    "5864": {
      "op": "DUP6"
    },
    "5865": {
      "op": "ADD"
    },
    "5866": {
      "op": "ADD"
    },
    "5867": {
      "op": "GT"
    },
    "5868": {
      "op": "ISZERO"
    },
    "5869": {
      "op": "PUSH2",
      "value": "0x16F5"
    },
    "5872": {
      "op": "JUMPI"
    },
    "5873": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5875": {
      "op": "DUP1"
    },
    "5876": {
      "op": "REVERT"
    },
    "5877": {
      "op": "JUMPDEST"
    },
    "5878": {
      "op": "PUSH2",
      "value": "0x157A"
    },
    "5881": {
      "op": "DUP2"
    },
    "5882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5884": {
      "op": "DUP5"
    },
    "5885": {
      "op": "ADD"
    },
    "5886": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5888": {
      "op": "DUP7"
    },
    "5889": {
      "op": "ADD"
    },
    "5890": {
      "op": "PUSH2",
      "value": "0x2268"
    },
    "5893": {
      "op": "JUMP"
    },
    "5894": {
      "op": "JUMPDEST"
    },
    "5895": {
      "op": "DUP1"
    },
    "5896": {
      "op": "MLOAD"
    },
    "5897": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "5899": {
      "op": "DUP2"
    },
    "5900": {
      "op": "SWAP1"
    },
    "5901": {
      "op": "SIGNEXTEND"
    },
    "5902": {
      "op": "DUP2"
    },
    "5903": {
      "op": "EQ"
    },
    "5904": {
      "op": "PUSH2",
      "value": "0xB0E"
    },
    "5907": {
      "op": "JUMPI"
    },
    "5908": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5910": {
      "op": "DUP1"
    },
    "5911": {
      "op": "REVERT"
    },
    "5912": {
      "op": "JUMPDEST"
    },
    "5913": {
      "op": "DUP1"
    },
    "5914": {
      "op": "MLOAD"
    },
    "5915": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5917": {
      "op": "DUP2"
    },
    "5918": {
      "op": "AND"
    },
    "5919": {
      "op": "DUP2"
    },
    "5920": {
      "op": "EQ"
    },
    "5921": {
      "op": "PUSH2",
      "value": "0xB0E"
    },
    "5924": {
      "op": "JUMPI"
    },
    "5925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5927": {
      "op": "DUP1"
    },
    "5928": {
      "op": "REVERT"
    },
    "5929": {
      "op": "JUMPDEST"
    },
    "5930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5932": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5934": {
      "op": "DUP3"
    },
    "5935": {
      "op": "DUP5"
    },
    "5936": {
      "op": "SUB"
    },
    "5937": {
      "op": "SLT"
    },
    "5938": {
      "op": "ISZERO"
    },
    "5939": {
      "op": "PUSH2",
      "value": "0x173A"
    },
    "5942": {
      "op": "JUMPI"
    },
    "5943": {
      "op": "DUP1"
    },
    "5944": {
      "op": "DUP2"
    },
    "5945": {
      "op": "REVERT"
    },
    "5946": {
      "op": "JUMPDEST"
    },
    "5947": {
      "op": "DUP2"
    },
    "5948": {
      "op": "CALLDATALOAD"
    },
    "5949": {
      "op": "PUSH2",
      "value": "0x1745"
    },
    "5952": {
      "op": "DUP2"
    },
    "5953": {
      "op": "PUSH2",
      "value": "0x2294"
    },
    "5956": {
      "op": "JUMP"
    },
    "5957": {
      "op": "JUMPDEST"
    },
    "5958": {
      "op": "SWAP4"
    },
    "5959": {
      "op": "SWAP3"
    },
    "5960": {
      "op": "POP"
    },
    "5961": {
      "op": "POP"
    },
    "5962": {
      "op": "POP"
    },
    "5963": {
      "op": "JUMP"
    },
    "5964": {
      "op": "JUMPDEST"
    },
    "5965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5967": {
      "op": "DUP1"
    },
    "5968": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5970": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5972": {
      "op": "DUP5"
    },
    "5973": {
      "op": "DUP7"
    },
    "5974": {
      "op": "SUB"
    },
    "5975": {
      "op": "SLT"
    },
    "5976": {
      "op": "ISZERO"
    },
    "5977": {
      "op": "PUSH2",
      "value": "0x1760"
    },
    "5980": {
      "op": "JUMPI"
    },
    "5981": {
      "op": "DUP2"
    },
    "5982": {
      "op": "DUP3"
    },
    "5983": {
      "op": "REVERT"
    },
    "5984": {
      "op": "JUMPDEST"
    },
    "5985": {
      "op": "DUP4"
    },
    "5986": {
      "op": "CALLDATALOAD"
    },
    "5987": {
      "op": "PUSH2",
      "value": "0x176B"
    },
    "5990": {
      "op": "DUP2"
    },
    "5991": {
      "op": "PUSH2",
      "value": "0x2294"
    },
    "5994": {
      "op": "JUMP"
    },
    "5995": {
      "op": "JUMPDEST"
    },
    "5996": {
      "op": "SWAP3"
    },
    "5997": {
      "op": "POP"
    },
    "5998": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6000": {
      "op": "DUP5"
    },
    "6001": {
      "op": "ADD"
    },
    "6002": {
      "op": "CALLDATALOAD"
    },
    "6003": {
      "op": "SWAP2"
    },
    "6004": {
      "op": "POP"
    },
    "6005": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6007": {
      "op": "DUP5"
    },
    "6008": {
      "op": "ADD"
    },
    "6009": {
      "op": "CALLDATALOAD"
    },
    "6010": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6019": {
      "op": "DUP2"
    },
    "6020": {
      "op": "GT"
    },
    "6021": {
      "op": "ISZERO"
    },
    "6022": {
      "op": "PUSH2",
      "value": "0x178D"
    },
    "6025": {
      "op": "JUMPI"
    },
    "6026": {
      "op": "DUP2"
    },
    "6027": {
      "op": "DUP3"
    },
    "6028": {
      "op": "REVERT"
    },
    "6029": {
      "op": "JUMPDEST"
    },
    "6030": {
      "op": "DUP5"
    },
    "6031": {
      "op": "ADD"
    },
    "6032": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6034": {
      "op": "DUP2"
    },
    "6035": {
      "op": "ADD"
    },
    "6036": {
      "op": "DUP7"
    },
    "6037": {
      "op": "SGT"
    },
    "6038": {
      "op": "PUSH2",
      "value": "0x179D"
    },
    "6041": {
      "op": "JUMPI"
    },
    "6042": {
      "op": "DUP2"
    },
    "6043": {
      "op": "DUP3"
    },
    "6044": {
      "op": "REVERT"
    },
    "6045": {
      "op": "JUMPDEST"
    },
    "6046": {
      "op": "DUP1"
    },
    "6047": {
      "op": "CALLDATALOAD"
    },
    "6048": {
      "op": "PUSH2",
      "value": "0x17AB"
    },
    "6051": {
      "op": "PUSH2",
      "value": "0x16D9"
    },
    "6054": {
      "op": "DUP3"
    },
    "6055": {
      "op": "PUSH2",
      "value": "0x2244"
    },
    "6058": {
      "op": "JUMP"
    },
    "6059": {
      "op": "JUMPDEST"
    },
    "6060": {
      "op": "DUP2"
    },
    "6061": {
      "op": "DUP2"
    },
    "6062": {
      "op": "MSTORE"
    },
    "6063": {
      "op": "DUP8"
    },
    "6064": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6066": {
      "op": "DUP4"
    },
    "6067": {
      "op": "DUP6"
    },
    "6068": {
      "op": "ADD"
    },
    "6069": {
      "op": "ADD"
    },
    "6070": {
      "op": "GT"
    },
    "6071": {
      "op": "ISZERO"
    },
    "6072": {
      "op": "PUSH2",
      "value": "0x17BF"
    },
    "6075": {
      "op": "JUMPI"
    },
    "6076": {
      "op": "DUP4"
    },
    "6077": {
      "op": "DUP5"
    },
    "6078": {
      "op": "REVERT"
    },
    "6079": {
      "op": "JUMPDEST"
    },
    "6080": {
      "op": "DUP2"
    },
    "6081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6083": {
      "op": "DUP5"
    },
    "6084": {
      "op": "ADD"
    },
    "6085": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6087": {
      "op": "DUP4"
    },
    "6088": {
      "op": "ADD"
    },
    "6089": {
      "op": "CALLDATACOPY"
    },
    "6090": {
      "op": "DUP4"
    },
    "6091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6093": {
      "op": "DUP4"
    },
    "6094": {
      "op": "DUP4"
    },
    "6095": {
      "op": "ADD"
    },
    "6096": {
      "op": "ADD"
    },
    "6097": {
      "op": "MSTORE"
    },
    "6098": {
      "op": "DUP1"
    },
    "6099": {
      "op": "SWAP4"
    },
    "6100": {
      "op": "POP"
    },
    "6101": {
      "op": "POP"
    },
    "6102": {
      "op": "POP"
    },
    "6103": {
      "op": "POP"
    },
    "6104": {
      "op": "SWAP3"
    },
    "6105": {
      "op": "POP"
    },
    "6106": {
      "op": "SWAP3"
    },
    "6107": {
      "op": "POP"
    },
    "6108": {
      "op": "SWAP3"
    },
    "6109": {
      "op": "JUMP"
    },
    "6110": {
      "op": "JUMPDEST"
    },
    "6111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6113": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6115": {
      "op": "DUP3"
    },
    "6116": {
      "op": "DUP5"
    },
    "6117": {
      "op": "SUB"
    },
    "6118": {
      "op": "SLT"
    },
    "6119": {
      "op": "ISZERO"
    },
    "6120": {
      "op": "PUSH2",
      "value": "0x17EF"
    },
    "6123": {
      "op": "JUMPI"
    },
    "6124": {
      "op": "DUP1"
    },
    "6125": {
      "op": "DUP2"
    },
    "6126": {
      "op": "REVERT"
    },
    "6127": {
      "op": "JUMPDEST"
    },
    "6128": {
      "op": "POP"
    },
    "6129": {
      "op": "CALLDATALOAD"
    },
    "6130": {
      "op": "SWAP2"
    },
    "6131": {
      "op": "SWAP1"
    },
    "6132": {
      "op": "POP"
    },
    "6133": {
      "op": "JUMP"
    },
    "6134": {
      "op": "JUMPDEST"
    },
    "6135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6137": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6139": {
      "op": "DUP3"
    },
    "6140": {
      "op": "DUP5"
    },
    "6141": {
      "op": "SUB"
    },
    "6142": {
      "op": "SLT"
    },
    "6143": {
      "op": "ISZERO"
    },
    "6144": {
      "op": "PUSH2",
      "value": "0x1807"
    },
    "6147": {
      "op": "JUMPI"
    },
    "6148": {
      "op": "DUP1"
    },
    "6149": {
      "op": "DUP2"
    },
    "6150": {
      "op": "REVERT"
    },
    "6151": {
      "op": "JUMPDEST"
    },
    "6152": {
      "op": "POP"
    },
    "6153": {
      "op": "MLOAD"
    },
    "6154": {
      "op": "SWAP2"
    },
    "6155": {
      "op": "SWAP1"
    },
    "6156": {
      "op": "POP"
    },
    "6157": {
      "op": "JUMP"
    },
    "6158": {
      "op": "JUMPDEST"
    },
    "6159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6161": {
      "op": "DUP1"
    },
    "6162": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6164": {
      "op": "DUP4"
    },
    "6165": {
      "op": "DUP6"
    },
    "6166": {
      "op": "SUB"
    },
    "6167": {
      "op": "SLT"
    },
    "6168": {
      "op": "ISZERO"
    },
    "6169": {
      "op": "PUSH2",
      "value": "0x1820"
    },
    "6172": {
      "op": "JUMPI"
    },
    "6173": {
      "op": "DUP2"
    },
    "6174": {
      "op": "DUP3"
    },
    "6175": {
      "op": "REVERT"
    },
    "6176": {
      "op": "JUMPDEST"
    },
    "6177": {
      "op": "DUP3"
    },
    "6178": {
      "op": "CALLDATALOAD"
    },
    "6179": {
      "op": "SWAP2"
    },
    "6180": {
      "op": "POP"
    },
    "6181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6183": {
      "op": "DUP4"
    },
    "6184": {
      "op": "ADD"
    },
    "6185": {
      "op": "CALLDATALOAD"
    },
    "6186": {
      "op": "PUSH2",
      "value": "0x1832"
    },
    "6189": {
      "op": "DUP2"
    },
    "6190": {
      "op": "PUSH2",
      "value": "0x2294"
    },
    "6193": {
      "op": "JUMP"
    },
    "6194": {
      "op": "JUMPDEST"
    },
    "6195": {
      "op": "DUP1"
    },
    "6196": {
      "op": "SWAP2"
    },
    "6197": {
      "op": "POP"
    },
    "6198": {
      "op": "POP"
    },
    "6199": {
      "op": "SWAP3"
    },
    "6200": {
      "op": "POP"
    },
    "6201": {
      "op": "SWAP3"
    },
    "6202": {
      "op": "SWAP1"
    },
    "6203": {
      "op": "POP"
    },
    "6204": {
      "op": "JUMP"
    },
    "6205": {
      "op": "JUMPDEST"
    },
    "6206": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6208": {
      "op": "DUP1"
    },
    "6209": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6211": {
      "op": "DUP4"
    },
    "6212": {
      "op": "DUP6"
    },
    "6213": {
      "op": "SUB"
    },
    "6214": {
      "op": "SLT"
    },
    "6215": {
      "op": "ISZERO"
    },
    "6216": {
      "op": "PUSH2",
      "value": "0x184F"
    },
    "6219": {
      "op": "JUMPI"
    },
    "6220": {
      "op": "DUP2"
    },
    "6221": {
      "op": "DUP3"
    },
    "6222": {
      "op": "REVERT"
    },
    "6223": {
      "op": "JUMPDEST"
    },
    "6224": {
      "op": "POP"
    },
    "6225": {
      "op": "POP"
    },
    "6226": {
      "op": "DUP1"
    },
    "6227": {
      "op": "CALLDATALOAD"
    },
    "6228": {
      "op": "SWAP3"
    },
    "6229": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6231": {
      "op": "SWAP1"
    },
    "6232": {
      "op": "SWAP2"
    },
    "6233": {
      "op": "ADD"
    },
    "6234": {
      "op": "CALLDATALOAD"
    },
    "6235": {
      "op": "SWAP2"
    },
    "6236": {
      "op": "POP"
    },
    "6237": {
      "op": "JUMP"
    },
    "6238": {
      "op": "JUMPDEST"
    },
    "6239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6241": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6243": {
      "op": "DUP3"
    },
    "6244": {
      "op": "DUP5"
    },
    "6245": {
      "op": "SUB"
    },
    "6246": {
      "op": "SLT"
    },
    "6247": {
      "op": "ISZERO"
    },
    "6248": {
      "op": "PUSH2",
      "value": "0x186F"
    },
    "6251": {
      "op": "JUMPI"
    },
    "6252": {
      "op": "DUP1"
    },
    "6253": {
      "op": "DUP2"
    },
    "6254": {
      "op": "REVERT"
    },
    "6255": {
      "op": "JUMPDEST"
    },
    "6256": {
      "op": "DUP2"
    },
    "6257": {
      "op": "MLOAD"
    },
    "6258": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6267": {
      "op": "DUP2"
    },
    "6268": {
      "op": "GT"
    },
    "6269": {
      "op": "ISZERO"
    },
    "6270": {
      "op": "PUSH2",
      "value": "0x1885"
    },
    "6273": {
      "op": "JUMPI"
    },
    "6274": {
      "op": "DUP2"
    },
    "6275": {
      "op": "DUP3"
    },
    "6276": {
      "op": "REVERT"
    },
    "6277": {
      "op": "JUMPDEST"
    },
    "6278": {
      "op": "PUSH2",
      "value": "0x1891"
    },
    "6281": {
      "op": "DUP5"
    },
    "6282": {
      "op": "DUP3"
    },
    "6283": {
      "op": "DUP6"
    },
    "6284": {
      "op": "ADD"
    },
    "6285": {
      "op": "PUSH2",
      "value": "0x16BB"
    },
    "6288": {
      "op": "JUMP"
    },
    "6289": {
      "op": "JUMPDEST"
    },
    "6290": {
      "op": "SWAP5"
    },
    "6291": {
      "op": "SWAP4"
    },
    "6292": {
      "op": "POP"
    },
    "6293": {
      "op": "POP"
    },
    "6294": {
      "op": "POP"
    },
    "6295": {
      "op": "POP"
    },
    "6296": {
      "op": "JUMP"
    },
    "6297": {
      "op": "JUMPDEST"
    },
    "6298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6300": {
      "op": "DUP1"
    },
    "6301": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6303": {
      "op": "DUP4"
    },
    "6304": {
      "op": "DUP6"
    },
    "6305": {
      "op": "SUB"
    },
    "6306": {
      "op": "SLT"
    },
    "6307": {
      "op": "ISZERO"
    },
    "6308": {
      "op": "PUSH2",
      "value": "0x18AB"
    },
    "6311": {
      "op": "JUMPI"
    },
    "6312": {
      "op": "DUP2"
    },
    "6313": {
      "op": "DUP3"
    },
    "6314": {
      "op": "REVERT"
    },
    "6315": {
      "op": "JUMPDEST"
    },
    "6316": {
      "op": "DUP3"
    },
    "6317": {
      "op": "MLOAD"
    },
    "6318": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6327": {
      "op": "DUP1"
    },
    "6328": {
      "op": "DUP3"
    },
    "6329": {
      "op": "GT"
    },
    "6330": {
      "op": "ISZERO"
    },
    "6331": {
      "op": "PUSH2",
      "value": "0x18C2"
    },
    "6334": {
      "op": "JUMPI"
    },
    "6335": {
      "op": "DUP4"
    },
    "6336": {
      "op": "DUP5"
    },
    "6337": {
      "op": "REVERT"
    },
    "6338": {
      "op": "JUMPDEST"
    },
    "6339": {
      "op": "PUSH2",
      "value": "0x18CE"
    },
    "6342": {
      "op": "DUP7"
    },
    "6343": {
      "op": "DUP4"
    },
    "6344": {
      "op": "DUP8"
    },
    "6345": {
      "op": "ADD"
    },
    "6346": {
      "op": "PUSH2",
      "value": "0x16BB"
    },
    "6349": {
      "op": "JUMP"
    },
    "6350": {
      "op": "JUMPDEST"
    },
    "6351": {
      "op": "SWAP4"
    },
    "6352": {
      "op": "POP"
    },
    "6353": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6355": {
      "op": "DUP6"
    },
    "6356": {
      "op": "ADD"
    },
    "6357": {
      "op": "MLOAD"
    },
    "6358": {
      "op": "SWAP2"
    },
    "6359": {
      "op": "POP"
    },
    "6360": {
      "op": "DUP1"
    },
    "6361": {
      "op": "DUP3"
    },
    "6362": {
      "op": "GT"
    },
    "6363": {
      "op": "ISZERO"
    },
    "6364": {
      "op": "PUSH2",
      "value": "0x18E3"
    },
    "6367": {
      "op": "JUMPI"
    },
    "6368": {
      "op": "DUP3"
    },
    "6369": {
      "op": "DUP4"
    },
    "6370": {
      "op": "REVERT"
    },
    "6371": {
      "op": "JUMPDEST"
    },
    "6372": {
      "op": "POP"
    },
    "6373": {
      "op": "PUSH2",
      "value": "0x18F0"
    },
    "6376": {
      "op": "DUP6"
    },
    "6377": {
      "op": "DUP3"
    },
    "6378": {
      "op": "DUP7"
    },
    "6379": {
      "op": "ADD"
    },
    "6380": {
      "op": "PUSH2",
      "value": "0x16BB"
    },
    "6383": {
      "op": "JUMP"
    },
    "6384": {
      "op": "JUMPDEST"
    },
    "6385": {
      "op": "SWAP2"
    },
    "6386": {
      "op": "POP"
    },
    "6387": {
      "op": "POP"
    },
    "6388": {
      "op": "SWAP3"
    },
    "6389": {
      "op": "POP"
    },
    "6390": {
      "op": "SWAP3"
    },
    "6391": {
      "op": "SWAP1"
    },
    "6392": {
      "op": "POP"
    },
    "6393": {
      "op": "JUMP"
    },
    "6394": {
      "op": "JUMPDEST"
    },
    "6395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6397": {
      "op": "DUP1"
    },
    "6398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6400": {
      "op": "DUP1"
    },
    "6401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6403": {
      "op": "DUP1"
    },
    "6404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6408": {
      "op": "DUP9"
    },
    "6409": {
      "op": "DUP11"
    },
    "6410": {
      "op": "SUB"
    },
    "6411": {
      "op": "SLT"
    },
    "6412": {
      "op": "ISZERO"
    },
    "6413": {
      "op": "PUSH2",
      "value": "0x1914"
    },
    "6416": {
      "op": "JUMPI"
    },
    "6417": {
      "op": "DUP5"
    },
    "6418": {
      "op": "DUP6"
    },
    "6419": {
      "op": "REVERT"
    },
    "6420": {
      "op": "JUMPDEST"
    },
    "6421": {
      "op": "DUP8"
    },
    "6422": {
      "op": "CALLDATALOAD"
    },
    "6423": {
      "op": "PUSH2",
      "value": "0x191F"
    },
    "6426": {
      "op": "DUP2"
    },
    "6427": {
      "op": "PUSH2",
      "value": "0x2294"
    },
    "6430": {
      "op": "JUMP"
    },
    "6431": {
      "op": "JUMPDEST"
    },
    "6432": {
      "op": "SWAP7"
    },
    "6433": {
      "op": "POP"
    },
    "6434": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6436": {
      "op": "DUP9"
    },
    "6437": {
      "op": "ADD"
    },
    "6438": {
      "op": "CALLDATALOAD"
    },
    "6439": {
      "op": "PUSH2",
      "value": "0x192F"
    },
    "6442": {
      "op": "DUP2"
    },
    "6443": {
      "op": "PUSH2",
      "value": "0x2294"
    },
    "6446": {
      "op": "JUMP"
    },
    "6447": {
      "op": "JUMPDEST"
    },
    "6448": {
      "op": "SWAP6"
    },
    "6449": {
      "op": "POP"
    },
    "6450": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6452": {
      "op": "DUP9"
    },
    "6453": {
      "op": "ADD"
    },
    "6454": {
      "op": "CALLDATALOAD"
    },
    "6455": {
      "op": "SWAP5"
    },
    "6456": {
      "op": "POP"
    },
    "6457": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6459": {
      "op": "DUP9"
    },
    "6460": {
      "op": "ADD"
    },
    "6461": {
      "op": "CALLDATALOAD"
    },
    "6462": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6471": {
      "op": "DUP1"
    },
    "6472": {
      "op": "DUP3"
    },
    "6473": {
      "op": "GT"
    },
    "6474": {
      "op": "ISZERO"
    },
    "6475": {
      "op": "PUSH2",
      "value": "0x1952"
    },
    "6478": {
      "op": "JUMPI"
    },
    "6479": {
      "op": "DUP5"
    },
    "6480": {
      "op": "DUP6"
    },
    "6481": {
      "op": "REVERT"
    },
    "6482": {
      "op": "JUMPDEST"
    },
    "6483": {
      "op": "PUSH2",
      "value": "0x195E"
    },
    "6486": {
      "op": "DUP12"
    },
    "6487": {
      "op": "DUP4"
    },
    "6488": {
      "op": "DUP13"
    },
    "6489": {
      "op": "ADD"
    },
    "6490": {
      "op": "PUSH2",
      "value": "0x1674"
    },
    "6493": {
      "op": "JUMP"
    },
    "6494": {
      "op": "JUMPDEST"
    },
    "6495": {
      "op": "SWAP1"
    },
    "6496": {
      "op": "SWAP7"
    },
    "6497": {
      "op": "POP"
    },
    "6498": {
      "op": "SWAP5"
    },
    "6499": {
      "op": "POP"
    },
    "6500": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6502": {
      "op": "DUP11"
    },
    "6503": {
      "op": "ADD"
    },
    "6504": {
      "op": "CALLDATALOAD"
    },
    "6505": {
      "op": "SWAP2"
    },
    "6506": {
      "op": "POP"
    },
    "6507": {
      "op": "DUP1"
    },
    "6508": {
      "op": "DUP3"
    },
    "6509": {
      "op": "GT"
    },
    "6510": {
      "op": "ISZERO"
    },
    "6511": {
      "op": "PUSH2",
      "value": "0x1976"
    },
    "6514": {
      "op": "JUMPI"
    },
    "6515": {
      "op": "DUP4"
    },
    "6516": {
      "op": "DUP5"
    },
    "6517": {
      "op": "REVERT"
    },
    "6518": {
      "op": "JUMPDEST"
    },
    "6519": {
      "op": "POP"
    },
    "6520": {
      "op": "PUSH2",
      "value": "0x1983"
    },
    "6523": {
      "op": "DUP11"
    },
    "6524": {
      "op": "DUP3"
    },
    "6525": {
      "op": "DUP12"
    },
    "6526": {
      "op": "ADD"
    },
    "6527": {
      "op": "PUSH2",
      "value": "0x1674"
    },
    "6530": {
      "op": "JUMP"
    },
    "6531": {
      "op": "JUMPDEST"
    },
    "6532": {
      "op": "SWAP9"
    },
    "6533": {
      "op": "SWAP12"
    },
    "6534": {
      "op": "SWAP8"
    },
    "6535": {
      "op": "SWAP11"
    },
    "6536": {
      "op": "POP"
    },
    "6537": {
      "op": "SWAP6"
    },
    "6538": {
      "op": "SWAP9"
    },
    "6539": {
      "op": "POP"
    },
    "6540": {
      "op": "SWAP4"
    },
    "6541": {
      "op": "SWAP7"
    },
    "6542": {
      "op": "SWAP3"
    },
    "6543": {
      "op": "SWAP6"
    },
    "6544": {
      "op": "SWAP3"
    },
    "6545": {
      "op": "SWAP4"
    },
    "6546": {
      "op": "POP"
    },
    "6547": {
      "op": "POP"
    },
    "6548": {
      "op": "POP"
    },
    "6549": {
      "op": "JUMP"
    },
    "6550": {
      "op": "JUMPDEST"
    },
    "6551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6553": {
      "op": "DUP1"
    },
    "6554": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6556": {
      "op": "DUP1"
    },
    "6557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6559": {
      "op": "DUP1"
    },
    "6560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6562": {
      "op": "DUP1"
    },
    "6563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6565": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6567": {
      "op": "DUP11"
    },
    "6568": {
      "op": "DUP13"
    },
    "6569": {
      "op": "SUB"
    },
    "6570": {
      "op": "SLT"
    },
    "6571": {
      "op": "ISZERO"
    },
    "6572": {
      "op": "PUSH2",
      "value": "0x19B3"
    },
    "6575": {
      "op": "JUMPI"
    },
    "6576": {
      "op": "DUP3"
    },
    "6577": {
      "op": "DUP4"
    },
    "6578": {
      "op": "REVERT"
    },
    "6579": {
      "op": "JUMPDEST"
    },
    "6580": {
      "op": "DUP10"
    },
    "6581": {
      "op": "CALLDATALOAD"
    },
    "6582": {
      "op": "PUSH2",
      "value": "0x19BE"
    },
    "6585": {
      "op": "DUP2"
    },
    "6586": {
      "op": "PUSH2",
      "value": "0x2294"
    },
    "6589": {
      "op": "JUMP"
    },
    "6590": {
      "op": "JUMPDEST"
    },
    "6591": {
      "op": "SWAP9"
    },
    "6592": {
      "op": "POP"
    },
    "6593": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6595": {
      "op": "DUP11"
    },
    "6596": {
      "op": "ADD"
    },
    "6597": {
      "op": "CALLDATALOAD"
    },
    "6598": {
      "op": "PUSH2",
      "value": "0x19CE"
    },
    "6601": {
      "op": "DUP2"
    },
    "6602": {
      "op": "PUSH2",
      "value": "0x2294"
    },
    "6605": {
      "op": "JUMP"
    },
    "6606": {
      "op": "JUMPDEST"
    },
    "6607": {
      "op": "SWAP8"
    },
    "6608": {
      "op": "POP"
    },
    "6609": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6611": {
      "op": "DUP11"
    },
    "6612": {
      "op": "ADD"
    },
    "6613": {
      "op": "CALLDATALOAD"
    },
    "6614": {
      "op": "SWAP7"
    },
    "6615": {
      "op": "POP"
    },
    "6616": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6618": {
      "op": "DUP11"
    },
    "6619": {
      "op": "ADD"
    },
    "6620": {
      "op": "CALLDATALOAD"
    },
    "6621": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6630": {
      "op": "DUP1"
    },
    "6631": {
      "op": "DUP3"
    },
    "6632": {
      "op": "GT"
    },
    "6633": {
      "op": "ISZERO"
    },
    "6634": {
      "op": "PUSH2",
      "value": "0x19F1"
    },
    "6637": {
      "op": "JUMPI"
    },
    "6638": {
      "op": "DUP5"
    },
    "6639": {
      "op": "DUP6"
    },
    "6640": {
      "op": "REVERT"
    },
    "6641": {
      "op": "JUMPDEST"
    },
    "6642": {
      "op": "PUSH2",
      "value": "0x19FD"
    },
    "6645": {
      "op": "DUP14"
    },
    "6646": {
      "op": "DUP4"
    },
    "6647": {
      "op": "DUP15"
    },
    "6648": {
      "op": "ADD"
    },
    "6649": {
      "op": "PUSH2",
      "value": "0x1674"
    },
    "6652": {
      "op": "JUMP"
    },
    "6653": {
      "op": "JUMPDEST"
    },
    "6654": {
      "op": "SWAP1"
    },
    "6655": {
      "op": "SWAP9"
    },
    "6656": {
      "op": "POP"
    },
    "6657": {
      "op": "SWAP7"
    },
    "6658": {
      "op": "POP"
    },
    "6659": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6661": {
      "op": "DUP13"
    },
    "6662": {
      "op": "ADD"
    },
    "6663": {
      "op": "CALLDATALOAD"
    },
    "6664": {
      "op": "SWAP2"
    },
    "6665": {
      "op": "POP"
    },
    "6666": {
      "op": "DUP1"
    },
    "6667": {
      "op": "DUP3"
    },
    "6668": {
      "op": "GT"
    },
    "6669": {
      "op": "ISZERO"
    },
    "6670": {
      "op": "PUSH2",
      "value": "0x1A15"
    },
    "6673": {
      "op": "JUMPI"
    },
    "6674": {
      "op": "DUP5"
    },
    "6675": {
      "op": "DUP6"
    },
    "6676": {
      "op": "REVERT"
    },
    "6677": {
      "op": "JUMPDEST"
    },
    "6678": {
      "op": "PUSH2",
      "value": "0x1A21"
    },
    "6681": {
      "op": "DUP14"
    },
    "6682": {
      "op": "DUP4"
    },
    "6683": {
      "op": "DUP15"
    },
    "6684": {
      "op": "ADD"
    },
    "6685": {
      "op": "PUSH2",
      "value": "0x1674"
    },
    "6688": {
      "op": "JUMP"
    },
    "6689": {
      "op": "JUMPDEST"
    },
    "6690": {
      "op": "SWAP1"
    },
    "6691": {
      "op": "SWAP7"
    },
    "6692": {
      "op": "POP"
    },
    "6693": {
      "op": "SWAP5"
    },
    "6694": {
      "op": "POP"
    },
    "6695": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6697": {
      "op": "DUP13"
    },
    "6698": {
      "op": "ADD"
    },
    "6699": {
      "op": "CALLDATALOAD"
    },
    "6700": {
      "op": "SWAP2"
    },
    "6701": {
      "op": "POP"
    },
    "6702": {
      "op": "DUP1"
    },
    "6703": {
      "op": "DUP3"
    },
    "6704": {
      "op": "GT"
    },
    "6705": {
      "op": "ISZERO"
    },
    "6706": {
      "op": "PUSH2",
      "value": "0x1A39"
    },
    "6709": {
      "op": "JUMPI"
    },
    "6710": {
      "op": "DUP4"
    },
    "6711": {
      "op": "DUP5"
    },
    "6712": {
      "op": "REVERT"
    },
    "6713": {
      "op": "JUMPDEST"
    },
    "6714": {
      "op": "POP"
    },
    "6715": {
      "op": "PUSH2",
      "value": "0x1A46"
    },
    "6718": {
      "op": "DUP13"
    },
    "6719": {
      "op": "DUP3"
    },
    "6720": {
      "op": "DUP14"
    },
    "6721": {
      "op": "ADD"
    },
    "6722": {
      "op": "PUSH2",
      "value": "0x1674"
    },
    "6725": {
      "op": "JUMP"
    },
    "6726": {
      "op": "JUMPDEST"
    },
    "6727": {
      "op": "SWAP2"
    },
    "6728": {
      "op": "POP"
    },
    "6729": {
      "op": "DUP1"
    },
    "6730": {
      "op": "SWAP4"
    },
    "6731": {
      "op": "POP"
    },
    "6732": {
      "op": "POP"
    },
    "6733": {
      "op": "DUP1"
    },
    "6734": {
      "op": "SWAP2"
    },
    "6735": {
      "op": "POP"
    },
    "6736": {
      "op": "POP"
    },
    "6737": {
      "op": "SWAP3"
    },
    "6738": {
      "op": "SWAP6"
    },
    "6739": {
      "op": "SWAP9"
    },
    "6740": {
      "op": "POP"
    },
    "6741": {
      "op": "SWAP3"
    },
    "6742": {
      "op": "SWAP6"
    },
    "6743": {
      "op": "SWAP9"
    },
    "6744": {
      "op": "POP"
    },
    "6745": {
      "op": "SWAP3"
    },
    "6746": {
      "op": "SWAP6"
    },
    "6747": {
      "op": "SWAP9"
    },
    "6748": {
      "op": "JUMP"
    },
    "6749": {
      "op": "JUMPDEST"
    },
    "6750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6754": {
      "op": "DUP3"
    },
    "6755": {
      "op": "DUP5"
    },
    "6756": {
      "op": "SUB"
    },
    "6757": {
      "op": "SLT"
    },
    "6758": {
      "op": "ISZERO"
    },
    "6759": {
      "op": "PUSH2",
      "value": "0x1A6E"
    },
    "6762": {
      "op": "JUMPI"
    },
    "6763": {
      "op": "DUP1"
    },
    "6764": {
      "op": "DUP2"
    },
    "6765": {
      "op": "REVERT"
    },
    "6766": {
      "op": "JUMPDEST"
    },
    "6767": {
      "op": "PUSH2",
      "value": "0xB0B"
    },
    "6770": {
      "op": "DUP4"
    },
    "6771": {
      "op": "DUP4"
    },
    "6772": {
      "op": "PUSH2",
      "value": "0x1706"
    },
    "6775": {
      "op": "JUMP"
    },
    "6776": {
      "op": "JUMPDEST"
    },
    "6777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6779": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6781": {
      "op": "DUP3"
    },
    "6782": {
      "op": "DUP5"
    },
    "6783": {
      "op": "SUB"
    },
    "6784": {
      "op": "SLT"
    },
    "6785": {
      "op": "ISZERO"
    },
    "6786": {
      "op": "PUSH2",
      "value": "0x1A89"
    },
    "6789": {
      "op": "JUMPI"
    },
    "6790": {
      "op": "DUP1"
    },
    "6791": {
      "op": "DUP2"
    },
    "6792": {
      "op": "REVERT"
    },
    "6793": {
      "op": "JUMPDEST"
    },
    "6794": {
      "op": "DUP2"
    },
    "6795": {
      "op": "MLOAD"
    },
    "6796": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6805": {
      "op": "DUP1"
    },
    "6806": {
      "op": "DUP3"
    },
    "6807": {
      "op": "GT"
    },
    "6808": {
      "op": "ISZERO"
    },
    "6809": {
      "op": "PUSH2",
      "value": "0x1AA0"
    },
    "6812": {
      "op": "JUMPI"
    },
    "6813": {
      "op": "DUP3"
    },
    "6814": {
      "op": "DUP4"
    },
    "6815": {
      "op": "REVERT"
    },
    "6816": {
      "op": "JUMPDEST"
    },
    "6817": {
      "op": "DUP2"
    },
    "6818": {
      "op": "DUP5"
    },
    "6819": {
      "op": "ADD"
    },
    "6820": {
      "op": "SWAP2"
    },
    "6821": {
      "op": "POP"
    },
    "6822": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "6825": {
      "op": "DUP1"
    },
    "6826": {
      "op": "DUP4"
    },
    "6827": {
      "op": "DUP8"
    },
    "6828": {
      "op": "SUB"
    },
    "6829": {
      "op": "SLT"
    },
    "6830": {
      "op": "ISZERO"
    },
    "6831": {
      "op": "PUSH2",
      "value": "0x1AB6"
    },
    "6834": {
      "op": "JUMPI"
    },
    "6835": {
      "op": "DUP4"
    },
    "6836": {
      "op": "DUP5"
    },
    "6837": {
      "op": "REVERT"
    },
    "6838": {
      "op": "JUMPDEST"
    },
    "6839": {
      "op": "PUSH2",
      "value": "0x1ABF"
    },
    "6842": {
      "op": "DUP2"
    },
    "6843": {
      "op": "PUSH2",
      "value": "0x221D"
    },
    "6846": {
      "op": "JUMP"
    },
    "6847": {
      "op": "JUMPDEST"
    },
    "6848": {
      "op": "SWAP1"
    },
    "6849": {
      "op": "POP"
    },
    "6850": {
      "op": "PUSH2",
      "value": "0x1ACB"
    },
    "6853": {
      "op": "DUP7"
    },
    "6854": {
      "op": "DUP5"
    },
    "6855": {
      "op": "PUSH2",
      "value": "0x1718"
    },
    "6858": {
      "op": "JUMP"
    },
    "6859": {
      "op": "JUMPDEST"
    },
    "6860": {
      "op": "DUP2"
    },
    "6861": {
      "op": "MSTORE"
    },
    "6862": {
      "op": "PUSH2",
      "value": "0x1ADA"
    },
    "6865": {
      "op": "DUP7"
    },
    "6866": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6868": {
      "op": "DUP6"
    },
    "6869": {
      "op": "ADD"
    },
    "6870": {
      "op": "PUSH2",
      "value": "0x1718"
    },
    "6873": {
      "op": "JUMP"
    },
    "6874": {
      "op": "JUMPDEST"
    },
    "6875": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6877": {
      "op": "DUP3"
    },
    "6878": {
      "op": "ADD"
    },
    "6879": {
      "op": "MSTORE"
    },
    "6880": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6882": {
      "op": "DUP4"
    },
    "6883": {
      "op": "ADD"
    },
    "6884": {
      "op": "MLOAD"
    },
    "6885": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6887": {
      "op": "DUP3"
    },
    "6888": {
      "op": "ADD"
    },
    "6889": {
      "op": "MSTORE"
    },
    "6890": {
      "op": "PUSH2",
      "value": "0x1AF6"
    },
    "6893": {
      "op": "DUP7"
    },
    "6894": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6896": {
      "op": "DUP6"
    },
    "6897": {
      "op": "ADD"
    },
    "6898": {
      "op": "PUSH2",
      "value": "0x1651"
    },
    "6901": {
      "op": "JUMP"
    },
    "6902": {
      "op": "JUMPDEST"
    },
    "6903": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6905": {
      "op": "DUP3"
    },
    "6906": {
      "op": "ADD"
    },
    "6907": {
      "op": "MSTORE"
    },
    "6908": {
      "op": "PUSH2",
      "value": "0x1B08"
    },
    "6911": {
      "op": "DUP7"
    },
    "6912": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6914": {
      "op": "DUP6"
    },
    "6915": {
      "op": "ADD"
    },
    "6916": {
      "op": "PUSH2",
      "value": "0x165C"
    },
    "6919": {
      "op": "JUMP"
    },
    "6920": {
      "op": "JUMPDEST"
    },
    "6921": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6923": {
      "op": "DUP3"
    },
    "6924": {
      "op": "ADD"
    },
    "6925": {
      "op": "MSTORE"
    },
    "6926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6928": {
      "op": "DUP4"
    },
    "6929": {
      "op": "ADD"
    },
    "6930": {
      "op": "MLOAD"
    },
    "6931": {
      "op": "DUP3"
    },
    "6932": {
      "op": "DUP2"
    },
    "6933": {
      "op": "GT"
    },
    "6934": {
      "op": "ISZERO"
    },
    "6935": {
      "op": "PUSH2",
      "value": "0x1B1E"
    },
    "6938": {
      "op": "JUMPI"
    },
    "6939": {
      "op": "DUP5"
    },
    "6940": {
      "op": "DUP6"
    },
    "6941": {
      "op": "REVERT"
    },
    "6942": {
      "op": "JUMPDEST"
    },
    "6943": {
      "op": "PUSH2",
      "value": "0x1B2A"
    },
    "6946": {
      "op": "DUP8"
    },
    "6947": {
      "op": "DUP3"
    },
    "6948": {
      "op": "DUP7"
    },
    "6949": {
      "op": "ADD"
    },
    "6950": {
      "op": "PUSH2",
      "value": "0x16BB"
    },
    "6953": {
      "op": "JUMP"
    },
    "6954": {
      "op": "JUMPDEST"
    },
    "6955": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6957": {
      "op": "DUP4"
    },
    "6958": {
      "op": "ADD"
    },
    "6959": {
      "op": "MSTORE"
    },
    "6960": {
      "op": "POP"
    },
    "6961": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6963": {
      "op": "DUP4"
    },
    "6964": {
      "op": "ADD"
    },
    "6965": {
      "op": "MLOAD"
    },
    "6966": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6968": {
      "op": "DUP3"
    },
    "6969": {
      "op": "ADD"
    },
    "6970": {
      "op": "MSTORE"
    },
    "6971": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6973": {
      "op": "DUP4"
    },
    "6974": {
      "op": "ADD"
    },
    "6975": {
      "op": "MLOAD"
    },
    "6976": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6978": {
      "op": "DUP3"
    },
    "6979": {
      "op": "ADD"
    },
    "6980": {
      "op": "MSTORE"
    },
    "6981": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "6984": {
      "op": "SWAP2"
    },
    "6985": {
      "op": "POP"
    },
    "6986": {
      "op": "DUP2"
    },
    "6987": {
      "op": "DUP4"
    },
    "6988": {
      "op": "ADD"
    },
    "6989": {
      "op": "MLOAD"
    },
    "6990": {
      "op": "DUP3"
    },
    "6991": {
      "op": "DUP3"
    },
    "6992": {
      "op": "ADD"
    },
    "6993": {
      "op": "MSTORE"
    },
    "6994": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "6997": {
      "op": "SWAP2"
    },
    "6998": {
      "op": "POP"
    },
    "6999": {
      "op": "PUSH2",
      "value": "0x1B62"
    },
    "7002": {
      "op": "DUP7"
    },
    "7003": {
      "op": "DUP4"
    },
    "7004": {
      "op": "DUP6"
    },
    "7005": {
      "op": "ADD"
    },
    "7006": {
      "op": "PUSH2",
      "value": "0x1651"
    },
    "7009": {
      "op": "JUMP"
    },
    "7010": {
      "op": "JUMPDEST"
    },
    "7011": {
      "op": "SWAP2"
    },
    "7012": {
      "op": "DUP2"
    },
    "7013": {
      "op": "ADD"
    },
    "7014": {
      "op": "SWAP2"
    },
    "7015": {
      "op": "SWAP1"
    },
    "7016": {
      "op": "SWAP2"
    },
    "7017": {
      "op": "MSTORE"
    },
    "7018": {
      "op": "SWAP5"
    },
    "7019": {
      "op": "SWAP4"
    },
    "7020": {
      "op": "POP"
    },
    "7021": {
      "op": "POP"
    },
    "7022": {
      "op": "POP"
    },
    "7023": {
      "op": "POP"
    },
    "7024": {
      "op": "JUMP"
    },
    "7025": {
      "op": "JUMPDEST"
    },
    "7026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7028": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7030": {
      "op": "DUP3"
    },
    "7031": {
      "op": "DUP5"
    },
    "7032": {
      "op": "SUB"
    },
    "7033": {
      "op": "SLT"
    },
    "7034": {
      "op": "ISZERO"
    },
    "7035": {
      "op": "PUSH2",
      "value": "0x1B82"
    },
    "7038": {
      "op": "JUMPI"
    },
    "7039": {
      "op": "DUP1"
    },
    "7040": {
      "op": "DUP2"
    },
    "7041": {
      "op": "REVERT"
    },
    "7042": {
      "op": "JUMPDEST"
    },
    "7043": {
      "op": "PUSH2",
      "value": "0x1B8C"
    },
    "7046": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7048": {
      "op": "PUSH2",
      "value": "0x221D"
    },
    "7051": {
      "op": "JUMP"
    },
    "7052": {
      "op": "JUMPDEST"
    },
    "7053": {
      "op": "DUP3"
    },
    "7054": {
      "op": "MLOAD"
    },
    "7055": {
      "op": "DUP2"
    },
    "7056": {
      "op": "MSTORE"
    },
    "7057": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7059": {
      "op": "DUP4"
    },
    "7060": {
      "op": "ADD"
    },
    "7061": {
      "op": "MLOAD"
    },
    "7062": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7064": {
      "op": "DUP3"
    },
    "7065": {
      "op": "ADD"
    },
    "7066": {
      "op": "MSTORE"
    },
    "7067": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7069": {
      "op": "DUP4"
    },
    "7070": {
      "op": "ADD"
    },
    "7071": {
      "op": "MLOAD"
    },
    "7072": {
      "op": "PUSH2",
      "value": "0x1BA8"
    },
    "7075": {
      "op": "DUP2"
    },
    "7076": {
      "op": "PUSH2",
      "value": "0x2294"
    },
    "7079": {
      "op": "JUMP"
    },
    "7080": {
      "op": "JUMPDEST"
    },
    "7081": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7083": {
      "op": "DUP3"
    },
    "7084": {
      "op": "ADD"
    },
    "7085": {
      "op": "MSTORE"
    },
    "7086": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7088": {
      "op": "DUP4"
    },
    "7089": {
      "op": "ADD"
    },
    "7090": {
      "op": "MLOAD"
    },
    "7091": {
      "op": "PUSH2",
      "value": "0x1BBB"
    },
    "7094": {
      "op": "DUP2"
    },
    "7095": {
      "op": "PUSH2",
      "value": "0x2294"
    },
    "7098": {
      "op": "JUMP"
    },
    "7099": {
      "op": "JUMPDEST"
    },
    "7100": {
      "op": "DUP1"
    },
    "7101": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7103": {
      "op": "DUP4"
    },
    "7104": {
      "op": "ADD"
    },
    "7105": {
      "op": "MSTORE"
    },
    "7106": {
      "op": "POP"
    },
    "7107": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7109": {
      "op": "DUP4"
    },
    "7110": {
      "op": "ADD"
    },
    "7111": {
      "op": "MLOAD"
    },
    "7112": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7114": {
      "op": "DUP3"
    },
    "7115": {
      "op": "ADD"
    },
    "7116": {
      "op": "MSTORE"
    },
    "7117": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7119": {
      "op": "DUP4"
    },
    "7120": {
      "op": "ADD"
    },
    "7121": {
      "op": "MLOAD"
    },
    "7122": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7124": {
      "op": "DUP3"
    },
    "7125": {
      "op": "ADD"
    },
    "7126": {
      "op": "MSTORE"
    },
    "7127": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7129": {
      "op": "DUP4"
    },
    "7130": {
      "op": "ADD"
    },
    "7131": {
      "op": "MLOAD"
    },
    "7132": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7134": {
      "op": "DUP3"
    },
    "7135": {
      "op": "ADD"
    },
    "7136": {
      "op": "MSTORE"
    },
    "7137": {
      "op": "DUP1"
    },
    "7138": {
      "op": "SWAP2"
    },
    "7139": {
      "op": "POP"
    },
    "7140": {
      "op": "POP"
    },
    "7141": {
      "op": "SWAP3"
    },
    "7142": {
      "op": "SWAP2"
    },
    "7143": {
      "op": "POP"
    },
    "7144": {
      "op": "POP"
    },
    "7145": {
      "op": "JUMP"
    },
    "7146": {
      "op": "JUMPDEST"
    },
    "7147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7149": {
      "op": "DUP1"
    },
    "7150": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7152": {
      "op": "DUP1"
    },
    "7153": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7155": {
      "op": "DUP6"
    },
    "7156": {
      "op": "DUP8"
    },
    "7157": {
      "op": "SUB"
    },
    "7158": {
      "op": "SLT"
    },
    "7159": {
      "op": "ISZERO"
    },
    "7160": {
      "op": "PUSH2",
      "value": "0x1BFF"
    },
    "7163": {
      "op": "JUMPI"
    },
    "7164": {
      "op": "DUP2"
    },
    "7165": {
      "op": "DUP3"
    },
    "7166": {
      "op": "REVERT"
    },
    "7167": {
      "op": "JUMPDEST"
    },
    "7168": {
      "op": "DUP5"
    },
    "7169": {
      "op": "MLOAD"
    },
    "7170": {
      "op": "SWAP4"
    },
    "7171": {
      "op": "POP"
    },
    "7172": {
      "op": "PUSH2",
      "value": "0x1C10"
    },
    "7175": {
      "op": "DUP7"
    },
    "7176": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7178": {
      "op": "DUP8"
    },
    "7179": {
      "op": "ADD"
    },
    "7180": {
      "op": "PUSH2",
      "value": "0x1706"
    },
    "7183": {
      "op": "JUMP"
    },
    "7184": {
      "op": "JUMPDEST"
    },
    "7185": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7187": {
      "op": "DUP7"
    },
    "7188": {
      "op": "ADD"
    },
    "7189": {
      "op": "MLOAD"
    },
    "7190": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7192": {
      "op": "SWAP1"
    },
    "7193": {
      "op": "SWAP7"
    },
    "7194": {
      "op": "ADD"
    },
    "7195": {
      "op": "MLOAD"
    },
    "7196": {
      "op": "SWAP5"
    },
    "7197": {
      "op": "SWAP8"
    },
    "7198": {
      "op": "SWAP1"
    },
    "7199": {
      "op": "SWAP7"
    },
    "7200": {
      "op": "POP"
    },
    "7201": {
      "op": "SWAP3"
    },
    "7202": {
      "op": "POP"
    },
    "7203": {
      "op": "POP"
    },
    "7204": {
      "op": "POP"
    },
    "7205": {
      "op": "JUMP"
    },
    "7206": {
      "op": "JUMPDEST"
    },
    "7207": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7209": {
      "op": "DUP2"
    },
    "7210": {
      "op": "MLOAD"
    },
    "7211": {
      "op": "DUP1"
    },
    "7212": {
      "op": "DUP5"
    },
    "7213": {
      "op": "MSTORE"
    },
    "7214": {
      "op": "PUSH2",
      "value": "0x1C3E"
    },
    "7217": {
      "op": "DUP2"
    },
    "7218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7220": {
      "op": "DUP7"
    },
    "7221": {
      "op": "ADD"
    },
    "7222": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7224": {
      "op": "DUP7"
    },
    "7225": {
      "op": "ADD"
    },
    "7226": {
      "op": "PUSH2",
      "value": "0x2268"
    },
    "7229": {
      "op": "JUMP"
    },
    "7230": {
      "op": "JUMPDEST"
    },
    "7231": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7233": {
      "op": "ADD"
    },
    "7234": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7236": {
      "op": "NOT"
    },
    "7237": {
      "op": "AND"
    },
    "7238": {
      "op": "SWAP3"
    },
    "7239": {
      "op": "SWAP1"
    },
    "7240": {
      "op": "SWAP3"
    },
    "7241": {
      "op": "ADD"
    },
    "7242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7244": {
      "op": "ADD"
    },
    "7245": {
      "op": "SWAP3"
    },
    "7246": {
      "op": "SWAP2"
    },
    "7247": {
      "op": "POP"
    },
    "7248": {
      "op": "POP"
    },
    "7249": {
      "op": "JUMP"
    },
    "7250": {
      "op": "JUMPDEST"
    },
    "7251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7255": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7257": {
      "op": "SHL"
    },
    "7258": {
      "op": "SUB"
    },
    "7259": {
      "op": "SWAP2"
    },
    "7260": {
      "op": "SWAP1"
    },
    "7261": {
      "op": "SWAP2"
    },
    "7262": {
      "op": "AND"
    },
    "7263": {
      "op": "DUP2"
    },
    "7264": {
      "op": "MSTORE"
    },
    "7265": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7267": {
      "op": "ADD"
    },
    "7268": {
      "op": "SWAP1"
    },
    "7269": {
      "op": "JUMP"
    },
    "7270": {
      "op": "JUMPDEST"
    },
    "7271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7273": {
      "op": "DUP2"
    },
    "7274": {
      "op": "ADD"
    },
    "7275": {
      "op": "DUP2"
    },
    "7276": {
      "op": "DUP4"
    },
    "7277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7279": {
      "op": "JUMPDEST"
    },
    "7280": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "7282": {
      "op": "DUP2"
    },
    "7283": {
      "op": "LT"
    },
    "7284": {
      "op": "ISZERO"
    },
    "7285": {
      "op": "PUSH2",
      "value": "0x1C8E"
    },
    "7288": {
      "op": "JUMPI"
    },
    "7289": {
      "op": "DUP2"
    },
    "7290": {
      "op": "MLOAD"
    },
    "7291": {
      "op": "DUP4"
    },
    "7292": {
      "op": "MSTORE"
    },
    "7293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7295": {
      "op": "SWAP3"
    },
    "7296": {
      "op": "DUP4"
    },
    "7297": {
      "op": "ADD"
    },
    "7298": {
      "op": "SWAP3"
    },
    "7299": {
      "op": "SWAP1"
    },
    "7300": {
      "op": "SWAP2"
    },
    "7301": {
      "op": "ADD"
    },
    "7302": {
      "op": "SWAP1"
    },
    "7303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7305": {
      "op": "ADD"
    },
    "7306": {
      "op": "PUSH2",
      "value": "0x1C6F"
    },
    "7309": {
      "op": "JUMP"
    },
    "7310": {
      "op": "JUMPDEST"
    },
    "7311": {
      "op": "POP"
    },
    "7312": {
      "op": "POP"
    },
    "7313": {
      "op": "POP"
    },
    "7314": {
      "op": "SWAP3"
    },
    "7315": {
      "op": "SWAP2"
    },
    "7316": {
      "op": "POP"
    },
    "7317": {
      "op": "POP"
    },
    "7318": {
      "op": "JUMP"
    },
    "7319": {
      "op": "JUMPDEST"
    },
    "7320": {
      "op": "SWAP1"
    },
    "7321": {
      "op": "ISZERO"
    },
    "7322": {
      "op": "ISZERO"
    },
    "7323": {
      "op": "DUP2"
    },
    "7324": {
      "op": "MSTORE"
    },
    "7325": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7327": {
      "op": "ADD"
    },
    "7328": {
      "op": "SWAP1"
    },
    "7329": {
      "op": "JUMP"
    },
    "7330": {
      "op": "JUMPDEST"
    },
    "7331": {
      "op": "SWAP1"
    },
    "7332": {
      "op": "DUP2"
    },
    "7333": {
      "op": "MSTORE"
    },
    "7334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7336": {
      "op": "ADD"
    },
    "7337": {
      "op": "SWAP1"
    },
    "7338": {
      "op": "JUMP"
    },
    "7339": {
      "op": "JUMPDEST"
    },
    "7340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7344": {
      "op": "DUP3"
    },
    "7345": {
      "op": "MSTORE"
    },
    "7346": {
      "op": "DUP3"
    },
    "7347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7349": {
      "op": "DUP4"
    },
    "7350": {
      "op": "ADD"
    },
    "7351": {
      "op": "MSTORE"
    },
    "7352": {
      "op": "DUP3"
    },
    "7353": {
      "op": "DUP5"
    },
    "7354": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7356": {
      "op": "DUP5"
    },
    "7357": {
      "op": "ADD"
    },
    "7358": {
      "op": "CALLDATACOPY"
    },
    "7359": {
      "op": "DUP2"
    },
    "7360": {
      "op": "DUP4"
    },
    "7361": {
      "op": "ADD"
    },
    "7362": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7364": {
      "op": "SWAP1"
    },
    "7365": {
      "op": "DUP2"
    },
    "7366": {
      "op": "ADD"
    },
    "7367": {
      "op": "SWAP2"
    },
    "7368": {
      "op": "SWAP1"
    },
    "7369": {
      "op": "SWAP2"
    },
    "7370": {
      "op": "MSTORE"
    },
    "7371": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7373": {
      "op": "SWAP1"
    },
    "7374": {
      "op": "SWAP3"
    },
    "7375": {
      "op": "ADD"
    },
    "7376": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7378": {
      "op": "NOT"
    },
    "7379": {
      "op": "AND"
    },
    "7380": {
      "op": "ADD"
    },
    "7381": {
      "op": "ADD"
    },
    "7382": {
      "op": "SWAP2"
    },
    "7383": {
      "op": "SWAP1"
    },
    "7384": {
      "op": "POP"
    },
    "7385": {
      "op": "JUMP"
    },
    "7386": {
      "op": "JUMPDEST"
    },
    "7387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7389": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7391": {
      "op": "DUP3"
    },
    "7392": {
      "op": "MSTORE"
    },
    "7393": {
      "op": "PUSH2",
      "value": "0xB0B"
    },
    "7396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7398": {
      "op": "DUP4"
    },
    "7399": {
      "op": "ADD"
    },
    "7400": {
      "op": "DUP5"
    },
    "7401": {
      "op": "PUSH2",
      "value": "0x1C26"
    },
    "7404": {
      "op": "JUMP"
    },
    "7405": {
      "op": "JUMPDEST"
    },
    "7406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7412": {
      "op": "SHL"
    },
    "7413": {
      "op": "SUB"
    },
    "7414": {
      "op": "DUP5"
    },
    "7415": {
      "op": "AND"
    },
    "7416": {
      "op": "DUP2"
    },
    "7417": {
      "op": "MSTORE"
    },
    "7418": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7422": {
      "op": "DUP3"
    },
    "7423": {
      "op": "ADD"
    },
    "7424": {
      "op": "DUP2"
    },
    "7425": {
      "op": "SWAP1"
    },
    "7426": {
      "op": "MSTORE"
    },
    "7427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7429": {
      "op": "SWAP1"
    },
    "7430": {
      "op": "PUSH2",
      "value": "0x1D11"
    },
    "7433": {
      "op": "SWAP1"
    },
    "7434": {
      "op": "DUP4"
    },
    "7435": {
      "op": "ADD"
    },
    "7436": {
      "op": "DUP6"
    },
    "7437": {
      "op": "PUSH2",
      "value": "0x1C26"
    },
    "7440": {
      "op": "JUMP"
    },
    "7441": {
      "op": "JUMPDEST"
    },
    "7442": {
      "op": "DUP3"
    },
    "7443": {
      "op": "DUP2"
    },
    "7444": {
      "op": "SUB"
    },
    "7445": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7447": {
      "op": "DUP5"
    },
    "7448": {
      "op": "ADD"
    },
    "7449": {
      "op": "MSTORE"
    },
    "7450": {
      "op": "PUSH2",
      "value": "0x1D23"
    },
    "7453": {
      "op": "DUP2"
    },
    "7454": {
      "op": "DUP6"
    },
    "7455": {
      "op": "PUSH2",
      "value": "0x1C26"
    },
    "7458": {
      "op": "JUMP"
    },
    "7459": {
      "op": "JUMPDEST"
    },
    "7460": {
      "op": "SWAP7"
    },
    "7461": {
      "op": "SWAP6"
    },
    "7462": {
      "op": "POP"
    },
    "7463": {
      "op": "POP"
    },
    "7464": {
      "op": "POP"
    },
    "7465": {
      "op": "POP"
    },
    "7466": {
      "op": "POP"
    },
    "7467": {
      "op": "POP"
    },
    "7468": {
      "op": "JUMP"
    },
    "7469": {
      "op": "JUMPDEST"
    },
    "7470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7474": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7476": {
      "op": "SHL"
    },
    "7477": {
      "op": "SUB"
    },
    "7478": {
      "op": "DUP5"
    },
    "7479": {
      "op": "AND"
    },
    "7480": {
      "op": "DUP2"
    },
    "7481": {
      "op": "MSTORE"
    },
    "7482": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7484": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7486": {
      "op": "DUP3"
    },
    "7487": {
      "op": "ADD"
    },
    "7488": {
      "op": "DUP2"
    },
    "7489": {
      "op": "SWAP1"
    },
    "7490": {
      "op": "MSTORE"
    },
    "7491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7493": {
      "op": "SWAP1"
    },
    "7494": {
      "op": "PUSH2",
      "value": "0x1D51"
    },
    "7497": {
      "op": "SWAP1"
    },
    "7498": {
      "op": "DUP4"
    },
    "7499": {
      "op": "ADD"
    },
    "7500": {
      "op": "DUP6"
    },
    "7501": {
      "op": "PUSH2",
      "value": "0x1C26"
    },
    "7504": {
      "op": "JUMP"
    },
    "7505": {
      "op": "JUMPDEST"
    },
    "7506": {
      "op": "DUP3"
    },
    "7507": {
      "op": "DUP2"
    },
    "7508": {
      "op": "SUB"
    },
    "7509": {
      "op": "DUP1"
    },
    "7510": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7512": {
      "op": "DUP6"
    },
    "7513": {
      "op": "ADD"
    },
    "7514": {
      "op": "MSTORE"
    },
    "7515": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "7517": {
      "op": "DUP3"
    },
    "7518": {
      "op": "MSTORE"
    },
    "7519": {
      "op": "PUSH2",
      "value": "0x60F"
    },
    "7522": {
      "op": "PUSH1",
      "value": "0xF3"
    },
    "7524": {
      "op": "SHL"
    },
    "7525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7527": {
      "op": "DUP4"
    },
    "7528": {
      "op": "ADD"
    },
    "7529": {
      "op": "MSTORE"
    },
    "7530": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7532": {
      "op": "DUP2"
    },
    "7533": {
      "op": "ADD"
    },
    "7534": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7536": {
      "op": "DUP6"
    },
    "7537": {
      "op": "ADD"
    },
    "7538": {
      "op": "MSTORE"
    },
    "7539": {
      "op": "POP"
    },
    "7540": {
      "op": "PUSH2",
      "value": "0x1D23"
    },
    "7543": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7545": {
      "op": "DUP3"
    },
    "7546": {
      "op": "ADD"
    },
    "7547": {
      "op": "DUP6"
    },
    "7548": {
      "op": "PUSH2",
      "value": "0x1C26"
    },
    "7551": {
      "op": "JUMP"
    },
    "7552": {
      "op": "JUMPDEST"
    },
    "7553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7559": {
      "op": "SHL"
    },
    "7560": {
      "op": "SUB"
    },
    "7561": {
      "op": "SWAP3"
    },
    "7562": {
      "op": "DUP4"
    },
    "7563": {
      "op": "AND"
    },
    "7564": {
      "op": "DUP2"
    },
    "7565": {
      "op": "MSTORE"
    },
    "7566": {
      "op": "SWAP2"
    },
    "7567": {
      "op": "AND"
    },
    "7568": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7570": {
      "op": "DUP3"
    },
    "7571": {
      "op": "ADD"
    },
    "7572": {
      "op": "MSTORE"
    },
    "7573": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7575": {
      "op": "ADD"
    },
    "7576": {
      "op": "SWAP1"
    },
    "7577": {
      "op": "JUMP"
    },
    "7578": {
      "op": "JUMPDEST"
    },
    "7579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7583": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7585": {
      "op": "SHL"
    },
    "7586": {
      "op": "SUB"
    },
    "7587": {
      "op": "SWAP4"
    },
    "7588": {
      "op": "DUP5"
    },
    "7589": {
      "op": "AND"
    },
    "7590": {
      "op": "DUP2"
    },
    "7591": {
      "op": "MSTORE"
    },
    "7592": {
      "op": "SWAP2"
    },
    "7593": {
      "op": "DUP4"
    },
    "7594": {
      "op": "AND"
    },
    "7595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7597": {
      "op": "DUP4"
    },
    "7598": {
      "op": "ADD"
    },
    "7599": {
      "op": "MSTORE"
    },
    "7600": {
      "op": "SWAP1"
    },
    "7601": {
      "op": "SWAP2"
    },
    "7602": {
      "op": "AND"
    },
    "7603": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7605": {
      "op": "DUP3"
    },
    "7606": {
      "op": "ADD"
    },
    "7607": {
      "op": "MSTORE"
    },
    "7608": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7610": {
      "op": "ADD"
    },
    "7611": {
      "op": "SWAP1"
    },
    "7612": {
      "op": "JUMP"
    },
    "7613": {
      "op": "JUMPDEST"
    },
    "7614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7620": {
      "op": "SHL"
    },
    "7621": {
      "op": "SUB"
    },
    "7622": {
      "op": "DUP6"
    },
    "7623": {
      "op": "DUP2"
    },
    "7624": {
      "op": "AND"
    },
    "7625": {
      "op": "DUP3"
    },
    "7626": {
      "op": "MSTORE"
    },
    "7627": {
      "op": "DUP5"
    },
    "7628": {
      "op": "DUP2"
    },
    "7629": {
      "op": "AND"
    },
    "7630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7632": {
      "op": "DUP4"
    },
    "7633": {
      "op": "ADD"
    },
    "7634": {
      "op": "MSTORE"
    },
    "7635": {
      "op": "DUP4"
    },
    "7636": {
      "op": "AND"
    },
    "7637": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7639": {
      "op": "DUP3"
    },
    "7640": {
      "op": "ADD"
    },
    "7641": {
      "op": "MSTORE"
    },
    "7642": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7644": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7646": {
      "op": "DUP3"
    },
    "7647": {
      "op": "ADD"
    },
    "7648": {
      "op": "DUP2"
    },
    "7649": {
      "op": "SWAP1"
    },
    "7650": {
      "op": "MSTORE"
    },
    "7651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7653": {
      "op": "SWAP1"
    },
    "7654": {
      "op": "PUSH2",
      "value": "0x1D23"
    },
    "7657": {
      "op": "SWAP1"
    },
    "7658": {
      "op": "DUP4"
    },
    "7659": {
      "op": "ADD"
    },
    "7660": {
      "op": "DUP5"
    },
    "7661": {
      "op": "PUSH2",
      "value": "0x1C26"
    },
    "7664": {
      "op": "JUMP"
    },
    "7665": {
      "op": "JUMPDEST"
    },
    "7666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7670": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7672": {
      "op": "SHL"
    },
    "7673": {
      "op": "SUB"
    },
    "7674": {
      "op": "DUP6"
    },
    "7675": {
      "op": "DUP2"
    },
    "7676": {
      "op": "AND"
    },
    "7677": {
      "op": "DUP3"
    },
    "7678": {
      "op": "MSTORE"
    },
    "7679": {
      "op": "DUP5"
    },
    "7680": {
      "op": "AND"
    },
    "7681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7683": {
      "op": "DUP3"
    },
    "7684": {
      "op": "ADD"
    },
    "7685": {
      "op": "MSTORE"
    },
    "7686": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "7688": {
      "op": "DUP4"
    },
    "7689": {
      "op": "SWAP1"
    },
    "7690": {
      "op": "SIGNEXTEND"
    },
    "7691": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7693": {
      "op": "DUP3"
    },
    "7694": {
      "op": "ADD"
    },
    "7695": {
      "op": "MSTORE"
    },
    "7696": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7698": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7700": {
      "op": "DUP3"
    },
    "7701": {
      "op": "ADD"
    },
    "7702": {
      "op": "DUP2"
    },
    "7703": {
      "op": "SWAP1"
    },
    "7704": {
      "op": "MSTORE"
    },
    "7705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7707": {
      "op": "SWAP1"
    },
    "7708": {
      "op": "PUSH2",
      "value": "0x1D23"
    },
    "7711": {
      "op": "SWAP1"
    },
    "7712": {
      "op": "DUP4"
    },
    "7713": {
      "op": "ADD"
    },
    "7714": {
      "op": "DUP5"
    },
    "7715": {
      "op": "PUSH2",
      "value": "0x1C26"
    },
    "7718": {
      "op": "JUMP"
    },
    "7719": {
      "op": "JUMPDEST"
    },
    "7720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7724": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7726": {
      "op": "SHL"
    },
    "7727": {
      "op": "SUB"
    },
    "7728": {
      "op": "DUP6"
    },
    "7729": {
      "op": "DUP2"
    },
    "7730": {
      "op": "AND"
    },
    "7731": {
      "op": "DUP3"
    },
    "7732": {
      "op": "MSTORE"
    },
    "7733": {
      "op": "DUP5"
    },
    "7734": {
      "op": "AND"
    },
    "7735": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7737": {
      "op": "DUP3"
    },
    "7738": {
      "op": "ADD"
    },
    "7739": {
      "op": "MSTORE"
    },
    "7740": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7742": {
      "op": "DUP2"
    },
    "7743": {
      "op": "ADD"
    },
    "7744": {
      "op": "DUP4"
    },
    "7745": {
      "op": "SWAP1"
    },
    "7746": {
      "op": "MSTORE"
    },
    "7747": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7749": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7751": {
      "op": "DUP3"
    },
    "7752": {
      "op": "ADD"
    },
    "7753": {
      "op": "DUP2"
    },
    "7754": {
      "op": "SWAP1"
    },
    "7755": {
      "op": "MSTORE"
    },
    "7756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7758": {
      "op": "SWAP1"
    },
    "7759": {
      "op": "PUSH2",
      "value": "0x1D23"
    },
    "7762": {
      "op": "SWAP1"
    },
    "7763": {
      "op": "DUP4"
    },
    "7764": {
      "op": "ADD"
    },
    "7765": {
      "op": "DUP5"
    },
    "7766": {
      "op": "PUSH2",
      "value": "0x1C26"
    },
    "7769": {
      "op": "JUMP"
    },
    "7770": {
      "op": "JUMPDEST"
    },
    "7771": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7773": {
      "op": "DUP1"
    },
    "7774": {
      "op": "DUP3"
    },
    "7775": {
      "op": "MSTORE"
    },
    "7776": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7778": {
      "op": "SWAP1"
    },
    "7779": {
      "op": "DUP3"
    },
    "7780": {
      "op": "ADD"
    },
    "7781": {
      "op": "MSTORE"
    },
    "7782": {
      "op": "PUSH32",
      "value": "0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E"
    },
    "7815": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7817": {
      "op": "DUP3"
    },
    "7818": {
      "op": "ADD"
    },
    "7819": {
      "op": "MSTORE"
    },
    "7820": {
      "op": "PUSH2",
      "value": "0x6473"
    },
    "7823": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7825": {
      "op": "SHL"
    },
    "7826": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7828": {
      "op": "DUP3"
    },
    "7829": {
      "op": "ADD"
    },
    "7830": {
      "op": "MSTORE"
    },
    "7831": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7833": {
      "op": "ADD"
    },
    "7834": {
      "op": "SWAP1"
    },
    "7835": {
      "op": "JUMP"
    },
    "7836": {
      "op": "JUMPDEST"
    },
    "7837": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7839": {
      "op": "DUP1"
    },
    "7840": {
      "op": "DUP3"
    },
    "7841": {
      "op": "MSTORE"
    },
    "7842": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "7844": {
      "op": "SWAP1"
    },
    "7845": {
      "op": "DUP3"
    },
    "7846": {
      "op": "ADD"
    },
    "7847": {
      "op": "MSTORE"
    },
    "7848": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E"
    },
    "7881": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7883": {
      "op": "DUP3"
    },
    "7884": {
      "op": "ADD"
    },
    "7885": {
      "op": "MSTORE"
    },
    "7886": {
      "op": "PUSH15",
      "value": "0x818591B5A5B881D1BC819DC985B9D"
    },
    "7902": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "7904": {
      "op": "SHL"
    },
    "7905": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7907": {
      "op": "DUP3"
    },
    "7908": {
      "op": "ADD"
    },
    "7909": {
      "op": "MSTORE"
    },
    "7910": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7912": {
      "op": "ADD"
    },
    "7913": {
      "op": "SWAP1"
    },
    "7914": {
      "op": "JUMP"
    },
    "7915": {
      "op": "JUMPDEST"
    },
    "7916": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7918": {
      "op": "DUP1"
    },
    "7919": {
      "op": "DUP3"
    },
    "7920": {
      "op": "MSTORE"
    },
    "7921": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "7923": {
      "op": "SWAP1"
    },
    "7924": {
      "op": "DUP3"
    },
    "7925": {
      "op": "ADD"
    },
    "7926": {
      "op": "MSTORE"
    },
    "7927": {
      "op": "PUSH32",
      "value": "0x5265646972656374416C6C3A206F6E6C7920434641763120737570706F727465"
    },
    "7960": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7962": {
      "op": "DUP3"
    },
    "7963": {
      "op": "ADD"
    },
    "7964": {
      "op": "MSTORE"
    },
    "7965": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "7967": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "7969": {
      "op": "SHL"
    },
    "7970": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7972": {
      "op": "DUP3"
    },
    "7973": {
      "op": "ADD"
    },
    "7974": {
      "op": "MSTORE"
    },
    "7975": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7977": {
      "op": "ADD"
    },
    "7978": {
      "op": "SWAP1"
    },
    "7979": {
      "op": "JUMP"
    },
    "7980": {
      "op": "JUMPDEST"
    },
    "7981": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7983": {
      "op": "DUP1"
    },
    "7984": {
      "op": "DUP3"
    },
    "7985": {
      "op": "MSTORE"
    },
    "7986": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7988": {
      "op": "SWAP1"
    },
    "7989": {
      "op": "DUP3"
    },
    "7990": {
      "op": "ADD"
    },
    "7991": {
      "op": "MSTORE"
    },
    "7992": {
      "op": "PUSH32",
      "value": "0x5265646972656374416C6C3A206E6F7420616363657074656420746F6B656E00"
    },
    "8025": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8027": {
      "op": "DUP3"
    },
    "8028": {
      "op": "ADD"
    },
    "8029": {
      "op": "MSTORE"
    },
    "8030": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8032": {
      "op": "ADD"
    },
    "8033": {
      "op": "SWAP1"
    },
    "8034": {
      "op": "JUMP"
    },
    "8035": {
      "op": "JUMPDEST"
    },
    "8036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8038": {
      "op": "DUP1"
    },
    "8039": {
      "op": "DUP3"
    },
    "8040": {
      "op": "MSTORE"
    },
    "8041": {
      "op": "PUSH1",
      "value": "0x33"
    },
    "8043": {
      "op": "SWAP1"
    },
    "8044": {
      "op": "DUP3"
    },
    "8045": {
      "op": "ADD"
    },
    "8046": {
      "op": "MSTORE"
    },
    "8047": {
      "op": "PUSH32",
      "value": "0x556E737570706F727465642063616C6C6261636B202D20204265666F72652041"
    },
    "8080": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8082": {
      "op": "DUP3"
    },
    "8083": {
      "op": "ADD"
    },
    "8084": {
      "op": "MSTORE"
    },
    "8085": {
      "op": "PUSH19",
      "value": "0x19DC99595B595B9D0815195C9B5A5B985D1959"
    },
    "8105": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "8107": {
      "op": "SHL"
    },
    "8108": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8110": {
      "op": "DUP3"
    },
    "8111": {
      "op": "ADD"
    },
    "8112": {
      "op": "MSTORE"
    },
    "8113": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8115": {
      "op": "ADD"
    },
    "8116": {
      "op": "SWAP1"
    },
    "8117": {
      "op": "JUMP"
    },
    "8118": {
      "op": "JUMPDEST"
    },
    "8119": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8121": {
      "op": "DUP1"
    },
    "8122": {
      "op": "DUP3"
    },
    "8123": {
      "op": "MSTORE"
    },
    "8124": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "8126": {
      "op": "SWAP1"
    },
    "8127": {
      "op": "DUP3"
    },
    "8128": {
      "op": "ADD"
    },
    "8129": {
      "op": "MSTORE"
    },
    "8130": {
      "op": "PUSH32",
      "value": "0x5265646972656374416C6C3A20737570706F7274206F6E6C79206F6E6520686F"
    },
    "8163": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8165": {
      "op": "DUP3"
    },
    "8166": {
      "op": "ADD"
    },
    "8167": {
      "op": "MSTORE"
    },
    "8168": {
      "op": "PUSH2",
      "value": "0x1CDD"
    },
    "8171": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "8173": {
      "op": "SHL"
    },
    "8174": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8176": {
      "op": "DUP3"
    },
    "8177": {
      "op": "ADD"
    },
    "8178": {
      "op": "MSTORE"
    },
    "8179": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8181": {
      "op": "ADD"
    },
    "8182": {
      "op": "SWAP1"
    },
    "8183": {
      "op": "JUMP"
    },
    "8184": {
      "op": "JUMPDEST"
    },
    "8185": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8187": {
      "op": "DUP1"
    },
    "8188": {
      "op": "DUP3"
    },
    "8189": {
      "op": "MSTORE"
    },
    "8190": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "8192": {
      "op": "SWAP1"
    },
    "8193": {
      "op": "DUP3"
    },
    "8194": {
      "op": "ADD"
    },
    "8195": {
      "op": "MSTORE"
    },
    "8196": {
      "op": "PUSH32",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "8229": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8231": {
      "op": "DUP3"
    },
    "8232": {
      "op": "ADD"
    },
    "8233": {
      "op": "MSTORE"
    },
    "8234": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8236": {
      "op": "ADD"
    },
    "8237": {
      "op": "SWAP1"
    },
    "8238": {
      "op": "JUMP"
    },
    "8239": {
      "op": "JUMPDEST"
    },
    "8240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8242": {
      "op": "DUP1"
    },
    "8243": {
      "op": "DUP3"
    },
    "8244": {
      "op": "MSTORE"
    },
    "8245": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "8247": {
      "op": "SWAP1"
    },
    "8248": {
      "op": "DUP3"
    },
    "8249": {
      "op": "ADD"
    },
    "8250": {
      "op": "MSTORE"
    },
    "8251": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E"
    },
    "8284": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8286": {
      "op": "DUP3"
    },
    "8287": {
      "op": "ADD"
    },
    "8288": {
      "op": "MSTORE"
    },
    "8289": {
      "op": "PUSH16",
      "value": "0x2061646D696E20746F207265766F6B65"
    },
    "8306": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8308": {
      "op": "SHL"
    },
    "8309": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8311": {
      "op": "DUP3"
    },
    "8312": {
      "op": "ADD"
    },
    "8313": {
      "op": "MSTORE"
    },
    "8314": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8316": {
      "op": "ADD"
    },
    "8317": {
      "op": "SWAP1"
    },
    "8318": {
      "op": "JUMP"
    },
    "8319": {
      "op": "JUMPDEST"
    },
    "8320": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8322": {
      "op": "DUP1"
    },
    "8323": {
      "op": "DUP3"
    },
    "8324": {
      "op": "MSTORE"
    },
    "8325": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8327": {
      "op": "SWAP1"
    },
    "8328": {
      "op": "DUP3"
    },
    "8329": {
      "op": "ADD"
    },
    "8330": {
      "op": "MSTORE"
    },
    "8331": {
      "op": "PUSH32",
      "value": "0x6F72646572206E6F7420666574636865642C206A6F6220696420697373756500"
    },
    "8364": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8366": {
      "op": "DUP3"
    },
    "8367": {
      "op": "ADD"
    },
    "8368": {
      "op": "MSTORE"
    },
    "8369": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8371": {
      "op": "ADD"
    },
    "8372": {
      "op": "SWAP1"
    },
    "8373": {
      "op": "JUMP"
    },
    "8374": {
      "op": "JUMPDEST"
    },
    "8375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8377": {
      "op": "DUP1"
    },
    "8378": {
      "op": "DUP3"
    },
    "8379": {
      "op": "MSTORE"
    },
    "8380": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "8382": {
      "op": "SWAP1"
    },
    "8383": {
      "op": "DUP3"
    },
    "8384": {
      "op": "ADD"
    },
    "8385": {
      "op": "MSTORE"
    },
    "8386": {
      "op": "PUSH32",
      "value": "0x556E737570706F727465642063616C6C6261636B202D204265666F7265204167"
    },
    "8419": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8421": {
      "op": "DUP3"
    },
    "8422": {
      "op": "ADD"
    },
    "8423": {
      "op": "MSTORE"
    },
    "8424": {
      "op": "PUSH15",
      "value": "0x1C99595B595B9D081D5C19185D1959"
    },
    "8440": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "8442": {
      "op": "SHL"
    },
    "8443": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8445": {
      "op": "DUP3"
    },
    "8446": {
      "op": "ADD"
    },
    "8447": {
      "op": "MSTORE"
    },
    "8448": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8450": {
      "op": "ADD"
    },
    "8451": {
      "op": "SWAP1"
    },
    "8452": {
      "op": "JUMP"
    },
    "8453": {
      "op": "JUMPDEST"
    },
    "8454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8456": {
      "op": "DUP1"
    },
    "8457": {
      "op": "DUP3"
    },
    "8458": {
      "op": "MSTORE"
    },
    "8459": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "8461": {
      "op": "SWAP1"
    },
    "8462": {
      "op": "DUP3"
    },
    "8463": {
      "op": "ADD"
    },
    "8464": {
      "op": "MSTORE"
    },
    "8465": {
      "op": "PUSH22",
      "value": "0x21B0B63632B91034B9903737BA1030B71030B236B4B7"
    },
    "8488": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "8490": {
      "op": "SHL"
    },
    "8491": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8493": {
      "op": "DUP3"
    },
    "8494": {
      "op": "ADD"
    },
    "8495": {
      "op": "MSTORE"
    },
    "8496": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8498": {
      "op": "ADD"
    },
    "8499": {
      "op": "SWAP1"
    },
    "8500": {
      "op": "JUMP"
    },
    "8501": {
      "op": "JUMPDEST"
    },
    "8502": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8504": {
      "op": "DUP1"
    },
    "8505": {
      "op": "DUP3"
    },
    "8506": {
      "op": "MSTORE"
    },
    "8507": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "8509": {
      "op": "SWAP1"
    },
    "8510": {
      "op": "DUP3"
    },
    "8511": {
      "op": "ADD"
    },
    "8512": {
      "op": "MSTORE"
    },
    "8513": {
      "op": "PUSH32",
      "value": "0x556E737570706F727465642063616C6C6261636B202D204265666F7265204167"
    },
    "8546": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8548": {
      "op": "DUP3"
    },
    "8549": {
      "op": "ADD"
    },
    "8550": {
      "op": "MSTORE"
    },
    "8551": {
      "op": "PUSH15",
      "value": "0x1C99595B595B9D0810DC99585D1959"
    },
    "8567": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "8569": {
      "op": "SHL"
    },
    "8570": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8572": {
      "op": "DUP3"
    },
    "8573": {
      "op": "ADD"
    },
    "8574": {
      "op": "MSTORE"
    },
    "8575": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8577": {
      "op": "ADD"
    },
    "8578": {
      "op": "SWAP1"
    },
    "8579": {
      "op": "JUMP"
    },
    "8580": {
      "op": "JUMPDEST"
    },
    "8581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8583": {
      "op": "DUP1"
    },
    "8584": {
      "op": "DUP3"
    },
    "8585": {
      "op": "MSTORE"
    },
    "8586": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "8588": {
      "op": "SWAP1"
    },
    "8589": {
      "op": "DUP3"
    },
    "8590": {
      "op": "ADD"
    },
    "8591": {
      "op": "MSTORE"
    },
    "8592": {
      "op": "PUSH14",
      "value": "0x139BDD08185D5D1A1BDC9A5E9959"
    },
    "8607": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "8609": {
      "op": "SHL"
    },
    "8610": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8612": {
      "op": "DUP3"
    },
    "8613": {
      "op": "ADD"
    },
    "8614": {
      "op": "MSTORE"
    },
    "8615": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8617": {
      "op": "ADD"
    },
    "8618": {
      "op": "SWAP1"
    },
    "8619": {
      "op": "JUMP"
    },
    "8620": {
      "op": "JUMPDEST"
    },
    "8621": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8623": {
      "op": "DUP1"
    },
    "8624": {
      "op": "DUP3"
    },
    "8625": {
      "op": "MSTORE"
    },
    "8626": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "8628": {
      "op": "SWAP1"
    },
    "8629": {
      "op": "DUP3"
    },
    "8630": {
      "op": "ADD"
    },
    "8631": {
      "op": "MSTORE"
    },
    "8632": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
    },
    "8665": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8667": {
      "op": "DUP3"
    },
    "8668": {
      "op": "ADD"
    },
    "8669": {
      "op": "MSTORE"
    },
    "8670": {
      "op": "PUSH15",
      "value": "0x103937B632B9903337B91039B2B633"
    },
    "8686": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "8688": {
      "op": "SHL"
    },
    "8689": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8691": {
      "op": "DUP3"
    },
    "8692": {
      "op": "ADD"
    },
    "8693": {
      "op": "MSTORE"
    },
    "8694": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8696": {
      "op": "ADD"
    },
    "8697": {
      "op": "SWAP1"
    },
    "8698": {
      "op": "JUMP"
    },
    "8699": {
      "op": "JUMPDEST"
    },
    "8700": {
      "op": "SWAP3"
    },
    "8701": {
      "op": "DUP4"
    },
    "8702": {
      "op": "MSTORE"
    },
    "8703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8709": {
      "op": "SHL"
    },
    "8710": {
      "op": "SUB"
    },
    "8711": {
      "op": "SWAP2"
    },
    "8712": {
      "op": "SWAP1"
    },
    "8713": {
      "op": "SWAP2"
    },
    "8714": {
      "op": "AND"
    },
    "8715": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8717": {
      "op": "DUP4"
    },
    "8718": {
      "op": "ADD"
    },
    "8719": {
      "op": "MSTORE"
    },
    "8720": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "8722": {
      "op": "SIGNEXTEND"
    },
    "8723": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8725": {
      "op": "DUP3"
    },
    "8726": {
      "op": "ADD"
    },
    "8727": {
      "op": "MSTORE"
    },
    "8728": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8730": {
      "op": "ADD"
    },
    "8731": {
      "op": "SWAP1"
    },
    "8732": {
      "op": "JUMP"
    },
    "8733": {
      "op": "JUMPDEST"
    },
    "8734": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8736": {
      "op": "MLOAD"
    },
    "8737": {
      "op": "DUP2"
    },
    "8738": {
      "op": "DUP2"
    },
    "8739": {
      "op": "ADD"
    },
    "8740": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8749": {
      "op": "DUP2"
    },
    "8750": {
      "op": "GT"
    },
    "8751": {
      "op": "DUP3"
    },
    "8752": {
      "op": "DUP3"
    },
    "8753": {
      "op": "LT"
    },
    "8754": {
      "op": "OR"
    },
    "8755": {
      "op": "ISZERO"
    },
    "8756": {
      "op": "PUSH2",
      "value": "0x223C"
    },
    "8759": {
      "op": "JUMPI"
    },
    "8760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8762": {
      "op": "DUP1"
    },
    "8763": {
      "op": "REVERT"
    },
    "8764": {
      "op": "JUMPDEST"
    },
    "8765": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8767": {
      "op": "MSTORE"
    },
    "8768": {
      "op": "SWAP2"
    },
    "8769": {
      "op": "SWAP1"
    },
    "8770": {
      "op": "POP"
    },
    "8771": {
      "op": "JUMP"
    },
    "8772": {
      "op": "JUMPDEST"
    },
    "8773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8775": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8784": {
      "op": "DUP3"
    },
    "8785": {
      "op": "GT"
    },
    "8786": {
      "op": "ISZERO"
    },
    "8787": {
      "op": "PUSH2",
      "value": "0x225A"
    },
    "8790": {
      "op": "JUMPI"
    },
    "8791": {
      "op": "DUP1"
    },
    "8792": {
      "op": "DUP2"
    },
    "8793": {
      "op": "REVERT"
    },
    "8794": {
      "op": "JUMPDEST"
    },
    "8795": {
      "op": "POP"
    },
    "8796": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8798": {
      "op": "ADD"
    },
    "8799": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8801": {
      "op": "NOT"
    },
    "8802": {
      "op": "AND"
    },
    "8803": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8805": {
      "op": "ADD"
    },
    "8806": {
      "op": "SWAP1"
    },
    "8807": {
      "op": "JUMP"
    },
    "8808": {
      "op": "JUMPDEST"
    },
    "8809": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8811": {
      "op": "JUMPDEST"
    },
    "8812": {
      "op": "DUP4"
    },
    "8813": {
      "op": "DUP2"
    },
    "8814": {
      "op": "LT"
    },
    "8815": {
      "op": "ISZERO"
    },
    "8816": {
      "op": "PUSH2",
      "value": "0x2283"
    },
    "8819": {
      "op": "JUMPI"
    },
    "8820": {
      "op": "DUP2"
    },
    "8821": {
      "op": "DUP2"
    },
    "8822": {
      "op": "ADD"
    },
    "8823": {
      "op": "MLOAD"
    },
    "8824": {
      "op": "DUP4"
    },
    "8825": {
      "op": "DUP3"
    },
    "8826": {
      "op": "ADD"
    },
    "8827": {
      "op": "MSTORE"
    },
    "8828": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8830": {
      "op": "ADD"
    },
    "8831": {
      "op": "PUSH2",
      "value": "0x226B"
    },
    "8834": {
      "op": "JUMP"
    },
    "8835": {
      "op": "JUMPDEST"
    },
    "8836": {
      "op": "DUP4"
    },
    "8837": {
      "op": "DUP2"
    },
    "8838": {
      "op": "GT"
    },
    "8839": {
      "op": "ISZERO"
    },
    "8840": {
      "op": "PUSH2",
      "value": "0xD75"
    },
    "8843": {
      "op": "JUMPI"
    },
    "8844": {
      "op": "POP"
    },
    "8845": {
      "op": "POP"
    },
    "8846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8848": {
      "op": "SWAP2"
    },
    "8849": {
      "op": "ADD"
    },
    "8850": {
      "op": "MSTORE"
    },
    "8851": {
      "op": "JUMP"
    },
    "8852": {
      "op": "JUMPDEST"
    },
    "8853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8857": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8859": {
      "op": "SHL"
    },
    "8860": {
      "op": "SUB"
    },
    "8861": {
      "op": "DUP2"
    },
    "8862": {
      "op": "AND"
    },
    "8863": {
      "op": "DUP2"
    },
    "8864": {
      "op": "EQ"
    },
    "8865": {
      "op": "PUSH2",
      "value": "0x22A9"
    },
    "8868": {
      "op": "JUMPI"
    },
    "8869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8871": {
      "op": "DUP1"
    },
    "8872": {
      "op": "REVERT"
    },
    "8873": {
      "op": "JUMPDEST"
    },
    "8874": {
      "op": "POP"
    },
    "8875": {
      "op": "JUMP"
    }
  },
  "sha1": "e389e44dc93983c81aec6824c0a7f3f1f435e035",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.6;\npragma experimental ABIEncoderV2;\n\nimport {\n    ISuperfluid,\n    ISuperToken,\n    ISuperApp,\n    ISuperAgreement,\n    SuperAppDefinitions\n} from \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\";//\"@superfluid-finance/ethereum-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\";\n\nimport {\n    IConstantFlowAgreementV1\n} from \"@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\";\n\nimport {\n    SuperAppBase\n} from \"@superfluid-finance/ethereum-contracts/contracts/apps/SuperAppBase.sol\";\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"./TennerrEscrow.sol\";\nimport \"./TennerrFactory.sol\";\n\ncontract TennerrStreamer is SuperAppBase, AccessControl {\n    using SafeMath for uint;\n\n    ISuperfluid private _host; // host\n    IConstantFlowAgreementV1 private _cfa; // the stored constant flow agreement class address\n    ISuperToken private _acceptedToken; // accepted token\n    address private _receiver; // escrow\n\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n    // address of the tennerr factory\n    address payable private _tennerrFactoryContractAddress;\n    // tennerr contract\n    TennerrFactory public tennerrFactory;\n    // initiialize escrow\n    TennerrEscrow public tennerrEscrow;\n    address payable private _tennerrEscrowContractAddress;\n    // address of the tennerr contract\n    address payable private _tennerrContractAddress;\n    // tennerr contract\n    Tennerr public tennerr;\n\n\n    mapping(bytes32 => uint[]) public streamByJobId;\n\n    struct Order {\n        uint orderId;\n        uint sellerId;\n        address buyer;\n        address seller;\n        bytes32 jobId;\n        uint orderPrice;\n        uint absDeadline;\n    }\n\n\n    constructor(\n        ISuperfluid host,\n        IConstantFlowAgreementV1 cfa,\n        ISuperToken acceptedToken,\n        address receiver) {\n        require(address(host) != address(0), \"host is zero address\");\n        require(address(cfa) != address(0), \"cfa is zero address\");\n        require(address(acceptedToken) != address(0), \"acceptedToken is zero address\");\n        require(address(receiver) != address(0), \"receiver is zero address\");\n        require(!host.isApp(ISuperApp(receiver)), \"receiver is an app\");\n        // give admin role to deployer\n        _setupRole(ADMIN_ROLE, msg.sender);\n        _host = host;\n        _cfa = cfa;\n        _acceptedToken = acceptedToken;\n        _receiver = receiver;\n\n        uint256 configWord =\n            SuperAppDefinitions.APP_LEVEL_FINAL |\n            SuperAppDefinitions.BEFORE_AGREEMENT_CREATED_NOOP |\n            SuperAppDefinitions.BEFORE_AGREEMENT_UPDATED_NOOP |\n            SuperAppDefinitions.BEFORE_AGREEMENT_TERMINATED_NOOP;\n\n        /* _host.registerAppWithKey(configWord, \"0x756f6154ee853e3dfb570b618e185b3ba4652ccfd78df06eb57e16cf1f0656fc\"); */\n        _host.registerApp(configWord);\n\n    }\n\n\n    /**************************************************************************\n     * Redirect Logic\n     *************************************************************************/\n\n    function currentReceiver()\n        external view\n        returns (\n            uint256 startTime,\n            address receiver,\n            int96 flowRate\n        )\n    {\n        if (_receiver != address(0)) {\n            (startTime, flowRate,,) = _cfa.getFlow(_acceptedToken, address(this), _receiver);\n            receiver = _receiver;\n        }\n    }\n\n    event ReceiverChanged(address receiver);\n\n    /// @dev If a new stream is opened, or an existing one is opened\n    function _updateOutflow(bytes calldata ctx, bytes memory userData)\n        private\n        returns (bytes memory newCtx)\n    {\n\n      newCtx = ctx;\n      // @dev This will give me the new flowRate, as it is called in after callbacks\n      int96 netFlowRate = _cfa.getNetFlow(_acceptedToken, address(this));\n      (,int96 outFlowRate,,) = _cfa.getFlow(_acceptedToken, address(this), _receiver); // CHECK: unclear what happens if flow doesn't exist.\n      int96 inFlowRate = netFlowRate + outFlowRate;\n\n      /* use userData to update internal accounting */\n      /* _accountingCache(userData); */\n\n      // @dev If inFlowRate === 0, then delete existing flow.\n      if (inFlowRate == int96(0)) {\n        // @dev if inFlowRate is zero, delete outflow.\n          (newCtx, ) = _host.callAgreementWithContext(\n              _cfa,\n              abi.encodeWithSelector(\n                  _cfa.deleteFlow.selector,\n                  _acceptedToken,\n                  address(this),\n                  _receiver,\n                  new bytes(0) // placeholder\n              ),\n              \"0x\",\n              newCtx\n          );\n        } else if (outFlowRate != int96(0)){\n        (newCtx, ) = _host.callAgreementWithContext(\n            _cfa,\n            abi.encodeWithSelector(\n                _cfa.updateFlow.selector,\n                _acceptedToken,\n                _receiver,\n                inFlowRate,\n                new bytes(0) // placeholder\n            ),\n            \"0x\",\n            newCtx\n        );\n      } else {\n      // @dev If there is no existing outflow, then create new flow to equal inflow\n          (newCtx, ) = _host.callAgreementWithContext(\n              _cfa,\n              abi.encodeWithSelector(\n                  _cfa.createFlow.selector,\n                  _acceptedToken,\n                  _receiver,\n                  inFlowRate,\n                  new bytes(0) // placeholder\n              ),\n              \"0x\",\n              newCtx\n          );\n      }\n    }\n\n    function accountingCache(bytes32 jobId, uint flowRate) public {\n        require(msg.sender == _tennerrEscrowContractAddress, 'Not authorized');\n        TennerrEscrow.Order memory order = tennerrEscrow.getQuoteData(jobId);\n        address buyer = order.buyer;\n        address seller = order.seller;\n        uint amount = order.orderPrice;\n        require(amount > 0, 'order not fetched, job id issue');\n        uint streamStart = block.timestamp;\n        uint deadline = order.absDeadline;\n        _updateStreamData(jobId,buyer, seller, amount, streamStart, deadline, flowRate);\n    }\n\n    function _updateStreamData(\n      bytes32 jobId,\n      address buyer,\n      address seller,\n      uint amount,\n      uint streamStart,\n      uint deadline,\n      uint flowRate) internal {\n        // @dev This will give me the new flowRate, as it is called in after callbacks\n        // int96 netFlowRate = _cfa.getNetFlow(_acceptedToken, address(this));\n        // (,int96 outFlowRate,,) = _cfa.getFlow(_acceptedToken, address(this), _receiver); // CHECK: unclear what happens if flow doesn't exist.\n        // uint inFlowRate = uint(netFlowRate + outFlowRate);\n\n        uint timeLeft = deadline.sub(block.timestamp);\n        uint timePassed = (block.timestamp).sub(streamStart);\n        uint streamedToDate = flowRate * timePassed;\n        /* token streaming, streamedToDate, totalToStream, timeLeft */\n        streamByJobId[jobId] = [flowRate, streamedToDate, amount, streamStart, timeLeft, deadline];\n    }\n\n    function getStreamData(\n      bytes32 jobId)\n      public view returns  (uint[5] memory) {\n        uint totalToStream = streamByJobId[jobId][2];\n        uint deadline = streamByJobId[jobId][5];\n        uint streamStart = streamByJobId[jobId][3];\n        uint flowRate = streamByJobId[jobId][0];\n\n        uint timeLeft = deadline.sub(block.timestamp);\n        /* streamByJobId[jobId].timeLeft = timeLeft; */\n        uint timePassed = (block.timestamp).sub(streamStart);\n        uint streamedToDate = flowRate * timePassed;\n        /* streamByJobId[jobId].streamedToDate = streamedToDate; */\n        /* token streaming, streamedToDate, totalToStream, timeLeft */\n        return [flowRate, streamedToDate, totalToStream, timeLeft, deadline];\n    }\n\n    // @dev Change the Receiver of the total flow\n    function _changeReceiver( address newReceiver ) internal {\n        require(newReceiver != address(0), \"New receiver is zero address\");\n        // @dev because our app is registered as final, we can't take downstream apps\n        require(!_host.isApp(ISuperApp(newReceiver)), \"New receiver can not be a superApp\");\n        if (newReceiver == _receiver) return ;\n        // @dev delete flow to old receiver\n        (,int96 outFlowRate,,) = _cfa.getFlow(_acceptedToken, address(this), _receiver); //CHECK: unclear what happens if flow doesn't exist.\n        if(outFlowRate > 0){\n          _host.callAgreement(\n              _cfa,\n              abi.encodeWithSelector(\n                  _cfa.deleteFlow.selector,\n                  _acceptedToken,\n                  address(this),\n                  _receiver,\n                  new bytes(0)\n              ),\n              \"0x\"\n          );\n          // @dev create flow to new receiver\n          _host.callAgreement(\n              _cfa,\n              abi.encodeWithSelector(\n                  _cfa.createFlow.selector,\n                  _acceptedToken,\n                  newReceiver,\n                  _cfa.getNetFlow(_acceptedToken, address(this)),\n                  new bytes(0)\n              ),\n              \"0x\"\n          );\n        }\n        // @dev set global receiver to new receiver\n        _receiver = newReceiver;\n\n        emit ReceiverChanged(_receiver);\n    }\n\n    /**************************************************************************\n     * SuperApp callbacks\n     *************************************************************************/\n\n    function afterAgreementCreated(\n        ISuperToken _superToken,\n        address _agreementClass,\n        bytes32, // _agreementId,\n        bytes calldata /*_agreementData*/,\n        bytes calldata ,// _cbdata,\n        bytes calldata _ctx\n    )\n        external override\n        onlyExpected(_superToken, _agreementClass)\n        onlyHost\n        returns (bytes memory newCtx)\n    {\n        bytes memory userData = abi.decode(_host.decodeCtx(_ctx).userData, (bytes));\n        return _updateOutflow(_ctx, userData);\n    }\n\n    function afterAgreementUpdated(\n        ISuperToken _superToken,\n        address _agreementClass,\n        bytes32 ,//_agreementId,\n        bytes calldata agreementData,\n        bytes calldata ,//_cbdata,\n        bytes calldata _ctx\n    )\n        external override\n        onlyExpected(_superToken, _agreementClass)\n        onlyHost\n        returns (bytes memory newCtx)\n    {\n        bytes memory userData = abi.decode(_host.decodeCtx(_ctx).userData, (bytes));\n        return _updateOutflow(_ctx, userData );\n    }\n\n    function afterAgreementTerminated(\n        ISuperToken _superToken,\n        address _agreementClass,\n        bytes32 ,//_agreementId,\n        bytes calldata /*_agreementData*/,\n        bytes calldata ,//_cbdata,\n        bytes calldata _ctx\n    )\n        external override\n        onlyHost\n        returns (bytes memory newCtx)\n    {\n        // According to the app basic law, we should never revert in a termination callback\n        bytes memory userData = abi.decode(_host.decodeCtx(_ctx).userData, (bytes));\n        if (!_isSameToken(_superToken) || !_isCFAv1(_agreementClass)) return _ctx;\n        return _updateOutflow(_ctx, userData);\n    }\n\n    function createFlow(address newReceiver, uint flowRate, bytes memory jobId) external {\n        require(msg.sender == _tennerrContractAddress, 'Not authorized');\n        _host.callAgreement(\n                _cfa,\n                abi.encodeWithSelector(\n                    _cfa.createFlow.selector,\n                    _acceptedToken,\n                    newReceiver,\n                    flowRate,\n                    new bytes(0)\n                ),\n                jobId //userData: bytes\n        );\n    }\n\n    function _isSameToken(ISuperToken superToken) private view returns (bool) {\n        return address(superToken) == address(_acceptedToken);\n    }\n\n    function _isCFAv1(address agreementClass) private view returns (bool) {\n        return ISuperAgreement(agreementClass).agreementType()\n            == keccak256(\"org.superfluid-finance.agreements.ConstantFlowAgreement.v1\");\n    }\n\n    function setTennerr(address payable newContract) external {\n            require(hasRole(ADMIN_ROLE, msg.sender), \"Caller is not an admin\");\n            _tennerrContractAddress = newContract;\n            tennerr = Tennerr(_tennerrContractAddress);\n    }\n\n    function setTennerrEscrow(address payable newContract) external {\n        require(hasRole(ADMIN_ROLE, msg.sender), \"Caller is not an admin\");\n        _tennerrEscrowContractAddress = newContract;\n        tennerrEscrow = TennerrEscrow(_tennerrEscrowContractAddress);\n    }\n\n    modifier onlyHost() {\n        require(msg.sender == address(_host), \"RedirectAll: support only one host\");\n        _;\n    }\n\n    modifier onlyExpected(ISuperToken superToken, address agreementClass) {\n        require(_isSameToken(superToken), \"RedirectAll: not accepted token\");\n        require(_isCFAv1(agreementClass), \"RedirectAll: only CFAv1 supported\");\n        _;\n    }\n\n    receive() external payable {}\n\n}\n",
  "sourceMap": "789:12338:44:-:0;;;1863:1154;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2019:27:44;;2011:60;;;;-1:-1:-1;;;2011:60:44;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;2089:26:44;;2081:58;;;;-1:-1:-1;;;2081:58:44;;;;;;;:::i;:::-;-1:-1:-1;;;;;2157:36:44;;2149:78;;;;-1:-1:-1;;;2149:78:44;;;;;;;:::i;:::-;-1:-1:-1;;;;;2245:31:44;;2237:68;;;;-1:-1:-1;;;2237:68:44;;;;;;;:::i;:::-;2324:31;;-1:-1:-1;;;2324:31:44;;-1:-1:-1;;;;;2324:10:44;;;;;:31;;2345:8;;2324:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2323:32;2315:63;;;;-1:-1:-1;;;2315:63:44;;;;;;;:::i;:::-;2427:34;1152:23;2450:10;2427;:34::i;:::-;2471:5;:12;;-1:-1:-1;;;;;;2471:12:44;;;-1:-1:-1;;;;;2471:12:44;;;;;;;;;;;2493:4;:10;;;;;;;;;;2513:14;:30;;;;;;;;;;2553:9;:20;;;;;;;;;;;2980:29;;-1:-1:-1;;;2980:29:44;;2617:230;;2980:5;;;;:17;;:29;;2617:230;;2980:29;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1863:1154;;;;;789:12338;;6588:110:0;6666:25;6677:4;6683:7;6666:10;:25::i;:::-;6588:110;;:::o;7025:184::-;7098:6;:12;;;;;;;;;;;:33;;7123:7;;7098:24;;;;;:33;;:::i;:::-;7094:109;;;7179:12;:10;:12::i;:::-;-1:-1:-1;;;;;7152:40:0;7170:7;-1:-1:-1;;;;;7152:40:0;7164:4;7152:40;;;;;;;;;;7025:184;;:::o;6429:150:12:-;6499:4;6522:50;6527:3;-1:-1:-1;;;;;6547:23:12;;6522:4;:50::i;:::-;6515:57;;6429:150;;;;;:::o;598:104:10:-;685:10;598:104;:::o;1640:404:12:-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:12;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:12;2015:12;;3805:127;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;852:257:-1:-;;964:2;952:9;943:7;939:23;935:32;932:2;;;-1:-1;;970:12;932:2;227:6;221:13;7942:5;6836:13;6829:21;7920:5;7917:32;7907:2;;-1:-1;;7953:12;7907:2;1022:71;926:183;-1:-1;;;926:183::o;1116:820::-;;;;;1356:3;1344:9;1335:7;1331:23;1327:33;1324:2;;;-1:-1;;1363:12;1324:2;775:6;769:13;787:53;834:5;787:53;:::i;:::-;1546:2;1629:22;;392:13;1415:94;;-1:-1;410:66;392:13;410:66;:::i;:::-;1698:2;1769:22;;587:13;1554:107;;-1:-1;605:54;587:13;605:54;:::i;:::-;1838:2;1888:22;;83:13;1706:95;;-1:-1;101:33;83:13;101:33;:::i;:::-;1318:618;;;;-1:-1;1318:618;;-1:-1;;1318:618::o;3889:260::-;-1:-1;;;;;7292:54;;;;2033:69;;4035:2;4020:18;;4006:143::o;4156:416::-;4356:2;4370:47;;;2339:2;4341:18;;;6604:19;2375:31;6644:14;;;2355:52;2426:12;;;4327:245::o;4579:416::-;4779:2;4793:47;;;2677:2;4764:18;;;6604:19;2713:26;6644:14;;;2693:47;2759:12;;;4750:245::o;5002:416::-;5202:2;5216:47;;;3010:2;5187:18;;;6604:19;3046:21;6644:14;;;3026:42;3087:12;;;5173:245::o;5425:416::-;5625:2;5639:47;;;3338:2;5610:18;;;6604:19;3374:22;6644:14;;;3354:43;3416:12;;;5596:245::o;5848:416::-;6048:2;6062:47;;;3667:2;6033:18;;;6604:19;-1:-1;;;6644:14;;;3683:41;3743:12;;;6019:245::o;6271:222::-;3840:37;;;6398:2;6383:18;;6369:124::o;7737:117::-;-1:-1;;;;;7292:54;;7796:35;;7786:2;;7845:1;;7835:12;7786:2;7780:74;:::o;:::-;789:12338:44;;;;;;",
  "sourcePath": "contracts/TennerrStreamer.sol",
  "type": "contract"
}