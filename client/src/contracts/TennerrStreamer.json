{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluid",
          "name": "host",
          "type": "address"
        },
        {
          "internalType": "contract IConstantFlowAgreementV1",
          "name": "cfa",
          "type": "address"
        },
        {
          "internalType": "contract ISuperToken",
          "name": "acceptedToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ReceiverChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "_superToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_agreementClass",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_ctx",
          "type": "bytes"
        }
      ],
      "name": "afterAgreementCreated",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "_superToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_agreementClass",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_ctx",
          "type": "bytes"
        }
      ],
      "name": "afterAgreementTerminated",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "_superToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_agreementClass",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "agreementData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_ctx",
          "type": "bytes"
        }
      ],
      "name": "afterAgreementUpdated",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "beforeAgreementCreated",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "beforeAgreementTerminated",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "beforeAgreementUpdated",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newReceiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "flowRate",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "jobId",
          "type": "bytes"
        }
      ],
      "name": "createFlow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentReceiver",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "int96",
          "name": "flowRate",
          "type": "int96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "jobId",
          "type": "bytes32"
        }
      ],
      "name": "getStreamData",
      "outputs": [
        {
          "internalType": "uint256[5]",
          "name": "",
          "type": "uint256[5]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "setTennerrEscrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "streamByJobId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tennerrEscrow",
      "outputs": [
        {
          "internalType": "contract TennerrEscrow",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tennerrFactory",
      "outputs": [
        {
          "internalType": "contract TennerrFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/AccessControl.sol",
    "1": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/Ownable.sol",
    "10": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol",
    "11": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Counters.sol",
    "12": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/EnumerableSet.sol",
    "13": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/ReentrancyGuard.sol",
    "14": "/Users/vince/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/Chainlink.sol",
    "15": "/Users/vince/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/ChainlinkClient.sol",
    "16": "/Users/vince/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/VRFConsumerBase.sol",
    "17": "/Users/vince/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/VRFRequestIDBase.sol",
    "18": "/Users/vince/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/ChainlinkRequestInterface.sol",
    "19": "/Users/vince/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/ENSInterface.sol",
    "2": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "20": "/Users/vince/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/LinkTokenInterface.sol",
    "21": "/Users/vince/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/PointerInterface.sol",
    "22": "/Users/vince/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/vendor/BufferChainlink.sol",
    "23": "/Users/vince/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/vendor/CBORChainlink.sol",
    "24": "/Users/vince/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/vendor/ENSResolver.sol",
    "25": "/Users/vince/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
    "26": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/apps/SuperAppBase.sol",
    "27": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
    "29": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
    "30": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
    "31": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
    "32": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
    "33": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
    "34": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
    "35": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
    "36": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
    "37": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
    "38": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
    "39": "contracts/Tennerr.sol",
    "4": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/ERC20.sol",
    "40": "contracts/TennerrController.sol",
    "41": "contracts/TennerrDAO.sol",
    "42": "contracts/TennerrEscrow.sol",
    "43": "contracts/TennerrFactory.sol",
    "44": "contracts/TennerrStreamer.sol",
    "46": "interfaces/IAToken.sol",
    "47": "interfaces/ILendingPool.sol",
    "48": "interfaces/ILendingPoolAddressesProvider.sol",
    "49": "interfaces/IProtocolDataProvider.sol",
    "5": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/ERC20Burnable.sol",
    "50": "interfaces/IScaledBalanceToken.sol",
    "6": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
    "7": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
    "8": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC777/IERC777.sol",
    "9": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/TennerrStreamer.sol",
    "exportedSymbols": {
      "TennerrStreamer": [
        3527
      ]
    },
    "id": 3528,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2517,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:44"
      },
      {
        "id": 2518,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "57:33:44"
      },
      {
        "absolutePath": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
        "file": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
        "id": 2524,
        "nodeType": "ImportDirective",
        "scope": 3528,
        "sourceUnit": 7708,
        "src": "92:199:44",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2519,
              "name": "ISuperfluid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "105:11:44",
              "typeDescriptions": {}
            }
          },
          {
            "foreign": {
              "id": 2520,
              "name": "ISuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "122:11:44",
              "typeDescriptions": {}
            }
          },
          {
            "foreign": {
              "id": 2521,
              "name": "ISuperApp",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "139:9:44",
              "typeDescriptions": {}
            }
          },
          {
            "foreign": {
              "id": 2522,
              "name": "ISuperAgreement",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "154:15:44",
              "typeDescriptions": {}
            }
          },
          {
            "foreign": {
              "id": 2523,
              "name": "SuperAppDefinitions",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "175:19:44",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
        "file": "@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
        "id": 2526,
        "nodeType": "ImportDirective",
        "scope": 3528,
        "sourceUnit": 7299,
        "src": "411:147:44",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2525,
              "name": "IConstantFlowAgreementV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "424:24:44",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/vince/.brownie/packages/superfluid-finance/superfluid@1.0.0/ethereum-contracts/contracts/apps/SuperAppBase.sol",
        "file": "@superfluid-finance/ethereum-contracts/contracts/apps/SuperAppBase.sol",
        "id": 2528,
        "nodeType": "ImportDirective",
        "scope": 3528,
        "sourceUnit": 7138,
        "src": "560:106:44",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2527,
              "name": "SuperAppBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "573:12:44",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/vince/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 2529,
        "nodeType": "ImportDirective",
        "scope": 3528,
        "sourceUnit": 4353,
        "src": "668:58:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/TennerrEscrow.sol",
        "file": "./TennerrEscrow.sol",
        "id": 2530,
        "nodeType": "ImportDirective",
        "scope": 3528,
        "sourceUnit": 2276,
        "src": "727:29:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/TennerrFactory.sol",
        "file": "./TennerrFactory.sol",
        "id": 2531,
        "nodeType": "ImportDirective",
        "scope": 3528,
        "sourceUnit": 2516,
        "src": "757:30:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2532,
              "name": "SuperAppBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7137,
              "src": "817:12:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SuperAppBase_$7137",
                "typeString": "contract SuperAppBase"
              }
            },
            "id": 2533,
            "nodeType": "InheritanceSpecifier",
            "src": "817:12:44"
          },
          {
            "baseName": {
              "id": 2534,
              "name": "AccessControl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4352,
              "src": "831:13:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControl_$4352",
                "typeString": "contract AccessControl"
              }
            },
            "id": 2535,
            "nodeType": "InheritanceSpecifier",
            "src": "831:13:44"
          }
        ],
        "contractDependencies": [
          4352,
          7137,
          8357,
          10587
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3527,
        "linearizedBaseContracts": [
          3527,
          4352,
          8357,
          7137,
          10587
        ],
        "name": "TennerrStreamer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2538,
            "libraryName": {
              "id": 2536,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6308,
              "src": "857:8:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$6308",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "851:24:44",
            "typeName": {
              "id": 2537,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "870:4:44",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 2540,
            "mutability": "mutable",
            "name": "_host",
            "nodeType": "VariableDeclaration",
            "scope": 3527,
            "src": "881:25:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISuperfluid_$7707",
              "typeString": "contract ISuperfluid"
            },
            "typeName": {
              "id": 2539,
              "name": "ISuperfluid",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7707,
              "src": "881:11:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISuperfluid_$7707",
                "typeString": "contract ISuperfluid"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2542,
            "mutability": "mutable",
            "name": "_cfa",
            "nodeType": "VariableDeclaration",
            "scope": 3527,
            "src": "920:37:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
              "typeString": "contract IConstantFlowAgreementV1"
            },
            "typeName": {
              "id": 2541,
              "name": "IConstantFlowAgreementV1",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7298,
              "src": "920:24:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                "typeString": "contract IConstantFlowAgreementV1"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2544,
            "mutability": "mutable",
            "name": "_acceptedToken",
            "nodeType": "VariableDeclaration",
            "scope": 3527,
            "src": "1015:34:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISuperToken_$10940",
              "typeString": "contract ISuperToken"
            },
            "typeName": {
              "id": 2543,
              "name": "ISuperToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10940,
              "src": "1015:11:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISuperToken_$10940",
                "typeString": "contract ISuperToken"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2546,
            "mutability": "mutable",
            "name": "_receiver",
            "nodeType": "VariableDeclaration",
            "scope": 3527,
            "src": "1073:25:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2545,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1073:7:44",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "functionSelector": "75b238fc",
            "id": 2551,
            "mutability": "constant",
            "name": "ADMIN_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 3527,
            "src": "1115:60:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2547,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1115:7:44",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "41444d494e5f524f4c45",
                  "id": 2549,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1162:12:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
                    "typeString": "literal_string \"ADMIN_ROLE\""
                  },
                  "value": "ADMIN_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
                    "typeString": "literal_string \"ADMIN_ROLE\""
                  }
                ],
                "id": 2548,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1152:9:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 2550,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1152:23:44",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5bd7fa11",
            "id": 2553,
            "mutability": "mutable",
            "name": "tennerrEscrow",
            "nodeType": "VariableDeclaration",
            "scope": 3527,
            "src": "1208:34:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TennerrEscrow_$2275",
              "typeString": "contract TennerrEscrow"
            },
            "typeName": {
              "id": 2552,
              "name": "TennerrEscrow",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2275,
              "src": "1208:13:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TennerrEscrow_$2275",
                "typeString": "contract TennerrEscrow"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2555,
            "mutability": "mutable",
            "name": "_tennerrEscrowContractAddress",
            "nodeType": "VariableDeclaration",
            "scope": 3527,
            "src": "1248:53:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2554,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1248:15:44",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2557,
            "mutability": "mutable",
            "name": "_tennerrFactoryContractAddress",
            "nodeType": "VariableDeclaration",
            "scope": 3527,
            "src": "1346:54:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2556,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1346:15:44",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "4dbb40b2",
            "id": 2559,
            "mutability": "mutable",
            "name": "tennerrFactory",
            "nodeType": "VariableDeclaration",
            "scope": 3527,
            "src": "1430:36:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TennerrFactory_$2515",
              "typeString": "contract TennerrFactory"
            },
            "typeName": {
              "id": 2558,
              "name": "TennerrFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2515,
              "src": "1430:14:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TennerrFactory_$2515",
                "typeString": "contract TennerrFactory"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9883145e",
            "id": 2564,
            "mutability": "mutable",
            "name": "streamByJobId",
            "nodeType": "VariableDeclaration",
            "scope": 3527,
            "src": "1473:47:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(bytes32 => uint256[])"
            },
            "typeName": {
              "id": 2563,
              "keyType": {
                "id": 2560,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1481:7:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1473:26:44",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(bytes32 => uint256[])"
              },
              "valueType": {
                "baseType": {
                  "id": 2561,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1492:4:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 2562,
                "nodeType": "ArrayTypeName",
                "src": "1492:6:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "TennerrStreamer.Order",
            "id": 2579,
            "members": [
              {
                "constant": false,
                "id": 2566,
                "mutability": "mutable",
                "name": "orderId",
                "nodeType": "VariableDeclaration",
                "scope": 2579,
                "src": "1550:12:44",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2565,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1550:4:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2568,
                "mutability": "mutable",
                "name": "sellerId",
                "nodeType": "VariableDeclaration",
                "scope": 2579,
                "src": "1572:13:44",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2567,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1572:4:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2570,
                "mutability": "mutable",
                "name": "buyer",
                "nodeType": "VariableDeclaration",
                "scope": 2579,
                "src": "1595:13:44",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2569,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1595:7:44",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2572,
                "mutability": "mutable",
                "name": "seller",
                "nodeType": "VariableDeclaration",
                "scope": 2579,
                "src": "1618:14:44",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2571,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1618:7:44",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2574,
                "mutability": "mutable",
                "name": "jobId",
                "nodeType": "VariableDeclaration",
                "scope": 2579,
                "src": "1642:13:44",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 2573,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1642:7:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2576,
                "mutability": "mutable",
                "name": "orderPrice",
                "nodeType": "VariableDeclaration",
                "scope": 2579,
                "src": "1665:15:44",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2575,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1665:4:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2578,
                "mutability": "mutable",
                "name": "absDeadline",
                "nodeType": "VariableDeclaration",
                "scope": 2579,
                "src": "1690:16:44",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2577,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1690:4:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Order",
            "nodeType": "StructDefinition",
            "scope": 3527,
            "src": "1527:186:44",
            "visibility": "public"
          },
          {
            "body": {
              "id": 2689,
              "nodeType": "Block",
              "src": "1858:934:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2593,
                              "name": "host",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2581,
                              "src": "1884:4:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$7707",
                                "typeString": "contract ISuperfluid"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISuperfluid_$7707",
                                "typeString": "contract ISuperfluid"
                              }
                            ],
                            "id": 2592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1876:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2591,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1876:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1876:13:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1901:1:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1893:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2595,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1893:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1893:10:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1876:27:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "686f7374206973207a65726f2061646472657373",
                        "id": 2600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1905:22:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80e06bf054277e2d4b253e6927ab4cac8be70151656513c151c7f4838b6b3677",
                          "typeString": "literal_string \"host is zero address\""
                        },
                        "value": "host is zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80e06bf054277e2d4b253e6927ab4cac8be70151656513c151c7f4838b6b3677",
                          "typeString": "literal_string \"host is zero address\""
                        }
                      ],
                      "id": 2590,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1868:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1868:60:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2602,
                  "nodeType": "ExpressionStatement",
                  "src": "1868:60:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2606,
                              "name": "cfa",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2583,
                              "src": "1954:3:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                                "typeString": "contract IConstantFlowAgreementV1"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                                "typeString": "contract IConstantFlowAgreementV1"
                              }
                            ],
                            "id": 2605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1946:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2604,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1946:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1946:12:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1970:1:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1962:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2608,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1962:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1962:10:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1946:26:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636661206973207a65726f2061646472657373",
                        "id": 2613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1974:21:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d4b50fc668d687c5cc907b462c44b4c8a23b7f3826bfd26a395b722ec9a90f7",
                          "typeString": "literal_string \"cfa is zero address\""
                        },
                        "value": "cfa is zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d4b50fc668d687c5cc907b462c44b4c8a23b7f3826bfd26a395b722ec9a90f7",
                          "typeString": "literal_string \"cfa is zero address\""
                        }
                      ],
                      "id": 2603,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1938:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1938:58:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2615,
                  "nodeType": "ExpressionStatement",
                  "src": "1938:58:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2619,
                              "name": "acceptedToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2585,
                              "src": "2022:13:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$10940",
                                "typeString": "contract ISuperToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISuperToken_$10940",
                                "typeString": "contract ISuperToken"
                              }
                            ],
                            "id": 2618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2014:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2617,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2014:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2014:22:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2048:1:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2040:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2621,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2040:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2040:10:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2014:36:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6163636570746564546f6b656e206973207a65726f2061646472657373",
                        "id": 2626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2052:31:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ade05230f2953998795d971c0c3820fa539d457c22b1898a9f8048cbce5300c",
                          "typeString": "literal_string \"acceptedToken is zero address\""
                        },
                        "value": "acceptedToken is zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1ade05230f2953998795d971c0c3820fa539d457c22b1898a9f8048cbce5300c",
                          "typeString": "literal_string \"acceptedToken is zero address\""
                        }
                      ],
                      "id": 2616,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2006:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2006:78:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2628,
                  "nodeType": "ExpressionStatement",
                  "src": "2006:78:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2632,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2587,
                              "src": "2110:8:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2102:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2630,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2102:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2102:17:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2131:1:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2123:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2634,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2123:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2123:10:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2102:31:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7265636569766572206973207a65726f2061646472657373",
                        "id": 2639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2135:26:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a9ce44342bbbe45d5250bf845152ecba3ae82fdcad042cbe1ad23246cbfaa65",
                          "typeString": "literal_string \"receiver is zero address\""
                        },
                        "value": "receiver is zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a9ce44342bbbe45d5250bf845152ecba3ae82fdcad042cbe1ad23246cbfaa65",
                          "typeString": "literal_string \"receiver is zero address\""
                        }
                      ],
                      "id": 2629,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2094:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2094:68:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2641,
                  "nodeType": "ExpressionStatement",
                  "src": "2094:68:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2180:32:44",
                        "subExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2646,
                                  "name": "receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2587,
                                  "src": "2202:8:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2645,
                                "name": "ISuperApp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10587,
                                "src": "2192:9:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISuperApp_$10587_$",
                                  "typeString": "type(contract ISuperApp)"
                                }
                              },
                              "id": 2647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2192:19:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperApp_$10587",
                                "typeString": "contract ISuperApp"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISuperApp_$10587",
                                "typeString": "contract ISuperApp"
                              }
                            ],
                            "expression": {
                              "id": 2643,
                              "name": "host",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2581,
                              "src": "2181:4:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$7707",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 2644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isApp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7488,
                            "src": "2181:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_contract$_ISuperApp_$10587_$returns$_t_bool_$",
                              "typeString": "function (contract ISuperApp) view external returns (bool)"
                            }
                          },
                          "id": 2648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2181:31:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "726563656976657220697320616e20617070",
                        "id": 2650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2214:20:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8354735749b6995a1a250da9c2196e6669945091c557b76eedc31e24a10728b2",
                          "typeString": "literal_string \"receiver is an app\""
                        },
                        "value": "receiver is an app"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8354735749b6995a1a250da9c2196e6669945091c557b76eedc31e24a10728b2",
                          "typeString": "literal_string \"receiver is an app\""
                        }
                      ],
                      "id": 2642,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2172:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2172:63:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2652,
                  "nodeType": "ExpressionStatement",
                  "src": "2172:63:44"
                },
                {
                  "expression": {
                    "id": 2655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2653,
                      "name": "_host",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2540,
                      "src": "2246:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperfluid_$7707",
                        "typeString": "contract ISuperfluid"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2654,
                      "name": "host",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2581,
                      "src": "2254:4:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperfluid_$7707",
                        "typeString": "contract ISuperfluid"
                      }
                    },
                    "src": "2246:12:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$7707",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "id": 2656,
                  "nodeType": "ExpressionStatement",
                  "src": "2246:12:44"
                },
                {
                  "expression": {
                    "id": 2659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2657,
                      "name": "_cfa",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2542,
                      "src": "2268:4:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                        "typeString": "contract IConstantFlowAgreementV1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2658,
                      "name": "cfa",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2583,
                      "src": "2275:3:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                        "typeString": "contract IConstantFlowAgreementV1"
                      }
                    },
                    "src": "2268:10:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                      "typeString": "contract IConstantFlowAgreementV1"
                    }
                  },
                  "id": 2660,
                  "nodeType": "ExpressionStatement",
                  "src": "2268:10:44"
                },
                {
                  "expression": {
                    "id": 2663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2661,
                      "name": "_acceptedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2544,
                      "src": "2288:14:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperToken_$10940",
                        "typeString": "contract ISuperToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2662,
                      "name": "acceptedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2585,
                      "src": "2305:13:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperToken_$10940",
                        "typeString": "contract ISuperToken"
                      }
                    },
                    "src": "2288:30:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10940",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "id": 2664,
                  "nodeType": "ExpressionStatement",
                  "src": "2288:30:44"
                },
                {
                  "expression": {
                    "id": 2667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2665,
                      "name": "_receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2546,
                      "src": "2328:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2666,
                      "name": "receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2587,
                      "src": "2340:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2328:20:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2668,
                  "nodeType": "ExpressionStatement",
                  "src": "2328:20:44"
                },
                {
                  "assignments": [
                    2670
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2670,
                      "mutability": "mutable",
                      "name": "configWord",
                      "nodeType": "VariableDeclaration",
                      "scope": 2689,
                      "src": "2359:18:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2669,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2359:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2682,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2671,
                            "name": "SuperAppDefinitions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10323,
                            "src": "2392:19:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SuperAppDefinitions_$10323_$",
                              "typeString": "type(library SuperAppDefinitions)"
                            }
                          },
                          "id": 2672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "APP_LEVEL_FINAL",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10195,
                          "src": "2392:35:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "expression": {
                            "id": 2673,
                            "name": "SuperAppDefinitions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10323,
                            "src": "2442:19:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SuperAppDefinitions_$10323_$",
                              "typeString": "type(library SuperAppDefinitions)"
                            }
                          },
                          "id": 2674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "BEFORE_AGREEMENT_CREATED_NOOP",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10249,
                          "src": "2442:49:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2392:99:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "|",
                      "rightExpression": {
                        "expression": {
                          "id": 2676,
                          "name": "SuperAppDefinitions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10323,
                          "src": "2506:19:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SuperAppDefinitions_$10323_$",
                            "typeString": "type(library SuperAppDefinitions)"
                          }
                        },
                        "id": 2677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "BEFORE_AGREEMENT_UPDATED_NOOP",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10265,
                        "src": "2506:49:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2392:163:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "|",
                    "rightExpression": {
                      "expression": {
                        "id": 2679,
                        "name": "SuperAppDefinitions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10323,
                        "src": "2570:19:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SuperAppDefinitions_$10323_$",
                          "typeString": "type(library SuperAppDefinitions)"
                        }
                      },
                      "id": 2680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "BEFORE_AGREEMENT_TERMINATED_NOOP",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10281,
                      "src": "2570:52:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2392:230:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2359:263:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2686,
                        "name": "configWord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2670,
                        "src": "2773:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2683,
                        "name": "_host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2540,
                        "src": "2755:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$7707",
                          "typeString": "contract ISuperfluid"
                        }
                      },
                      "id": 2685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registerApp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7472,
                      "src": "2755:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2755:29:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2688,
                  "nodeType": "ExpressionStatement",
                  "src": "2755:29:44"
                }
              ]
            },
            "id": 2690,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2581,
                  "mutability": "mutable",
                  "name": "host",
                  "nodeType": "VariableDeclaration",
                  "scope": 2690,
                  "src": "1741:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluid_$7707",
                    "typeString": "contract ISuperfluid"
                  },
                  "typeName": {
                    "id": 2580,
                    "name": "ISuperfluid",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 7707,
                    "src": "1741:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$7707",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2583,
                  "mutability": "mutable",
                  "name": "cfa",
                  "nodeType": "VariableDeclaration",
                  "scope": 2690,
                  "src": "1767:28:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                    "typeString": "contract IConstantFlowAgreementV1"
                  },
                  "typeName": {
                    "id": 2582,
                    "name": "IConstantFlowAgreementV1",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 7298,
                    "src": "1767:24:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                      "typeString": "contract IConstantFlowAgreementV1"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2585,
                  "mutability": "mutable",
                  "name": "acceptedToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 2690,
                  "src": "1805:25:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10940",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 2584,
                    "name": "ISuperToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10940,
                    "src": "1805:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10940",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2587,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 2690,
                  "src": "1840:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2586,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1840:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1731:126:44"
            },
            "returnParameters": {
              "id": 2589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1858:0:44"
            },
            "scope": 3527,
            "src": "1720:1072:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2725,
              "nodeType": "Block",
              "src": "3151:184:44",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2699,
                      "name": "_receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2546,
                      "src": "3165:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3186:1:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3178:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2700,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3178:7:44",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3178:10:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3165:23:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2724,
                  "nodeType": "IfStatement",
                  "src": "3161:168:44",
                  "trueBody": {
                    "id": 2723,
                    "nodeType": "Block",
                    "src": "3190:139:44",
                    "statements": [
                      {
                        "expression": {
                          "id": 2717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 2705,
                                "name": "startTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2693,
                                "src": "3205:9:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2706,
                                "name": "flowRate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2697,
                                "src": "3216:8:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int96",
                                  "typeString": "int96"
                                }
                              },
                              null,
                              null
                            ],
                            "id": 2707,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "3204:23:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_int96_$__$__$",
                              "typeString": "tuple(uint256,int96,,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2710,
                                "name": "_acceptedToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2544,
                                "src": "3243:14:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperToken_$10940",
                                  "typeString": "contract ISuperToken"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2713,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "3267:4:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TennerrStreamer_$3527",
                                      "typeString": "contract TennerrStreamer"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TennerrStreamer_$3527",
                                      "typeString": "contract TennerrStreamer"
                                    }
                                  ],
                                  "id": 2712,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3259:7:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2711,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3259:7:44",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2714,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3259:13:44",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 2715,
                                "name": "_receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2546,
                                "src": "3274:9:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ISuperToken_$10940",
                                  "typeString": "contract ISuperToken"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 2708,
                                "name": "_cfa",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2542,
                                "src": "3230:4:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                }
                              },
                              "id": 2709,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getFlow",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7224,
                              "src": "3230:12:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_contract$_ISuperfluidToken_$10025_$_t_address_$_t_address_$returns$_t_uint256_$_t_int96_$_t_uint256_$_t_uint256_$",
                                "typeString": "function (contract ISuperfluidToken,address,address) view external returns (uint256,int96,uint256,uint256)"
                              }
                            },
                            "id": 2716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3230:54:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_int96_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,int96,uint256,uint256)"
                            }
                          },
                          "src": "3204:80:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2718,
                        "nodeType": "ExpressionStatement",
                        "src": "3204:80:44"
                      },
                      {
                        "expression": {
                          "id": 2721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2719,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2695,
                            "src": "3298:8:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2720,
                            "name": "_receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2546,
                            "src": "3309:9:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3298:20:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2722,
                        "nodeType": "ExpressionStatement",
                        "src": "3298:20:44"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "28d2bf94",
            "id": 2726,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "currentReceiver",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3006:2:44"
            },
            "returnParameters": {
              "id": 2698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2693,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2726,
                  "src": "3061:17:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2692,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3061:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2695,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 2726,
                  "src": "3092:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3092:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2697,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 2726,
                  "src": "3122:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 2696,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3122:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3047:99:44"
            },
            "scope": 3527,
            "src": "2982:353:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 2730,
            "name": "ReceiverChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2728,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 2730,
                  "src": "3363:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2727,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3363:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3362:18:44"
            },
            "src": "3341:40:44"
          },
          {
            "body": {
              "id": 2866,
              "nodeType": "Block",
              "src": "3581:1856:44",
              "statements": [
                {
                  "expression": {
                    "id": 2742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2740,
                      "name": "newCtx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2738,
                      "src": "3590:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2741,
                      "name": "ctx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2733,
                      "src": "3599:3:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "src": "3590:12:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 2743,
                  "nodeType": "ExpressionStatement",
                  "src": "3590:12:44"
                },
                {
                  "assignments": [
                    2745
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2745,
                      "mutability": "mutable",
                      "name": "netFlowRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 2866,
                      "src": "3695:17:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      },
                      "typeName": {
                        "id": 2744,
                        "name": "int96",
                        "nodeType": "ElementaryTypeName",
                        "src": "3695:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2754,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2748,
                        "name": "_acceptedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2544,
                        "src": "3731:14:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$10940",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2751,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3755:4:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TennerrStreamer_$3527",
                              "typeString": "contract TennerrStreamer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TennerrStreamer_$3527",
                              "typeString": "contract TennerrStreamer"
                            }
                          ],
                          "id": 2750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3747:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2749,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3747:7:44",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3747:13:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperToken_$10940",
                          "typeString": "contract ISuperToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 2746,
                        "name": "_cfa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2542,
                        "src": "3715:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                          "typeString": "contract IConstantFlowAgreementV1"
                        }
                      },
                      "id": 2747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getNetFlow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7266,
                      "src": "3715:15:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ISuperfluidToken_$10025_$_t_address_$returns$_t_int96_$",
                        "typeString": "function (contract ISuperfluidToken,address) view external returns (int96)"
                      }
                    },
                    "id": 2753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3715:46:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3695:66:44"
                },
                {
                  "assignments": [
                    null,
                    2756,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 2756,
                      "mutability": "mutable",
                      "name": "outFlowRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 2866,
                      "src": "3771:17:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      },
                      "typeName": {
                        "id": 2755,
                        "name": "int96",
                        "nodeType": "ElementaryTypeName",
                        "src": "3771:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 2766,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2759,
                        "name": "_acceptedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2544,
                        "src": "3807:14:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$10940",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2762,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3831:4:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TennerrStreamer_$3527",
                              "typeString": "contract TennerrStreamer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TennerrStreamer_$3527",
                              "typeString": "contract TennerrStreamer"
                            }
                          ],
                          "id": 2761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3823:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2760,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3823:7:44",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3823:13:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2764,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2546,
                        "src": "3838:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperToken_$10940",
                          "typeString": "contract ISuperToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2757,
                        "name": "_cfa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2542,
                        "src": "3794:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                          "typeString": "contract IConstantFlowAgreementV1"
                        }
                      },
                      "id": 2758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getFlow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7224,
                      "src": "3794:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ISuperfluidToken_$10025_$_t_address_$_t_address_$returns$_t_uint256_$_t_int96_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (contract ISuperfluidToken,address,address) view external returns (uint256,int96,uint256,uint256)"
                      }
                    },
                    "id": 2765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3794:54:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_int96_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,int96,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3769:79:44"
                },
                {
                  "assignments": [
                    2768
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2768,
                      "mutability": "mutable",
                      "name": "inFlowRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 2866,
                      "src": "3910:16:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      },
                      "typeName": {
                        "id": 2767,
                        "name": "int96",
                        "nodeType": "ElementaryTypeName",
                        "src": "3910:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2772,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    },
                    "id": 2771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2769,
                      "name": "netFlowRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2745,
                      "src": "3929:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 2770,
                      "name": "outFlowRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2756,
                      "src": "3943:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "src": "3929:25:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3910:44:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2774,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2735,
                        "src": "4035:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2773,
                      "name": "_accountingCache",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2923,
                      "src": "4018:16:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 2775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4018:26:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2776,
                  "nodeType": "ExpressionStatement",
                  "src": "4018:26:44"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    },
                    "id": 2782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2777,
                      "name": "inFlowRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2768,
                      "src": "4119:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4139:1:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4133:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int96_$",
                          "typeString": "type(int96)"
                        },
                        "typeName": {
                          "id": 2778,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "4133:5:44",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4133:8:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "src": "4119:22:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      },
                      "id": 2815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2810,
                        "name": "outFlowRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2756,
                        "src": "4589:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4610:1:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4604:5:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int96_$",
                            "typeString": "type(int96)"
                          },
                          "typeName": {
                            "id": 2811,
                            "name": "int96",
                            "nodeType": "ElementaryTypeName",
                            "src": "4604:5:44",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4604:8:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      "src": "4589:23:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 2863,
                      "nodeType": "Block",
                      "src": "4971:460:44",
                      "statements": [
                        {
                          "expression": {
                            "id": 2861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "components": [
                                {
                                  "id": 2840,
                                  "name": "newCtx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2738,
                                  "src": "5068:6:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                null
                              ],
                              "id": 2841,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "TupleExpression",
                              "src": "5067:10:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$__$",
                                "typeString": "tuple(bytes memory,)"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 2844,
                                  "name": "_cfa",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2542,
                                  "src": "5126:4:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                                    "typeString": "contract IConstantFlowAgreementV1"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "expression": {
                                          "id": 2847,
                                          "name": "_cfa",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2542,
                                          "src": "5188:4:44",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                                            "typeString": "contract IConstantFlowAgreementV1"
                                          }
                                        },
                                        "id": 2848,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "createFlow",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 7192,
                                        "src": "5188:15:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$10025_$_t_address_$_t_int96_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function (contract ISuperfluidToken,address,int96,bytes memory) external returns (bytes memory)"
                                        }
                                      },
                                      "id": 2849,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "5188:24:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    {
                                      "id": 2850,
                                      "name": "_acceptedToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2544,
                                      "src": "5232:14:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ISuperToken_$10940",
                                        "typeString": "contract ISuperToken"
                                      }
                                    },
                                    {
                                      "id": 2851,
                                      "name": "_receiver",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2546,
                                      "src": "5266:9:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 2852,
                                      "name": "inFlowRate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2768,
                                      "src": "5295:10:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int96",
                                        "typeString": "int96"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 2855,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5335:1:44",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 2854,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "NewExpression",
                                        "src": "5325:9:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function (uint256) pure returns (bytes memory)"
                                        },
                                        "typeName": {
                                          "id": 2853,
                                          "name": "bytes",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5329:5:44",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                          }
                                        }
                                      },
                                      "id": 2856,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5325:12:44",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      {
                                        "typeIdentifier": "t_contract$_ISuperToken_$10940",
                                        "typeString": "contract ISuperToken"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_int96",
                                        "typeString": "int96"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2845,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "5146:3:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 2846,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodeWithSelector",
                                    "nodeType": "MemberAccess",
                                    "src": "5146:22:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes4) pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 2857,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5146:222:44",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "hexValue": "3078",
                                  "id": 2858,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5384:4:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                    "typeString": "literal_string \"0x\""
                                  },
                                  "value": "0x"
                                },
                                {
                                  "id": 2859,
                                  "name": "newCtx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2738,
                                  "src": "5404:6:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                                    "typeString": "contract IConstantFlowAgreementV1"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                    "typeString": "literal_string \"0x\""
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 2842,
                                  "name": "_host",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2540,
                                  "src": "5080:5:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperfluid_$7707",
                                    "typeString": "contract ISuperfluid"
                                  }
                                },
                                "id": 2843,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "callAgreementWithContext",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7660,
                                "src": "5080:30:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$9771_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory,bytes memory) external returns (bytes memory,bytes memory)"
                                }
                              },
                              "id": 2860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5080:342:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                                "typeString": "tuple(bytes memory,bytes memory)"
                              }
                            },
                            "src": "5067:355:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2862,
                          "nodeType": "ExpressionStatement",
                          "src": "5067:355:44"
                        }
                      ]
                    },
                    "id": 2864,
                    "nodeType": "IfStatement",
                    "src": "4585:846:44",
                    "trueBody": {
                      "id": 2839,
                      "nodeType": "Block",
                      "src": "4613:352:44",
                      "statements": [
                        {
                          "expression": {
                            "id": 2837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "components": [
                                {
                                  "id": 2816,
                                  "name": "newCtx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2738,
                                  "src": "4624:6:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                null
                              ],
                              "id": 2817,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "TupleExpression",
                              "src": "4623:10:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$__$",
                                "typeString": "tuple(bytes memory,)"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 2820,
                                  "name": "_cfa",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2542,
                                  "src": "4680:4:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                                    "typeString": "contract IConstantFlowAgreementV1"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "expression": {
                                          "id": 2823,
                                          "name": "_cfa",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2542,
                                          "src": "4738:4:44",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                                            "typeString": "contract IConstantFlowAgreementV1"
                                          }
                                        },
                                        "id": 2824,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "updateFlow",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 7206,
                                        "src": "4738:15:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$10025_$_t_address_$_t_int96_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function (contract ISuperfluidToken,address,int96,bytes memory) external returns (bytes memory)"
                                        }
                                      },
                                      "id": 2825,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "4738:24:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    {
                                      "id": 2826,
                                      "name": "_acceptedToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2544,
                                      "src": "4780:14:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ISuperToken_$10940",
                                        "typeString": "contract ISuperToken"
                                      }
                                    },
                                    {
                                      "id": 2827,
                                      "name": "_receiver",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2546,
                                      "src": "4812:9:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 2828,
                                      "name": "inFlowRate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2768,
                                      "src": "4839:10:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int96",
                                        "typeString": "int96"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 2831,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "4877:1:44",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 2830,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "NewExpression",
                                        "src": "4867:9:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function (uint256) pure returns (bytes memory)"
                                        },
                                        "typeName": {
                                          "id": 2829,
                                          "name": "bytes",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "4871:5:44",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                          }
                                        }
                                      },
                                      "id": 2832,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4867:12:44",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      {
                                        "typeIdentifier": "t_contract$_ISuperToken_$10940",
                                        "typeString": "contract ISuperToken"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_int96",
                                        "typeString": "int96"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2821,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "4698:3:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 2822,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodeWithSelector",
                                    "nodeType": "MemberAccess",
                                    "src": "4698:22:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes4) pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 2833,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4698:210:44",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "hexValue": "3078",
                                  "id": 2834,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4922:4:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                    "typeString": "literal_string \"0x\""
                                  },
                                  "value": "0x"
                                },
                                {
                                  "id": 2835,
                                  "name": "newCtx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2738,
                                  "src": "4940:6:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                                    "typeString": "contract IConstantFlowAgreementV1"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                    "typeString": "literal_string \"0x\""
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 2818,
                                  "name": "_host",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2540,
                                  "src": "4636:5:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperfluid_$7707",
                                    "typeString": "contract ISuperfluid"
                                  }
                                },
                                "id": 2819,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "callAgreementWithContext",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7660,
                                "src": "4636:30:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$9771_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory,bytes memory) external returns (bytes memory,bytes memory)"
                                }
                              },
                              "id": 2836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4636:320:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                                "typeString": "tuple(bytes memory,bytes memory)"
                              }
                            },
                            "src": "4623:333:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2838,
                          "nodeType": "ExpressionStatement",
                          "src": "4623:333:44"
                        }
                      ]
                    }
                  },
                  "id": 2865,
                  "nodeType": "IfStatement",
                  "src": "4115:1316:44",
                  "trueBody": {
                    "id": 2809,
                    "nodeType": "Block",
                    "src": "4143:436:44",
                    "statements": [
                      {
                        "expression": {
                          "id": 2807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 2783,
                                "name": "newCtx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2738,
                                "src": "4211:6:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              null
                            ],
                            "id": 2784,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "4210:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$__$",
                              "typeString": "tuple(bytes memory,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2787,
                                "name": "_cfa",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2542,
                                "src": "4269:4:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "expression": {
                                        "id": 2790,
                                        "name": "_cfa",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2542,
                                        "src": "4331:4:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                                          "typeString": "contract IConstantFlowAgreementV1"
                                        }
                                      },
                                      "id": 2791,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "deleteFlow",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 7280,
                                      "src": "4331:15:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$10025_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (contract ISuperfluidToken,address,address,bytes memory) external returns (bytes memory)"
                                      }
                                    },
                                    "id": 2792,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "4331:24:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  {
                                    "id": 2793,
                                    "name": "_acceptedToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2544,
                                    "src": "4375:14:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISuperToken_$10940",
                                      "typeString": "contract ISuperToken"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 2796,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "4417:4:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_TennerrStreamer_$3527",
                                          "typeString": "contract TennerrStreamer"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_TennerrStreamer_$3527",
                                          "typeString": "contract TennerrStreamer"
                                        }
                                      ],
                                      "id": 2795,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4409:7:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2794,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4409:7:44",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2797,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4409:13:44",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "id": 2798,
                                    "name": "_receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2546,
                                    "src": "4442:9:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 2801,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4481:1:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 2800,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "NewExpression",
                                      "src": "4471:9:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (uint256) pure returns (bytes memory)"
                                      },
                                      "typeName": {
                                        "id": 2799,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4475:5:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_storage_ptr",
                                          "typeString": "bytes"
                                        }
                                      }
                                    },
                                    "id": 2802,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4471:12:44",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_ISuperToken_$10940",
                                      "typeString": "contract ISuperToken"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2788,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "4289:3:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 2789,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodeWithSelector",
                                  "nodeType": "MemberAccess",
                                  "src": "4289:22:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes4) pure returns (bytes memory)"
                                  }
                                },
                                "id": 2803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4289:225:44",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "hexValue": "3078",
                                "id": 2804,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4530:4:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                  "typeString": "literal_string \"0x\""
                                },
                                "value": "0x"
                              },
                              {
                                "id": 2805,
                                "name": "newCtx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2738,
                                "src": "4550:6:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                  "typeString": "literal_string \"0x\""
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 2785,
                                "name": "_host",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2540,
                                "src": "4223:5:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperfluid_$7707",
                                  "typeString": "contract ISuperfluid"
                                }
                              },
                              "id": 2786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "callAgreementWithContext",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7660,
                              "src": "4223:30:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$9771_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                                "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory,bytes memory) external returns (bytes memory,bytes memory)"
                              }
                            },
                            "id": 2806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4223:345:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bytes memory,bytes memory)"
                            }
                          },
                          "src": "4210:358:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2808,
                        "nodeType": "ExpressionStatement",
                        "src": "4210:358:44"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2731,
              "nodeType": "StructuredDocumentation",
              "src": "3387:64:44",
              "text": "@dev If a new stream is opened, or an existing one is opened"
            },
            "id": 2867,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateOutflow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2733,
                  "mutability": "mutable",
                  "name": "ctx",
                  "nodeType": "VariableDeclaration",
                  "scope": 2867,
                  "src": "3480:18:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2732,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3480:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2735,
                  "mutability": "mutable",
                  "name": "userData",
                  "nodeType": "VariableDeclaration",
                  "scope": 2867,
                  "src": "3500:21:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2734,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3500:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3479:43:44"
            },
            "returnParameters": {
              "id": 2739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2738,
                  "mutability": "mutable",
                  "name": "newCtx",
                  "nodeType": "VariableDeclaration",
                  "scope": 2867,
                  "src": "3556:19:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2737,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3556:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3555:21:44"
            },
            "scope": 3527,
            "src": "3456:1981:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2922,
              "nodeType": "Block",
              "src": "5501:419:44",
              "statements": [
                {
                  "assignments": [
                    2873
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2873,
                      "mutability": "mutable",
                      "name": "jobId",
                      "nodeType": "VariableDeclaration",
                      "scope": 2922,
                      "src": "5511:13:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2872,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5511:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2878,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2875,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2869,
                        "src": "5542:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 2876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5551:1:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 2874,
                      "name": "bytesToBytes32",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2968,
                      "src": "5527:14:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory,uint256) pure returns (bytes32)"
                      }
                    },
                    "id": 2877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5527:26:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5511:42:44"
                },
                {
                  "assignments": [
                    2882
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2882,
                      "mutability": "mutable",
                      "name": "order",
                      "nodeType": "VariableDeclaration",
                      "scope": 2922,
                      "src": "5563:32:44",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$1925_memory_ptr",
                        "typeString": "struct TennerrEscrow.Order"
                      },
                      "typeName": {
                        "id": 2881,
                        "name": "TennerrEscrow.Order",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1925,
                        "src": "5563:19:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$1925_storage_ptr",
                          "typeString": "struct TennerrEscrow.Order"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2887,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2885,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2873,
                        "src": "5625:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 2883,
                        "name": "tennerrEscrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2553,
                        "src": "5598:13:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TennerrEscrow_$2275",
                          "typeString": "contract TennerrEscrow"
                        }
                      },
                      "id": 2884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getQuoteData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2077,
                      "src": "5598:26:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Order_$1925_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct TennerrEscrow.Order memory)"
                      }
                    },
                    "id": 2886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5598:33:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$1925_memory_ptr",
                      "typeString": "struct TennerrEscrow.Order memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5563:68:44"
                },
                {
                  "assignments": [
                    2889
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2889,
                      "mutability": "mutable",
                      "name": "buyer",
                      "nodeType": "VariableDeclaration",
                      "scope": 2922,
                      "src": "5641:13:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2888,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5641:7:44",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2892,
                  "initialValue": {
                    "expression": {
                      "id": 2890,
                      "name": "order",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2882,
                      "src": "5657:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$1925_memory_ptr",
                        "typeString": "struct TennerrEscrow.Order memory"
                      }
                    },
                    "id": 2891,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "buyer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1916,
                    "src": "5657:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5641:27:44"
                },
                {
                  "assignments": [
                    2894
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2894,
                      "mutability": "mutable",
                      "name": "seller",
                      "nodeType": "VariableDeclaration",
                      "scope": 2922,
                      "src": "5678:14:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2893,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5678:7:44",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2897,
                  "initialValue": {
                    "expression": {
                      "id": 2895,
                      "name": "order",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2882,
                      "src": "5695:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$1925_memory_ptr",
                        "typeString": "struct TennerrEscrow.Order memory"
                      }
                    },
                    "id": 2896,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "seller",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1918,
                    "src": "5695:12:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5678:29:44"
                },
                {
                  "assignments": [
                    2899
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2899,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 2922,
                      "src": "5717:11:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2898,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5717:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2902,
                  "initialValue": {
                    "expression": {
                      "id": 2900,
                      "name": "order",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2882,
                      "src": "5731:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$1925_memory_ptr",
                        "typeString": "struct TennerrEscrow.Order memory"
                      }
                    },
                    "id": 2901,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "orderPrice",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1922,
                    "src": "5731:16:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5717:30:44"
                },
                {
                  "assignments": [
                    2904
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2904,
                      "mutability": "mutable",
                      "name": "streamStart",
                      "nodeType": "VariableDeclaration",
                      "scope": 2922,
                      "src": "5757:16:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2903,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5757:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2907,
                  "initialValue": {
                    "expression": {
                      "id": 2905,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "5776:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 2906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "5776:15:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5757:34:44"
                },
                {
                  "assignments": [
                    2909
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2909,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nodeType": "VariableDeclaration",
                      "scope": 2922,
                      "src": "5801:13:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2908,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5801:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2912,
                  "initialValue": {
                    "expression": {
                      "id": 2910,
                      "name": "order",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2882,
                      "src": "5817:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$1925_memory_ptr",
                        "typeString": "struct TennerrEscrow.Order memory"
                      }
                    },
                    "id": 2911,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "absDeadline",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1924,
                    "src": "5817:17:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5801:33:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2914,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2873,
                        "src": "5862:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2915,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2889,
                        "src": "5868:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2916,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2894,
                        "src": "5875:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2917,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2899,
                        "src": "5883:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2918,
                        "name": "streamStart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2904,
                        "src": "5891:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2919,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2909,
                        "src": "5904:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2913,
                      "name": "_updateStreamData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3051,
                      "src": "5844:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 2920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5844:69:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2921,
                  "nodeType": "ExpressionStatement",
                  "src": "5844:69:44"
                }
              ]
            },
            "id": 2923,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_accountingCache",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2869,
                  "mutability": "mutable",
                  "name": "userData",
                  "nodeType": "VariableDeclaration",
                  "scope": 2923,
                  "src": "5469:21:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2868,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5469:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5468:23:44"
            },
            "returnParameters": {
              "id": 2871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5501:0:44"
            },
            "scope": 3527,
            "src": "5443:477:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2967,
              "nodeType": "Block",
              "src": "6010:148:44",
              "statements": [
                {
                  "assignments": [
                    2933
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2933,
                      "mutability": "mutable",
                      "name": "out",
                      "nodeType": "VariableDeclaration",
                      "scope": 2967,
                      "src": "6018:11:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2932,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6018:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2934,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6018:11:44"
                },
                {
                  "body": {
                    "id": 2963,
                    "nodeType": "Block",
                    "src": "6068:66:44",
                    "statements": [
                      {
                        "expression": {
                          "id": 2961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2945,
                            "name": "out",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2933,
                            "src": "6078:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "|=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 2960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  },
                                  "id": 2954,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 2948,
                                      "name": "b",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2925,
                                      "src": "6093:1:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 2952,
                                    "indexExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2951,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2949,
                                        "name": "offset",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2927,
                                        "src": "6095:6:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "id": 2950,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2936,
                                        "src": "6104:1:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6095:10:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6093:13:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes1",
                                      "typeString": "bytes1"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&",
                                  "rightExpression": {
                                    "hexValue": "30784646",
                                    "id": 2953,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6109:4:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_255_by_1",
                                      "typeString": "int_const 255"
                                    },
                                    "value": "0xFF"
                                  },
                                  "src": "6093:20:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                ],
                                "id": 2947,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6085:7:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": {
                                  "id": 2946,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6085:7:44",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2955,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6085:29:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">>",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2958,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2956,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2936,
                                    "src": "6119:1:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "38",
                                    "id": 2957,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6123:1:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_8_by_1",
                                      "typeString": "int_const 8"
                                    },
                                    "value": "8"
                                  },
                                  "src": "6119:5:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2959,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6118:7:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6085:40:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "6078:47:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 2962,
                        "nodeType": "ExpressionStatement",
                        "src": "6078:47:44"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2939,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2936,
                      "src": "6055:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3332",
                      "id": 2940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6059:2:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_32_by_1",
                        "typeString": "int_const 32"
                      },
                      "value": "32"
                    },
                    "src": "6055:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2964,
                  "initializationExpression": {
                    "assignments": [
                      2936
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2936,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2964,
                        "src": "6043:6:44",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2935,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6043:4:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2938,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6052:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6043:10:44"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6063:3:44",
                      "subExpression": {
                        "id": 2942,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2936,
                        "src": "6063:1:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2944,
                    "nodeType": "ExpressionStatement",
                    "src": "6063:3:44"
                  },
                  "nodeType": "ForStatement",
                  "src": "6038:96:44"
                },
                {
                  "expression": {
                    "id": 2965,
                    "name": "out",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2933,
                    "src": "6148:3:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 2931,
                  "id": 2966,
                  "nodeType": "Return",
                  "src": "6141:10:44"
                }
              ]
            },
            "id": 2968,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bytesToBytes32",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2925,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 2968,
                  "src": "5950:14:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2924,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5950:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2927,
                  "mutability": "mutable",
                  "name": "offset",
                  "nodeType": "VariableDeclaration",
                  "scope": 2968,
                  "src": "5966:11:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2926,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5966:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5949:29:44"
            },
            "returnParameters": {
              "id": 2931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2930,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2968,
                  "src": "6001:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2929,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6001:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6000:9:44"
            },
            "scope": 3527,
            "src": "5926:232:44",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3050,
              "nodeType": "Block",
              "src": "6329:718:44",
              "statements": [
                {
                  "assignments": [
                    2984
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2984,
                      "mutability": "mutable",
                      "name": "netFlowRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 3050,
                      "src": "6426:17:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      },
                      "typeName": {
                        "id": 2983,
                        "name": "int96",
                        "nodeType": "ElementaryTypeName",
                        "src": "6426:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2993,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2987,
                        "name": "_acceptedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2544,
                        "src": "6462:14:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$10940",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2990,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6486:4:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TennerrStreamer_$3527",
                              "typeString": "contract TennerrStreamer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TennerrStreamer_$3527",
                              "typeString": "contract TennerrStreamer"
                            }
                          ],
                          "id": 2989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6478:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2988,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6478:7:44",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6478:13:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperToken_$10940",
                          "typeString": "contract ISuperToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 2985,
                        "name": "_cfa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2542,
                        "src": "6446:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                          "typeString": "contract IConstantFlowAgreementV1"
                        }
                      },
                      "id": 2986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getNetFlow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7266,
                      "src": "6446:15:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ISuperfluidToken_$10025_$_t_address_$returns$_t_int96_$",
                        "typeString": "function (contract ISuperfluidToken,address) view external returns (int96)"
                      }
                    },
                    "id": 2992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6446:46:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6426:66:44"
                },
                {
                  "assignments": [
                    null,
                    2995,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 2995,
                      "mutability": "mutable",
                      "name": "outFlowRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 3050,
                      "src": "6504:17:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      },
                      "typeName": {
                        "id": 2994,
                        "name": "int96",
                        "nodeType": "ElementaryTypeName",
                        "src": "6504:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 3005,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2998,
                        "name": "_acceptedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2544,
                        "src": "6540:14:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$10940",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3001,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6564:4:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TennerrStreamer_$3527",
                              "typeString": "contract TennerrStreamer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TennerrStreamer_$3527",
                              "typeString": "contract TennerrStreamer"
                            }
                          ],
                          "id": 3000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6556:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2999,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6556:7:44",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6556:13:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3003,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2546,
                        "src": "6571:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperToken_$10940",
                          "typeString": "contract ISuperToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2996,
                        "name": "_cfa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2542,
                        "src": "6527:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                          "typeString": "contract IConstantFlowAgreementV1"
                        }
                      },
                      "id": 2997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getFlow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7224,
                      "src": "6527:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ISuperfluidToken_$10025_$_t_address_$_t_address_$returns$_t_uint256_$_t_int96_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (contract ISuperfluidToken,address,address) view external returns (uint256,int96,uint256,uint256)"
                      }
                    },
                    "id": 3004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6527:54:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_int96_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,int96,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6502:79:44"
                },
                {
                  "assignments": [
                    3007
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3007,
                      "mutability": "mutable",
                      "name": "inFlowRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 3050,
                      "src": "6645:15:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3006,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6645:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3014,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "id": 3012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3010,
                          "name": "netFlowRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2984,
                          "src": "6668:11:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 3011,
                          "name": "outFlowRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2995,
                          "src": "6682:11:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "src": "6668:25:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      ],
                      "id": 3009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6663:4:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 3008,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6663:4:44",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6663:31:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6645:49:44"
                },
                {
                  "assignments": [
                    3016
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3016,
                      "mutability": "mutable",
                      "name": "timeLeft",
                      "nodeType": "VariableDeclaration",
                      "scope": 3050,
                      "src": "6704:13:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3015,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6704:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3022,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3019,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "6733:5:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 3020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "6733:15:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3017,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2980,
                        "src": "6720:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6157,
                      "src": "6720:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6720:29:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6704:45:44"
                },
                {
                  "assignments": [
                    3024
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3024,
                      "mutability": "mutable",
                      "name": "timePassed",
                      "nodeType": "VariableDeclaration",
                      "scope": 3050,
                      "src": "6759:15:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3023,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6759:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3031,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3029,
                        "name": "streamStart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2978,
                        "src": "6799:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "components": [
                          {
                            "expression": {
                              "id": 3025,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6778:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6778:15:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3027,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6777:17:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6157,
                      "src": "6777:21:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6777:34:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6759:52:44"
                },
                {
                  "assignments": [
                    3033
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3033,
                      "mutability": "mutable",
                      "name": "streamedToDate",
                      "nodeType": "VariableDeclaration",
                      "scope": 3050,
                      "src": "6821:19:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3032,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6821:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3037,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3034,
                      "name": "inFlowRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3007,
                      "src": "6843:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 3035,
                      "name": "timePassed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3024,
                      "src": "6856:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6843:23:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6821:45:44"
                },
                {
                  "expression": {
                    "id": 3048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3038,
                        "name": "streamByJobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2564,
                        "src": "6948:13:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$",
                          "typeString": "mapping(bytes32 => uint256[] storage ref)"
                        }
                      },
                      "id": 3040,
                      "indexExpression": {
                        "id": 3039,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2970,
                        "src": "6962:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6948:20:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "id": 3041,
                          "name": "inFlowRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3007,
                          "src": "6972:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3042,
                          "name": "streamedToDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3033,
                          "src": "6984:14:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3043,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2976,
                          "src": "7000:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3044,
                          "name": "streamStart",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2978,
                          "src": "7008:11:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3045,
                          "name": "timeLeft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3016,
                          "src": "7021:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3046,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2980,
                          "src": "7031:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3047,
                      "isConstant": false,
                      "isInlineArray": true,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6971:69:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$6_memory_ptr",
                        "typeString": "uint256[6] memory"
                      }
                    },
                    "src": "6948:92:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 3049,
                  "nodeType": "ExpressionStatement",
                  "src": "6948:92:44"
                }
              ]
            },
            "id": 3051,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateStreamData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2970,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3051,
                  "src": "6198:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2969,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6198:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2972,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 3051,
                  "src": "6219:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2971,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6219:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2974,
                  "mutability": "mutable",
                  "name": "seller",
                  "nodeType": "VariableDeclaration",
                  "scope": 3051,
                  "src": "6240:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2973,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6240:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2976,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3051,
                  "src": "6262:11:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2975,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6262:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2978,
                  "mutability": "mutable",
                  "name": "streamStart",
                  "nodeType": "VariableDeclaration",
                  "scope": 3051,
                  "src": "6281:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2977,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6281:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2980,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "scope": 3051,
                  "src": "6305:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2979,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6305:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6190:129:44"
            },
            "returnParameters": {
              "id": 2982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6329:0:44"
            },
            "scope": 3527,
            "src": "6164:883:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3146,
              "nodeType": "Block",
              "src": "7142:975:44",
              "statements": [
                {
                  "assignments": [
                    3061
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3061,
                      "mutability": "mutable",
                      "name": "totalToStream",
                      "nodeType": "VariableDeclaration",
                      "scope": 3146,
                      "src": "7152:18:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3060,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7152:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3067,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3062,
                        "name": "streamByJobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2564,
                        "src": "7173:13:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$",
                          "typeString": "mapping(bytes32 => uint256[] storage ref)"
                        }
                      },
                      "id": 3064,
                      "indexExpression": {
                        "id": 3063,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3053,
                        "src": "7187:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7173:20:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 3066,
                    "indexExpression": {
                      "hexValue": "32",
                      "id": 3065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7194:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7173:23:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7152:44:44"
                },
                {
                  "assignments": [
                    3069
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3069,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nodeType": "VariableDeclaration",
                      "scope": 3146,
                      "src": "7206:13:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3068,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7206:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3075,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3070,
                        "name": "streamByJobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2564,
                        "src": "7222:13:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$",
                          "typeString": "mapping(bytes32 => uint256[] storage ref)"
                        }
                      },
                      "id": 3072,
                      "indexExpression": {
                        "id": 3071,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3053,
                        "src": "7236:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7222:20:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 3074,
                    "indexExpression": {
                      "hexValue": "35",
                      "id": 3073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7243:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7222:23:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7206:39:44"
                },
                {
                  "assignments": [
                    3077
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3077,
                      "mutability": "mutable",
                      "name": "streamStart",
                      "nodeType": "VariableDeclaration",
                      "scope": 3146,
                      "src": "7255:16:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3076,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7255:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3083,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3078,
                        "name": "streamByJobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2564,
                        "src": "7274:13:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$",
                          "typeString": "mapping(bytes32 => uint256[] storage ref)"
                        }
                      },
                      "id": 3080,
                      "indexExpression": {
                        "id": 3079,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3053,
                        "src": "7288:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7274:20:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 3082,
                    "indexExpression": {
                      "hexValue": "33",
                      "id": 3081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7295:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7274:23:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7255:42:44"
                },
                {
                  "assignments": [
                    3085
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3085,
                      "mutability": "mutable",
                      "name": "netFlowRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 3146,
                      "src": "7394:17:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      },
                      "typeName": {
                        "id": 3084,
                        "name": "int96",
                        "nodeType": "ElementaryTypeName",
                        "src": "7394:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3094,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3088,
                        "name": "_acceptedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2544,
                        "src": "7430:14:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$10940",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3091,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7454:4:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TennerrStreamer_$3527",
                              "typeString": "contract TennerrStreamer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TennerrStreamer_$3527",
                              "typeString": "contract TennerrStreamer"
                            }
                          ],
                          "id": 3090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7446:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3089,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7446:7:44",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7446:13:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperToken_$10940",
                          "typeString": "contract ISuperToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 3086,
                        "name": "_cfa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2542,
                        "src": "7414:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                          "typeString": "contract IConstantFlowAgreementV1"
                        }
                      },
                      "id": 3087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getNetFlow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7266,
                      "src": "7414:15:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ISuperfluidToken_$10025_$_t_address_$returns$_t_int96_$",
                        "typeString": "function (contract ISuperfluidToken,address) view external returns (int96)"
                      }
                    },
                    "id": 3093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7414:46:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7394:66:44"
                },
                {
                  "assignments": [
                    null,
                    3096,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 3096,
                      "mutability": "mutable",
                      "name": "outFlowRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 3146,
                      "src": "7472:17:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      },
                      "typeName": {
                        "id": 3095,
                        "name": "int96",
                        "nodeType": "ElementaryTypeName",
                        "src": "7472:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 3106,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3099,
                        "name": "_acceptedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2544,
                        "src": "7508:14:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$10940",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3102,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7532:4:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TennerrStreamer_$3527",
                              "typeString": "contract TennerrStreamer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TennerrStreamer_$3527",
                              "typeString": "contract TennerrStreamer"
                            }
                          ],
                          "id": 3101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7524:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3100,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7524:7:44",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7524:13:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3104,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2546,
                        "src": "7539:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperToken_$10940",
                          "typeString": "contract ISuperToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3097,
                        "name": "_cfa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2542,
                        "src": "7495:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                          "typeString": "contract IConstantFlowAgreementV1"
                        }
                      },
                      "id": 3098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getFlow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7224,
                      "src": "7495:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ISuperfluidToken_$10025_$_t_address_$_t_address_$returns$_t_uint256_$_t_int96_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (contract ISuperfluidToken,address,address) view external returns (uint256,int96,uint256,uint256)"
                      }
                    },
                    "id": 3105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7495:54:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_int96_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,int96,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7470:79:44"
                },
                {
                  "assignments": [
                    3108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3108,
                      "mutability": "mutable",
                      "name": "inFlowRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 3146,
                      "src": "7613:15:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3107,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7613:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3115,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "id": 3113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3111,
                          "name": "netFlowRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3085,
                          "src": "7636:11:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 3112,
                          "name": "outFlowRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3096,
                          "src": "7650:11:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "src": "7636:25:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      ],
                      "id": 3110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7631:4:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 3109,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7631:4:44",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7631:31:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7613:49:44"
                },
                {
                  "assignments": [
                    3117
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3117,
                      "mutability": "mutable",
                      "name": "timeLeft",
                      "nodeType": "VariableDeclaration",
                      "scope": 3146,
                      "src": "7672:13:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3116,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7672:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3123,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3120,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7701:5:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 3121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7701:15:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3118,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3069,
                        "src": "7688:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6157,
                      "src": "7688:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7688:29:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7672:45:44"
                },
                {
                  "assignments": [
                    3125
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3125,
                      "mutability": "mutable",
                      "name": "timePassed",
                      "nodeType": "VariableDeclaration",
                      "scope": 3146,
                      "src": "7784:15:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3124,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7784:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3132,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3130,
                        "name": "streamStart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3077,
                        "src": "7824:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "components": [
                          {
                            "expression": {
                              "id": 3126,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "7803:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "7803:15:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3128,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7802:17:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6157,
                      "src": "7802:21:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7802:34:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7784:52:44"
                },
                {
                  "assignments": [
                    3134
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3134,
                      "mutability": "mutable",
                      "name": "streamedToDate",
                      "nodeType": "VariableDeclaration",
                      "scope": 3146,
                      "src": "7846:19:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3133,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7846:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3138,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3135,
                      "name": "inFlowRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3108,
                      "src": "7868:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 3136,
                      "name": "timePassed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3125,
                      "src": "7881:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7868:23:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7846:45:44"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 3139,
                        "name": "inFlowRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3108,
                        "src": "8048:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3140,
                        "name": "streamedToDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3134,
                        "src": "8060:14:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3141,
                        "name": "totalToStream",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3061,
                        "src": "8076:13:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3142,
                        "name": "timeLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3117,
                        "src": "8091:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3143,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3069,
                        "src": "8101:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 3144,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8047:63:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                      "typeString": "uint256[5] memory"
                    }
                  },
                  "functionReturnParameters": 3059,
                  "id": 3145,
                  "nodeType": "Return",
                  "src": "8040:70:44"
                }
              ]
            },
            "functionSelector": "60f5bc21",
            "id": 3147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStreamData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3053,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3147,
                  "src": "7083:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3052,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7083:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7075:22:44"
            },
            "returnParameters": {
              "id": 3059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3058,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3147,
                  "src": "7126:14:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                    "typeString": "uint256[5]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3055,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "7126:4:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3057,
                    "length": {
                      "hexValue": "35",
                      "id": 3056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7131:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "7126:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
                      "typeString": "uint256[5]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7125:16:44"
            },
            "scope": 3527,
            "src": "7053:1064:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3253,
              "nodeType": "Block",
              "src": "8230:1360:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3153,
                          "name": "newReceiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3149,
                          "src": "8248:11:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8271:1:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8263:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3154,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8263:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8263:10:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "8248:25:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6577207265636569766572206973207a65726f2061646472657373",
                        "id": 3159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8275:30:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_496a5702531aac491f1d3527d5f3c42d2a1b4d1c7484089d534790e00885dae3",
                          "typeString": "literal_string \"New receiver is zero address\""
                        },
                        "value": "New receiver is zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_496a5702531aac491f1d3527d5f3c42d2a1b4d1c7484089d534790e00885dae3",
                          "typeString": "literal_string \"New receiver is zero address\""
                        }
                      ],
                      "id": 3152,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8240:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8240:66:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3161,
                  "nodeType": "ExpressionStatement",
                  "src": "8240:66:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8410:36:44",
                        "subExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3166,
                                  "name": "newReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3149,
                                  "src": "8433:11:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3165,
                                "name": "ISuperApp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10587,
                                "src": "8423:9:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISuperApp_$10587_$",
                                  "typeString": "type(contract ISuperApp)"
                                }
                              },
                              "id": 3167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8423:22:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperApp_$10587",
                                "typeString": "contract ISuperApp"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISuperApp_$10587",
                                "typeString": "contract ISuperApp"
                              }
                            ],
                            "expression": {
                              "id": 3163,
                              "name": "_host",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2540,
                              "src": "8411:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$7707",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 3164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isApp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7488,
                            "src": "8411:11:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_contract$_ISuperApp_$10587_$returns$_t_bool_$",
                              "typeString": "function (contract ISuperApp) view external returns (bool)"
                            }
                          },
                          "id": 3168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8411:35:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e65772072656365697665722063616e206e6f742062652061207375706572417070",
                        "id": 3170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8448:36:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f2f729735f0dfd7f49da421cd4b6c89cc95be0ef8efc7c8304051b20105202f",
                          "typeString": "literal_string \"New receiver can not be a superApp\""
                        },
                        "value": "New receiver can not be a superApp"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f2f729735f0dfd7f49da421cd4b6c89cc95be0ef8efc7c8304051b20105202f",
                          "typeString": "literal_string \"New receiver can not be a superApp\""
                        }
                      ],
                      "id": 3162,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8402:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8402:83:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3172,
                  "nodeType": "ExpressionStatement",
                  "src": "8402:83:44"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3173,
                      "name": "newReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3149,
                      "src": "8499:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 3174,
                      "name": "_receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2546,
                      "src": "8514:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8499:24:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3177,
                  "nodeType": "IfStatement",
                  "src": "8495:38:44",
                  "trueBody": {
                    "functionReturnParameters": 3151,
                    "id": 3176,
                    "nodeType": "Return",
                    "src": "8525:8:44"
                  }
                },
                {
                  "assignments": [
                    null,
                    3179,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 3179,
                      "mutability": "mutable",
                      "name": "outFlowRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 3253,
                      "src": "8588:17:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      },
                      "typeName": {
                        "id": 3178,
                        "name": "int96",
                        "nodeType": "ElementaryTypeName",
                        "src": "8588:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 3189,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3182,
                        "name": "_acceptedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2544,
                        "src": "8624:14:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$10940",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3185,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8648:4:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TennerrStreamer_$3527",
                              "typeString": "contract TennerrStreamer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TennerrStreamer_$3527",
                              "typeString": "contract TennerrStreamer"
                            }
                          ],
                          "id": 3184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8640:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3183,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8640:7:44",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8640:13:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3187,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2546,
                        "src": "8655:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperToken_$10940",
                          "typeString": "contract ISuperToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3180,
                        "name": "_cfa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2542,
                        "src": "8611:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                          "typeString": "contract IConstantFlowAgreementV1"
                        }
                      },
                      "id": 3181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getFlow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7224,
                      "src": "8611:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ISuperfluidToken_$10025_$_t_address_$_t_address_$returns$_t_uint256_$_t_int96_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (contract ISuperfluidToken,address,address) view external returns (uint256,int96,uint256,uint256)"
                      }
                    },
                    "id": 3188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8611:54:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_int96_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,int96,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8586:79:44"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    },
                    "id": 3192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3190,
                      "name": "outFlowRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3179,
                      "src": "8731:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8745:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8731:15:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3244,
                  "nodeType": "IfStatement",
                  "src": "8728:729:44",
                  "trueBody": {
                    "id": 3243,
                    "nodeType": "Block",
                    "src": "8747:710:44",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3196,
                              "name": "_cfa",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2542,
                              "src": "8794:4:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                                "typeString": "contract IConstantFlowAgreementV1"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 3199,
                                      "name": "_cfa",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2542,
                                      "src": "8856:4:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                                        "typeString": "contract IConstantFlowAgreementV1"
                                      }
                                    },
                                    "id": 3200,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "deleteFlow",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7280,
                                    "src": "8856:15:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$10025_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (contract ISuperfluidToken,address,address,bytes memory) external returns (bytes memory)"
                                    }
                                  },
                                  "id": 3201,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "8856:24:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 3202,
                                  "name": "_acceptedToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2544,
                                  "src": "8900:14:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperToken_$10940",
                                    "typeString": "contract ISuperToken"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 3205,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "8942:4:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TennerrStreamer_$3527",
                                        "typeString": "contract TennerrStreamer"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TennerrStreamer_$3527",
                                        "typeString": "contract TennerrStreamer"
                                      }
                                    ],
                                    "id": 3204,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8934:7:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 3203,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8934:7:44",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3206,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8934:13:44",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "id": 3207,
                                  "name": "_receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2546,
                                  "src": "8967:9:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 3210,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9006:1:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 3209,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "8996:9:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (bytes memory)"
                                    },
                                    "typeName": {
                                      "id": 3208,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9000:5:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_storage_ptr",
                                        "typeString": "bytes"
                                      }
                                    }
                                  },
                                  "id": 3211,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8996:12:44",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_ISuperToken_$10940",
                                    "typeString": "contract ISuperToken"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 3197,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "8814:3:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 3198,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "8814:22:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 3212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8814:210:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "3078",
                              "id": 3213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9040:4:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                "typeString": "literal_string \"0x\""
                              },
                              "value": "0x"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                                "typeString": "contract IConstantFlowAgreementV1"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                "typeString": "literal_string \"0x\""
                              }
                            ],
                            "expression": {
                              "id": 3193,
                              "name": "_host",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2540,
                              "src": "8759:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$7707",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 3195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "callAgreement",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7614,
                            "src": "8759:19:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$9771_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory) external returns (bytes memory)"
                            }
                          },
                          "id": 3214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8759:297:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 3215,
                        "nodeType": "ExpressionStatement",
                        "src": "8759:297:44"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3219,
                              "name": "_cfa",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2542,
                              "src": "9149:4:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                                "typeString": "contract IConstantFlowAgreementV1"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 3222,
                                      "name": "_cfa",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2542,
                                      "src": "9211:4:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                                        "typeString": "contract IConstantFlowAgreementV1"
                                      }
                                    },
                                    "id": 3223,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "createFlow",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7192,
                                    "src": "9211:15:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$10025_$_t_address_$_t_int96_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (contract ISuperfluidToken,address,int96,bytes memory) external returns (bytes memory)"
                                    }
                                  },
                                  "id": 3224,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "9211:24:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 3225,
                                  "name": "_acceptedToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2544,
                                  "src": "9255:14:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperToken_$10940",
                                    "typeString": "contract ISuperToken"
                                  }
                                },
                                {
                                  "id": 3226,
                                  "name": "newReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3149,
                                  "src": "9289:11:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 3229,
                                      "name": "_acceptedToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2544,
                                      "src": "9336:14:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ISuperToken_$10940",
                                        "typeString": "contract ISuperToken"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 3232,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "9360:4:44",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_TennerrStreamer_$3527",
                                            "typeString": "contract TennerrStreamer"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_TennerrStreamer_$3527",
                                            "typeString": "contract TennerrStreamer"
                                          }
                                        ],
                                        "id": 3231,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "9352:7:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 3230,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "9352:7:44",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 3233,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9352:13:44",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_ISuperToken_$10940",
                                        "typeString": "contract ISuperToken"
                                      },
                                      {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    ],
                                    "expression": {
                                      "id": 3227,
                                      "name": "_cfa",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2542,
                                      "src": "9320:4:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                                        "typeString": "contract IConstantFlowAgreementV1"
                                      }
                                    },
                                    "id": 3228,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getNetFlow",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7266,
                                    "src": "9320:15:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_contract$_ISuperfluidToken_$10025_$_t_address_$returns$_t_int96_$",
                                      "typeString": "function (contract ISuperfluidToken,address) view external returns (int96)"
                                    }
                                  },
                                  "id": 3234,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9320:46:44",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 3237,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9396:1:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 3236,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "9386:9:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (bytes memory)"
                                    },
                                    "typeName": {
                                      "id": 3235,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9390:5:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_storage_ptr",
                                        "typeString": "bytes"
                                      }
                                    }
                                  },
                                  "id": 3238,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9386:12:44",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_ISuperToken_$10940",
                                    "typeString": "contract ISuperToken"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 3220,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "9169:3:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 3221,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "9169:22:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 3239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9169:245:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "3078",
                              "id": 3240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9430:4:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                "typeString": "literal_string \"0x\""
                              },
                              "value": "0x"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                                "typeString": "contract IConstantFlowAgreementV1"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                "typeString": "literal_string \"0x\""
                              }
                            ],
                            "expression": {
                              "id": 3216,
                              "name": "_host",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2540,
                              "src": "9114:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$7707",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 3218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "callAgreement",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7614,
                            "src": "9114:19:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$9771_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory) external returns (bytes memory)"
                            }
                          },
                          "id": 3241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9114:332:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 3242,
                        "nodeType": "ExpressionStatement",
                        "src": "9114:332:44"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3245,
                      "name": "_receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2546,
                      "src": "9518:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3246,
                      "name": "newReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3149,
                      "src": "9530:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9518:23:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3248,
                  "nodeType": "ExpressionStatement",
                  "src": "9518:23:44"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3250,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2546,
                        "src": "9573:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3249,
                      "name": "ReceiverChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2730,
                      "src": "9557:15:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9557:26:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3252,
                  "nodeType": "EmitStatement",
                  "src": "9552:31:44"
                }
              ]
            },
            "id": 3254,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_changeReceiver",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3149,
                  "mutability": "mutable",
                  "name": "newReceiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 3254,
                  "src": "8199:19:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8199:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8197:23:44"
            },
            "returnParameters": {
              "id": 3151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8230:0:44"
            },
            "scope": 3527,
            "src": "8173:1417:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              7048
            ],
            "body": {
              "id": 3297,
              "nodeType": "Block",
              "src": "10164:139:44",
              "statements": [
                {
                  "assignments": [
                    3279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3279,
                      "mutability": "mutable",
                      "name": "userData",
                      "nodeType": "VariableDeclaration",
                      "scope": 3297,
                      "src": "10174:21:44",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 3278,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "10174:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3291,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3284,
                              "name": "_ctx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3266,
                              "src": "10225:4:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 3282,
                              "name": "_host",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2540,
                              "src": "10209:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$7707",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 3283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "decodeCtx",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7678,
                            "src": "10209:15:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_struct$_Context_$7645_memory_ptr_$",
                              "typeString": "function (bytes memory) pure external returns (struct ISuperfluid.Context memory)"
                            }
                          },
                          "id": 3285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10209:21:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Context_$7645_memory_ptr",
                            "typeString": "struct ISuperfluid.Context memory"
                          }
                        },
                        "id": 3286,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "userData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7636,
                        "src": "10209:30:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 3288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10242:5:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 3287,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "10242:5:44",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 3289,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "10241:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                          "typeString": "type(bytes storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                          "typeString": "type(bytes storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 3280,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "10198:3:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 3281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "10198:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 3290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10198:51:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10174:75:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3293,
                        "name": "_ctx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3266,
                        "src": "10281:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 3294,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3279,
                        "src": "10287:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3292,
                      "name": "_updateOutflow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2867,
                      "src": "10266:14:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_calldata_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes calldata,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 3295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10266:30:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 3277,
                  "id": 3296,
                  "nodeType": "Return",
                  "src": "10259:37:44"
                }
              ]
            },
            "functionSelector": "d86ed3e5",
            "id": 3298,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3270,
                    "name": "_superToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3256,
                    "src": "10075:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10940",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  {
                    "id": 3271,
                    "name": "_agreementClass",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3258,
                    "src": "10088:15:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3272,
                "modifierName": {
                  "id": 3269,
                  "name": "onlyExpected",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3522,
                  "src": "10062:12:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_contract$_ISuperToken_$10940_$_t_address_$",
                    "typeString": "modifier (contract ISuperToken,address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10062:42:44"
              },
              {
                "id": 3274,
                "modifierName": {
                  "id": 3273,
                  "name": "onlyHost",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3500,
                  "src": "10113:8:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10113:8:44"
              }
            ],
            "name": "afterAgreementCreated",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3268,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10045:8:44"
            },
            "parameters": {
              "id": 3267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3256,
                  "mutability": "mutable",
                  "name": "_superToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 3298,
                  "src": "9823:23:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10940",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 3255,
                    "name": "ISuperToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10940,
                    "src": "9823:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10940",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3258,
                  "mutability": "mutable",
                  "name": "_agreementClass",
                  "nodeType": "VariableDeclaration",
                  "scope": 3298,
                  "src": "9856:23:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9856:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3260,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3298,
                  "src": "9889:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3259,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9889:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3262,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3298,
                  "src": "9923:14:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3261,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9923:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3264,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3298,
                  "src": "9966:14:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3263,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9966:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3266,
                  "mutability": "mutable",
                  "name": "_ctx",
                  "nodeType": "VariableDeclaration",
                  "scope": 3298,
                  "src": "10002:19:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3265,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10002:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9813:214:44"
            },
            "returnParameters": {
              "id": 3277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3276,
                  "mutability": "mutable",
                  "name": "newCtx",
                  "nodeType": "VariableDeclaration",
                  "scope": 3298,
                  "src": "10139:19:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3275,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10139:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10138:21:44"
            },
            "scope": 3527,
            "src": "9783:520:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              7092
            ],
            "body": {
              "id": 3341,
              "nodeType": "Block",
              "src": "10683:140:44",
              "statements": [
                {
                  "assignments": [
                    3323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3323,
                      "mutability": "mutable",
                      "name": "userData",
                      "nodeType": "VariableDeclaration",
                      "scope": 3341,
                      "src": "10693:21:44",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 3322,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "10693:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3335,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3328,
                              "name": "_ctx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3310,
                              "src": "10744:4:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 3326,
                              "name": "_host",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2540,
                              "src": "10728:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$7707",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 3327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "decodeCtx",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7678,
                            "src": "10728:15:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_struct$_Context_$7645_memory_ptr_$",
                              "typeString": "function (bytes memory) pure external returns (struct ISuperfluid.Context memory)"
                            }
                          },
                          "id": 3329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10728:21:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Context_$7645_memory_ptr",
                            "typeString": "struct ISuperfluid.Context memory"
                          }
                        },
                        "id": 3330,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "userData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7636,
                        "src": "10728:30:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 3332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10761:5:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 3331,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "10761:5:44",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 3333,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "10760:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                          "typeString": "type(bytes storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                          "typeString": "type(bytes storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 3324,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "10717:3:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 3325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "10717:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 3334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10717:51:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10693:75:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3337,
                        "name": "_ctx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3310,
                        "src": "10800:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 3338,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3323,
                        "src": "10806:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3336,
                      "name": "_updateOutflow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2867,
                      "src": "10785:14:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_calldata_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes calldata,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 3339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10785:31:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 3321,
                  "id": 3340,
                  "nodeType": "Return",
                  "src": "10778:38:44"
                }
              ]
            },
            "functionSelector": "230dbd29",
            "id": 3342,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3314,
                    "name": "_superToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3300,
                    "src": "10594:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10940",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  {
                    "id": 3315,
                    "name": "_agreementClass",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3302,
                    "src": "10607:15:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3316,
                "modifierName": {
                  "id": 3313,
                  "name": "onlyExpected",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3522,
                  "src": "10581:12:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_contract$_ISuperToken_$10940_$_t_address_$",
                    "typeString": "modifier (contract ISuperToken,address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10581:42:44"
              },
              {
                "id": 3318,
                "modifierName": {
                  "id": 3317,
                  "name": "onlyHost",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3500,
                  "src": "10632:8:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10632:8:44"
              }
            ],
            "name": "afterAgreementUpdated",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3312,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10564:8:44"
            },
            "parameters": {
              "id": 3311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3300,
                  "mutability": "mutable",
                  "name": "_superToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "10349:23:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10940",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 3299,
                    "name": "ISuperToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10940,
                    "src": "10349:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10940",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3302,
                  "mutability": "mutable",
                  "name": "_agreementClass",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "10382:23:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10382:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3304,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "10415:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3303,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10415:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3306,
                  "mutability": "mutable",
                  "name": "agreementData",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "10448:28:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3305,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10448:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3308,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "10486:14:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3307,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10486:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3310,
                  "mutability": "mutable",
                  "name": "_ctx",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "10521:19:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3309,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10521:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10339:207:44"
            },
            "returnParameters": {
              "id": 3321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3320,
                  "mutability": "mutable",
                  "name": "newCtx",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "10658:19:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3319,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10658:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10657:21:44"
            },
            "scope": 3527,
            "src": "10309:514:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              7136
            ],
            "body": {
              "id": 3393,
              "nodeType": "Block",
              "src": "11160:314:44",
              "statements": [
                {
                  "assignments": [
                    3363
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3363,
                      "mutability": "mutable",
                      "name": "userData",
                      "nodeType": "VariableDeclaration",
                      "scope": 3393,
                      "src": "11262:21:44",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 3362,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "11262:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3375,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3368,
                              "name": "_ctx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3354,
                              "src": "11313:4:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 3366,
                              "name": "_host",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2540,
                              "src": "11297:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$7707",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 3367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "decodeCtx",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7678,
                            "src": "11297:15:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_struct$_Context_$7645_memory_ptr_$",
                              "typeString": "function (bytes memory) pure external returns (struct ISuperfluid.Context memory)"
                            }
                          },
                          "id": 3369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11297:21:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Context_$7645_memory_ptr",
                            "typeString": "struct ISuperfluid.Context memory"
                          }
                        },
                        "id": 3370,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "userData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7636,
                        "src": "11297:30:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 3372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11330:5:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 3371,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "11330:5:44",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 3373,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "11329:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                          "typeString": "type(bytes storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                          "typeString": "type(bytes storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 3364,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "11286:3:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 3365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "11286:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 3374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11286:51:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11262:75:44"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "11351:26:44",
                      "subExpression": {
                        "arguments": [
                          {
                            "id": 3377,
                            "name": "_superToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3344,
                            "src": "11365:11:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$10940",
                              "typeString": "contract ISuperToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISuperToken_$10940",
                              "typeString": "contract ISuperToken"
                            }
                          ],
                          "id": 3376,
                          "name": "_isSameToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3442,
                          "src": "11352:12:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_ISuperToken_$10940_$returns$_t_bool_$",
                            "typeString": "function (contract ISuperToken) view returns (bool)"
                          }
                        },
                        "id": 3378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11352:25:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "id": 3383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "11381:26:44",
                      "subExpression": {
                        "arguments": [
                          {
                            "id": 3381,
                            "name": "_agreementClass",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3346,
                            "src": "11391:15:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3380,
                          "name": "_isCFAv1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3460,
                          "src": "11382:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 3382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11382:25:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11351:56:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3387,
                  "nodeType": "IfStatement",
                  "src": "11347:73:44",
                  "trueBody": {
                    "expression": {
                      "id": 3385,
                      "name": "_ctx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3354,
                      "src": "11416:4:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "functionReturnParameters": 3361,
                    "id": 3386,
                    "nodeType": "Return",
                    "src": "11409:11:44"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3389,
                        "name": "_ctx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3354,
                        "src": "11452:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 3390,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3363,
                        "src": "11458:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3388,
                      "name": "_updateOutflow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2867,
                      "src": "11437:14:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_calldata_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes calldata,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 3391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11437:30:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 3361,
                  "id": 3392,
                  "nodeType": "Return",
                  "src": "11430:37:44"
                }
              ]
            },
            "functionSelector": "53c11f99",
            "id": 3394,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3358,
                "modifierName": {
                  "id": 3357,
                  "name": "onlyHost",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3500,
                  "src": "11109:8:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "11109:8:44"
              }
            ],
            "name": "afterAgreementTerminated",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3356,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11092:8:44"
            },
            "parameters": {
              "id": 3355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3344,
                  "mutability": "mutable",
                  "name": "_superToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 3394,
                  "src": "10872:23:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10940",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 3343,
                    "name": "ISuperToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10940,
                    "src": "10872:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10940",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3346,
                  "mutability": "mutable",
                  "name": "_agreementClass",
                  "nodeType": "VariableDeclaration",
                  "scope": 3394,
                  "src": "10905:23:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3345,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10905:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3348,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3394,
                  "src": "10938:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3347,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10938:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3350,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3394,
                  "src": "10971:14:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3349,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10971:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3352,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3394,
                  "src": "11014:14:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3351,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11014:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3354,
                  "mutability": "mutable",
                  "name": "_ctx",
                  "nodeType": "VariableDeclaration",
                  "scope": 3394,
                  "src": "11049:19:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3353,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11049:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10862:212:44"
            },
            "returnParameters": {
              "id": 3361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3360,
                  "mutability": "mutable",
                  "name": "newCtx",
                  "nodeType": "VariableDeclaration",
                  "scope": 3394,
                  "src": "11135:19:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3359,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11135:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11134:21:44"
            },
            "scope": 3527,
            "src": "10829:645:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3423,
              "nodeType": "Block",
              "src": "11565:346:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3406,
                        "name": "_cfa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2542,
                        "src": "11612:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                          "typeString": "contract IConstantFlowAgreementV1"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 3409,
                                "name": "_cfa",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2542,
                                "src": "11678:4:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                }
                              },
                              "id": 3410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "createFlow",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7192,
                              "src": "11678:15:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$10025_$_t_address_$_t_int96_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (contract ISuperfluidToken,address,int96,bytes memory) external returns (bytes memory)"
                              }
                            },
                            "id": 3411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "11678:24:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 3412,
                            "name": "_acceptedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2544,
                            "src": "11724:14:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$10940",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          {
                            "id": 3413,
                            "name": "newReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3396,
                            "src": "11760:11:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3414,
                            "name": "flowRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3398,
                            "src": "11793:8:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11833:1:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "11823:9:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (bytes memory)"
                              },
                              "typeName": {
                                "id": 3415,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "11827:5:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes"
                                }
                              }
                            },
                            "id": 3418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11823:12:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_contract$_ISuperToken_$10940",
                              "typeString": "contract ISuperToken"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 3407,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11634:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "11634:22:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 3419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11634:219:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 3420,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3400,
                        "src": "11871:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$7298",
                          "typeString": "contract IConstantFlowAgreementV1"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 3403,
                        "name": "_host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2540,
                        "src": "11575:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$7707",
                          "typeString": "contract ISuperfluid"
                        }
                      },
                      "id": 3405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callAgreement",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7614,
                      "src": "11575:19:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$9771_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory) external returns (bytes memory)"
                      }
                    },
                    "id": 3421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11575:329:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 3422,
                  "nodeType": "ExpressionStatement",
                  "src": "11575:329:44"
                }
              ]
            },
            "functionSelector": "ae015adc",
            "id": 3424,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createFlow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3396,
                  "mutability": "mutable",
                  "name": "newReceiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 3424,
                  "src": "11500:19:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11500:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3398,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 3424,
                  "src": "11521:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3397,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11521:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3400,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3424,
                  "src": "11536:18:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3399,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11536:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11499:56:44"
            },
            "returnParameters": {
              "id": 3402,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11565:0:44"
            },
            "scope": 3527,
            "src": "11480:431:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3441,
              "nodeType": "Block",
              "src": "11991:70:44",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 3433,
                          "name": "superToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3426,
                          "src": "12016:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$10940",
                            "typeString": "contract ISuperToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ISuperToken_$10940",
                            "typeString": "contract ISuperToken"
                          }
                        ],
                        "id": 3432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12008:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3431,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12008:7:44",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12008:19:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 3437,
                          "name": "_acceptedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2544,
                          "src": "12039:14:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$10940",
                            "typeString": "contract ISuperToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ISuperToken_$10940",
                            "typeString": "contract ISuperToken"
                          }
                        ],
                        "id": 3436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12031:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3435,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12031:7:44",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12031:23:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12008:46:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3430,
                  "id": 3440,
                  "nodeType": "Return",
                  "src": "12001:53:44"
                }
              ]
            },
            "id": 3442,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isSameToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3426,
                  "mutability": "mutable",
                  "name": "superToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 3442,
                  "src": "11939:22:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10940",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 3425,
                    "name": "ISuperToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10940,
                    "src": "11939:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10940",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11938:24:44"
            },
            "returnParameters": {
              "id": 3430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3429,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3442,
                  "src": "11985:4:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3428,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11985:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11984:6:44"
            },
            "scope": 3527,
            "src": "11917:144:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3459,
              "nodeType": "Block",
              "src": "12137:158:44",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 3457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 3450,
                              "name": "agreementClass",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3444,
                              "src": "12170:14:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3449,
                            "name": "ISuperAgreement",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9771,
                            "src": "12154:15:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISuperAgreement_$9771_$",
                              "typeString": "type(contract ISuperAgreement)"
                            }
                          },
                          "id": 3451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12154:31:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperAgreement_$9771",
                            "typeString": "contract ISuperAgreement"
                          }
                        },
                        "id": 3452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "agreementType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9754,
                        "src": "12154:45:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                          "typeString": "function () view external returns (bytes32)"
                        }
                      },
                      "id": 3453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12154:47:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e61677265656d656e74732e436f6e7374616e74466c6f7741677265656d656e742e7631",
                          "id": 3455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12227:60:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_a9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3",
                            "typeString": "literal_string \"org.superfluid-finance.agreements.ConstantFlowAgreement.v1\""
                          },
                          "value": "org.superfluid-finance.agreements.ConstantFlowAgreement.v1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_a9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3",
                            "typeString": "literal_string \"org.superfluid-finance.agreements.ConstantFlowAgreement.v1\""
                          }
                        ],
                        "id": 3454,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "12217:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 3456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12217:71:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "12154:134:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3448,
                  "id": 3458,
                  "nodeType": "Return",
                  "src": "12147:141:44"
                }
              ]
            },
            "id": 3460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isCFAv1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3444,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nodeType": "VariableDeclaration",
                  "scope": 3460,
                  "src": "12085:22:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12085:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12084:24:44"
            },
            "returnParameters": {
              "id": 3448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3447,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3460,
                  "src": "12131:4:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3446,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12131:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12130:6:44"
            },
            "scope": 3527,
            "src": "12067:228:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3484,
              "nodeType": "Block",
              "src": "12365:206:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3467,
                            "name": "ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2551,
                            "src": "12391:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 3468,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "12403:3:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "12403:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 3466,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4141,
                          "src": "12383:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 3470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12383:31:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f7420616e2061646d696e",
                        "id": 3471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12416:24:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
                          "typeString": "literal_string \"Caller is not an admin\""
                        },
                        "value": "Caller is not an admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
                          "typeString": "literal_string \"Caller is not an admin\""
                        }
                      ],
                      "id": 3465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12375:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12375:66:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3473,
                  "nodeType": "ExpressionStatement",
                  "src": "12375:66:44"
                },
                {
                  "expression": {
                    "id": 3476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3474,
                      "name": "_tennerrEscrowContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2555,
                      "src": "12451:29:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3475,
                      "name": "newContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3462,
                      "src": "12483:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "12451:43:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 3477,
                  "nodeType": "ExpressionStatement",
                  "src": "12451:43:44"
                },
                {
                  "expression": {
                    "id": 3482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3478,
                      "name": "tennerrEscrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2553,
                      "src": "12504:13:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TennerrEscrow_$2275",
                        "typeString": "contract TennerrEscrow"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3480,
                          "name": "_tennerrEscrowContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2555,
                          "src": "12534:29:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 3479,
                        "name": "TennerrEscrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2275,
                        "src": "12520:13:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TennerrEscrow_$2275_$",
                          "typeString": "type(contract TennerrEscrow)"
                        }
                      },
                      "id": 3481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12520:44:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TennerrEscrow_$2275",
                        "typeString": "contract TennerrEscrow"
                      }
                    },
                    "src": "12504:60:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TennerrEscrow_$2275",
                      "typeString": "contract TennerrEscrow"
                    }
                  },
                  "id": 3483,
                  "nodeType": "ExpressionStatement",
                  "src": "12504:60:44"
                }
              ]
            },
            "functionSelector": "4eb66fff",
            "id": 3485,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTennerrEscrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3462,
                  "mutability": "mutable",
                  "name": "newContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 3485,
                  "src": "12327:27:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3461,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12327:15:44",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12326:29:44"
            },
            "returnParameters": {
              "id": 3464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12365:0:44"
            },
            "scope": 3527,
            "src": "12301:270:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3499,
              "nodeType": "Block",
              "src": "12597:103:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3488,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12615:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12615:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 3492,
                              "name": "_host",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2540,
                              "src": "12637:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$7707",
                                "typeString": "contract ISuperfluid"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISuperfluid_$7707",
                                "typeString": "contract ISuperfluid"
                              }
                            ],
                            "id": 3491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12629:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3490,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12629:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12629:14:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12615:28:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265646972656374416c6c3a20737570706f7274206f6e6c79206f6e6520686f7374",
                        "id": 3495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12645:36:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_370b7f827c282b93253ac705bbaf3986e57977ecd5cc83fb21ce3e33f6937a71",
                          "typeString": "literal_string \"RedirectAll: support only one host\""
                        },
                        "value": "RedirectAll: support only one host"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_370b7f827c282b93253ac705bbaf3986e57977ecd5cc83fb21ce3e33f6937a71",
                          "typeString": "literal_string \"RedirectAll: support only one host\""
                        }
                      ],
                      "id": 3487,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12607:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12607:75:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3497,
                  "nodeType": "ExpressionStatement",
                  "src": "12607:75:44"
                },
                {
                  "id": 3498,
                  "nodeType": "PlaceholderStatement",
                  "src": "12692:1:44"
                }
              ]
            },
            "id": 3500,
            "name": "onlyHost",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12594:2:44"
            },
            "src": "12577:123:44",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3521,
              "nodeType": "Block",
              "src": "12776:176:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3508,
                            "name": "superToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3502,
                            "src": "12807:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$10940",
                              "typeString": "contract ISuperToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISuperToken_$10940",
                              "typeString": "contract ISuperToken"
                            }
                          ],
                          "id": 3507,
                          "name": "_isSameToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3442,
                          "src": "12794:12:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_ISuperToken_$10940_$returns$_t_bool_$",
                            "typeString": "function (contract ISuperToken) view returns (bool)"
                          }
                        },
                        "id": 3509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12794:24:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265646972656374416c6c3a206e6f7420616363657074656420746f6b656e",
                        "id": 3510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12820:33:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ef6baca4dd3d614b0e5e3caec0303e130277d0a6e42356a075c29e9f489ed78",
                          "typeString": "literal_string \"RedirectAll: not accepted token\""
                        },
                        "value": "RedirectAll: not accepted token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ef6baca4dd3d614b0e5e3caec0303e130277d0a6e42356a075c29e9f489ed78",
                          "typeString": "literal_string \"RedirectAll: not accepted token\""
                        }
                      ],
                      "id": 3506,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12786:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12786:68:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3512,
                  "nodeType": "ExpressionStatement",
                  "src": "12786:68:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3515,
                            "name": "agreementClass",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3504,
                            "src": "12881:14:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3514,
                          "name": "_isCFAv1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3460,
                          "src": "12872:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 3516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12872:24:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265646972656374416c6c3a206f6e6c7920434641763120737570706f72746564",
                        "id": 3517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12898:35:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12d744cad4b1b036385df1b75d050180eb75fb35b86995093d37d66b9ca87985",
                          "typeString": "literal_string \"RedirectAll: only CFAv1 supported\""
                        },
                        "value": "RedirectAll: only CFAv1 supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12d744cad4b1b036385df1b75d050180eb75fb35b86995093d37d66b9ca87985",
                          "typeString": "literal_string \"RedirectAll: only CFAv1 supported\""
                        }
                      ],
                      "id": 3513,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12864:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12864:70:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3519,
                  "nodeType": "ExpressionStatement",
                  "src": "12864:70:44"
                },
                {
                  "id": 3520,
                  "nodeType": "PlaceholderStatement",
                  "src": "12944:1:44"
                }
              ]
            },
            "id": 3522,
            "name": "onlyExpected",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3502,
                  "mutability": "mutable",
                  "name": "superToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 3522,
                  "src": "12728:22:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10940",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 3501,
                    "name": "ISuperToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10940,
                    "src": "12728:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10940",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3504,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nodeType": "VariableDeclaration",
                  "scope": 3522,
                  "src": "12752:22:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3503,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12752:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12727:48:44"
            },
            "src": "12706:246:44",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3525,
              "nodeType": "Block",
              "src": "12985:2:44",
              "statements": []
            },
            "id": 3526,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12965:2:44"
            },
            "returnParameters": {
              "id": 3524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12985:0:44"
            },
            "scope": 3527,
            "src": "12958:29:44",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3528,
        "src": "789:12201:44"
      }
    ],
    "src": "32:12959:44"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620027a2380380620027a283398101604081905262000034916200025f565b6001600160a01b038416620000665760405162461bcd60e51b81526004016200005d906200037f565b60405180910390fd5b6001600160a01b0383166200008f5760405162461bcd60e51b81526004016200005d9062000348565b6001600160a01b038216620000b85760405162461bcd60e51b81526004016200005d90620002da565b6001600160a01b038116620000e15760405162461bcd60e51b81526004016200005d9062000311565b604051631e51d6a760e11b81526001600160a01b03851690633ca3ad4e906200010f908490600401620002c6565b60206040518083038186803b1580156200012857600080fd5b505afa1580156200013d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000163919062000236565b15620001835760405162461bcd60e51b81526004016200005d90620003b6565b600180546001600160a01b03199081166001600160a01b038781169190911792839055600280548316878316179055600380548316868316179055600480549092168482161782556040516315a722b960e31b8152641500000001939091169163ad3915c891620001f791859101620003e2565b600060405180830381600087803b1580156200021257600080fd5b505af115801562000227573d6000803e3d6000fd5b50505050505050505062000404565b60006020828403121562000248578081fd5b8151801515811462000258578182fd5b9392505050565b6000806000806080858703121562000275578283fd5b84516200028281620003eb565b60208601519094506200029581620003eb565b6040860151909350620002a881620003eb565b6060860151909250620002bb81620003eb565b939692955090935050565b6001600160a01b0391909116815260200190565b6020808252601d908201527f6163636570746564546f6b656e206973207a65726f2061646472657373000000604082015260600190565b60208082526018908201527f7265636569766572206973207a65726f20616464726573730000000000000000604082015260600190565b60208082526013908201527f636661206973207a65726f206164647265737300000000000000000000000000604082015260600190565b60208082526014908201527f686f7374206973207a65726f2061646472657373000000000000000000000000604082015260600190565b6020808252601290820152710726563656976657220697320616e206170760741b604082015260600190565b90815260200190565b6001600160a01b03811681146200040157600080fd5b50565b61238e80620004146000396000f3fe6080604052600436106101395760003560e01c806360f5bc21116100ab5780639883145e1161006f5780639883145e14610374578063a217fddf14610394578063ae015adc146103a9578063ca15c873146103c9578063d547741f146103e9578063d86ed3e51461014557610140565b806360f5bc21146102c557806375b238fc146102f2578063884d1f40146103075780639010d07c1461032757806391d148541461034757610140565b806336568abe116100fd57806336568abe1461020e5780634dbb40b21461022e5780634eb66fff1461025057806353c11f99146102705780635bd7fa11146102905780635f9e7d77146102a557610140565b8063230dbd2914610145578063248a9ca31461017b57806328d2bf94146101a85780632f2ff15d146101cc57806330d9c915146101ee57610140565b3661014057005b600080fd5b34801561015157600080fd5b50610165610160366004611aa1565b610409565b6040516101729190611de5565b60405180910390f35b34801561018757600080fd5b5061019b6101963660046118e9565b610546565b6040516101729190611dad565b3480156101b457600080fd5b506101bd61055b565b604051610172939291906122a7565b3480156101d857600080fd5b506101ec6101e7366004611919565b61061c565b005b3480156101fa57600080fd5b50610165610209366004611a05565b610664565b34801561021a57600080fd5b506101ec610229366004611919565b61067e565b34801561023a57600080fd5b506102436106c0565b6040516101729190611d5d565b34801561025c57600080fd5b506101ec61026b366004611834565b6106cf565b34801561027c57600080fd5b5061016561028b366004611aa1565b610744565b34801561029c57600080fd5b5061024361088d565b3480156102b157600080fd5b506101656102c0366004611a05565b61089c565b3480156102d157600080fd5b506102e56102e03660046118e9565b6108b6565b6040516101729190611d71565b3480156102fe57600080fd5b5061019b610ab5565b34801561031357600080fd5b50610165610322366004611a05565b610ad9565b34801561033357600080fd5b50610243610342366004611948565b610af3565b34801561035357600080fd5b50610367610362366004611919565b610b14565b6040516101729190611da2565b34801561038057600080fd5b5061019b61038f366004611948565b610b2c565b3480156103a057600080fd5b5061019b610b5a565b3480156103b557600080fd5b506101ec6103c4366004611857565b610b5f565b3480156103d557600080fd5b5061019b6103e43660046118e9565b610c4e565b3480156103f557600080fd5b506101ec610404366004611919565b610c65565b6060898961041682610c9f565b61043b5760405162461bcd60e51b815260040161043290612037565b60405180910390fd5b61044481610cb3565b6104605760405162461bcd60e51b815260040161043290611ff6565b6001546001600160a01b0316331461048a5760405162461bcd60e51b8152600401610432906120c1565b600154604051631fb6491d60e11b81526060916001600160a01b031690633f6c923a906104bd9089908990600401611db6565b60006040518083038186803b1580156104d557600080fd5b505afa1580156104e9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105119190810190611b83565b60a001518060200190518101906105289190611969565b9050610535868683610d4e565b9d9c50505050505050505050505050565b60009081526020819052604090206002015490565b600454600090819081906001600160a01b0316156106175760025460035460048054604051631cd43d1160e31b81526001600160a01b039485169463e6a1e888946105af9490821693309392169101611ea5565b60806040518083038186803b1580156105c757600080fd5b505afa1580156105db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ff9190611cf5565b50506004549194506001600160a01b03909116925090505b909192565b60008281526020819052604090206002015461063a90610362611104565b6106565760405162461bcd60e51b815260040161043290611fa7565b6106608282611108565b5050565b606060405162461bcd60e51b815260040161043290612209565b610686611104565b6001600160a01b0316816001600160a01b0316146106b65760405162461bcd60e51b815260040161043290612258565b6106608282611171565b6008546001600160a01b031681565b6106f97fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177533610b14565b6107155760405162461bcd60e51b8152600401610432906121d9565b600680546001600160a01b03199081166001600160a01b03938416179182905560058054929093169116179055565b6001546060906001600160a01b031633146107715760405162461bcd60e51b8152600401610432906120c1565b600154604051631fb6491d60e11b81526060916001600160a01b031690633f6c923a906107a49087908790600401611db6565b60006040518083038186803b1580156107bc57600080fd5b505afa1580156107d0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107f89190810190611b83565b60a0015180602001905181019061080f9190611969565b905061081a8b610c9f565b158061082c575061082a8a610cb3565b155b156108715783838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509294506108809350505050565b61087c848483610d4e565b9150505b9998505050505050505050565b6005546001600160a01b031681565b606060405162461bcd60e51b81526004016104329061206e565b6108be61168c565b6000828152600960205260408120805460029081106108d957fe5b9060005260206000200154905060006009600085815260200190815260200160002060058154811061090757fe5b9060005260206000200154905060006009600086815260200190815260200160002060038154811061093557fe5b600091825260208220015460025460035460405163e8e7e2d160e01b81529294506001600160a01b039182169263e8e7e2d1926109789216903090600401611e8b565b60206040518083038186803b15801561099057600080fd5b505afa1580156109a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c89190611b68565b60025460035460048054604051631cd43d1160e31b81529495506000946001600160a01b039485169463e6a1e88894610a0a9490821693309392169101611ea5565b60806040518083038186803b158015610a2257600080fd5b505afa158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a9190611cf5565b509092505050818101600b0b6000610a7286426111da565b90506000610a8042876111da565b6040805160a0810182528581529490910260208501528301979097526060820152608081019490945250919350505050919050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b606060405162461bcd60e51b81526004016104329061218a565b6000828152602081905260408120610b0b9083611202565b90505b92915050565b6000828152602081905260408120610b0b908361120e565b60096020528160005260406000208181548110610b4557fe5b90600052602060002001600091509150505481565b600081565b6001546002546003546040805160008152602081019091526001600160a01b03938416936339255d5b9381169263317e182f60e11b92610baa92909116908990899060448101611f32565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b9092168252610bf292918690600401611df8565b600060405180830381600087803b158015610c0c57600080fd5b505af1158015610c20573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c489190810190611969565b50505050565b6000818152602081905260408120610b0e90611223565b600082815260208190526040902060020154610c8390610362611104565b6106b65760405162461bcd60e51b81526004016104329061213a565b6003546001600160a01b0390811691161490565b60007fa9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3826001600160a01b0316637730599e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d0f57600080fd5b505afa158015610d23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d479190611901565b1492915050565b606083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060025460035460405163e8e7e2d160e01b815296975091956001600160a01b03918216955063e8e7e2d19450610dc093509116903090600401611e8b565b60206040518083038186803b158015610dd857600080fd5b505afa158015610dec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e109190611b68565b60025460035460048054604051631cd43d1160e31b81529495506000946001600160a01b039485169463e6a1e88894610e529490821693309392169101611ea5565b60806040518083038186803b158015610e6a57600080fd5b505afa158015610e7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea29190611cf5565b509092505050818101610eb48561122e565b600b81900b610fb2576001546002546003546004546040805160008152602081019091526001600160a01b0394851694634329d29394811693635a5999e360e11b93610f0c9391831692309291169060448101611ec8565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b9092168252610f5492918990600401611e38565b600060405180830381600087803b158015610f6e57600080fd5b505af1158015610f82573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610faa91908101906119a4565b5093506110fa565b600b82900b1561100a576001546002546003546004546040805160008152602081019091526001600160a01b0394851694634329d293948116936328104d3160e11b93610f0c93918316921690889060448101611efc565b6001546002546003546004546040805160008152602081019091526001600160a01b0394851694634329d2939481169363317e182f60e11b9361105893918316921690889060448101611efc565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b90921682526110a092918990600401611e38565b600060405180830381600087803b1580156110ba57600080fd5b505af11580156110ce573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110f691908101906119a4565b5093505b5050509392505050565b3390565b600082815260208190526040902061112090826112fb565b156106605761112d611104565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526020819052604090206111899082611310565b1561066057611196611104565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000828211156111fc5760405162461bcd60e51b815260040161043290612103565b50900390565b6000610b0b8383611325565b6000610b0b836001600160a01b03841661136a565b6000610b0e82611382565b600061123b826000611386565b90506112456116aa565b60055460405163ebd2d6a760e01b81526001600160a01b039091169063ebd2d6a790611275908590600401611dad565b60e06040518083038186803b15801561128d57600080fd5b505afa1580156112a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c59190611c7c565b6040810151606082015160a083015160c0840151939450919290919042906112f18786868686866113cd565b5050505050505050565b6000610b0b836001600160a01b038416611575565b6000610b0b836001600160a01b0384166115bf565b815460009082106113485760405162461bcd60e51b815260040161043290611f65565b82600001828154811061135757fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b60008060005b60208110156113c5578060080285828601815181106113a757fe5b01602001516001600160f81b031916901c919091179060010161138c565b509392505050565b60025460035460405163e8e7e2d160e01b81526000926001600160a01b039081169263e8e7e2d19261140792909116903090600401611e8b565b60206040518083038186803b15801561141f57600080fd5b505afa158015611433573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114579190611b68565b60025460035460048054604051631cd43d1160e31b81529495506000946001600160a01b039485169463e6a1e888946114999490821693309392169101611ea5565b60806040518083038186803b1580156114b157600080fd5b505afa1580156114c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e99190611cf5565b509092505050818101600b0b600061150185426111da565b9050600061150f42886111da565b9050600081840290506040518060c001604052808581526020018281526020018a815260200189815260200184815260200188815250600960008e81526020019081526020016000209060066115669291906116fc565b50505050505050505050505050565b6000611581838361136a565b6115b757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610b0e565b506000610b0e565b6000818152600183016020526040812054801561167b57835460001980830191908101906000908790839081106115f257fe5b906000526020600020015490508087600001848154811061160f57fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061163f57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610b0e565b6000915050610b0e565b5092915050565b6040518060a001604052806005906020820280368337509192915050565b6040518060e00160405280600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000801916815260200160008152602001600081525090565b828054828255906000526020600020908101928215611737579160200282015b8281111561173757825182559160200191906001019061171c565b50611743929150611747565b5090565b5b808211156117435760008155600101611748565b8051610b0e81612340565b80516001600160e01b031981168114610b0e57600080fd5b60008083601f840112611790578182fd5b50813567ffffffffffffffff8111156117a7578182fd5b6020830191508360208285010111156117bf57600080fd5b9250929050565b600082601f8301126117d6578081fd5b81516117e96117e4826122f0565b6122c9565b915080825283602082850101111561180057600080fd5b611685816020840160208601612314565b8051600b81900b8114610b0e57600080fd5b805160ff81168114610b0e57600080fd5b600060208284031215611845578081fd5b813561185081612340565b9392505050565b60008060006060848603121561186b578182fd5b833561187681612340565b925060208401359150604084013567ffffffffffffffff811115611898578182fd5b8401601f810186136118a8578182fd5b80356118b66117e4826122f0565b8181528760208385010111156118ca578384fd5b8160208401602083013783602083830101528093505050509250925092565b6000602082840312156118fa578081fd5b5035919050565b600060208284031215611912578081fd5b5051919050565b6000806040838503121561192b578182fd5b82359150602083013561193d81612340565b809150509250929050565b6000806040838503121561195a578182fd5b50508035926020909101359150565b60006020828403121561197a578081fd5b815167ffffffffffffffff811115611990578182fd5b61199c848285016117c6565b949350505050565b600080604083850312156119b6578182fd5b825167ffffffffffffffff808211156119cd578384fd5b6119d9868387016117c6565b935060208501519150808211156119ee578283fd5b506119fb858286016117c6565b9150509250929050565b600080600080600080600060a0888a031215611a1f578485fd5b8735611a2a81612340565b96506020880135611a3a81612340565b955060408801359450606088013567ffffffffffffffff80821115611a5d578485fd5b611a698b838c0161177f565b909650945060808a0135915080821115611a81578384fd5b50611a8e8a828b0161177f565b989b979a50959850939692959293505050565b600080600080600080600080600060c08a8c031215611abe578283fd5b8935611ac981612340565b985060208a0135611ad981612340565b975060408a0135965060608a013567ffffffffffffffff80821115611afc578485fd5b611b088d838e0161177f565b909850965060808c0135915080821115611b20578485fd5b611b2c8d838e0161177f565b909650945060a08c0135915080821115611b44578384fd5b50611b518c828d0161177f565b915080935050809150509295985092959850929598565b600060208284031215611b79578081fd5b610b0b8383611811565b600060208284031215611b94578081fd5b815167ffffffffffffffff80821115611bab578283fd5b8184019150610140808387031215611bc1578384fd5b611bca816122c9565b9050611bd68684611823565b8152611be58660208501611823565b602082015260408301516040820152611c01866060850161175c565b6060820152611c138660808501611767565b608082015260a083015182811115611c29578485fd5b611c35878286016117c6565b60a08301525060c083015160c082015260e083015160e0820152610100915081830151828201526101209150611c6d8683850161175c565b91810191909152949350505050565b600060e08284031215611c8d578081fd5b611c9760e06122c9565b82518152602083015160208201526040830151611cb381612340565b60408201526060830151611cc681612340565b806060830152506080830151608082015260a083015160a082015260c083015160c08201528091505092915050565b60008060008060808587031215611d0a578182fd5b84519350611d1b8660208701611811565b6040860151606090960151949790965092505050565b60008151808452611d49816020860160208601612314565b601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b60a08101818360005b6005811015611d99578151835260209283019290910190600101611d7a565b50505092915050565b901515815260200190565b90815260200190565b60006020825282602083015282846040840137818301604090810191909152601f909201601f19160101919050565b600060208252610b0b6020830184611d31565b6001600160a01b0384168152606060208201819052600090611e1c90830185611d31565b8281036040840152611e2e8185611d31565b9695505050505050565b6001600160a01b0384168152608060208201819052600090611e5c90830185611d31565b8281038060408501526002825261060f60f31b602083015260408101606085015250611e2e6040820185611d31565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b0393841681529183166020830152909116604082015260600190565b6001600160a01b038581168252848116602083015283166040820152608060608201819052600090611e2e90830184611d31565b6001600160a01b03858116825284166020820152600b83900b6040820152608060608201819052600090611e2e90830184611d31565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611e2e90830184611d31565b60208082526022908201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604082015261647360f01b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526e0818591b5a5b881d1bc819dc985b9d608a1b606082015260800190565b60208082526021908201527f5265646972656374416c6c3a206f6e6c7920434641763120737570706f7274656040820152601960fa1b606082015260800190565b6020808252601f908201527f5265646972656374416c6c3a206e6f7420616363657074656420746f6b656e00604082015260600190565b60208082526033908201527f556e737570706f727465642063616c6c6261636b202d20204265666f7265204160408201527219dc99595b595b9d0815195c9b5a5b985d1959606a1b606082015260800190565b60208082526022908201527f5265646972656374416c6c3a20737570706f7274206f6e6c79206f6e6520686f6040820152611cdd60f21b606082015260800190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b60208082526030908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526f2061646d696e20746f207265766f6b6560801b606082015260800190565b6020808252602f908201527f556e737570706f727465642063616c6c6261636b202d204265666f726520416760408201526e1c99595b595b9d081d5c19185d1959608a1b606082015260800190565b60208082526016908201527521b0b63632b91034b9903737ba1030b71030b236b4b760511b604082015260600190565b6020808252602f908201527f556e737570706f727465642063616c6c6261636b202d204265666f726520416760408201526e1c99595b595b9d0810dc99585d1959608a1b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b9283526001600160a01b03919091166020830152600b0b604082015260600190565b60405181810167ffffffffffffffff811182821017156122e857600080fd5b604052919050565b600067ffffffffffffffff821115612306578081fd5b50601f01601f191660200190565b60005b8381101561232f578181015183820152602001612317565b83811115610c485750506000910152565b6001600160a01b038116811461235557600080fd5b5056fea2646970667358221220c56a02ef81428ab52c02ad3297f805ae1af9c413aae3ce0a767ae8e549e97e5c64736f6c63430007010033",
  "bytecodeSha1": "d001dca243071e7d9c457ae1daee70e0e4cbe453",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.1+commit.f4a555be"
  },
  "contractName": "TennerrStreamer",
  "coverageMap": {
    "branches": {
      "0": {
        "AccessControl._grantRole": {
          "69": [
            7098,
            7131,
            false
          ]
        },
        "AccessControl._revokeRole": {
          "70": [
            7289,
            7325,
            false
          ]
        },
        "AccessControl.grantRole": {
          "66": [
            4727,
            4772,
            true
          ]
        },
        "AccessControl.renounceRole": {
          "67": [
            5904,
            5927,
            true
          ]
        },
        "AccessControl.revokeRole": {
          "68": [
            5185,
            5230,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {},
      "12": {
        "EnumerableSet._add": {
          "72": [
            1724,
            1745,
            false
          ]
        },
        "EnumerableSet._at": {
          "71": [
            4546,
            4572,
            true
          ]
        },
        "EnumerableSet._remove": {
          "73": [
            2449,
            2464,
            false
          ]
        }
      },
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {},
      "19": {},
      "2": {
        "SafeMath.sub": {
          "74": [
            3221,
            3227,
            true
          ]
        }
      },
      "20": {},
      "21": {},
      "22": {},
      "23": {},
      "24": {},
      "25": {},
      "26": {},
      "27": {},
      "29": {},
      "30": {},
      "31": {},
      "32": {},
      "33": {},
      "34": {},
      "35": {},
      "36": {},
      "37": {},
      "38": {},
      "39": {},
      "4": {},
      "40": {},
      "41": {},
      "42": {},
      "43": {},
      "44": {
        "TennerrStreamer._updateOutflow": {
          "64": [
            4119,
            4141,
            false
          ],
          "65": [
            4589,
            4612,
            false
          ]
        },
        "TennerrStreamer.afterAgreementTerminated": {
          "62": [
            11352,
            11377,
            true
          ],
          "63": [
            11382,
            11407,
            false
          ]
        },
        "TennerrStreamer.afterAgreementUpdated": {
          "58": [
            12794,
            12818,
            true
          ],
          "59": [
            12872,
            12896,
            true
          ]
        },
        "TennerrStreamer.currentReceiver": {
          "60": [
            3165,
            3188,
            false
          ]
        },
        "TennerrStreamer.setTennerrEscrow": {
          "61": [
            12383,
            12414,
            true
          ]
        }
      },
      "46": {},
      "47": {},
      "48": {},
      "49": {},
      "5": {},
      "50": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "AccessControl._grantRole": {
          "30": [
            7147,
            7192
          ]
        },
        "AccessControl._revokeRole": {
          "31": [
            7341,
            7386
          ]
        },
        "AccessControl.getRoleAdmin": {
          "1": [
            4358,
            4387
          ]
        },
        "AccessControl.getRoleMember": {
          "17": [
            4057,
            4094
          ]
        },
        "AccessControl.getRoleMemberCount": {
          "20": [
            3337,
            3373
          ]
        },
        "AccessControl.grantRole": {
          "4": [
            4719,
            4824
          ],
          "5": [
            4835,
            4860
          ]
        },
        "AccessControl.hasRole": {
          "18": [
            3035,
            3080
          ]
        },
        "AccessControl.renounceRole": {
          "7": [
            5896,
            5979
          ],
          "8": [
            5990,
            6016
          ]
        },
        "AccessControl.revokeRole": {
          "21": [
            5177,
            5283
          ]
        }
      },
      "1": {},
      "10": {
        "Context._msgSender": {
          "29": [
            678,
            695
          ]
        }
      },
      "11": {},
      "12": {
        "EnumerableSet._add": {
          "48": [
            1761,
            1784
          ],
          "49": [
            1919,
            1959
          ],
          "50": [
            1973,
            1984
          ],
          "51": [
            2015,
            2027
          ]
        },
        "EnumerableSet._at": {
          "40": [
            4538,
            4611
          ],
          "41": [
            4621,
            4646
          ]
        },
        "EnumerableSet._contains": {
          "42": [
            3894,
            3925
          ]
        },
        "EnumerableSet._length": {
          "43": [
            4088,
            4113
          ]
        },
        "EnumerableSet._remove": {
          "52": [
            3274,
            3312
          ],
          "53": [
            3378,
            3421
          ],
          "54": [
            3527,
            3544
          ],
          "55": [
            3612,
            3638
          ],
          "56": [
            3653,
            3664
          ],
          "57": [
            3695,
            3707
          ]
        },
        "EnumerableSet.add": {
          "38": [
            6515,
            6572
          ]
        },
        "EnumerableSet.at": {
          "34": [
            7770,
            7826
          ]
        },
        "EnumerableSet.contains": {
          "35": [
            7080,
            7142
          ]
        },
        "EnumerableSet.length": {
          "36": [
            7312,
            7338
          ]
        },
        "EnumerableSet.remove": {
          "39": [
            6836,
            6896
          ]
        }
      },
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {},
      "19": {},
      "2": {
        "SafeMath.sub": {
          "32": [
            3213,
            3262
          ],
          "33": [
            3272,
            3284
          ]
        }
      },
      "20": {},
      "21": {},
      "22": {},
      "23": {},
      "24": {},
      "25": {},
      "26": {
        "SuperAppBase.beforeAgreementCreated": {
          "6": [
            583,
            640
          ]
        },
        "SuperAppBase.beforeAgreementTerminated": {
          "14": [
            2250,
            2311
          ]
        },
        "SuperAppBase.beforeAgreementUpdated": {
          "16": [
            1415,
            1472
          ]
        }
      },
      "27": {},
      "29": {},
      "30": {},
      "31": {},
      "32": {},
      "33": {},
      "34": {},
      "35": {},
      "36": {},
      "37": {},
      "38": {},
      "39": {},
      "4": {},
      "40": {},
      "41": {},
      "42": {},
      "43": {},
      "44": {
        "TennerrStreamer._accountingCache": {
          "37": [
            5844,
            5913
          ]
        },
        "TennerrStreamer._isCFAv1": {
          "23": [
            12147,
            12288
          ]
        },
        "TennerrStreamer._isSameToken": {
          "22": [
            12001,
            12054
          ]
        },
        "TennerrStreamer._updateOutflow": {
          "24": [
            3590,
            3602
          ],
          "25": [
            4018,
            4044
          ],
          "26": [
            4210,
            4568
          ],
          "27": [
            4623,
            4956
          ],
          "28": [
            5067,
            5422
          ]
        },
        "TennerrStreamer._updateStreamData": {
          "47": [
            6948,
            7040
          ]
        },
        "TennerrStreamer.afterAgreementTerminated": {
          "12": [
            11409,
            11420
          ],
          "13": [
            11430,
            11467
          ]
        },
        "TennerrStreamer.afterAgreementUpdated": {
          "0": [
            10778,
            10816
          ]
        },
        "TennerrStreamer.bytesToBytes32": {
          "44": [
            6078,
            6125
          ],
          "45": [
            6063,
            6066
          ],
          "46": [
            6141,
            6151
          ]
        },
        "TennerrStreamer.createFlow": {
          "19": [
            11575,
            11904
          ]
        },
        "TennerrStreamer.currentReceiver": {
          "2": [
            3204,
            3284
          ],
          "3": [
            3298,
            3318
          ]
        },
        "TennerrStreamer.getStreamData": {
          "15": [
            8040,
            8110
          ]
        },
        "TennerrStreamer.setTennerrEscrow": {
          "9": [
            12375,
            12441
          ],
          "10": [
            12451,
            12494
          ],
          "11": [
            12504,
            12564
          ]
        }
      },
      "46": {},
      "47": {},
      "48": {},
      "49": {},
      "5": {},
      "50": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.4.0/AccessControl",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Address",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/BufferChainlink",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/CBORChainlink",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/Chainlink",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/ChainlinkClient",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/ChainlinkRequestInterface",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Counters",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/ENSInterface",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/ENSResolver",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC20Burnable",
    "superfluid-finance/superfluid@1.0.0/ERC20WithTokenInfo",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/EnumerableSet",
    "IAToken",
    "superfluid-finance/superfluid@1.0.0/IConstantFlowAgreementV1",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC777",
    "ILendingPool",
    "ILendingPoolAddressesProvider",
    "IProtocolDataProvider",
    "IScaledBalanceToken",
    "superfluid-finance/superfluid@1.0.0/ISuperAgreement",
    "superfluid-finance/superfluid@1.0.0/ISuperApp",
    "superfluid-finance/superfluid@1.0.0/ISuperToken",
    "superfluid-finance/superfluid@1.0.0/ISuperTokenFactory",
    "superfluid-finance/superfluid@1.0.0/ISuperfluid",
    "superfluid-finance/superfluid@1.0.0/ISuperfluidGovernance",
    "superfluid-finance/superfluid@1.0.0/ISuperfluidToken",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/LinkTokenInterface",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Ownable",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/PointerInterface",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/SafeMathChainlink",
    "superfluid-finance/superfluid@1.0.0/SuperAppBase",
    "superfluid-finance/superfluid@1.0.0/SuperAppDefinitions",
    "Tennerr",
    "TennerrController",
    "TennerrDAO",
    "TennerrEscrow",
    "TennerrFactory",
    "superfluid-finance/superfluid@1.0.0/TokenInfo",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/VRFConsumerBase",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/VRFRequestIDBase"
  ],
  "deployedBytecode": "6080604052600436106101395760003560e01c806360f5bc21116100ab5780639883145e1161006f5780639883145e14610374578063a217fddf14610394578063ae015adc146103a9578063ca15c873146103c9578063d547741f146103e9578063d86ed3e51461014557610140565b806360f5bc21146102c557806375b238fc146102f2578063884d1f40146103075780639010d07c1461032757806391d148541461034757610140565b806336568abe116100fd57806336568abe1461020e5780634dbb40b21461022e5780634eb66fff1461025057806353c11f99146102705780635bd7fa11146102905780635f9e7d77146102a557610140565b8063230dbd2914610145578063248a9ca31461017b57806328d2bf94146101a85780632f2ff15d146101cc57806330d9c915146101ee57610140565b3661014057005b600080fd5b34801561015157600080fd5b50610165610160366004611aa1565b610409565b6040516101729190611de5565b60405180910390f35b34801561018757600080fd5b5061019b6101963660046118e9565b610546565b6040516101729190611dad565b3480156101b457600080fd5b506101bd61055b565b604051610172939291906122a7565b3480156101d857600080fd5b506101ec6101e7366004611919565b61061c565b005b3480156101fa57600080fd5b50610165610209366004611a05565b610664565b34801561021a57600080fd5b506101ec610229366004611919565b61067e565b34801561023a57600080fd5b506102436106c0565b6040516101729190611d5d565b34801561025c57600080fd5b506101ec61026b366004611834565b6106cf565b34801561027c57600080fd5b5061016561028b366004611aa1565b610744565b34801561029c57600080fd5b5061024361088d565b3480156102b157600080fd5b506101656102c0366004611a05565b61089c565b3480156102d157600080fd5b506102e56102e03660046118e9565b6108b6565b6040516101729190611d71565b3480156102fe57600080fd5b5061019b610ab5565b34801561031357600080fd5b50610165610322366004611a05565b610ad9565b34801561033357600080fd5b50610243610342366004611948565b610af3565b34801561035357600080fd5b50610367610362366004611919565b610b14565b6040516101729190611da2565b34801561038057600080fd5b5061019b61038f366004611948565b610b2c565b3480156103a057600080fd5b5061019b610b5a565b3480156103b557600080fd5b506101ec6103c4366004611857565b610b5f565b3480156103d557600080fd5b5061019b6103e43660046118e9565b610c4e565b3480156103f557600080fd5b506101ec610404366004611919565b610c65565b6060898961041682610c9f565b61043b5760405162461bcd60e51b815260040161043290612037565b60405180910390fd5b61044481610cb3565b6104605760405162461bcd60e51b815260040161043290611ff6565b6001546001600160a01b0316331461048a5760405162461bcd60e51b8152600401610432906120c1565b600154604051631fb6491d60e11b81526060916001600160a01b031690633f6c923a906104bd9089908990600401611db6565b60006040518083038186803b1580156104d557600080fd5b505afa1580156104e9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105119190810190611b83565b60a001518060200190518101906105289190611969565b9050610535868683610d4e565b9d9c50505050505050505050505050565b60009081526020819052604090206002015490565b600454600090819081906001600160a01b0316156106175760025460035460048054604051631cd43d1160e31b81526001600160a01b039485169463e6a1e888946105af9490821693309392169101611ea5565b60806040518083038186803b1580156105c757600080fd5b505afa1580156105db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ff9190611cf5565b50506004549194506001600160a01b03909116925090505b909192565b60008281526020819052604090206002015461063a90610362611104565b6106565760405162461bcd60e51b815260040161043290611fa7565b6106608282611108565b5050565b606060405162461bcd60e51b815260040161043290612209565b610686611104565b6001600160a01b0316816001600160a01b0316146106b65760405162461bcd60e51b815260040161043290612258565b6106608282611171565b6008546001600160a01b031681565b6106f97fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177533610b14565b6107155760405162461bcd60e51b8152600401610432906121d9565b600680546001600160a01b03199081166001600160a01b03938416179182905560058054929093169116179055565b6001546060906001600160a01b031633146107715760405162461bcd60e51b8152600401610432906120c1565b600154604051631fb6491d60e11b81526060916001600160a01b031690633f6c923a906107a49087908790600401611db6565b60006040518083038186803b1580156107bc57600080fd5b505afa1580156107d0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107f89190810190611b83565b60a0015180602001905181019061080f9190611969565b905061081a8b610c9f565b158061082c575061082a8a610cb3565b155b156108715783838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509294506108809350505050565b61087c848483610d4e565b9150505b9998505050505050505050565b6005546001600160a01b031681565b606060405162461bcd60e51b81526004016104329061206e565b6108be61168c565b6000828152600960205260408120805460029081106108d957fe5b9060005260206000200154905060006009600085815260200190815260200160002060058154811061090757fe5b9060005260206000200154905060006009600086815260200190815260200160002060038154811061093557fe5b600091825260208220015460025460035460405163e8e7e2d160e01b81529294506001600160a01b039182169263e8e7e2d1926109789216903090600401611e8b565b60206040518083038186803b15801561099057600080fd5b505afa1580156109a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c89190611b68565b60025460035460048054604051631cd43d1160e31b81529495506000946001600160a01b039485169463e6a1e88894610a0a9490821693309392169101611ea5565b60806040518083038186803b158015610a2257600080fd5b505afa158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a9190611cf5565b509092505050818101600b0b6000610a7286426111da565b90506000610a8042876111da565b6040805160a0810182528581529490910260208501528301979097526060820152608081019490945250919350505050919050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b606060405162461bcd60e51b81526004016104329061218a565b6000828152602081905260408120610b0b9083611202565b90505b92915050565b6000828152602081905260408120610b0b908361120e565b60096020528160005260406000208181548110610b4557fe5b90600052602060002001600091509150505481565b600081565b6001546002546003546040805160008152602081019091526001600160a01b03938416936339255d5b9381169263317e182f60e11b92610baa92909116908990899060448101611f32565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b9092168252610bf292918690600401611df8565b600060405180830381600087803b158015610c0c57600080fd5b505af1158015610c20573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c489190810190611969565b50505050565b6000818152602081905260408120610b0e90611223565b600082815260208190526040902060020154610c8390610362611104565b6106b65760405162461bcd60e51b81526004016104329061213a565b6003546001600160a01b0390811691161490565b60007fa9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3826001600160a01b0316637730599e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d0f57600080fd5b505afa158015610d23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d479190611901565b1492915050565b606083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060025460035460405163e8e7e2d160e01b815296975091956001600160a01b03918216955063e8e7e2d19450610dc093509116903090600401611e8b565b60206040518083038186803b158015610dd857600080fd5b505afa158015610dec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e109190611b68565b60025460035460048054604051631cd43d1160e31b81529495506000946001600160a01b039485169463e6a1e88894610e529490821693309392169101611ea5565b60806040518083038186803b158015610e6a57600080fd5b505afa158015610e7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea29190611cf5565b509092505050818101610eb48561122e565b600b81900b610fb2576001546002546003546004546040805160008152602081019091526001600160a01b0394851694634329d29394811693635a5999e360e11b93610f0c9391831692309291169060448101611ec8565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b9092168252610f5492918990600401611e38565b600060405180830381600087803b158015610f6e57600080fd5b505af1158015610f82573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610faa91908101906119a4565b5093506110fa565b600b82900b1561100a576001546002546003546004546040805160008152602081019091526001600160a01b0394851694634329d293948116936328104d3160e11b93610f0c93918316921690889060448101611efc565b6001546002546003546004546040805160008152602081019091526001600160a01b0394851694634329d2939481169363317e182f60e11b9361105893918316921690889060448101611efc565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b90921682526110a092918990600401611e38565b600060405180830381600087803b1580156110ba57600080fd5b505af11580156110ce573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110f691908101906119a4565b5093505b5050509392505050565b3390565b600082815260208190526040902061112090826112fb565b156106605761112d611104565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526020819052604090206111899082611310565b1561066057611196611104565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000828211156111fc5760405162461bcd60e51b815260040161043290612103565b50900390565b6000610b0b8383611325565b6000610b0b836001600160a01b03841661136a565b6000610b0e82611382565b600061123b826000611386565b90506112456116aa565b60055460405163ebd2d6a760e01b81526001600160a01b039091169063ebd2d6a790611275908590600401611dad565b60e06040518083038186803b15801561128d57600080fd5b505afa1580156112a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c59190611c7c565b6040810151606082015160a083015160c0840151939450919290919042906112f18786868686866113cd565b5050505050505050565b6000610b0b836001600160a01b038416611575565b6000610b0b836001600160a01b0384166115bf565b815460009082106113485760405162461bcd60e51b815260040161043290611f65565b82600001828154811061135757fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b60008060005b60208110156113c5578060080285828601815181106113a757fe5b01602001516001600160f81b031916901c919091179060010161138c565b509392505050565b60025460035460405163e8e7e2d160e01b81526000926001600160a01b039081169263e8e7e2d19261140792909116903090600401611e8b565b60206040518083038186803b15801561141f57600080fd5b505afa158015611433573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114579190611b68565b60025460035460048054604051631cd43d1160e31b81529495506000946001600160a01b039485169463e6a1e888946114999490821693309392169101611ea5565b60806040518083038186803b1580156114b157600080fd5b505afa1580156114c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e99190611cf5565b509092505050818101600b0b600061150185426111da565b9050600061150f42886111da565b9050600081840290506040518060c001604052808581526020018281526020018a815260200189815260200184815260200188815250600960008e81526020019081526020016000209060066115669291906116fc565b50505050505050505050505050565b6000611581838361136a565b6115b757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610b0e565b506000610b0e565b6000818152600183016020526040812054801561167b57835460001980830191908101906000908790839081106115f257fe5b906000526020600020015490508087600001848154811061160f57fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061163f57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610b0e565b6000915050610b0e565b5092915050565b6040518060a001604052806005906020820280368337509192915050565b6040518060e00160405280600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000801916815260200160008152602001600081525090565b828054828255906000526020600020908101928215611737579160200282015b8281111561173757825182559160200191906001019061171c565b50611743929150611747565b5090565b5b808211156117435760008155600101611748565b8051610b0e81612340565b80516001600160e01b031981168114610b0e57600080fd5b60008083601f840112611790578182fd5b50813567ffffffffffffffff8111156117a7578182fd5b6020830191508360208285010111156117bf57600080fd5b9250929050565b600082601f8301126117d6578081fd5b81516117e96117e4826122f0565b6122c9565b915080825283602082850101111561180057600080fd5b611685816020840160208601612314565b8051600b81900b8114610b0e57600080fd5b805160ff81168114610b0e57600080fd5b600060208284031215611845578081fd5b813561185081612340565b9392505050565b60008060006060848603121561186b578182fd5b833561187681612340565b925060208401359150604084013567ffffffffffffffff811115611898578182fd5b8401601f810186136118a8578182fd5b80356118b66117e4826122f0565b8181528760208385010111156118ca578384fd5b8160208401602083013783602083830101528093505050509250925092565b6000602082840312156118fa578081fd5b5035919050565b600060208284031215611912578081fd5b5051919050565b6000806040838503121561192b578182fd5b82359150602083013561193d81612340565b809150509250929050565b6000806040838503121561195a578182fd5b50508035926020909101359150565b60006020828403121561197a578081fd5b815167ffffffffffffffff811115611990578182fd5b61199c848285016117c6565b949350505050565b600080604083850312156119b6578182fd5b825167ffffffffffffffff808211156119cd578384fd5b6119d9868387016117c6565b935060208501519150808211156119ee578283fd5b506119fb858286016117c6565b9150509250929050565b600080600080600080600060a0888a031215611a1f578485fd5b8735611a2a81612340565b96506020880135611a3a81612340565b955060408801359450606088013567ffffffffffffffff80821115611a5d578485fd5b611a698b838c0161177f565b909650945060808a0135915080821115611a81578384fd5b50611a8e8a828b0161177f565b989b979a50959850939692959293505050565b600080600080600080600080600060c08a8c031215611abe578283fd5b8935611ac981612340565b985060208a0135611ad981612340565b975060408a0135965060608a013567ffffffffffffffff80821115611afc578485fd5b611b088d838e0161177f565b909850965060808c0135915080821115611b20578485fd5b611b2c8d838e0161177f565b909650945060a08c0135915080821115611b44578384fd5b50611b518c828d0161177f565b915080935050809150509295985092959850929598565b600060208284031215611b79578081fd5b610b0b8383611811565b600060208284031215611b94578081fd5b815167ffffffffffffffff80821115611bab578283fd5b8184019150610140808387031215611bc1578384fd5b611bca816122c9565b9050611bd68684611823565b8152611be58660208501611823565b602082015260408301516040820152611c01866060850161175c565b6060820152611c138660808501611767565b608082015260a083015182811115611c29578485fd5b611c35878286016117c6565b60a08301525060c083015160c082015260e083015160e0820152610100915081830151828201526101209150611c6d8683850161175c565b91810191909152949350505050565b600060e08284031215611c8d578081fd5b611c9760e06122c9565b82518152602083015160208201526040830151611cb381612340565b60408201526060830151611cc681612340565b806060830152506080830151608082015260a083015160a082015260c083015160c08201528091505092915050565b60008060008060808587031215611d0a578182fd5b84519350611d1b8660208701611811565b6040860151606090960151949790965092505050565b60008151808452611d49816020860160208601612314565b601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b60a08101818360005b6005811015611d99578151835260209283019290910190600101611d7a565b50505092915050565b901515815260200190565b90815260200190565b60006020825282602083015282846040840137818301604090810191909152601f909201601f19160101919050565b600060208252610b0b6020830184611d31565b6001600160a01b0384168152606060208201819052600090611e1c90830185611d31565b8281036040840152611e2e8185611d31565b9695505050505050565b6001600160a01b0384168152608060208201819052600090611e5c90830185611d31565b8281038060408501526002825261060f60f31b602083015260408101606085015250611e2e6040820185611d31565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b0393841681529183166020830152909116604082015260600190565b6001600160a01b038581168252848116602083015283166040820152608060608201819052600090611e2e90830184611d31565b6001600160a01b03858116825284166020820152600b83900b6040820152608060608201819052600090611e2e90830184611d31565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611e2e90830184611d31565b60208082526022908201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604082015261647360f01b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526e0818591b5a5b881d1bc819dc985b9d608a1b606082015260800190565b60208082526021908201527f5265646972656374416c6c3a206f6e6c7920434641763120737570706f7274656040820152601960fa1b606082015260800190565b6020808252601f908201527f5265646972656374416c6c3a206e6f7420616363657074656420746f6b656e00604082015260600190565b60208082526033908201527f556e737570706f727465642063616c6c6261636b202d20204265666f7265204160408201527219dc99595b595b9d0815195c9b5a5b985d1959606a1b606082015260800190565b60208082526022908201527f5265646972656374416c6c3a20737570706f7274206f6e6c79206f6e6520686f6040820152611cdd60f21b606082015260800190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b60208082526030908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526f2061646d696e20746f207265766f6b6560801b606082015260800190565b6020808252602f908201527f556e737570706f727465642063616c6c6261636b202d204265666f726520416760408201526e1c99595b595b9d081d5c19185d1959608a1b606082015260800190565b60208082526016908201527521b0b63632b91034b9903737ba1030b71030b236b4b760511b604082015260600190565b6020808252602f908201527f556e737570706f727465642063616c6c6261636b202d204265666f726520416760408201526e1c99595b595b9d0810dc99585d1959608a1b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b9283526001600160a01b03919091166020830152600b0b604082015260600190565b60405181810167ffffffffffffffff811182821017156122e857600080fd5b604052919050565b600067ffffffffffffffff821115612306578081fd5b50601f01601f191660200190565b60005b8381101561232f578181015183820152602001612317565b83811115610c485750506000910152565b6001600160a01b038116811461235557600080fd5b5056fea2646970667358221220c56a02ef81428ab52c02ad3297f805ae1af9c413aae3ce0a767ae8e549e97e5c64736f6c63430007010033",
  "deployedSourceMap": "789:12201:44:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10309:514;;;;;;;;;;-1:-1:-1;10309:514:44;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4282:112:0;;;;;;;;;;-1:-1:-1;4282:112:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2982:353:44:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;4644:223:0:-;;;;;;;;;;-1:-1:-1;4644:223:0;;;;;:::i;:::-;;:::i;:::-;;247:400:26;;;;;;;;;;-1:-1:-1;247:400:26;;;;;:::i;:::-;;:::i;5818:205:0:-;;;;;;;;;;-1:-1:-1;5818:205:0;;;;;:::i;:::-;;:::i;1430:36:44:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;12301:270::-;;;;;;;;;;-1:-1:-1;12301:270:44;;;;;:::i;:::-;;:::i;10829:645::-;;;;;;;;;;-1:-1:-1;10829:645:44;;;;;:::i;:::-;;:::i;1208:34::-;;;;;;;;;;;;;:::i;1911:407:26:-;;;;;;;;;;-1:-1:-1;1911:407:26;;;;;:::i;:::-;;:::i;7053:1064:44:-;;;;;;;;;;-1:-1:-1;7053:1064:44;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1115:60::-;;;;;;;;;;;;;:::i;1079:400:26:-;;;;;;;;;;-1:-1:-1;1079:400:26;;;;;:::i;:::-;;:::i;3965:136:0:-;;;;;;;;;;-1:-1:-1;3965:136:0;;;;;:::i;:::-;;:::i;2950:137::-;;;;;;;;;;-1:-1:-1;2950:137:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1473:47:44:-;;;;;;;;;;-1:-1:-1;1473:47:44;;;;;:::i;:::-;;:::i;1727:49:0:-;;;;;;;;;;;;;:::i;11480:431:44:-;;;;;;;;;;-1:-1:-1;11480:431:44;;;;;:::i;:::-;;:::i;3255:125:0:-;;;;;;;;;;-1:-1:-1;3255:125:0;;;;;:::i;:::-;;:::i;5101:226::-;;;;;;;;;;-1:-1:-1;5101:226:0;;;;;:::i;:::-;;:::i;10309:514:44:-;10658:19;10594:11;10607:15;12794:24;12807:10;12794:12;:24::i;:::-;12786:68;;;;-1:-1:-1;;;12786:68:44;;;;;;;:::i;:::-;;;;;;;;;12872:24;12881:14;12872:8;:24::i;:::-;12864:70;;;;-1:-1:-1;;;12864:70:44;;;;;;;:::i;:::-;12637:5:::1;::::0;-1:-1:-1;;;;;12637:5:44::1;12615:10;:28;12607:75;;;;-1:-1:-1::0;;;12607:75:44::1;;;;;;;:::i;:::-;10728:5:::2;::::0;:21:::2;::::0;-1:-1:-1;;;10728:21:44;;10693::::2;::::0;-1:-1:-1;;;;;10728:5:44::2;::::0;:15:::2;::::0;:21:::2;::::0;10744:4;;;;10728:21:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;::::0;;::::2;-1:-1:-1::0;;10728:21:44::2;::::0;::::2;;::::0;::::2;::::0;;;::::2;::::0;::::2;:::i;:::-;:30;;;10717:51;;;;;;;;;;;;:::i;:::-;10693:75;;10785:31;10800:4;;10806:8;10785:14;:31::i;:::-;10778:38:::0;10309:514;-1:-1:-1;;;;;;;;;;;;;10309:514:44:o;4282:112:0:-;4339:7;4365:12;;;;;;;;;;:22;;;;4282:112::o;2982:353:44:-;3165:9;;3061:17;;;;;;-1:-1:-1;;;;;3165:9:44;:23;3161:168;;3230:4;;3243:14;;3274:9;;;3230:54;;-1:-1:-1;;;3230:54:44;;-1:-1:-1;;;;;3230:4:44;;;;:12;;:54;;3243:14;;;;3267:4;;3274:9;;;3230:54;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;3309:9:44;;3204:80;;-1:-1:-1;;;;;;3309:9:44;;;;-1:-1:-1;3204:80:44;-1:-1:-1;3161:168:44;2982:353;;;:::o;4644:223:0:-;4735:6;:12;;;;;;;;;;:22;;;4727:45;;4759:12;:10;:12::i;4727:45::-;4719:105;;;;-1:-1:-1;;;4719:105:0;;;;;;;:::i;:::-;4835:25;4846:4;4852:7;4835:10;:25::i;:::-;4644:223;;:::o;247:400:26:-;544:12;583:57;;-1:-1:-1;;;583:57:26;;;;;;;:::i;5818:205:0:-;5915:12;:10;:12::i;:::-;-1:-1:-1;;;;;5904:23:0;:7;-1:-1:-1;;;;;5904:23:0;;5896:83;;;;-1:-1:-1;;;5896:83:0;;;;;;;:::i;:::-;5990:26;6002:4;6008:7;5990:11;:26::i;1430:36:44:-;;;-1:-1:-1;;;;;1430:36:44;;:::o;12301:270::-;12383:31;1152:23;12403:10;12383:7;:31::i;:::-;12375:66;;;;-1:-1:-1;;;12375:66:44;;;;;;;:::i;:::-;12451:29;:43;;-1:-1:-1;;;;;;12451:43:44;;;-1:-1:-1;;;;;12451:43:44;;;;;;;;12504:13;:60;;12534:29;;;;12504:60;;;;;12301:270::o;10829:645::-;12637:5;;11135:19;;-1:-1:-1;;;;;12637:5:44;12615:10;:28;12607:75;;;;-1:-1:-1;;;12607:75:44;;;;;;;:::i;:::-;11297:5:::1;::::0;:21:::1;::::0;-1:-1:-1;;;11297:21:44;;11262::::1;::::0;-1:-1:-1;;;;;11297:5:44::1;::::0;:15:::1;::::0;:21:::1;::::0;11313:4;;;;11297:21:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;11297:21:44::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;:30;;;11286:51;;;;;;;;;;;;:::i;:::-;11262:75;;11352:25;11365:11;11352:12;:25::i;:::-;11351:26;:56;;;;11382:25;11391:15;11382:8;:25::i;:::-;11381:26;11351:56;11347:73;;;11416:4;;11409:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;11409:11:44;;-1:-1:-1;11409:11:44::1;::::0;-1:-1:-1;;;;11409:11:44::1;11347:73;11437:30;11452:4;;11458:8;11437:14;:30::i;:::-;11430:37;;;12692:1;10829:645:::0;;;;;;;;;;;:::o;1208:34::-;;;-1:-1:-1;;;;;1208:34:44;;:::o;1911:407:26:-;2211:12;2250:61;;-1:-1:-1;;;2250:61:26;;;;;;;:::i;7053:1064:44:-;7126:14;;:::i;:::-;7152:18;7173:20;;;:13;:20;;;;;:23;;7194:1;;7173:23;;;;;;;;;;;;;;7152:44;;7206:13;7222;:20;7236:5;7222:20;;;;;;;;;;;7243:1;7222:23;;;;;;;;;;;;;;;;7206:39;;7255:16;7274:13;:20;7288:5;7274:20;;;;;;;;;;;7295:1;7274:23;;;;;;;;;;;;;;;;;7414:4;;7430:14;;7414:46;;-1:-1:-1;;;7414:46:44;;7274:23;;-1:-1:-1;;;;;;7414:4:44;;;;:15;;:46;;7430:14;;7454:4;;7414:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7495:4;;7508:14;;7539:9;;;7495:54;;-1:-1:-1;;;7495:54:44;;7394:66;;-1:-1:-1;7472:17:44;;-1:-1:-1;;;;;7495:4:44;;;;:12;;:54;;7508:14;;;;7532:4;;7539:9;;;7495:54;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7470:79:44;;-1:-1:-1;;;7636:25:44;;;7631:31;;7613:15;7688:29;:8;7701:15;7688:12;:29::i;:::-;7672:45;-1:-1:-1;7784:15:44;7802:34;7803:15;7824:11;7802:21;:34::i;:::-;8040:70;;;;;;;;;;;7868:23;;;;8040:70;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8040:70:44;;-1:-1:-1;;;;7053:1064:44;;;:::o;1115:60::-;1152:23;1115:60;:::o;1079:400:26:-;1376:12;1415:57;;-1:-1:-1;;;1415:57:26;;;;;;;:::i;3965:136:0:-;4038:7;4064:12;;;;;;;;;;:30;;4088:5;4064:23;:30::i;:::-;4057:37;;3965:136;;;;;:::o;2950:137::-;3019:4;3042:12;;;;;;;;;;:38;;3072:7;3042:29;:38::i;1473:47:44:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1727:49:0:-;1772:4;1727:49;:::o;11480:431:44:-;11575:5;;11612:4;;11724:14;;11823:12;;;11575:5;11823:12;;;;;;;;-1:-1:-1;;;;;11575:5:44;;;;:19;;11612:4;;;-1:-1:-1;;;11678:24:44;11634:219;;11724:14;;;;11760:11;;11793:8;;11634:219;;;;:::i;:::-;;;;-1:-1:-1;;11634:219:44;;;;;;;;;;;;;;-1:-1:-1;;;;;11634:219:44;-1:-1:-1;;;;;;11634:219:44;;;;;;11575:329;;;;;;;;;;;;;11871:5;;11575:329;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11575:329:44;;;;;;;;;;;;:::i;:::-;;11480:431;;;:::o;3255:125:0:-;3318:7;3344:12;;;;;;;;;;:29;;:27;:29::i;5101:226::-;5193:6;:12;;;;;;;;;;:22;;;5185:45;;5217:12;:10;:12::i;5185:45::-;5177:106;;;;-1:-1:-1;;;5177:106:0;;;;;;;:::i;11917:144:44:-;12039:14;;-1:-1:-1;;;;;12039:14:44;;;12008:46;;;;11917:144::o;12067:228::-;12131:4;12217:71;12170:14;-1:-1:-1;;;;;12154:45:44;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:134;;12067:228;-1:-1:-1;;12067:228:44:o;3456:1981::-;3556:19;3599:3;;3590:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3715:4:44;;3731:14;;3715:46;;-1:-1:-1;;;3715:46:44;;3590:12;;-1:-1:-1;3590:12:44;;-1:-1:-1;;;;;3715:4:44;;;;-1:-1:-1;3715:15:44;;-1:-1:-1;3715:46:44;;-1:-1:-1;3731:14:44;;;3755:4;;3715:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3794:4;;3807:14;;3838:9;;;3794:54;;-1:-1:-1;;;3794:54:44;;3695:66;;-1:-1:-1;3771:17:44;;-1:-1:-1;;;;;3794:4:44;;;;:12;;:54;;3807:14;;;;3831:4;;3838:9;;;3794:54;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3769:79:44;;-1:-1:-1;;;3929:25:44;;;4018:26;4035:8;4018:16;:26::i;:::-;4119:22;;;;4115:1316;;4223:5;;4269:4;;4375:14;;4442:9;;4471:12;;;4223:5;4471:12;;;;;;;;-1:-1:-1;;;;;4223:5:44;;;;:30;;4269:4;;;-1:-1:-1;;;4331:24:44;4289:225;;4375:14;;;;4417:4;;4442:9;;;4289:225;;;;:::i;:::-;;;;-1:-1:-1;;4289:225:44;;;;;;;;;;;;;;-1:-1:-1;;;;;4289:225:44;-1:-1:-1;;;;;;4289:225:44;;;;;;4223:345;;;;;;;;;;;;;4550:6;;4223:345;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4223:345:44;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4210:358:44;-1:-1:-1;4115:1316:44;;;4589:23;;;;;4585:846;;4636:5;;4680:4;;4780:14;;4812:9;;4867:12;;;4636:5;4867:12;;;;;;;;-1:-1:-1;;;;;4636:5:44;;;;:30;;4680:4;;;-1:-1:-1;;;4738:24:44;4698:210;;4780:14;;;;4812:9;;4839:10;;4698:210;;;;:::i;4585:846::-;5080:5;;5126:4;;5232:14;;5266:9;;5325:12;;;5080:5;5325:12;;;;;;;;-1:-1:-1;;;;;5080:5:44;;;;:30;;5126:4;;;-1:-1:-1;;;5188:24:44;5146:222;;5232:14;;;;5266:9;;5295:10;;5146:222;;;;:::i;:::-;;;;-1:-1:-1;;5146:222:44;;;;;;;;;;;;;;-1:-1:-1;;;;;5146:222:44;-1:-1:-1;;;;;;5146:222:44;;;;;;5080:342;;;;;;;;;;;;;5404:6;;5080:342;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5080:342:44;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5067:355:44;-1:-1:-1;4585:846:44;3456:1981;;;;;;;;:::o;598:104:10:-;685:10;598:104;:::o;7025:184:0:-;7098:6;:12;;;;;;;;;;:33;;7123:7;7098:24;:33::i;:::-;7094:109;;;7179:12;:10;:12::i;:::-;-1:-1:-1;;;;;7152:40:0;7170:7;-1:-1:-1;;;;;7152:40:0;7164:4;7152:40;;;;;;;;;;7025:184;;:::o;7215:188::-;7289:6;:12;;;;;;;;;;:36;;7317:7;7289:27;:36::i;:::-;7285:112;;;7373:12;:10;:12::i;:::-;-1:-1:-1;;;;;7346:40:0;7364:7;-1:-1:-1;;;;;7346:40:0;7358:4;7346:40;;;;;;;;;;7215:188;;:::o;3136:155:2:-;3194:7;3226:1;3221;:6;;3213:49;;;;-1:-1:-1;;;3213:49:2;;;;;;;:::i;:::-;-1:-1:-1;3279:5:2;;;3136:155::o;7677:156:12:-;7751:7;7801:22;7805:3;7817:5;7801:3;:22::i;6984:165::-;7064:4;7087:55;7097:3;-1:-1:-1;;;;;7117:23:12;;7087:9;:55::i;7230:115::-;7293:7;7319:19;7327:3;7319:7;:19::i;5443:477:44:-;5511:13;5527:26;5542:8;5551:1;5527:14;:26::i;:::-;5511:42;;5563:32;;:::i;:::-;5598:13;;:33;;-1:-1:-1;;;5598:33:44;;-1:-1:-1;;;;;5598:13:44;;;;:26;;:33;;5625:5;;5598:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5657:11;;;;5695:12;;;;5731:16;;;;5817:17;;;;5563:68;;-1:-1:-1;5657:11:44;;5695:12;;5731:16;5776:15;;5844:69;5862:5;5657:11;5695:12;5731:16;5776:15;5817:17;5844;:69::i;:::-;5443:477;;;;;;;;:::o;6429:150:12:-;6499:4;6522:50;6527:3;-1:-1:-1;;;;;6547:23:12;;6522:4;:50::i;6747:156::-;6820:4;6843:53;6851:3;-1:-1:-1;;;;;6871:23:12;;6843:7;:53::i;4452:201::-;4546:18;;4519:7;;4546:26;-1:-1:-1;4538:73:12;;;;-1:-1:-1;;;4538:73:12;;;;;;;:::i;:::-;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;3805:127::-;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;4013:107::-;4095:18;;4013:107::o;5926:232:44:-;6001:7;6018:11;6043:6;6038:96;6059:2;6055:1;:6;6038:96;;;6119:1;6123;6119:5;6093:1;6104;6095:6;:10;6093:13;;;;;;;;;;;;-1:-1:-1;;;;;;6093:13:44;6085:40;;6078:47;;;;;6063:3;;6038:96;;;-1:-1:-1;6148:3:44;5926:232;-1:-1:-1;;;5926:232:44:o;6164:883::-;6446:4;;6462:14;;6446:46;;-1:-1:-1;;;6446:46:44;;6426:17;;-1:-1:-1;;;;;6446:4:44;;;;:15;;:46;;6462:14;;;;6486:4;;6446:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6527:4;;6540:14;;6571:9;;;6527:54;;-1:-1:-1;;;6527:54:44;;6426:66;;-1:-1:-1;6504:17:44;;-1:-1:-1;;;;;6527:4:44;;;;:12;;:54;;6540:14;;;;6564:4;;6571:9;;;6527:54;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6502:79:44;;-1:-1:-1;;;6668:25:44;;;6663:31;;6645:15;6720:29;:8;6733:15;6720:12;:29::i;:::-;6704:45;-1:-1:-1;6759:15:44;6777:34;6778:15;6799:11;6777:21;:34::i;:::-;6759:52;;6821:19;6856:10;6843;:23;6821:45;;6948:92;;;;;;;;6972:10;6948:92;;;;6984:14;6948:92;;;;7000:6;6948:92;;;;7008:11;6948:92;;;;7021:8;6948:92;;;;7031:8;6948:92;;;:13;:20;6962:5;6948:20;;;;;;;;;;;:92;;;;;;;:::i;:::-;;6164:883;;;;;;;;;;;;:::o;1640:404:12:-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:12;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:12;2015:12;;2212:1512;2278:4;2415:19;;;:12;;;:19;;;;;;2449:15;;2445:1273;;2878:18;;-1:-1:-1;;2830:14:12;;;;2878:22;;;;2806:21;;2878:3;;:22;;3160;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;;;;;:38;;;;3378:23;;;3420:1;3378:12;;;:23;;;;;;3404:17;;;3378:43;;3527:17;;3378:3;;3527:17;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;;;2445:1273;2212:1512;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;142:134;220:13;;238:33;220:13;238:33;:::i;714:132::-;791:13;;-1:-1;;;;;;36084:78;;39397:34;;39387:2;;39445:1;;39435:12;867:336;;;981:3;974:4;966:6;962:17;958:27;948:2;;-1:-1;;989:12;948:2;-1:-1;1019:20;;1059:18;1048:30;;1045:2;;;-1:-1;;1081:12;1045:2;1125:4;1117:6;1113:17;1101:29;;1176:3;1125:4;1156:17;1117:6;1142:32;;1139:41;1136:2;;;1193:1;;1183:12;1136:2;941:262;;;;;:::o;1661:442::-;;1773:3;1766:4;1758:6;1754:17;1750:27;1740:2;;-1:-1;;1781:12;1740:2;1821:6;1815:13;1843:64;1858:48;1899:6;1858:48;:::i;:::-;1843:64;:::i;:::-;1834:73;;1927:6;1920:5;1913:21;2031:3;1963:4;2022:6;1955;2013:16;;2010:25;2007:2;;;2048:1;;2038:12;2007:2;2058:39;2090:6;1963:4;1989:5;1985:16;1963:4;1955:6;1951:17;2058:39;:::i;2429:130::-;2505:13;;36442:2;36431:21;;;39806:33;;39796:2;;39853:1;;39843:12;6142:130;6218:13;;36742:4;36731:16;;40050:33;;40040:2;;40097:1;;40087:12;6279:257;;6391:2;6379:9;6370:7;6366:23;6362:32;6359:2;;;-1:-1;;6397:12;6359:2;371:6;358:20;383:41;418:5;383:41;:::i;:::-;6449:71;6353:183;-1:-1;;;6353:183::o;6543:595::-;;;;6690:2;6678:9;6669:7;6665:23;6661:32;6658:2;;;-1:-1;;6696:12;6658:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;6748:63;-1:-1;6848:2;6887:22;;5931:20;;-1:-1;6984:2;6969:18;;6956:32;7008:18;6997:30;;6994:2;;;-1:-1;;7030:12;6994:2;7090:22;;1306:4;1294:17;;1290:27;-1:-1;1280:2;;-1:-1;;1321:12;1280:2;1368:6;1355:20;1390:64;1405:48;1446:6;1405:48;:::i;1390:64::-;1474:6;1467:5;1460:21;1578:3;6848:2;1569:6;1502;1560:16;;1557:25;1554:2;;;-1:-1;;1585:12;1554:2;38497:6;6848:2;1502:6;1498:17;6848:2;1536:5;1532:16;38474:30;-1:-1;6848:2;38544:6;1536:5;38535:16;;38528:27;7050:72;;;;;;6652:486;;;;;:::o;7145:241::-;;7249:2;7237:9;7228:7;7224:23;7220:32;7217:2;;;-1:-1;;7255:12;7217:2;-1:-1;503:20;;7211:175;-1:-1;7211:175::o;7393:263::-;;7508:2;7496:9;7487:7;7483:23;7479:32;7476:2;;;-1:-1;;7514:12;7476:2;-1:-1;651:13;;7470:186;-1:-1;7470:186::o;7663:366::-;;;7784:2;7772:9;7763:7;7759:23;7755:32;7752:2;;;-1:-1;;7790:12;7752:2;516:6;503:20;7842:63;;7942:2;7985:9;7981:22;72:20;97:33;124:5;97:33;:::i;:::-;7950:63;;;;7746:283;;;;;:::o;8036:366::-;;;8157:2;8145:9;8136:7;8132:23;8128:32;8125:2;;;-1:-1;;8163:12;8125:2;-1:-1;;503:20;;;8315:2;8354:22;;;5931:20;;-1:-1;8119:283::o;8409:360::-;;8533:2;8521:9;8512:7;8508:23;8504:32;8501:2;;;-1:-1;;8539:12;8501:2;8590:17;8584:24;8628:18;8620:6;8617:30;8614:2;;;-1:-1;;8650:12;8614:2;8680:73;8745:7;8736:6;8725:9;8721:22;8680:73;:::i;:::-;8670:83;8495:274;-1:-1;;;;8495:274::o;8776:593::-;;;8926:2;8914:9;8905:7;8901:23;8897:32;8894:2;;;-1:-1;;8932:12;8894:2;8983:17;8977:24;9021:18;;9013:6;9010:30;9007:2;;;-1:-1;;9043:12;9007:2;9073:73;9138:7;9129:6;9118:9;9114:22;9073:73;:::i;:::-;9063:83;;9204:2;9193:9;9189:18;9183:25;9169:39;;9021:18;9220:6;9217:30;9214:2;;;-1:-1;;9250:12;9214:2;;9280:73;9345:7;9336:6;9325:9;9321:22;9280:73;:::i;:::-;9270:83;;;8888:481;;;;;:::o;9376:1033::-;;;;;;;;9607:3;9595:9;9586:7;9582:23;9578:33;9575:2;;;-1:-1;;9614:12;9575:2;2212:6;2199:20;2224:54;2272:5;2224:54;:::i;:::-;9666:84;-1:-1;9787:2;9826:22;;72:20;97:33;72:20;97:33;:::i;:::-;9795:63;-1:-1;9895:2;9934:22;;503:20;;-1:-1;10031:2;10016:18;;10003:32;10055:18;10044:30;;;10041:2;;;-1:-1;;10077:12;10041:2;10115:64;10171:7;10162:6;10151:9;10147:22;10115:64;:::i;:::-;10097:82;;-1:-1;10097:82;-1:-1;10244:3;10229:19;;10216:33;;-1:-1;10258:30;;;10255:2;;;-1:-1;;10291:12;10255:2;;10329:64;10385:7;10376:6;10365:9;10361:22;10329:64;:::i;:::-;9569:840;;;;-1:-1;9569:840;;-1:-1;9569:840;;;;10311:82;;-1:-1;;;9569:840::o;10416:1283::-;;;;;;;;;;10683:3;10671:9;10662:7;10658:23;10654:33;10651:2;;;-1:-1;;10690:12;10651:2;2212:6;2199:20;2224:54;2272:5;2224:54;:::i;:::-;10742:84;-1:-1;10863:2;10902:22;;72:20;97:33;72:20;97:33;:::i;:::-;10871:63;-1:-1;10971:2;11010:22;;503:20;;-1:-1;11107:2;11092:18;;11079:32;11131:18;11120:30;;;11117:2;;;-1:-1;;11153:12;11117:2;11191:64;11247:7;11238:6;11227:9;11223:22;11191:64;:::i;:::-;11173:82;;-1:-1;11173:82;-1:-1;11320:3;11305:19;;11292:33;;-1:-1;11334:30;;;11331:2;;;-1:-1;;11367:12;11331:2;11405:64;11461:7;11452:6;11441:9;11437:22;11405:64;:::i;:::-;11387:82;;-1:-1;11387:82;-1:-1;11534:3;11519:19;;11506:33;;-1:-1;11548:30;;;11545:2;;;-1:-1;;11581:12;11545:2;;11619:64;11675:7;11666:6;11655:9;11651:22;11619:64;:::i;:::-;11601:82;;;;;;;;;;10645:1054;;;;;;;;;;;:::o;11706:259::-;;11819:2;11807:9;11798:7;11794:23;11790:32;11787:2;;;-1:-1;;11825:12;11787:2;11887:62;11941:7;11917:22;11887:62;:::i;11972:392::-;;12112:2;12100:9;12091:7;12087:23;12083:32;12080:2;;;-1:-1;;12118:12;12080:2;12169:17;12163:24;12207:18;;12199:6;12196:30;12193:2;;;-1:-1;;12229:12;12193:2;12331:6;12320:9;12316:22;;;2724:6;;2712:9;2707:3;2703:19;2699:32;2696:2;;;-1:-1;;2734:12;2696:2;2762:22;2724:6;2762:22;:::i;:::-;2753:31;;2870:58;2924:3;2900:22;2870:58;:::i;:::-;2852:16;2845:84;3027:58;3081:3;12112:2;3061:9;3057:22;3027:58;:::i;:::-;12112:2;3013:5;3009:16;3002:84;3152:2;3221:9;3217:22;6079:13;3152:2;3171:5;3167:16;3160:86;3345:60;3401:3;3312:2;3381:9;3377:22;3345:60;:::i;:::-;3312:2;3331:5;3327:16;3320:86;3514:59;3569:3;3480;3549:9;3545:22;3514:59;:::i;:::-;3480:3;3500:5;3496:16;3489:85;3660:3;3649:9;3645:19;3639:26;12207:18;3677:6;3674:30;3671:2;;;-1:-1;;3707:12;3671:2;3752:69;3817:3;3808:6;3797:9;3793:22;3752:69;:::i;:::-;3660:3;3738:5;3734:16;3727:95;;3898:3;3968:9;3964:22;6079:13;3898:3;3918:5;3914:16;3907:86;4068:3;4138:9;4134:22;6079:13;4068:3;4088:5;4084:16;4077:86;4236:3;;;;4307:9;4303:22;2367:13;4236:3;4256:5;4252:18;4245:87;4399:3;;;4435:60;4491:3;4399;4471:9;4467:22;4435:60;:::i;:::-;4415:18;;;4408:88;;;;4419:5;12074:290;-1:-1;;;;12074:290::o;12371:310::-;;12509:3;12497:9;12488:7;12484:23;12480:33;12477:2;;;-1:-1;;12516:12;12477:2;4716:20;12509:3;4716:20;:::i;:::-;6085:6;6079:13;4803:16;4796:86;4947:2;5016:9;5012:22;6079:13;4947:2;4966:5;4962:16;4955:86;5103:2;5172:9;5168:22;220:13;238:33;265:5;238:33;:::i;:::-;5103:2;5118:16;;5111:86;5260:2;5325:22;;220:13;238:33;220:13;238:33;:::i;:::-;5293:60;5260:2;5279:5;5275:16;5268:86;;5416:3;5486:9;5482:22;651:13;5416:3;5436:5;5432:16;5425:86;5578:3;5648:9;5644:22;6079:13;5578:3;5598:5;5594:16;5587:86;5741:3;5811:9;5807:22;6079:13;5741:3;5761:5;5757:16;5750:86;12568:97;;;;12471:210;;;;:::o;12688:668::-;;;;;12852:3;12840:9;12831:7;12827:23;12823:33;12820:2;;;-1:-1;;12859:12;12820:2;6085:6;6079:13;12911:74;;13040:62;13094:7;13022:2;13074:9;13070:22;13040:62;:::i;:::-;13139:2;13189:22;;6079:13;13258:2;13308:22;;;6079:13;12814:542;;13030:72;;-1:-1;12814:542;-1:-1;;;12814:542::o;15218:343::-;;15360:5;35002:12;35420:6;35415:3;35408:19;15453:52;15498:6;35457:4;35452:3;35448:14;35457:4;15479:5;15475:16;15453:52;:::i;:::-;38930:7;38914:14;-1:-1;;38910:28;15517:39;;;;35457:4;15517:39;;15308:253;-1:-1;;15308:253::o;21478:222::-;-1:-1;;;;;36526:54;;;;13781:45;;21605:2;21590:18;;21576:124::o;21707:315::-;21880:3;21865:19;;21869:9;14354:21;21707:315;14381:258;34894:4;14403:1;14400:13;14381:258;;;14467:13;;14841:37;;13526:4;13517:14;;;;35130;;;;14428:1;14421:9;14381:258;;;14385:14;;;21851:171;;;;:::o;22029:210::-;35918:13;;35911:21;14724:34;;22150:2;22135:18;;22121:118::o;22246:222::-;14841:37;;;22373:2;22358:18;;22344:124::o;22475:326::-;;22630:2;22651:17;22644:47;35420:6;22630:2;22619:9;22615:18;35408:19;38497:6;38492:3;35448:14;22619:9;35448:14;38474:30;38535:16;;;35448:14;38535:16;;;38528:27;;;;38930:7;38914:14;;;-1:-1;;38910:28;15165:39;;;22601:200;-1:-1;22601:200::o;22808:306::-;;22953:2;22974:17;22967:47;23028:76;22953:2;22942:9;22938:18;23090:6;23028:76;:::i;23121:678::-;-1:-1;;;;;36526:54;;15672:83;;23373:2;23524;23509:18;;23502:48;;;23121:678;;23564:76;;23358:18;;23626:6;23564:76;:::i;:::-;23688:9;23682:4;23678:20;23673:2;23662:9;23658:18;23651:48;23713:76;23784:4;23775:6;23713:76;:::i;:::-;23705:84;23344:455;-1:-1;;;;;;23344:455::o;23806:982::-;-1:-1;;;;;36526:54;;15672:83;;24158:3;24310:2;24295:18;;24288:48;;;23806:982;;24350:76;;24143:19;;24412:6;24350:76;:::i;:::-;24474:9;24468:4;24464:20;;24459:2;24448:9;24444:18;24437:48;18920:1;35415:3;35408:19;-1:-1;;;24310:2;35452:3;35448:14;18935:25;24459:2;24667:20;;24662:2;24651:9;24647:18;24640:48;;24702:76;24459:2;35452:3;18979:12;24764:6;24702:76;:::i;24795:391::-;-1:-1;;;;;36526:54;;;15672:83;;36526:54;;25172:2;25157:18;;13624:58;24979:2;24964:18;;24950:236::o;25193:502::-;-1:-1;;;;;36526:54;;;15672:83;;36526:54;;;25598:2;25583:18;;13624:58;36526:54;;;25681:2;25666:18;;13781:45;25405:2;25390:18;;25376:319::o;25702:714::-;-1:-1;;;;;36526:54;;;15672:83;;36526:54;;;26170:2;26155:18;;13781:45;36526:54;;26253:2;26238:18;;13781:45;25968:3;26290:2;26275:18;;26268:48;;;25702:714;;26330:76;;25953:19;;26392:6;26330:76;:::i;26423:674::-;-1:-1;;;;;36526:54;;;15672:83;;36526:54;;26855:2;26840:18;;13781:45;36442:2;36431:21;;;26934:2;26919:18;;16381:35;26669:3;26971:2;26956:18;;26949:48;;;26423:674;;27011:76;;26654:19;;27073:6;27011:76;:::i;27104:682::-;-1:-1;;;;;36526:54;;;15672:83;;36526:54;;27540:2;27525:18;;13781:45;27623:2;27608:18;;14841:37;;;27354:3;27660:2;27645:18;;27638:48;;;27104:682;;27700:76;;27339:19;;27762:6;27700:76;:::i;28357:416::-;28557:2;28571:47;;;16653:2;28542:18;;;35408:19;16689:34;35448:14;;;16669:55;-1:-1;;;16744:12;;;16737:26;16782:12;;;28528:245::o;28780:416::-;28980:2;28994:47;;;17033:2;28965:18;;;35408:19;17069:34;35448:14;;;17049:55;-1:-1;;;17124:12;;;17117:39;17175:12;;;28951:245::o;29203:416::-;29403:2;29417:47;;;17426:2;29388:18;;;35408:19;17462:34;35448:14;;;17442:55;-1:-1;;;17517:12;;;17510:25;17554:12;;;29374:245::o;29626:416::-;29826:2;29840:47;;;17805:2;29811:18;;;35408:19;17841:33;35448:14;;;17821:54;17894:12;;;29797:245::o;30049:416::-;30249:2;30263:47;;;18145:2;30234:18;;;35408:19;18181:34;35448:14;;;18161:55;-1:-1;;;18236:12;;;18229:43;18291:12;;;30220:245::o;30472:416::-;30672:2;30686:47;;;18542:2;30657:18;;;35408:19;18578:34;35448:14;;;18558:55;-1:-1;;;18633:12;;;18626:26;18671:12;;;30643:245::o;30895:416::-;31095:2;31109:47;;;19230:2;31080:18;;;35408:19;19266:32;35448:14;;;19246:53;19318:12;;;31066:245::o;31318:416::-;31518:2;31532:47;;;19569:2;31503:18;;;35408:19;19605:34;35448:14;;;19585:55;-1:-1;;;19660:12;;;19653:40;19712:12;;;31489:245::o;31741:416::-;31941:2;31955:47;;;19963:2;31926:18;;;35408:19;19999:34;35448:14;;;19979:55;-1:-1;;;20054:12;;;20047:39;20105:12;;;31912:245::o;32164:416::-;32364:2;32378:47;;;20356:2;32349:18;;;35408:19;-1:-1;;;35448:14;;;20372:45;20436:12;;;32335:245::o;32587:416::-;32787:2;32801:47;;;20687:2;32772:18;;;35408:19;20723:34;35448:14;;;20703:55;-1:-1;;;20778:12;;;20771:39;20829:12;;;32758:245::o;33010:416::-;33210:2;33224:47;;;21080:2;33195:18;;;35408:19;21116:34;35448:14;;;21096:55;-1:-1;;;21171:12;;;21164:39;21222:12;;;33181:245::o;33662:436::-;14841:37;;;-1:-1;;;;;36526:54;;;;34005:2;33990:18;;13781:45;36442:2;36431:21;34084:2;34069:18;;16381:35;33841:2;33826:18;;33812:286::o;34105:256::-;34167:2;34161:9;34193:17;;;34268:18;34253:34;;34289:22;;;34250:62;34247:2;;;34325:1;;34315:12;34247:2;34167;34334:22;34145:216;;-1:-1;34145:216::o;34368:321::-;;34511:18;34503:6;34500:30;34497:2;;;-1:-1;;34533:12;34497:2;-1:-1;38930:7;34587:17;-1:-1;;34583:33;34674:4;34664:15;;34434:255::o;38570:268::-;38635:1;38642:101;38656:6;38653:1;38650:13;38642:101;;;38723:11;;;38717:18;38704:11;;;38697:39;38678:2;38671:10;38642:101;;;38758:6;38755:1;38752:13;38749:2;;;-1:-1;;38635:1;38805:16;;38798:27;38619:219::o;38951:117::-;-1:-1;;;;;36526:54;;39010:35;;39000:2;;39059:1;;39049:12;39000:2;38994:74;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      }
    },
    "version": 1
  },
  "offset": [
    789,
    12990
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x139 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60F5BC21 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0x9883145E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9883145E EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xAE015ADC EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xD86ED3E5 EQ PUSH2 0x145 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x60F5BC21 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x884D1F40 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x347 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x4DBB40B2 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x4EB66FFF EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x53C11F99 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x5BD7FA11 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x5F9E7D77 EQ PUSH2 0x2A5 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x230DBD29 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x28D2BF94 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x30D9C915 EQ PUSH2 0x1EE JUMPI PUSH2 0x140 JUMP JUMPDEST CALLDATASIZE PUSH2 0x140 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AA1 JUMP JUMPDEST PUSH2 0x409 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1DE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E9 JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1DAD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EC PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1919 JUMP JUMPDEST PUSH2 0x61C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0x664 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EC PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0x1919 JUMP JUMPDEST PUSH2 0x67E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x243 PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EC PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0x1834 JUMP JUMPDEST PUSH2 0x6CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x1AA1 JUMP JUMPDEST PUSH2 0x744 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x243 PUSH2 0x88D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0x89C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E5 PUSH2 0x2E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E9 JUMP JUMPDEST PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1D71 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0xAB5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0xAD9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x243 PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0x1948 JUMP JUMPDEST PUSH2 0xAF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x362 CALLDATASIZE PUSH1 0x4 PUSH2 0x1919 JUMP JUMPDEST PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1DA2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x1948 JUMP JUMPDEST PUSH2 0xB2C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0xB5A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EC PUSH2 0x3C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1857 JUMP JUMPDEST PUSH2 0xB5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x3E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E9 JUMP JUMPDEST PUSH2 0xC4E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EC PUSH2 0x404 CALLDATASIZE PUSH1 0x4 PUSH2 0x1919 JUMP JUMPDEST PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x60 DUP10 DUP10 PUSH2 0x416 DUP3 PUSH2 0xC9F JUMP JUMPDEST PUSH2 0x43B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x432 SWAP1 PUSH2 0x2037 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x444 DUP2 PUSH2 0xCB3 JUMP JUMPDEST PUSH2 0x460 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x432 SWAP1 PUSH2 0x1FF6 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x48A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x432 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1FB6491D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x3F6C923A SWAP1 PUSH2 0x4BD SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x511 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1B83 JUMP JUMPDEST PUSH1 0xA0 ADD MLOAD DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x528 SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST SWAP1 POP PUSH2 0x535 DUP7 DUP7 DUP4 PUSH2 0xD4E JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x617 JUMPI PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1CD43D11 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0xE6A1E888 SWAP5 PUSH2 0x5AF SWAP5 SWAP1 DUP3 AND SWAP4 ADDRESS SWAP4 SWAP3 AND SWAP2 ADD PUSH2 0x1EA5 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST POP POP PUSH1 0x4 SLOAD SWAP2 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP SWAP1 POP JUMPDEST SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x63A SWAP1 PUSH2 0x362 PUSH2 0x1104 JUMP JUMPDEST PUSH2 0x656 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x432 SWAP1 PUSH2 0x1FA7 JUMP JUMPDEST PUSH2 0x660 DUP3 DUP3 PUSH2 0x1108 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x432 SWAP1 PUSH2 0x2209 JUMP JUMPDEST PUSH2 0x686 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x432 SWAP1 PUSH2 0x2258 JUMP JUMPDEST PUSH2 0x660 DUP3 DUP3 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x6F9 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0xB14 JUMP JUMPDEST PUSH2 0x715 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x432 SWAP1 PUSH2 0x21D9 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x771 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x432 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1FB6491D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x3F6C923A SWAP1 PUSH2 0x7A4 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x7F8 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1B83 JUMP JUMPDEST PUSH1 0xA0 ADD MLOAD DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x80F SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST SWAP1 POP PUSH2 0x81A DUP12 PUSH2 0xC9F JUMP JUMPDEST ISZERO DUP1 PUSH2 0x82C JUMPI POP PUSH2 0x82A DUP11 PUSH2 0xCB3 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x871 JUMPI DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP5 POP PUSH2 0x880 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x87C DUP5 DUP5 DUP4 PUSH2 0xD4E JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x432 SWAP1 PUSH2 0x206E JUMP JUMPDEST PUSH2 0x8BE PUSH2 0x168C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x2 SWAP1 DUP2 LT PUSH2 0x8D9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 DUP2 SLOAD DUP2 LT PUSH2 0x907 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 DUP2 SLOAD DUP2 LT PUSH2 0x935 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE8E7E2D1 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 PUSH4 0xE8E7E2D1 SWAP3 PUSH2 0x978 SWAP3 AND SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x990 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C8 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1CD43D11 PUSH1 0xE3 SHL DUP2 MSTORE SWAP5 SWAP6 POP PUSH1 0x0 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0xE6A1E888 SWAP5 PUSH2 0xA0A SWAP5 SWAP1 DUP3 AND SWAP4 ADDRESS SWAP4 SWAP3 AND SWAP2 ADD PUSH2 0x1EA5 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA36 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA5A SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST POP SWAP1 SWAP3 POP POP POP DUP2 DUP2 ADD PUSH1 0xB SIGNEXTEND PUSH1 0x0 PUSH2 0xA72 DUP7 TIMESTAMP PUSH2 0x11DA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA80 TIMESTAMP DUP8 PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE SWAP5 SWAP1 SWAP2 MUL PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x432 SWAP1 PUSH2 0x218A JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xB0B SWAP1 DUP4 PUSH2 0x1202 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xB0B SWAP1 DUP4 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB45 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH4 0x39255D5B SWAP4 DUP2 AND SWAP3 PUSH4 0x317E182F PUSH1 0xE1 SHL SWAP3 PUSH2 0xBAA SWAP3 SWAP1 SWAP2 AND SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x44 DUP2 ADD PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP5 DUP6 AND OR SWAP1 MSTORE MLOAD PUSH1 0xE0 DUP6 SWAP1 SHL SWAP1 SWAP3 AND DUP3 MSTORE PUSH2 0xBF2 SWAP3 SWAP2 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1DF8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC20 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xC48 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1969 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xB0E SWAP1 PUSH2 0x1223 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xC83 SWAP1 PUSH2 0x362 PUSH2 0x1104 JUMP JUMPDEST PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x432 SWAP1 PUSH2 0x213A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xA9214CC96615E0085D3BB077758DB69497DC2DCE3B2B1E97BC93C3D18D83EFD3 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7730599E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD47 SWAP2 SWAP1 PUSH2 0x1901 JUMP JUMPDEST EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE8E7E2D1 PUSH1 0xE0 SHL DUP2 MSTORE SWAP7 SWAP8 POP SWAP2 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP6 POP PUSH4 0xE8E7E2D1 SWAP5 POP PUSH2 0xDC0 SWAP4 POP SWAP2 AND SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE10 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1CD43D11 PUSH1 0xE3 SHL DUP2 MSTORE SWAP5 SWAP6 POP PUSH1 0x0 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0xE6A1E888 SWAP5 PUSH2 0xE52 SWAP5 SWAP1 DUP3 AND SWAP4 ADDRESS SWAP4 SWAP3 AND SWAP2 ADD PUSH2 0x1EA5 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE7E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEA2 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST POP SWAP1 SWAP3 POP POP POP DUP2 DUP2 ADD PUSH2 0xEB4 DUP6 PUSH2 0x122E JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SIGNEXTEND PUSH2 0xFB2 JUMPI PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0x4329D293 SWAP5 DUP2 AND SWAP4 PUSH4 0x5A5999E3 PUSH1 0xE1 SHL SWAP4 PUSH2 0xF0C SWAP4 SWAP2 DUP4 AND SWAP3 ADDRESS SWAP3 SWAP2 AND SWAP1 PUSH1 0x44 DUP2 ADD PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP5 DUP6 AND OR SWAP1 MSTORE MLOAD PUSH1 0xE0 DUP6 SWAP1 SHL SWAP1 SWAP3 AND DUP3 MSTORE PUSH2 0xF54 SWAP3 SWAP2 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1E38 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xFAA SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x19A4 JUMP JUMPDEST POP SWAP4 POP PUSH2 0x10FA JUMP JUMPDEST PUSH1 0xB DUP3 SWAP1 SIGNEXTEND ISZERO PUSH2 0x100A JUMPI PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0x4329D293 SWAP5 DUP2 AND SWAP4 PUSH4 0x28104D31 PUSH1 0xE1 SHL SWAP4 PUSH2 0xF0C SWAP4 SWAP2 DUP4 AND SWAP3 AND SWAP1 DUP9 SWAP1 PUSH1 0x44 DUP2 ADD PUSH2 0x1EFC JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0x4329D293 SWAP5 DUP2 AND SWAP4 PUSH4 0x317E182F PUSH1 0xE1 SHL SWAP4 PUSH2 0x1058 SWAP4 SWAP2 DUP4 AND SWAP3 AND SWAP1 DUP9 SWAP1 PUSH1 0x44 DUP2 ADD PUSH2 0x1EFC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP5 DUP6 AND OR SWAP1 MSTORE MLOAD PUSH1 0xE0 DUP6 SWAP1 SHL SWAP1 SWAP3 AND DUP3 MSTORE PUSH2 0x10A0 SWAP3 SWAP2 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1E38 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x10F6 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x19A4 JUMP JUMPDEST POP SWAP4 POP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1120 SWAP1 DUP3 PUSH2 0x12FB JUMP JUMPDEST ISZERO PUSH2 0x660 JUMPI PUSH2 0x112D PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1189 SWAP1 DUP3 PUSH2 0x1310 JUMP JUMPDEST ISZERO PUSH2 0x660 JUMPI PUSH2 0x1196 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x11FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x432 SWAP1 PUSH2 0x2103 JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0B DUP4 DUP4 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0B DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x136A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0E DUP3 PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123B DUP3 PUSH1 0x0 PUSH2 0x1386 JUMP JUMPDEST SWAP1 POP PUSH2 0x1245 PUSH2 0x16AA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xEBD2D6A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xEBD2D6A7 SWAP1 PUSH2 0x1275 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1DAD JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x128D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12C5 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xC0 DUP5 ADD MLOAD SWAP4 SWAP5 POP SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 TIMESTAMP SWAP1 PUSH2 0x12F1 DUP8 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x13CD JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0B DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1575 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0B DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x15BF JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x1348 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x432 SWAP1 PUSH2 0x1F65 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1357 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13C5 JUMPI DUP1 PUSH1 0x8 MUL DUP6 DUP3 DUP7 ADD DUP2 MLOAD DUP2 LT PUSH2 0x13A7 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 SHR SWAP2 SWAP1 SWAP2 OR SWAP1 PUSH1 0x1 ADD PUSH2 0x138C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE8E7E2D1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 PUSH4 0xE8E7E2D1 SWAP3 PUSH2 0x1407 SWAP3 SWAP1 SWAP2 AND SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x141F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1433 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1457 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1CD43D11 PUSH1 0xE3 SHL DUP2 MSTORE SWAP5 SWAP6 POP PUSH1 0x0 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0xE6A1E888 SWAP5 PUSH2 0x1499 SWAP5 SWAP1 DUP3 AND SWAP4 ADDRESS SWAP4 SWAP3 AND SWAP2 ADD PUSH2 0x1EA5 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14E9 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST POP SWAP1 SWAP3 POP POP POP DUP2 DUP2 ADD PUSH1 0xB SIGNEXTEND PUSH1 0x0 PUSH2 0x1501 DUP6 TIMESTAMP PUSH2 0x11DA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x150F TIMESTAMP DUP9 PUSH2 0x11DA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 MUL SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE POP PUSH1 0x9 PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 PUSH2 0x1566 SWAP3 SWAP2 SWAP1 PUSH2 0x16FC JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1581 DUP4 DUP4 PUSH2 0x136A JUMP JUMPDEST PUSH2 0x15B7 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xB0E JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x167B JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x15F2 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x160F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x163F JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0xB0E JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1737 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1737 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x171C JUMP JUMPDEST POP PUSH2 0x1743 SWAP3 SWAP2 POP PUSH2 0x1747 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1743 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1748 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xB0E DUP2 PUSH2 0x2340 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1790 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17A7 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x17BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17D6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x17E9 PUSH2 0x17E4 DUP3 PUSH2 0x22F0 JUMP JUMPDEST PUSH2 0x22C9 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1800 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1685 DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2314 JUMP JUMPDEST DUP1 MLOAD PUSH1 0xB DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0xB0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xB0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1845 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1850 DUP2 PUSH2 0x2340 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x186B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1876 DUP2 PUSH2 0x2340 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1898 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x18A8 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x18B6 PUSH2 0x17E4 DUP3 PUSH2 0x22F0 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP8 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x18CA JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY DUP4 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18FA JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1912 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x192B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x193D DUP2 PUSH2 0x2340 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x195A JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x197A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1990 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x199C DUP5 DUP3 DUP6 ADD PUSH2 0x17C6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19B6 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x19CD JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x19D9 DUP7 DUP4 DUP8 ADD PUSH2 0x17C6 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x19EE JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x19FB DUP6 DUP3 DUP7 ADD PUSH2 0x17C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1A1F JUMPI DUP5 DUP6 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1A2A DUP2 PUSH2 0x2340 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x1A3A DUP2 PUSH2 0x2340 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A5D JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x1A69 DUP12 DUP4 DUP13 ADD PUSH2 0x177F JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A81 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x1A8E DUP11 DUP3 DUP12 ADD PUSH2 0x177F JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x1ABE JUMPI DUP3 DUP4 REVERT JUMPDEST DUP10 CALLDATALOAD PUSH2 0x1AC9 DUP2 PUSH2 0x2340 JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD PUSH2 0x1AD9 DUP2 PUSH2 0x2340 JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1AFC JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x1B08 DUP14 DUP4 DUP15 ADD PUSH2 0x177F JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x80 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B20 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x1B2C DUP14 DUP4 DUP15 ADD PUSH2 0x177F JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0xA0 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B44 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x1B51 DUP13 DUP3 DUP14 ADD PUSH2 0x177F JUMP JUMPDEST SWAP2 POP DUP1 SWAP4 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B79 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB0B DUP4 DUP4 PUSH2 0x1811 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B94 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1BAB JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP PUSH2 0x140 DUP1 DUP4 DUP8 SUB SLT ISZERO PUSH2 0x1BC1 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x1BCA DUP2 PUSH2 0x22C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BD6 DUP7 DUP5 PUSH2 0x1823 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x1BE5 DUP7 PUSH1 0x20 DUP6 ADD PUSH2 0x1823 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1C01 DUP7 PUSH1 0x60 DUP6 ADD PUSH2 0x175C JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1C13 DUP7 PUSH1 0x80 DUP6 ADD PUSH2 0x1767 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x1C29 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x1C35 DUP8 DUP3 DUP7 ADD PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 SWAP2 POP DUP2 DUP4 ADD MLOAD DUP3 DUP3 ADD MSTORE PUSH2 0x120 SWAP2 POP PUSH2 0x1C6D DUP7 DUP4 DUP6 ADD PUSH2 0x175C JUMP JUMPDEST SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C8D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1C97 PUSH1 0xE0 PUSH2 0x22C9 JUMP JUMPDEST DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1CB3 DUP2 PUSH2 0x2340 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x1CC6 DUP2 PUSH2 0x2340 JUMP JUMPDEST DUP1 PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D0A JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH2 0x1D1B DUP7 PUSH1 0x20 DUP8 ADD PUSH2 0x1811 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1D49 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2314 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD DUP2 DUP4 PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x1D99 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1D7A JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 PUSH1 0x20 DUP4 ADD MSTORE DUP3 DUP5 PUSH1 0x40 DUP5 ADD CALLDATACOPY DUP2 DUP4 ADD PUSH1 0x40 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xB0B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D31 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1E1C SWAP1 DUP4 ADD DUP6 PUSH2 0x1D31 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1E2E DUP2 DUP6 PUSH2 0x1D31 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1E5C SWAP1 DUP4 ADD DUP6 PUSH2 0x1D31 JUMP JUMPDEST DUP3 DUP2 SUB DUP1 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x2 DUP3 MSTORE PUSH2 0x60F PUSH1 0xF3 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x60 DUP6 ADD MSTORE POP PUSH2 0x1E2E PUSH1 0x40 DUP3 ADD DUP6 PUSH2 0x1D31 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP4 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1E2E SWAP1 DUP4 ADD DUP5 PUSH2 0x1D31 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xB DUP4 SWAP1 SIGNEXTEND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1E2E SWAP1 DUP4 ADD DUP5 PUSH2 0x1D31 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1E2E SWAP1 DUP4 ADD DUP5 PUSH2 0x1D31 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6473 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x818591B5A5B881D1BC819DC985B9D PUSH1 0x8A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x5265646972656374416C6C3A206F6E6C7920434641763120737570706F727465 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265646972656374416C6C3A206E6F7420616363657074656420746F6B656E00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x33 SWAP1 DUP3 ADD MSTORE PUSH32 0x556E737570706F727465642063616C6C6261636B202D20204265666F72652041 PUSH1 0x40 DUP3 ADD MSTORE PUSH19 0x19DC99595B595B9D0815195C9B5A5B985D1959 PUSH1 0x6A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5265646972656374416C6C3A20737570706F7274206F6E6C79206F6E6520686F PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1CDD PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x2061646D696E20746F207265766F6B65 PUSH1 0x80 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x556E737570706F727465642063616C6C6261636B202D204265666F7265204167 PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x1C99595B595B9D081D5C19185D1959 PUSH1 0x8A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x21B0B63632B91034B9903737BA1030B71030B236B4B7 PUSH1 0x51 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x556E737570706F727465642063616C6C6261636B202D204265666F7265204167 PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x1C99595B595B9D0810DC99585D1959 PUSH1 0x8A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xB SIGNEXTEND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x22E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2306 JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x232F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2317 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xC48 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 PUSH11 0x2EF81428AB52C02AD3297 0xF8 SDIV 0xAE BYTE 0xF9 0xC4 SGT 0xAA 0xE3 0xCE EXP PUSH23 0x7AE8E549E97E5C64736F6C634300070100330000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        789,
        12990
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "8": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "LT",
      "path": "44"
    },
    "9": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x139"
    },
    "12": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "13": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "CALLDATALOAD",
      "path": "44"
    },
    "16": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "SHR",
      "path": "44"
    },
    "19": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "20": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x60F5BC21"
    },
    "25": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "GT",
      "path": "44"
    },
    "26": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xAB"
    },
    "29": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "30": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "31": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x9883145E"
    },
    "36": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "GT",
      "path": "44"
    },
    "37": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x6F"
    },
    "40": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "41": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "42": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x9883145E"
    },
    "47": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "EQ",
      "path": "44"
    },
    "48": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x374"
    },
    "51": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "52": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "53": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xA217FDDF"
    },
    "58": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "EQ",
      "path": "44"
    },
    "59": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x394"
    },
    "62": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "63": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "64": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xAE015ADC"
    },
    "69": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "EQ",
      "path": "44"
    },
    "70": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x3A9"
    },
    "73": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "74": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "75": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xCA15C873"
    },
    "80": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "EQ",
      "path": "44"
    },
    "81": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x3C9"
    },
    "84": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "85": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "86": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xD547741F"
    },
    "91": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "EQ",
      "path": "44"
    },
    "92": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x3E9"
    },
    "95": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "96": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "97": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xD86ED3E5"
    },
    "102": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "EQ",
      "path": "44"
    },
    "103": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x145"
    },
    "106": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "107": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x140"
    },
    "110": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMP",
      "path": "44"
    },
    "111": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "112": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "113": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x60F5BC21"
    },
    "118": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "EQ",
      "path": "44"
    },
    "119": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2C5"
    },
    "122": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "123": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "124": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x75B238FC"
    },
    "129": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "EQ",
      "path": "44"
    },
    "130": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2F2"
    },
    "133": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "134": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "135": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x884D1F40"
    },
    "140": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "EQ",
      "path": "44"
    },
    "141": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x307"
    },
    "144": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "145": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "146": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x9010D07C"
    },
    "151": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "EQ",
      "path": "44"
    },
    "152": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x327"
    },
    "155": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "156": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "157": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x91D14854"
    },
    "162": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "EQ",
      "path": "44"
    },
    "163": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x347"
    },
    "166": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "167": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x140"
    },
    "170": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMP",
      "path": "44"
    },
    "171": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "172": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "173": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x36568ABE"
    },
    "178": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "GT",
      "path": "44"
    },
    "179": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xFD"
    },
    "182": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "183": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "184": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x36568ABE"
    },
    "189": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "EQ",
      "path": "44"
    },
    "190": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x20E"
    },
    "193": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "194": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "195": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x4DBB40B2"
    },
    "200": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "EQ",
      "path": "44"
    },
    "201": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x22E"
    },
    "204": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "205": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "206": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x4EB66FFF"
    },
    "211": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "EQ",
      "path": "44"
    },
    "212": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x250"
    },
    "215": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "216": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "217": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x53C11F99"
    },
    "222": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "EQ",
      "path": "44"
    },
    "223": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x270"
    },
    "226": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "227": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "228": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x5BD7FA11"
    },
    "233": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "EQ",
      "path": "44"
    },
    "234": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x290"
    },
    "237": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "238": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "239": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x5F9E7D77"
    },
    "244": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "EQ",
      "path": "44"
    },
    "245": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2A5"
    },
    "248": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "249": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x140"
    },
    "252": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMP",
      "path": "44"
    },
    "253": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "254": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "255": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x230DBD29"
    },
    "260": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "EQ",
      "path": "44"
    },
    "261": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x145"
    },
    "264": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "265": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "266": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x248A9CA3"
    },
    "271": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "EQ",
      "path": "44"
    },
    "272": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x17B"
    },
    "275": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "276": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "277": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x28D2BF94"
    },
    "282": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "EQ",
      "path": "44"
    },
    "283": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1A8"
    },
    "286": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "287": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "288": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x2F2FF15D"
    },
    "293": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "EQ",
      "path": "44"
    },
    "294": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1CC"
    },
    "297": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "298": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "299": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x30D9C915"
    },
    "304": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "EQ",
      "path": "44"
    },
    "305": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1EE"
    },
    "308": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "309": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x140"
    },
    "312": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMP",
      "path": "44"
    },
    "313": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "314": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "315": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x140"
    },
    "318": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "319": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "STOP",
      "path": "44"
    },
    "320": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "321": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "323": {
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "DUP1",
      "path": "44"
    },
    "324": {
      "first_revert": true,
      "fn": null,
      "offset": [
        789,
        12990
      ],
      "op": "REVERT",
      "path": "44"
    },
    "325": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "326": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "327": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "DUP1",
      "path": "44"
    },
    "328": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "329": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x151"
    },
    "332": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "333": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "335": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "DUP1",
      "path": "44"
    },
    "336": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "REVERT",
      "path": "44"
    },
    "337": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "338": {
      "op": "POP"
    },
    "339": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x165"
    },
    "342": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x160"
    },
    "345": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "346": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "348": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1AA1"
    },
    "351": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "jump": "i",
      "offset": [
        10309,
        10823
      ],
      "op": "JUMP",
      "path": "44"
    },
    "352": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "353": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x409"
    },
    "356": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "jump": "i",
      "offset": [
        10309,
        10823
      ],
      "op": "JUMP",
      "path": "44"
    },
    "357": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "358": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "360": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "361": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x172"
    },
    "364": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "365": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "366": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1DE5"
    },
    "369": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "jump": "i",
      "offset": [
        10309,
        10823
      ],
      "op": "JUMP",
      "path": "44"
    },
    "370": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "371": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "373": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "374": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "DUP1",
      "path": "44"
    },
    "375": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "376": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "SUB",
      "path": "44"
    },
    "377": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "378": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "RETURN",
      "path": "44"
    },
    "379": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "380": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "381": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "DUP1",
      "path": "0"
    },
    "382": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "383": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x187"
    },
    "386": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "387": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "389": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "DUP1",
      "path": "0"
    },
    "390": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "REVERT",
      "path": "0"
    },
    "391": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "392": {
      "op": "POP"
    },
    "393": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19B"
    },
    "396": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x196"
    },
    "399": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "400": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "402": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E9"
    },
    "405": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMP",
      "path": "0"
    },
    "406": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "407": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x546"
    },
    "410": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMP",
      "path": "0"
    },
    "411": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "412": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "414": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "415": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172"
    },
    "418": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "419": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "420": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DAD"
    },
    "423": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMP",
      "path": "0"
    },
    "424": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "425": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "426": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "DUP1",
      "path": "44"
    },
    "427": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "428": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1B4"
    },
    "431": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "432": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "434": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "DUP1",
      "path": "44"
    },
    "435": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "REVERT",
      "path": "44"
    },
    "436": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "437": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "POP",
      "path": "44"
    },
    "438": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1BD"
    },
    "441": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x55B"
    },
    "444": {
      "fn": "TennerrStreamer.currentReceiver",
      "jump": "i",
      "offset": [
        2982,
        3335
      ],
      "op": "JUMP",
      "path": "44"
    },
    "445": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "446": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "448": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "449": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x172"
    },
    "452": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "453": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "454": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "455": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "456": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x22A7"
    },
    "459": {
      "fn": "TennerrStreamer.currentReceiver",
      "jump": "i",
      "offset": [
        2982,
        3335
      ],
      "op": "JUMP",
      "path": "44"
    },
    "460": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "461": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "462": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "463": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "464": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D8"
    },
    "467": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "468": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "470": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "471": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "REVERT",
      "path": "0"
    },
    "472": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "473": {
      "op": "POP"
    },
    "474": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EC"
    },
    "477": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E7"
    },
    "480": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "481": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "483": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1919"
    },
    "486": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "487": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "488": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x61C"
    },
    "491": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "492": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "493": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "STOP",
      "path": "0"
    },
    "494": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "495": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "CALLVALUE",
      "path": "26"
    },
    "496": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "DUP1",
      "path": "26"
    },
    "497": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "498": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1FA"
    },
    "501": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "502": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "504": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "DUP1",
      "path": "26"
    },
    "505": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "REVERT",
      "path": "26"
    },
    "506": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "507": {
      "op": "POP"
    },
    "508": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x165"
    },
    "511": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x209"
    },
    "514": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "515": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "517": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1A05"
    },
    "520": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "jump": "i",
      "offset": [
        247,
        647
      ],
      "op": "JUMP",
      "path": "26"
    },
    "521": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "522": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x664"
    },
    "525": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "jump": "i",
      "offset": [
        247,
        647
      ],
      "op": "JUMP",
      "path": "26"
    },
    "526": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "527": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "528": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "529": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "530": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21A"
    },
    "533": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "534": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "536": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "537": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "REVERT",
      "path": "0"
    },
    "538": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "539": {
      "op": "POP"
    },
    "540": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EC"
    },
    "543": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x229"
    },
    "546": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "547": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "549": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1919"
    },
    "552": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMP",
      "path": "0"
    },
    "553": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "554": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67E"
    },
    "557": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMP",
      "path": "0"
    },
    "558": {
      "offset": [
        1430,
        1466
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "559": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        1430,
        1466
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "560": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        1430,
        1466
      ],
      "op": "DUP1",
      "path": "44"
    },
    "561": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        1430,
        1466
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "562": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        1430,
        1466
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x23A"
    },
    "565": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        1430,
        1466
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "566": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        1430,
        1466
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "568": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        1430,
        1466
      ],
      "op": "DUP1",
      "path": "44"
    },
    "569": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        1430,
        1466
      ],
      "op": "REVERT",
      "path": "44"
    },
    "570": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        1430,
        1466
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "571": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        1430,
        1466
      ],
      "op": "POP",
      "path": "44"
    },
    "572": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        1430,
        1466
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x243"
    },
    "575": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        1430,
        1466
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x6C0"
    },
    "578": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        1430,
        1466
      ],
      "op": "JUMP",
      "path": "44"
    },
    "579": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        1430,
        1466
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "580": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        1430,
        1466
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "582": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        1430,
        1466
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "583": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        1430,
        1466
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x172"
    },
    "586": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        1430,
        1466
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "587": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        1430,
        1466
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "588": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        1430,
        1466
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1D5D"
    },
    "591": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        1430,
        1466
      ],
      "op": "JUMP",
      "path": "44"
    },
    "592": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12301,
        12571
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "593": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12301,
        12571
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "594": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12301,
        12571
      ],
      "op": "DUP1",
      "path": "44"
    },
    "595": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12301,
        12571
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "596": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12301,
        12571
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x25C"
    },
    "599": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12301,
        12571
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "600": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12301,
        12571
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "602": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12301,
        12571
      ],
      "op": "DUP1",
      "path": "44"
    },
    "603": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12301,
        12571
      ],
      "op": "REVERT",
      "path": "44"
    },
    "604": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12301,
        12571
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "605": {
      "op": "POP"
    },
    "606": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12301,
        12571
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1EC"
    },
    "609": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12301,
        12571
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x26B"
    },
    "612": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12301,
        12571
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "613": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12301,
        12571
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "615": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12301,
        12571
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1834"
    },
    "618": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "jump": "i",
      "offset": [
        12301,
        12571
      ],
      "op": "JUMP",
      "path": "44"
    },
    "619": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12301,
        12571
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "620": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12301,
        12571
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x6CF"
    },
    "623": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "jump": "i",
      "offset": [
        12301,
        12571
      ],
      "op": "JUMP",
      "path": "44"
    },
    "624": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "625": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "626": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "DUP1",
      "path": "44"
    },
    "627": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "628": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x27C"
    },
    "631": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "632": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "634": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "DUP1",
      "path": "44"
    },
    "635": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "REVERT",
      "path": "44"
    },
    "636": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "637": {
      "op": "POP"
    },
    "638": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x165"
    },
    "641": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x28B"
    },
    "644": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "645": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "647": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1AA1"
    },
    "650": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "jump": "i",
      "offset": [
        10829,
        11474
      ],
      "op": "JUMP",
      "path": "44"
    },
    "651": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "652": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x744"
    },
    "655": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "jump": "i",
      "offset": [
        10829,
        11474
      ],
      "op": "JUMP",
      "path": "44"
    },
    "656": {
      "offset": [
        1208,
        1242
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "657": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1208,
        1242
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "658": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1208,
        1242
      ],
      "op": "DUP1",
      "path": "44"
    },
    "659": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1208,
        1242
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "660": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1208,
        1242
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x29C"
    },
    "663": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1208,
        1242
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "664": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1208,
        1242
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "666": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1208,
        1242
      ],
      "op": "DUP1",
      "path": "44"
    },
    "667": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1208,
        1242
      ],
      "op": "REVERT",
      "path": "44"
    },
    "668": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1208,
        1242
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "669": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1208,
        1242
      ],
      "op": "POP",
      "path": "44"
    },
    "670": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1208,
        1242
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x243"
    },
    "673": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1208,
        1242
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x88D"
    },
    "676": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "jump": "i",
      "offset": [
        1208,
        1242
      ],
      "op": "JUMP",
      "path": "44"
    },
    "677": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "678": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "CALLVALUE",
      "path": "26"
    },
    "679": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "DUP1",
      "path": "26"
    },
    "680": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "681": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2B1"
    },
    "684": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "685": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "687": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "DUP1",
      "path": "26"
    },
    "688": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "REVERT",
      "path": "26"
    },
    "689": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "690": {
      "op": "POP"
    },
    "691": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x165"
    },
    "694": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2C0"
    },
    "697": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "698": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "700": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1A05"
    },
    "703": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "jump": "i",
      "offset": [
        1911,
        2318
      ],
      "op": "JUMP",
      "path": "26"
    },
    "704": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "705": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x89C"
    },
    "708": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "jump": "i",
      "offset": [
        1911,
        2318
      ],
      "op": "JUMP",
      "path": "26"
    },
    "709": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "710": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "711": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "DUP1",
      "path": "44"
    },
    "712": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "713": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2D1"
    },
    "716": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "717": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "719": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "DUP1",
      "path": "44"
    },
    "720": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "REVERT",
      "path": "44"
    },
    "721": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "722": {
      "op": "POP"
    },
    "723": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2E5"
    },
    "726": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2E0"
    },
    "729": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "730": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "732": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x18E9"
    },
    "735": {
      "fn": "TennerrStreamer.getStreamData",
      "jump": "i",
      "offset": [
        7053,
        8117
      ],
      "op": "JUMP",
      "path": "44"
    },
    "736": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "737": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x8B6"
    },
    "740": {
      "fn": "TennerrStreamer.getStreamData",
      "jump": "i",
      "offset": [
        7053,
        8117
      ],
      "op": "JUMP",
      "path": "44"
    },
    "741": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "742": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "744": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "745": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x172"
    },
    "748": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "749": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "750": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1D71"
    },
    "753": {
      "fn": "TennerrStreamer.getStreamData",
      "jump": "i",
      "offset": [
        7053,
        8117
      ],
      "op": "JUMP",
      "path": "44"
    },
    "754": {
      "offset": [
        1115,
        1175
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "755": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        1115,
        1175
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "756": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        1115,
        1175
      ],
      "op": "DUP1",
      "path": "44"
    },
    "757": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        1115,
        1175
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "758": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        1115,
        1175
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2FE"
    },
    "761": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        1115,
        1175
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "762": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        1115,
        1175
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "764": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        1115,
        1175
      ],
      "op": "DUP1",
      "path": "44"
    },
    "765": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        1115,
        1175
      ],
      "op": "REVERT",
      "path": "44"
    },
    "766": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        1115,
        1175
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "767": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        1115,
        1175
      ],
      "op": "POP",
      "path": "44"
    },
    "768": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        1115,
        1175
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x19B"
    },
    "771": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        1115,
        1175
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xAB5"
    },
    "774": {
      "fn": "TennerrStreamer.getStreamData",
      "jump": "i",
      "offset": [
        1115,
        1175
      ],
      "op": "JUMP",
      "path": "44"
    },
    "775": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "776": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "CALLVALUE",
      "path": "26"
    },
    "777": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "DUP1",
      "path": "26"
    },
    "778": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "779": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x313"
    },
    "782": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "783": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "785": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "DUP1",
      "path": "26"
    },
    "786": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "REVERT",
      "path": "26"
    },
    "787": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "788": {
      "op": "POP"
    },
    "789": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x165"
    },
    "792": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x322"
    },
    "795": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "796": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "798": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1A05"
    },
    "801": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "jump": "i",
      "offset": [
        1079,
        1479
      ],
      "op": "JUMP",
      "path": "26"
    },
    "802": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "803": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xAD9"
    },
    "806": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "jump": "i",
      "offset": [
        1079,
        1479
      ],
      "op": "JUMP",
      "path": "26"
    },
    "807": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "808": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "809": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "810": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "811": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x333"
    },
    "814": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "815": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "817": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "818": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "REVERT",
      "path": "0"
    },
    "819": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "820": {
      "op": "POP"
    },
    "821": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x243"
    },
    "824": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x342"
    },
    "827": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "828": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "830": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1948"
    },
    "833": {
      "fn": "AccessControl.getRoleMember",
      "jump": "i",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMP",
      "path": "0"
    },
    "834": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "835": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF3"
    },
    "838": {
      "fn": "AccessControl.getRoleMember",
      "jump": "i",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMP",
      "path": "0"
    },
    "839": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "840": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "841": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "842": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "843": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x353"
    },
    "846": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "847": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "849": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "850": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "REVERT",
      "path": "0"
    },
    "851": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "852": {
      "op": "POP"
    },
    "853": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x367"
    },
    "856": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x362"
    },
    "859": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "860": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "862": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1919"
    },
    "865": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMP",
      "path": "0"
    },
    "866": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "867": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB14"
    },
    "870": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMP",
      "path": "0"
    },
    "871": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "872": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "874": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "875": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172"
    },
    "878": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "879": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "880": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DA2"
    },
    "883": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMP",
      "path": "0"
    },
    "884": {
      "offset": [
        1473,
        1520
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "885": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "886": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "DUP1",
      "path": "44"
    },
    "887": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "888": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x380"
    },
    "891": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "892": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "894": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "DUP1",
      "path": "44"
    },
    "895": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "REVERT",
      "path": "44"
    },
    "896": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "897": {
      "op": "POP"
    },
    "898": {
      "offset": [
        1473,
        1520
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x19B"
    },
    "901": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x38F"
    },
    "904": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "905": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "907": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1948"
    },
    "910": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        1473,
        1520
      ],
      "op": "JUMP",
      "path": "44"
    },
    "911": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "912": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xB2C"
    },
    "915": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        1473,
        1520
      ],
      "op": "JUMP",
      "path": "44"
    },
    "916": {
      "offset": [
        1727,
        1776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "917": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1727,
        1776
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "918": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1727,
        1776
      ],
      "op": "DUP1",
      "path": "0"
    },
    "919": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1727,
        1776
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "920": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1727,
        1776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A0"
    },
    "923": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1727,
        1776
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "924": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1727,
        1776
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "926": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1727,
        1776
      ],
      "op": "DUP1",
      "path": "0"
    },
    "927": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1727,
        1776
      ],
      "op": "REVERT",
      "path": "0"
    },
    "928": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1727,
        1776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "929": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1727,
        1776
      ],
      "op": "POP",
      "path": "0"
    },
    "930": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1727,
        1776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19B"
    },
    "933": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1727,
        1776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5A"
    },
    "936": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        1727,
        1776
      ],
      "op": "JUMP",
      "path": "0"
    },
    "937": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11480,
        11911
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "938": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11480,
        11911
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "939": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11480,
        11911
      ],
      "op": "DUP1",
      "path": "44"
    },
    "940": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11480,
        11911
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "941": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11480,
        11911
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x3B5"
    },
    "944": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11480,
        11911
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "945": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11480,
        11911
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "947": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11480,
        11911
      ],
      "op": "DUP1",
      "path": "44"
    },
    "948": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11480,
        11911
      ],
      "op": "REVERT",
      "path": "44"
    },
    "949": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11480,
        11911
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "950": {
      "op": "POP"
    },
    "951": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11480,
        11911
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1EC"
    },
    "954": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11480,
        11911
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x3C4"
    },
    "957": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11480,
        11911
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "958": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11480,
        11911
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "960": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11480,
        11911
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1857"
    },
    "963": {
      "fn": "TennerrStreamer.createFlow",
      "jump": "i",
      "offset": [
        11480,
        11911
      ],
      "op": "JUMP",
      "path": "44"
    },
    "964": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11480,
        11911
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "965": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11480,
        11911
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xB5F"
    },
    "968": {
      "fn": "TennerrStreamer.createFlow",
      "jump": "i",
      "offset": [
        11480,
        11911
      ],
      "op": "JUMP",
      "path": "44"
    },
    "969": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "970": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "971": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "972": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "973": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D5"
    },
    "976": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "977": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "979": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "980": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "REVERT",
      "path": "0"
    },
    "981": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "982": {
      "op": "POP"
    },
    "983": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19B"
    },
    "986": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E4"
    },
    "989": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "990": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "992": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E9"
    },
    "995": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMP",
      "path": "0"
    },
    "996": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "997": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC4E"
    },
    "1000": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1001": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1002": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1003": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1004": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1005": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F5"
    },
    "1008": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1009": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1011": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1012": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1013": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1014": {
      "op": "POP"
    },
    "1015": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EC"
    },
    "1018": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x404"
    },
    "1021": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1022": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1024": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1919"
    },
    "1027": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1028": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1029": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC65"
    },
    "1032": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1033": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1034": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10658,
        10677
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "1036": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10594,
        10605
      ],
      "op": "DUP10",
      "path": "44"
    },
    "1037": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10607,
        10622
      ],
      "op": "DUP10",
      "path": "44"
    },
    "1038": {
      "offset": [
        12794,
        12818
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x416"
    },
    "1041": {
      "offset": [
        12807,
        12817
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1042": {
      "offset": [
        12794,
        12806
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xC9F"
    },
    "1045": {
      "jump": "i",
      "offset": [
        12794,
        12818
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1046": {
      "branch": 58,
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12794,
        12818
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1047": {
      "offset": [
        12786,
        12854
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x43B"
    },
    "1050": {
      "branch": 58,
      "offset": [
        12786,
        12854
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1051": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12786,
        12854
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1053": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12786,
        12854
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1054": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1060": {
      "op": "SHL"
    },
    "1061": {
      "offset": [
        12786,
        12854
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1062": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12786,
        12854
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1063": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12786,
        12854
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "1065": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12786,
        12854
      ],
      "op": "ADD",
      "path": "44"
    },
    "1066": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12786,
        12854
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x432"
    },
    "1069": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12786,
        12854
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1070": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12786,
        12854
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2037"
    },
    "1073": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "jump": "i",
      "offset": [
        12786,
        12854
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1074": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12786,
        12854
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1075": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12786,
        12854
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1077": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12786,
        12854
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1078": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12786,
        12854
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1079": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12786,
        12854
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1080": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12786,
        12854
      ],
      "op": "SUB",
      "path": "44"
    },
    "1081": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12786,
        12854
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1082": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12786,
        12854
      ],
      "op": "REVERT",
      "path": "44"
    },
    "1083": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12786,
        12854
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1084": {
      "offset": [
        12872,
        12896
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x444"
    },
    "1087": {
      "offset": [
        12881,
        12895
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1088": {
      "offset": [
        12872,
        12880
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xCB3"
    },
    "1091": {
      "jump": "i",
      "offset": [
        12872,
        12896
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1092": {
      "branch": 59,
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12872,
        12896
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1093": {
      "offset": [
        12864,
        12934
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x460"
    },
    "1096": {
      "branch": 59,
      "offset": [
        12864,
        12934
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1097": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12864,
        12934
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1099": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12864,
        12934
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1100": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1106": {
      "op": "SHL"
    },
    "1107": {
      "offset": [
        12864,
        12934
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1108": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12864,
        12934
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1109": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12864,
        12934
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "1111": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12864,
        12934
      ],
      "op": "ADD",
      "path": "44"
    },
    "1112": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12864,
        12934
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x432"
    },
    "1115": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12864,
        12934
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1116": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12864,
        12934
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1FF6"
    },
    "1119": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "jump": "i",
      "offset": [
        12864,
        12934
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1120": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12864,
        12934
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1121": {
      "offset": [
        12637,
        12642
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1"
    },
    "1123": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12637,
        12642
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1130": {
      "op": "SHL"
    },
    "1131": {
      "op": "SUB"
    },
    "1132": {
      "offset": [
        12637,
        12642
      ],
      "op": "AND",
      "path": "44"
    },
    "1133": {
      "offset": [
        12615,
        12625
      ],
      "op": "CALLER",
      "path": "44"
    },
    "1134": {
      "offset": [
        12615,
        12643
      ],
      "op": "EQ",
      "path": "44"
    },
    "1135": {
      "offset": [
        12607,
        12682
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x48A"
    },
    "1138": {
      "offset": [
        12607,
        12682
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1139": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12607,
        12682
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1141": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12607,
        12682
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1142": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1148": {
      "op": "SHL"
    },
    "1149": {
      "offset": [
        12607,
        12682
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1150": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12607,
        12682
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1151": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12607,
        12682
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "1153": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12607,
        12682
      ],
      "op": "ADD",
      "path": "44"
    },
    "1154": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12607,
        12682
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x432"
    },
    "1157": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12607,
        12682
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1158": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12607,
        12682
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x20C1"
    },
    "1161": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "jump": "i",
      "offset": [
        12607,
        12682
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1162": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        12607,
        12682
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1163": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10733
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1"
    },
    "1165": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10733
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1166": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1168": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1169": {
      "op": "PUSH4",
      "value": "0x1FB6491D"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1176": {
      "op": "SHL"
    },
    "1177": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1178": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1179": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10693,
        10714
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "1181": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10693,
        10714
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1188": {
      "op": "SHL"
    },
    "1189": {
      "op": "SUB"
    },
    "1190": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10733
      ],
      "op": "AND",
      "path": "44"
    },
    "1191": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10733
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1192": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10743
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x3F6C923A"
    },
    "1197": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10743
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1198": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x4BD"
    },
    "1201": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1202": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10744,
        10748
      ],
      "op": "DUP10",
      "path": "44"
    },
    "1203": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10744,
        10748
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1204": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10744,
        10748
      ],
      "op": "DUP10",
      "path": "44"
    },
    "1205": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10744,
        10748
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1206": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "1208": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "ADD",
      "path": "44"
    },
    "1209": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1DB6"
    },
    "1212": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "jump": "i",
      "offset": [
        10728,
        10749
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1213": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1214": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1216": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1218": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1219": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1220": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1221": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "SUB",
      "path": "44"
    },
    "1222": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1223": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "DUP7",
      "path": "44"
    },
    "1224": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1225": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "1226": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1227": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1228": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1229": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x4D5"
    },
    "1232": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1233": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1235": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1236": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "REVERT",
      "path": "44"
    },
    "1237": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1238": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "POP",
      "path": "44"
    },
    "1239": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "GAS",
      "path": "44"
    },
    "1240": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "1241": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1242": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1243": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1244": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x4E9"
    },
    "1247": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1248": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "1249": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1251": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1252": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "1253": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "1254": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1256": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "REVERT",
      "path": "44"
    },
    "1257": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1258": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "POP",
      "path": "44"
    },
    "1259": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "POP",
      "path": "44"
    },
    "1260": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "POP",
      "path": "44"
    },
    "1261": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "POP",
      "path": "44"
    },
    "1262": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1264": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1265": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "1266": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1268": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1269": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "1270": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "1272": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "1273": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1274": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1275": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "ADD",
      "path": "44"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1278": {
      "op": "NOT"
    },
    "1279": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "AND",
      "path": "44"
    },
    "1280": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1281": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "ADD",
      "path": "44"
    },
    "1282": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1284": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1285": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x511"
    },
    "1288": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1289": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1290": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1291": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "ADD",
      "path": "44"
    },
    "1292": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1293": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1B83"
    },
    "1296": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "jump": "i",
      "offset": [
        10728,
        10749
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1297": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10749
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1298": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10758
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xA0"
    },
    "1300": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10758
      ],
      "op": "ADD",
      "path": "44"
    },
    "1301": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10728,
        10758
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1302": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10717,
        10768
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1303": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10717,
        10768
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1305": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10717,
        10768
      ],
      "op": "ADD",
      "path": "44"
    },
    "1306": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10717,
        10768
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1307": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10717,
        10768
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1308": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10717,
        10768
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1309": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10717,
        10768
      ],
      "op": "ADD",
      "path": "44"
    },
    "1310": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10717,
        10768
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1311": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10717,
        10768
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x528"
    },
    "1314": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10717,
        10768
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1315": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10717,
        10768
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1316": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10717,
        10768
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1969"
    },
    "1319": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "jump": "i",
      "offset": [
        10717,
        10768
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1320": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10717,
        10768
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1321": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10693,
        10768
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1322": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10693,
        10768
      ],
      "op": "POP",
      "path": "44"
    },
    "1323": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10785,
        10816
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 0,
      "value": "0x535"
    },
    "1326": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10800,
        10804
      ],
      "op": "DUP7",
      "path": "44"
    },
    "1327": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10800,
        10804
      ],
      "op": "DUP7",
      "path": "44"
    },
    "1328": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10806,
        10814
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1329": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10785,
        10799
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xD4E"
    },
    "1332": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "jump": "i",
      "offset": [
        10785,
        10816
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1333": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10785,
        10816
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1334": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10778,
        10816
      ],
      "op": "SWAP14",
      "path": "44"
    },
    "1335": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "offset": [
        10309,
        10823
      ],
      "op": "SWAP13",
      "path": "44"
    },
    "1336": {
      "op": "POP"
    },
    "1337": {
      "op": "POP"
    },
    "1338": {
      "op": "POP"
    },
    "1339": {
      "op": "POP"
    },
    "1340": {
      "op": "POP"
    },
    "1341": {
      "op": "POP"
    },
    "1342": {
      "op": "POP"
    },
    "1343": {
      "op": "POP"
    },
    "1344": {
      "op": "POP"
    },
    "1345": {
      "op": "POP"
    },
    "1346": {
      "op": "POP"
    },
    "1347": {
      "op": "POP"
    },
    "1348": {
      "op": "POP"
    },
    "1349": {
      "fn": "TennerrStreamer.afterAgreementUpdated",
      "jump": "o",
      "offset": [
        10309,
        10823
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1350": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1351": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4339,
        4346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1353": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 1
    },
    "1354": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1355": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1356": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1358": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1359": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1360": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1361": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1363": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1364": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1365": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1367": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4387
      ],
      "op": "ADD",
      "path": "0"
    },
    "1368": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4387
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1369": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4387
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1370": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "o",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1371": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1372": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3165,
        3174
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "1374": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3165,
        3174
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1375": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3061,
        3078
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1377": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3061,
        3078
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1378": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3061,
        3078
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1379": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3061,
        3078
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1380": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3061,
        3078
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1381": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3061,
        3078
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1388": {
      "op": "SHL"
    },
    "1389": {
      "op": "SUB"
    },
    "1390": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3165,
        3174
      ],
      "op": "AND",
      "path": "44"
    },
    "1391": {
      "branch": 60,
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3165,
        3188
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1392": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3161,
        3329
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x617"
    },
    "1395": {
      "branch": 60,
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3161,
        3329
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1396": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3234
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 2,
      "value": "0x2"
    },
    "1398": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3234
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1399": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3243,
        3257
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x3"
    },
    "1401": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3243,
        3257
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1402": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3274,
        3283
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "1404": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3274,
        3283
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1405": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3274,
        3283
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1406": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1408": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1409": {
      "op": "PUSH4",
      "value": "0x1CD43D11"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1416": {
      "op": "SHL"
    },
    "1417": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1418": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1425": {
      "op": "SHL"
    },
    "1426": {
      "op": "SUB"
    },
    "1427": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3234
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "1428": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3234
      ],
      "op": "DUP6",
      "path": "44"
    },
    "1429": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3234
      ],
      "op": "AND",
      "path": "44"
    },
    "1430": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3234
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "1431": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3242
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xE6A1E888"
    },
    "1436": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3242
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "1437": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x5AF"
    },
    "1440": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "1441": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3243,
        3257
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1442": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3243,
        3257
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1443": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3243,
        3257
      ],
      "op": "AND",
      "path": "44"
    },
    "1444": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3243,
        3257
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "1445": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3267,
        3271
      ],
      "op": "ADDRESS",
      "path": "44"
    },
    "1446": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3267,
        3271
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "1447": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3274,
        3283
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "1448": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3274,
        3283
      ],
      "op": "AND",
      "path": "44"
    },
    "1449": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3274,
        3283
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1450": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "ADD",
      "path": "44"
    },
    "1451": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1EA5"
    },
    "1454": {
      "fn": "TennerrStreamer.currentReceiver",
      "jump": "i",
      "offset": [
        3230,
        3284
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1455": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1456": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x80"
    },
    "1458": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1460": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1461": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1462": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1463": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "SUB",
      "path": "44"
    },
    "1464": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1465": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "DUP7",
      "path": "44"
    },
    "1466": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1467": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "1468": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1469": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1470": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1471": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x5C7"
    },
    "1474": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1475": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1477": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1478": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "REVERT",
      "path": "44"
    },
    "1479": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1480": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "POP",
      "path": "44"
    },
    "1481": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "GAS",
      "path": "44"
    },
    "1482": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "1483": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1484": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1485": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1486": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x5DB"
    },
    "1489": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1490": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "1491": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1493": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1494": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "1495": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "1496": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1498": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "REVERT",
      "path": "44"
    },
    "1499": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1500": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "POP",
      "path": "44"
    },
    "1501": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "POP",
      "path": "44"
    },
    "1502": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "POP",
      "path": "44"
    },
    "1503": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "POP",
      "path": "44"
    },
    "1504": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1506": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1507": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "1508": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "1510": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "NOT",
      "path": "44"
    },
    "1511": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "1513": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1514": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "ADD",
      "path": "44"
    },
    "1515": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "AND",
      "path": "44"
    },
    "1516": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1517": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "ADD",
      "path": "44"
    },
    "1518": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1519": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1521": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1522": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "POP",
      "path": "44"
    },
    "1523": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1524": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "ADD",
      "path": "44"
    },
    "1525": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1526": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x5FF"
    },
    "1529": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1530": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1531": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1CF5"
    },
    "1534": {
      "fn": "TennerrStreamer.currentReceiver",
      "jump": "i",
      "offset": [
        3230,
        3284
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1535": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3230,
        3284
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1536": {
      "op": "POP"
    },
    "1537": {
      "op": "POP"
    },
    "1538": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3309,
        3318
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 3,
      "value": "0x4"
    },
    "1540": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3309,
        3318
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1541": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3204,
        3284
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1542": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3204,
        3284
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "1543": {
      "op": "POP"
    },
    "1544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1550": {
      "op": "SHL"
    },
    "1551": {
      "op": "SUB"
    },
    "1552": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3309,
        3318
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1553": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3309,
        3318
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1554": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3309,
        3318
      ],
      "op": "AND",
      "path": "44"
    },
    "1555": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3309,
        3318
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "1556": {
      "op": "POP"
    },
    "1557": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3204,
        3284
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1558": {
      "op": "POP"
    },
    "1559": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        3161,
        3329
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1560": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1561": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1562": {
      "fn": "TennerrStreamer.currentReceiver",
      "offset": [
        2982,
        3335
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "1563": {
      "fn": "TennerrStreamer.currentReceiver",
      "jump": "o",
      "offset": [
        2982,
        3335
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1564": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1565": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4741
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x0"
    },
    "1567": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1568": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1569": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1570": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1572": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1573": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1574": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1575": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1577": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1578": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1579": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4757
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1581": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4757
      ],
      "op": "ADD",
      "path": "0"
    },
    "1582": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4757
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1583": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4727,
        4772
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63A"
    },
    "1586": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4727,
        4772
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1587": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4759,
        4771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x362"
    },
    "1590": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4759,
        4769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1104"
    },
    "1593": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4759,
        4771
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1594": {
      "branch": 66,
      "fn": "AccessControl.grantRole",
      "offset": [
        4727,
        4772
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1595": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x656"
    },
    "1598": {
      "branch": 66,
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1599": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1601": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1602": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1608": {
      "op": "SHL"
    },
    "1609": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1610": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1611": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1613": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "ADD",
      "path": "0"
    },
    "1614": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x432"
    },
    "1617": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1618": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FA7"
    },
    "1621": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4719,
        4824
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1622": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1623": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4835,
        4860
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x660"
    },
    "1626": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4846,
        4850
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1627": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4852,
        4859
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1628": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4835,
        4845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1108"
    },
    "1631": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4835,
        4860
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1632": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4835,
        4860
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1633": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "POP",
      "path": "0"
    },
    "1634": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "POP",
      "path": "0"
    },
    "1635": {
      "fn": "AccessControl.grantRole",
      "jump": "o",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1636": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        247,
        647
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1637": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        544,
        556
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "1639": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        583,
        640
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 6,
      "value": "0x40"
    },
    "1641": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        583,
        640
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1642": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1648": {
      "op": "SHL"
    },
    "1649": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        583,
        640
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1650": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        583,
        640
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1651": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        583,
        640
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1653": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        583,
        640
      ],
      "op": "ADD",
      "path": "26"
    },
    "1654": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        583,
        640
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x432"
    },
    "1657": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        583,
        640
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1658": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "offset": [
        583,
        640
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2209"
    },
    "1661": {
      "fn": "SuperAppBase.beforeAgreementCreated",
      "jump": "i",
      "offset": [
        583,
        640
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1662": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1663": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5915,
        5927
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 7,
      "value": "0x686"
    },
    "1666": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5915,
        5925
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1104"
    },
    "1669": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5915,
        5927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1670": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5915,
        5927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1677": {
      "op": "SHL"
    },
    "1678": {
      "op": "SUB"
    },
    "1679": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5904,
        5927
      ],
      "op": "AND",
      "path": "0"
    },
    "1680": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5904,
        5911
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1687": {
      "op": "SHL"
    },
    "1688": {
      "op": "SUB"
    },
    "1689": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5904,
        5927
      ],
      "op": "AND",
      "path": "0"
    },
    "1690": {
      "branch": 67,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5904,
        5927
      ],
      "op": "EQ",
      "path": "0"
    },
    "1691": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B6"
    },
    "1694": {
      "branch": 67,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1695": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1697": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1698": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1704": {
      "op": "SHL"
    },
    "1705": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1706": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1707": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1709": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "ADD",
      "path": "0"
    },
    "1710": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x432"
    },
    "1713": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1714": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2258"
    },
    "1717": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5896,
        5979
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1718": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1719": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5990,
        6016
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 8,
      "value": "0x660"
    },
    "1722": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        6002,
        6006
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1723": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        6008,
        6015
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1724": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5990,
        6001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1171"
    },
    "1727": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5990,
        6016
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1728": {
      "offset": [
        1430,
        1466
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1729": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        1430,
        1466
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x8"
    },
    "1731": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        1430,
        1466
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1738": {
      "op": "SHL"
    },
    "1739": {
      "op": "SUB"
    },
    "1740": {
      "offset": [
        1430,
        1466
      ],
      "op": "AND",
      "path": "44"
    },
    "1741": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        1430,
        1466
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1742": {
      "fn": "AccessControl.renounceRole",
      "jump": "o",
      "offset": [
        1430,
        1466
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1743": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12301,
        12571
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1744": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12383,
        12414
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 9,
      "value": "0x6F9"
    },
    "1747": {
      "offset": [
        1152,
        1175
      ],
      "op": "PUSH32",
      "path": "44",
      "value": "0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
    },
    "1780": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12403,
        12413
      ],
      "op": "CALLER",
      "path": "44"
    },
    "1781": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12383,
        12390
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xB14"
    },
    "1784": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "jump": "i",
      "offset": [
        12383,
        12414
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1785": {
      "branch": 61,
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12383,
        12414
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1786": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12375,
        12441
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x715"
    },
    "1789": {
      "branch": 61,
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12375,
        12441
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1790": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12375,
        12441
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1792": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12375,
        12441
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1793": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1797": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1799": {
      "op": "SHL"
    },
    "1800": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12375,
        12441
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1801": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12375,
        12441
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1802": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12375,
        12441
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "1804": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12375,
        12441
      ],
      "op": "ADD",
      "path": "44"
    },
    "1805": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12375,
        12441
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x432"
    },
    "1808": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12375,
        12441
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1809": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12375,
        12441
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x21D9"
    },
    "1812": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "jump": "i",
      "offset": [
        12375,
        12441
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1813": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12375,
        12441
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1814": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12451,
        12480
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 10,
      "value": "0x6"
    },
    "1816": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12451,
        12494
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1817": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12451,
        12494
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1824": {
      "op": "SHL"
    },
    "1825": {
      "op": "SUB"
    },
    "1826": {
      "op": "NOT"
    },
    "1827": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12451,
        12494
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1828": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12451,
        12494
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1829": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12451,
        12494
      ],
      "op": "AND",
      "path": "44"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1836": {
      "op": "SHL"
    },
    "1837": {
      "op": "SUB"
    },
    "1838": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12451,
        12494
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "1839": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12451,
        12494
      ],
      "op": "DUP5",
      "path": "44"
    },
    "1840": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12451,
        12494
      ],
      "op": "AND",
      "path": "44"
    },
    "1841": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12451,
        12494
      ],
      "op": "OR",
      "path": "44"
    },
    "1842": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12451,
        12494
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1843": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12451,
        12494
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1844": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12451,
        12494
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1845": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12451,
        12494
      ],
      "op": "SSTORE",
      "path": "44"
    },
    "1846": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12504,
        12517
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 11,
      "value": "0x5"
    },
    "1848": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12504,
        12564
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1849": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12504,
        12564
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1850": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12534,
        12563
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "1851": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12534,
        12563
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1852": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12534,
        12563
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "1853": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12534,
        12563
      ],
      "op": "AND",
      "path": "44"
    },
    "1854": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12504,
        12564
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1855": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12504,
        12564
      ],
      "op": "AND",
      "path": "44"
    },
    "1856": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12504,
        12564
      ],
      "op": "OR",
      "path": "44"
    },
    "1857": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12504,
        12564
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1858": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "offset": [
        12504,
        12564
      ],
      "op": "SSTORE",
      "path": "44"
    },
    "1859": {
      "fn": "TennerrStreamer.setTennerrEscrow",
      "jump": "o",
      "offset": [
        12301,
        12571
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1860": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1861": {
      "offset": [
        12637,
        12642
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1"
    },
    "1863": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        12637,
        12642
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1864": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11135,
        11154
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "1866": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11135,
        11154
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1873": {
      "op": "SHL"
    },
    "1874": {
      "op": "SUB"
    },
    "1875": {
      "offset": [
        12637,
        12642
      ],
      "op": "AND",
      "path": "44"
    },
    "1876": {
      "offset": [
        12615,
        12625
      ],
      "op": "CALLER",
      "path": "44"
    },
    "1877": {
      "offset": [
        12615,
        12643
      ],
      "op": "EQ",
      "path": "44"
    },
    "1878": {
      "offset": [
        12607,
        12682
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x771"
    },
    "1881": {
      "offset": [
        12607,
        12682
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1882": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        12607,
        12682
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1884": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        12607,
        12682
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1885": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1891": {
      "op": "SHL"
    },
    "1892": {
      "offset": [
        12607,
        12682
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1893": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        12607,
        12682
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1894": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        12607,
        12682
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "1896": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        12607,
        12682
      ],
      "op": "ADD",
      "path": "44"
    },
    "1897": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        12607,
        12682
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x432"
    },
    "1900": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        12607,
        12682
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1901": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        12607,
        12682
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x20C1"
    },
    "1904": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "jump": "i",
      "offset": [
        12607,
        12682
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1905": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        12607,
        12682
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1906": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11302
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1"
    },
    "1908": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11302
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1909": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1911": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1912": {
      "op": "PUSH4",
      "value": "0x1FB6491D"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1919": {
      "op": "SHL"
    },
    "1920": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1921": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1922": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11262,
        11283
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "1924": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11262,
        11283
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1931": {
      "op": "SHL"
    },
    "1932": {
      "op": "SUB"
    },
    "1933": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11302
      ],
      "op": "AND",
      "path": "44"
    },
    "1934": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11302
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1935": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11312
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x3F6C923A"
    },
    "1940": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11312
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1941": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x7A4"
    },
    "1944": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1945": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11313,
        11317
      ],
      "op": "DUP8",
      "path": "44"
    },
    "1946": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11313,
        11317
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1947": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11313,
        11317
      ],
      "op": "DUP8",
      "path": "44"
    },
    "1948": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11313,
        11317
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1949": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "1951": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "ADD",
      "path": "44"
    },
    "1952": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1DB6"
    },
    "1955": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "jump": "i",
      "offset": [
        11297,
        11318
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1956": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1957": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1959": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1961": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1962": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1963": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1964": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "SUB",
      "path": "44"
    },
    "1965": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1966": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "DUP7",
      "path": "44"
    },
    "1967": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1968": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "1969": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1970": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1971": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1972": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x7BC"
    },
    "1975": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1976": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1978": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1979": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "REVERT",
      "path": "44"
    },
    "1980": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1981": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "POP",
      "path": "44"
    },
    "1982": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "GAS",
      "path": "44"
    },
    "1983": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "1984": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1985": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1986": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1987": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x7D0"
    },
    "1990": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1991": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "1992": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1994": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1995": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "1996": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "1997": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1999": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "REVERT",
      "path": "44"
    },
    "2000": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2001": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "POP",
      "path": "44"
    },
    "2002": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "POP",
      "path": "44"
    },
    "2003": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "POP",
      "path": "44"
    },
    "2004": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "POP",
      "path": "44"
    },
    "2005": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2007": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2008": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2009": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2011": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2012": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "2013": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "2015": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2016": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2017": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2018": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "ADD",
      "path": "44"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2021": {
      "op": "NOT"
    },
    "2022": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "AND",
      "path": "44"
    },
    "2023": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2024": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "ADD",
      "path": "44"
    },
    "2025": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2027": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2028": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x7F8"
    },
    "2031": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2032": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2033": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2034": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "ADD",
      "path": "44"
    },
    "2035": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2036": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1B83"
    },
    "2039": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "jump": "i",
      "offset": [
        11297,
        11318
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2040": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11318
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2041": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11327
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xA0"
    },
    "2043": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11327
      ],
      "op": "ADD",
      "path": "44"
    },
    "2044": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11297,
        11327
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2045": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11286,
        11337
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2046": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11286,
        11337
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2048": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11286,
        11337
      ],
      "op": "ADD",
      "path": "44"
    },
    "2049": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11286,
        11337
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2050": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11286,
        11337
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2051": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11286,
        11337
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2052": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11286,
        11337
      ],
      "op": "ADD",
      "path": "44"
    },
    "2053": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11286,
        11337
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2054": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11286,
        11337
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x80F"
    },
    "2057": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11286,
        11337
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2058": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11286,
        11337
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2059": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11286,
        11337
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1969"
    },
    "2062": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "jump": "i",
      "offset": [
        11286,
        11337
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2063": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11286,
        11337
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2064": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11262,
        11337
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2065": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11262,
        11337
      ],
      "op": "POP",
      "path": "44"
    },
    "2066": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11352,
        11377
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x81A"
    },
    "2069": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11365,
        11376
      ],
      "op": "DUP12",
      "path": "44"
    },
    "2070": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11352,
        11364
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xC9F"
    },
    "2073": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "jump": "i",
      "offset": [
        11352,
        11377
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2074": {
      "branch": 62,
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11352,
        11377
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2075": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11351,
        11377
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2076": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11351,
        11407
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2077": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11351,
        11407
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x82C"
    },
    "2080": {
      "branch": 62,
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11351,
        11407
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2081": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11351,
        11407
      ],
      "op": "POP",
      "path": "44"
    },
    "2082": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11382,
        11407
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x82A"
    },
    "2085": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11391,
        11406
      ],
      "op": "DUP11",
      "path": "44"
    },
    "2086": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11382,
        11390
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xCB3"
    },
    "2089": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "jump": "i",
      "offset": [
        11382,
        11407
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2090": {
      "branch": 63,
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11382,
        11407
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2091": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11381,
        11407
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2092": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11351,
        11407
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2093": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11347,
        11420
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2094": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11347,
        11420
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x871"
    },
    "2097": {
      "branch": 63,
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11347,
        11420
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2098": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11416,
        11420
      ],
      "op": "DUP4",
      "path": "44",
      "statement": 12
    },
    "2099": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11416,
        11420
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2100": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2101": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2102": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "2104": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "ADD",
      "path": "44"
    },
    "2105": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2107": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2108": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2109": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "DIV",
      "path": "44"
    },
    "2110": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "MUL",
      "path": "44"
    },
    "2111": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2113": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "ADD",
      "path": "44"
    },
    "2114": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2116": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2117": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2118": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2119": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "ADD",
      "path": "44"
    },
    "2120": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2122": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2123": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2124": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "2125": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "2126": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2127": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2128": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2129": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2130": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2131": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2133": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "ADD",
      "path": "44"
    },
    "2134": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2135": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2136": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2137": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2138": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "DUP5",
      "path": "44"
    },
    "2139": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "CALLDATACOPY",
      "path": "44"
    },
    "2140": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2142": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "2143": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "ADD",
      "path": "44"
    },
    "2144": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2145": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2146": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2147": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2148": {
      "op": "POP"
    },
    "2149": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "2150": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "2151": {
      "op": "POP"
    },
    "2152": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x880"
    },
    "2155": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "2156": {
      "op": "POP"
    },
    "2157": {
      "op": "POP"
    },
    "2158": {
      "op": "POP"
    },
    "2159": {
      "op": "POP"
    },
    "2160": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11409,
        11420
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2161": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11347,
        11420
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2162": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11437,
        11467
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 13,
      "value": "0x87C"
    },
    "2165": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11452,
        11456
      ],
      "op": "DUP5",
      "path": "44"
    },
    "2166": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11452,
        11456
      ],
      "op": "DUP5",
      "path": "44"
    },
    "2167": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11458,
        11466
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2168": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11437,
        11451
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xD4E"
    },
    "2171": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "jump": "i",
      "offset": [
        11437,
        11467
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2172": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11437,
        11467
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2173": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11430,
        11467
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2174": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11430,
        11467
      ],
      "op": "POP",
      "path": "44"
    },
    "2175": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        11430,
        11467
      ],
      "op": "POP",
      "path": "44"
    },
    "2176": {
      "offset": [
        12692,
        12693
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2177": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "SWAP10",
      "path": "44"
    },
    "2178": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "SWAP9",
      "path": "44"
    },
    "2179": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "POP",
      "path": "44"
    },
    "2180": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "POP",
      "path": "44"
    },
    "2181": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "POP",
      "path": "44"
    },
    "2182": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "POP",
      "path": "44"
    },
    "2183": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "POP",
      "path": "44"
    },
    "2184": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "POP",
      "path": "44"
    },
    "2185": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "POP",
      "path": "44"
    },
    "2186": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "POP",
      "path": "44"
    },
    "2187": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        10829,
        11474
      ],
      "op": "POP",
      "path": "44"
    },
    "2188": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "jump": "o",
      "offset": [
        10829,
        11474
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2189": {
      "offset": [
        1208,
        1242
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2190": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1208,
        1242
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x5"
    },
    "2192": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1208,
        1242
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2199": {
      "op": "SHL"
    },
    "2200": {
      "op": "SUB"
    },
    "2201": {
      "offset": [
        1208,
        1242
      ],
      "op": "AND",
      "path": "44"
    },
    "2202": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "offset": [
        1208,
        1242
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2203": {
      "fn": "TennerrStreamer.afterAgreementTerminated",
      "jump": "o",
      "offset": [
        1208,
        1242
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2204": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        1911,
        2318
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2205": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2211,
        2223
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "2207": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 14,
      "value": "0x40"
    },
    "2209": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2210": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2216": {
      "op": "SHL"
    },
    "2217": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2218": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2219": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2221": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "ADD",
      "path": "26"
    },
    "2222": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x432"
    },
    "2225": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2226": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "offset": [
        2250,
        2311
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x206E"
    },
    "2229": {
      "fn": "SuperAppBase.beforeAgreementTerminated",
      "jump": "i",
      "offset": [
        2250,
        2311
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2230": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2231": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7126,
        7140
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x8BE"
    },
    "2234": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7126,
        7140
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x168C"
    },
    "2237": {
      "fn": "TennerrStreamer.getStreamData",
      "jump": "i",
      "offset": [
        7126,
        7140
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2238": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7126,
        7140
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2239": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7152,
        7170
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2241": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7193
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2242": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7193
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2243": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7193
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2244": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7186
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x9"
    },
    "2246": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7193
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2248": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7193
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2249": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7193
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2251": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7193
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2252": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7193
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "2253": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7196
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2254": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7196
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2255": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7194,
        7195
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x2"
    },
    "2257": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7194,
        7195
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2258": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7196
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2259": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7196
      ],
      "op": "LT",
      "path": "44"
    },
    "2260": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7196
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x8D9"
    },
    "2263": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7196
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2264": {
      "dev": "Index out of range",
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7196
      ],
      "op": "INVALID",
      "path": "44"
    },
    "2265": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7196
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2266": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7196
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2267": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7196
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2269": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7196
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2270": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7196
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2272": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7196
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2274": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7196
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "2275": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7196
      ],
      "op": "ADD",
      "path": "44"
    },
    "2276": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7173,
        7196
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2277": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7152,
        7196
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2278": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7152,
        7196
      ],
      "op": "POP",
      "path": "44"
    },
    "2279": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7206,
        7219
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2281": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7235
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x9"
    },
    "2283": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7242
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2285": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7236,
        7241
      ],
      "op": "DUP6",
      "path": "44"
    },
    "2286": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7242
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2287": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7242
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2288": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7242
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2290": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7242
      ],
      "op": "ADD",
      "path": "44"
    },
    "2291": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7242
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2292": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7242
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2293": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7242
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2294": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7242
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2296": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7242
      ],
      "op": "ADD",
      "path": "44"
    },
    "2297": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7242
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2299": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7242
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "2300": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7243,
        7244
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x5"
    },
    "2302": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7245
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2303": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7245
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2304": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7245
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2305": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7245
      ],
      "op": "LT",
      "path": "44"
    },
    "2306": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7245
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x907"
    },
    "2309": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7245
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2310": {
      "dev": "Index out of range",
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7245
      ],
      "op": "INVALID",
      "path": "44"
    },
    "2311": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7245
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2312": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7245
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2313": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7245
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2315": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7245
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2316": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7245
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2318": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7245
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2320": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7245
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "2321": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7245
      ],
      "op": "ADD",
      "path": "44"
    },
    "2322": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7222,
        7245
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2323": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7206,
        7245
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2324": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7206,
        7245
      ],
      "op": "POP",
      "path": "44"
    },
    "2325": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7255,
        7271
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2327": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7287
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x9"
    },
    "2329": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7294
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2331": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7288,
        7293
      ],
      "op": "DUP7",
      "path": "44"
    },
    "2332": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7294
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2333": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7294
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2334": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7294
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2336": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7294
      ],
      "op": "ADD",
      "path": "44"
    },
    "2337": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7294
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2338": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7294
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2339": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7294
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2340": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7294
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2342": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7294
      ],
      "op": "ADD",
      "path": "44"
    },
    "2343": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7294
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2345": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7294
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "2346": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7295,
        7296
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x3"
    },
    "2348": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7297
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2349": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7297
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2350": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7297
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2351": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7297
      ],
      "op": "LT",
      "path": "44"
    },
    "2352": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7297
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x935"
    },
    "2355": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7297
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2356": {
      "dev": "Index out of range",
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7297
      ],
      "op": "INVALID",
      "path": "44"
    },
    "2357": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7297
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2358": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7297
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2360": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7297
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2361": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7297
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2362": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7297
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2363": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7297
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2365": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7297
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2366": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7297
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "2367": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7297
      ],
      "op": "ADD",
      "path": "44"
    },
    "2368": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7297
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2369": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7418
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x2"
    },
    "2371": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7418
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2372": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7430,
        7444
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x3"
    },
    "2374": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7430,
        7444
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2375": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2377": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2378": {
      "op": "PUSH4",
      "value": "0xE8E7E2D1"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2385": {
      "op": "SHL"
    },
    "2386": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2387": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2388": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7297
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "2389": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7274,
        7297
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "2390": {
      "op": "POP"
    },
    "2391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2397": {
      "op": "SHL"
    },
    "2398": {
      "op": "SUB"
    },
    "2399": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7418
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2400": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7418
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2401": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7418
      ],
      "op": "AND",
      "path": "44"
    },
    "2402": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7418
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "2403": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7429
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xE8E7E2D1"
    },
    "2408": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7429
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "2409": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x978"
    },
    "2412": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "2413": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7430,
        7444
      ],
      "op": "AND",
      "path": "44"
    },
    "2414": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7430,
        7444
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2415": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7454,
        7458
      ],
      "op": "ADDRESS",
      "path": "44"
    },
    "2416": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7454,
        7458
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2417": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "2419": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "ADD",
      "path": "44"
    },
    "2420": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1E8B"
    },
    "2423": {
      "fn": "TennerrStreamer.getStreamData",
      "jump": "i",
      "offset": [
        7414,
        7460
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2424": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2425": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2427": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2429": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2430": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2431": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2432": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "SUB",
      "path": "44"
    },
    "2433": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2434": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "DUP7",
      "path": "44"
    },
    "2435": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2436": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "2437": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2438": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2439": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2440": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x990"
    },
    "2443": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2444": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2446": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2447": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "REVERT",
      "path": "44"
    },
    "2448": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2449": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "POP",
      "path": "44"
    },
    "2450": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "GAS",
      "path": "44"
    },
    "2451": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "2452": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2453": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2454": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2455": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x9A4"
    },
    "2458": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2459": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2460": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2462": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2463": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "2464": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2465": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2467": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "REVERT",
      "path": "44"
    },
    "2468": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2469": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "POP",
      "path": "44"
    },
    "2470": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "POP",
      "path": "44"
    },
    "2471": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "POP",
      "path": "44"
    },
    "2472": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "POP",
      "path": "44"
    },
    "2473": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2475": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2476": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2477": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "2479": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "NOT",
      "path": "44"
    },
    "2480": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "2482": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2483": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "ADD",
      "path": "44"
    },
    "2484": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "AND",
      "path": "44"
    },
    "2485": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2486": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "ADD",
      "path": "44"
    },
    "2487": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2488": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2490": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2491": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "POP",
      "path": "44"
    },
    "2492": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2493": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "ADD",
      "path": "44"
    },
    "2494": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2495": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x9C8"
    },
    "2498": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2499": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2500": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1B68"
    },
    "2503": {
      "fn": "TennerrStreamer.getStreamData",
      "jump": "i",
      "offset": [
        7414,
        7460
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2504": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7414,
        7460
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2505": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7499
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x2"
    },
    "2507": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7499
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2508": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7508,
        7522
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x3"
    },
    "2510": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7508,
        7522
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2511": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7539,
        7548
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "2513": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7539,
        7548
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2514": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7539,
        7548
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2515": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2517": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2518": {
      "op": "PUSH4",
      "value": "0x1CD43D11"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2525": {
      "op": "SHL"
    },
    "2526": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2527": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2528": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7394,
        7460
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "2529": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7394,
        7460
      ],
      "op": "SWAP6",
      "path": "44"
    },
    "2530": {
      "op": "POP"
    },
    "2531": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7472,
        7489
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2533": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7472,
        7489
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2540": {
      "op": "SHL"
    },
    "2541": {
      "op": "SUB"
    },
    "2542": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7499
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "2543": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7499
      ],
      "op": "DUP6",
      "path": "44"
    },
    "2544": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7499
      ],
      "op": "AND",
      "path": "44"
    },
    "2545": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7499
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "2546": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7507
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xE6A1E888"
    },
    "2551": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7507
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "2552": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xA0A"
    },
    "2555": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "2556": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7508,
        7522
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2557": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7508,
        7522
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2558": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7508,
        7522
      ],
      "op": "AND",
      "path": "44"
    },
    "2559": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7508,
        7522
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "2560": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7532,
        7536
      ],
      "op": "ADDRESS",
      "path": "44"
    },
    "2561": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7532,
        7536
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "2562": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7539,
        7548
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "2563": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7539,
        7548
      ],
      "op": "AND",
      "path": "44"
    },
    "2564": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7539,
        7548
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2565": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "ADD",
      "path": "44"
    },
    "2566": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1EA5"
    },
    "2569": {
      "fn": "TennerrStreamer.getStreamData",
      "jump": "i",
      "offset": [
        7495,
        7549
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2570": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2571": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x80"
    },
    "2573": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2575": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2576": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2577": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2578": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "SUB",
      "path": "44"
    },
    "2579": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2580": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "DUP7",
      "path": "44"
    },
    "2581": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2582": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "2583": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2584": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2585": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2586": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xA22"
    },
    "2589": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2590": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2592": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2593": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "REVERT",
      "path": "44"
    },
    "2594": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2595": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "POP",
      "path": "44"
    },
    "2596": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "GAS",
      "path": "44"
    },
    "2597": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "2598": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2599": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2600": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2601": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xA36"
    },
    "2604": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2605": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2606": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2608": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2609": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "2610": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2611": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2613": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "REVERT",
      "path": "44"
    },
    "2614": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2615": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "POP",
      "path": "44"
    },
    "2616": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "POP",
      "path": "44"
    },
    "2617": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "POP",
      "path": "44"
    },
    "2618": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "POP",
      "path": "44"
    },
    "2619": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2621": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2622": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2623": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "2625": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "NOT",
      "path": "44"
    },
    "2626": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "2628": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2629": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "ADD",
      "path": "44"
    },
    "2630": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "AND",
      "path": "44"
    },
    "2631": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2632": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "ADD",
      "path": "44"
    },
    "2633": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2634": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2636": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2637": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "POP",
      "path": "44"
    },
    "2638": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2639": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "ADD",
      "path": "44"
    },
    "2640": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2641": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xA5A"
    },
    "2644": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2645": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2646": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1CF5"
    },
    "2649": {
      "fn": "TennerrStreamer.getStreamData",
      "jump": "i",
      "offset": [
        7495,
        7549
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2650": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7495,
        7549
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2651": {
      "op": "POP"
    },
    "2652": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7470,
        7549
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2653": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7470,
        7549
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "2654": {
      "op": "POP"
    },
    "2655": {
      "op": "POP"
    },
    "2656": {
      "op": "POP"
    },
    "2657": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7636,
        7661
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2658": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7636,
        7661
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2659": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7636,
        7661
      ],
      "op": "ADD",
      "path": "44"
    },
    "2660": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7631,
        7662
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xB"
    },
    "2662": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7631,
        7662
      ],
      "op": "SIGNEXTEND",
      "path": "44"
    },
    "2663": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7613,
        7628
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2665": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7688,
        7717
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xA72"
    },
    "2668": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7688,
        7696
      ],
      "op": "DUP7",
      "path": "44"
    },
    "2669": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7701,
        7716
      ],
      "op": "TIMESTAMP",
      "path": "44"
    },
    "2670": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7688,
        7700
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x11DA"
    },
    "2673": {
      "fn": "TennerrStreamer.getStreamData",
      "jump": "i",
      "offset": [
        7688,
        7717
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2674": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7688,
        7717
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2675": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7672,
        7717
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2676": {
      "op": "POP"
    },
    "2677": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7784,
        7799
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2679": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7802,
        7836
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xA80"
    },
    "2682": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7803,
        7818
      ],
      "op": "TIMESTAMP",
      "path": "44"
    },
    "2683": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7824,
        7835
      ],
      "op": "DUP8",
      "path": "44"
    },
    "2684": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7802,
        7823
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x11DA"
    },
    "2687": {
      "fn": "TennerrStreamer.getStreamData",
      "jump": "i",
      "offset": [
        7802,
        7836
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2688": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7802,
        7836
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2689": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 15,
      "value": "0x40"
    },
    "2691": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2692": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2693": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xA0"
    },
    "2695": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2696": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "ADD",
      "path": "44"
    },
    "2697": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2698": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2699": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "DUP6",
      "path": "44"
    },
    "2700": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2701": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2702": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7868,
        7891
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "2703": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7868,
        7891
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2704": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7868,
        7891
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2705": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7868,
        7891
      ],
      "op": "MUL",
      "path": "44"
    },
    "2706": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2708": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "DUP6",
      "path": "44"
    },
    "2709": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "ADD",
      "path": "44"
    },
    "2710": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2711": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2712": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "ADD",
      "path": "44"
    },
    "2713": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "SWAP8",
      "path": "44"
    },
    "2714": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2715": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "SWAP8",
      "path": "44"
    },
    "2716": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2717": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "2719": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2720": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "ADD",
      "path": "44"
    },
    "2721": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2722": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x80"
    },
    "2724": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2725": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "ADD",
      "path": "44"
    },
    "2726": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "2727": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2728": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "2729": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2730": {
      "op": "POP"
    },
    "2731": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2732": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        8040,
        8110
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "2733": {
      "op": "POP"
    },
    "2734": {
      "op": "POP"
    },
    "2735": {
      "op": "POP"
    },
    "2736": {
      "op": "POP"
    },
    "2737": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2738": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2739": {
      "fn": "TennerrStreamer.getStreamData",
      "offset": [
        7053,
        8117
      ],
      "op": "POP",
      "path": "44"
    },
    "2740": {
      "fn": "TennerrStreamer.getStreamData",
      "jump": "o",
      "offset": [
        7053,
        8117
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2741": {
      "offset": [
        1115,
        1175
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2742": {
      "offset": [
        1152,
        1175
      ],
      "op": "PUSH32",
      "path": "44",
      "value": "0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
    },
    "2775": {
      "offset": [
        1115,
        1175
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2776": {
      "fn": "TennerrStreamer.getStreamData",
      "jump": "o",
      "offset": [
        1115,
        1175
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2777": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1079,
        1479
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2778": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1376,
        1388
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "2780": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1415,
        1472
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 16,
      "value": "0x40"
    },
    "2782": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1415,
        1472
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2783": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2787": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2789": {
      "op": "SHL"
    },
    "2790": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1415,
        1472
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2791": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1415,
        1472
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2792": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1415,
        1472
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2794": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1415,
        1472
      ],
      "op": "ADD",
      "path": "26"
    },
    "2795": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1415,
        1472
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x432"
    },
    "2798": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1415,
        1472
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2799": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "offset": [
        1415,
        1472
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x218A"
    },
    "2802": {
      "fn": "SuperAppBase.beforeAgreementUpdated",
      "jump": "i",
      "offset": [
        1415,
        1472
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2803": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2804": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4038,
        4045
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2806": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 17
    },
    "2807": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2808": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2809": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2811": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2812": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2813": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2814": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2816": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2817": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2818": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0B"
    },
    "2821": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4094
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2822": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4088,
        4093
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2823": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1202"
    },
    "2826": {
      "fn": "AccessControl.getRoleMember",
      "jump": "i",
      "offset": [
        4064,
        4094
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2827": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4094
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2828": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4057,
        4094
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2829": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4057,
        4094
      ],
      "op": "POP",
      "path": "0"
    },
    "2830": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2831": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2832": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2833": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "POP",
      "path": "0"
    },
    "2834": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "POP",
      "path": "0"
    },
    "2835": {
      "fn": "AccessControl.getRoleMember",
      "jump": "o",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2836": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2837": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3019,
        3023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2839": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 18
    },
    "2840": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2841": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2842": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2844": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2845": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2846": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2847": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2849": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2850": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2851": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3080
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0B"
    },
    "2854": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3080
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2855": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3072,
        3079
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2856": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120E"
    },
    "2859": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        3042,
        3080
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2860": {
      "offset": [
        1473,
        1520
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2861": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x9"
    },
    "2863": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2865": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2866": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2867": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2869": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2870": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2872": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2874": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "2875": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2876": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2877": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2878": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2879": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "LT",
      "path": "44"
    },
    "2880": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xB45"
    },
    "2883": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2884": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "INVALID",
      "path": "44"
    },
    "2885": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2886": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2887": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2889": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2890": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2892": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2894": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "2895": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "ADD",
      "path": "44"
    },
    "2896": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2898": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2899": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "POP",
      "path": "44"
    },
    "2900": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2901": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "POP",
      "path": "44"
    },
    "2902": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "POP",
      "path": "44"
    },
    "2903": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2904": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1473,
        1520
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2905": {
      "fn": "AccessControl.hasRole",
      "jump": "o",
      "offset": [
        1473,
        1520
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2906": {
      "offset": [
        1727,
        1776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2907": {
      "offset": [
        1772,
        1776
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2909": {
      "offset": [
        1727,
        1776
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2910": {
      "fn": "AccessControl.hasRole",
      "jump": "o",
      "offset": [
        1727,
        1776
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2911": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11480,
        11911
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2912": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11580
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 19,
      "value": "0x1"
    },
    "2914": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11580
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2915": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11612,
        11616
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x2"
    },
    "2917": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11612,
        11616
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2918": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11724,
        11738
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x3"
    },
    "2920": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11724,
        11738
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "2921": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11823,
        11835
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2923": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11823,
        11835
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2924": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11823,
        11835
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2925": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11580
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2927": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11823,
        11835
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2928": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11823,
        11835
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2929": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11823,
        11835
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2931": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11823,
        11835
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2932": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11823,
        11835
      ],
      "op": "ADD",
      "path": "44"
    },
    "2933": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11823,
        11835
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2934": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11823,
        11835
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2935": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11823,
        11835
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2942": {
      "op": "SHL"
    },
    "2943": {
      "op": "SUB"
    },
    "2944": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11580
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "2945": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11580
      ],
      "op": "DUP5",
      "path": "44"
    },
    "2946": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11580
      ],
      "op": "AND",
      "path": "44"
    },
    "2947": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11580
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "2948": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11594
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x39255D5B"
    },
    "2953": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11594
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "2954": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11612,
        11616
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2955": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11612,
        11616
      ],
      "op": "AND",
      "path": "44"
    },
    "2956": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11612,
        11616
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "2957": {
      "op": "PUSH4",
      "value": "0x317E182F"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2964": {
      "op": "SHL"
    },
    "2965": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11678,
        11702
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "2966": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xBAA"
    },
    "2969": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "2970": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11724,
        11738
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2971": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11724,
        11738
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2972": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11724,
        11738
      ],
      "op": "AND",
      "path": "44"
    },
    "2973": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11724,
        11738
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2974": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11760,
        11771
      ],
      "op": "DUP10",
      "path": "44"
    },
    "2975": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11760,
        11771
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2976": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11793,
        11801
      ],
      "op": "DUP10",
      "path": "44"
    },
    "2977": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11793,
        11801
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2978": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x44"
    },
    "2980": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2981": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "ADD",
      "path": "44"
    },
    "2982": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1F32"
    },
    "2985": {
      "fn": "TennerrStreamer.createFlow",
      "jump": "i",
      "offset": [
        11634,
        11853
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2986": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2987": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2989": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2990": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2993": {
      "op": "NOT"
    },
    "2994": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2995": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "DUP5",
      "path": "44"
    },
    "2996": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "SUB",
      "path": "44"
    },
    "2997": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "ADD",
      "path": "44"
    },
    "2998": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2999": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3000": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3001": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3002": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3003": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3005": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3006": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "ADD",
      "path": "44"
    },
    "3007": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3008": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3015": {
      "op": "SHL"
    },
    "3016": {
      "op": "SUB"
    },
    "3017": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "AND",
      "path": "44"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3022": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3024": {
      "op": "SHL"
    },
    "3025": {
      "op": "SUB"
    },
    "3026": {
      "op": "NOT"
    },
    "3027": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "3028": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "DUP6",
      "path": "44"
    },
    "3029": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "AND",
      "path": "44"
    },
    "3030": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "OR",
      "path": "44"
    },
    "3031": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3032": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11634,
        11853
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3033": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3034": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xE0"
    },
    "3036": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "DUP6",
      "path": "44"
    },
    "3037": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3038": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "SHL",
      "path": "44"
    },
    "3039": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3040": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "3041": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "AND",
      "path": "44"
    },
    "3042": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3043": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3044": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xBF2"
    },
    "3047": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "3048": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3049": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11871,
        11876
      ],
      "op": "DUP7",
      "path": "44"
    },
    "3050": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11871,
        11876
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3051": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "3053": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "ADD",
      "path": "44"
    },
    "3054": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1DF8"
    },
    "3057": {
      "fn": "TennerrStreamer.createFlow",
      "jump": "i",
      "offset": [
        11575,
        11904
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3058": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3059": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3061": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3063": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3064": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3065": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3066": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "SUB",
      "path": "44"
    },
    "3067": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3068": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3070": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "DUP8",
      "path": "44"
    },
    "3071": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3072": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "3073": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3074": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3075": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3076": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xC0C"
    },
    "3079": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3080": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3082": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3083": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "REVERT",
      "path": "44"
    },
    "3084": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3085": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "POP",
      "path": "44"
    },
    "3086": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "GAS",
      "path": "44"
    },
    "3087": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "CALL",
      "path": "44"
    },
    "3088": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3089": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3090": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3091": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xC20"
    },
    "3094": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3095": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3096": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3098": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3099": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "3100": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3101": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3103": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "REVERT",
      "path": "44"
    },
    "3104": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3105": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "POP",
      "path": "44"
    },
    "3106": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "POP",
      "path": "44"
    },
    "3107": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "POP",
      "path": "44"
    },
    "3108": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "POP",
      "path": "44"
    },
    "3109": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3111": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3112": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3113": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3115": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3116": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "3117": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3119": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3120": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3121": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3122": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "ADD",
      "path": "44"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3125": {
      "op": "NOT"
    },
    "3126": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "AND",
      "path": "44"
    },
    "3127": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3128": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "ADD",
      "path": "44"
    },
    "3129": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3131": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3132": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xC48"
    },
    "3135": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3136": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3137": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3138": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "ADD",
      "path": "44"
    },
    "3139": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3140": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1969"
    },
    "3143": {
      "fn": "TennerrStreamer.createFlow",
      "jump": "i",
      "offset": [
        11575,
        11904
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3144": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3145": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11575,
        11904
      ],
      "op": "POP",
      "path": "44"
    },
    "3146": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11480,
        11911
      ],
      "op": "POP",
      "path": "44"
    },
    "3147": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11480,
        11911
      ],
      "op": "POP",
      "path": "44"
    },
    "3148": {
      "fn": "TennerrStreamer.createFlow",
      "offset": [
        11480,
        11911
      ],
      "op": "POP",
      "path": "44"
    },
    "3149": {
      "fn": "TennerrStreamer.createFlow",
      "jump": "o",
      "offset": [
        11480,
        11911
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3150": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3151": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3318,
        3325
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3153": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 20
    },
    "3154": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3155": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3156": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3158": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3159": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3160": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3161": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3163": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3164": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3165": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3373
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0E"
    },
    "3168": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3373
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3169": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3371
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1223"
    },
    "3172": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        3344,
        3373
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3173": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3174": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5199
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x0"
    },
    "3176": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3177": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3178": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3179": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3181": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3182": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3183": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3184": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3186": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3187": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3188": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5215
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3190": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5215
      ],
      "op": "ADD",
      "path": "0"
    },
    "3191": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5215
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3192": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5185,
        5230
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC83"
    },
    "3195": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5185,
        5230
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3196": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5217,
        5229
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x362"
    },
    "3199": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5217,
        5227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1104"
    },
    "3202": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5217,
        5229
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3203": {
      "branch": 68,
      "fn": "AccessControl.revokeRole",
      "offset": [
        5185,
        5230
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3204": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B6"
    },
    "3207": {
      "branch": 68,
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3208": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3210": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3211": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3217": {
      "op": "SHL"
    },
    "3218": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3219": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3220": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3222": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "ADD",
      "path": "0"
    },
    "3223": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x432"
    },
    "3226": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3227": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x213A"
    },
    "3230": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5177,
        5283
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3231": {
      "fn": "TennerrStreamer._isSameToken",
      "offset": [
        11917,
        12061
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3232": {
      "fn": "TennerrStreamer._isSameToken",
      "offset": [
        12039,
        12053
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 22,
      "value": "0x3"
    },
    "3234": {
      "fn": "TennerrStreamer._isSameToken",
      "offset": [
        12039,
        12053
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3241": {
      "op": "SHL"
    },
    "3242": {
      "op": "SUB"
    },
    "3243": {
      "fn": "TennerrStreamer._isSameToken",
      "offset": [
        12039,
        12053
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3244": {
      "fn": "TennerrStreamer._isSameToken",
      "offset": [
        12039,
        12053
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3245": {
      "fn": "TennerrStreamer._isSameToken",
      "offset": [
        12039,
        12053
      ],
      "op": "AND",
      "path": "44"
    },
    "3246": {
      "fn": "TennerrStreamer._isSameToken",
      "offset": [
        12008,
        12054
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3247": {
      "fn": "TennerrStreamer._isSameToken",
      "offset": [
        12008,
        12054
      ],
      "op": "AND",
      "path": "44"
    },
    "3248": {
      "fn": "TennerrStreamer._isSameToken",
      "offset": [
        12008,
        12054
      ],
      "op": "EQ",
      "path": "44"
    },
    "3249": {
      "fn": "TennerrStreamer._isSameToken",
      "offset": [
        12008,
        12054
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3250": {
      "fn": "TennerrStreamer._isSameToken",
      "jump": "o",
      "offset": [
        11917,
        12061
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3251": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12067,
        12295
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3252": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12131,
        12135
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3254": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12217,
        12288
      ],
      "op": "PUSH32",
      "path": "44",
      "statement": 23,
      "value": "0xA9214CC96615E0085D3BB077758DB69497DC2DCE3B2B1E97BC93C3D18D83EFD3"
    },
    "3287": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12170,
        12184
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3294": {
      "op": "SHL"
    },
    "3295": {
      "op": "SUB"
    },
    "3296": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12199
      ],
      "op": "AND",
      "path": "44"
    },
    "3297": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12199
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x7730599E"
    },
    "3302": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3304": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3305": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3306": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xFFFFFFFF"
    },
    "3311": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "AND",
      "path": "44"
    },
    "3312": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xE0"
    },
    "3314": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "SHL",
      "path": "44"
    },
    "3315": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3316": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3317": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "3319": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "ADD",
      "path": "44"
    },
    "3320": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3322": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3324": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3325": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3326": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3327": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "SUB",
      "path": "44"
    },
    "3328": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3329": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "DUP7",
      "path": "44"
    },
    "3330": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3331": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "3332": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3333": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3334": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3335": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xD0F"
    },
    "3338": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3339": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3341": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3342": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "REVERT",
      "path": "44"
    },
    "3343": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3344": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "POP",
      "path": "44"
    },
    "3345": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "GAS",
      "path": "44"
    },
    "3346": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "3347": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3348": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3349": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3350": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xD23"
    },
    "3353": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3354": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3355": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3357": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3358": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "3359": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3360": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3362": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "REVERT",
      "path": "44"
    },
    "3363": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3364": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "POP",
      "path": "44"
    },
    "3365": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "POP",
      "path": "44"
    },
    "3366": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "POP",
      "path": "44"
    },
    "3367": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "POP",
      "path": "44"
    },
    "3368": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3370": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3371": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3372": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3374": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "NOT",
      "path": "44"
    },
    "3375": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3377": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3378": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "ADD",
      "path": "44"
    },
    "3379": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "AND",
      "path": "44"
    },
    "3380": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3381": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "ADD",
      "path": "44"
    },
    "3382": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3383": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3385": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3386": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "POP",
      "path": "44"
    },
    "3387": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3388": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "ADD",
      "path": "44"
    },
    "3389": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3390": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xD47"
    },
    "3393": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3394": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3395": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1901"
    },
    "3398": {
      "fn": "TennerrStreamer._isCFAv1",
      "jump": "i",
      "offset": [
        12154,
        12201
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3399": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12201
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3400": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12288
      ],
      "op": "EQ",
      "path": "44"
    },
    "3401": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12154,
        12288
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "3402": {
      "fn": "TennerrStreamer._isCFAv1",
      "offset": [
        12067,
        12295
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3403": {
      "op": "POP"
    },
    "3404": {
      "op": "POP"
    },
    "3405": {
      "fn": "TennerrStreamer._isCFAv1",
      "jump": "o",
      "offset": [
        12067,
        12295
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3406": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3456,
        5437
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3407": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3556,
        3575
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "3409": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3599,
        3602
      ],
      "op": "DUP4",
      "path": "44",
      "statement": 24
    },
    "3410": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3599,
        3602
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3411": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3412": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3413": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3415": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "ADD",
      "path": "44"
    },
    "3416": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3418": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3419": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3420": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "DIV",
      "path": "44"
    },
    "3421": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "MUL",
      "path": "44"
    },
    "3422": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3424": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "ADD",
      "path": "44"
    },
    "3425": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3427": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3428": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3429": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3430": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "ADD",
      "path": "44"
    },
    "3431": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3433": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3434": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3435": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "3436": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "3437": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3438": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3439": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3440": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3441": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3442": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3444": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "ADD",
      "path": "44"
    },
    "3445": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3446": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3447": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3448": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3449": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "DUP5",
      "path": "44"
    },
    "3450": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "CALLDATACOPY",
      "path": "44"
    },
    "3451": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3453": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "3454": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "ADD",
      "path": "44"
    },
    "3455": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3456": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3457": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3458": {
      "op": "POP"
    },
    "3459": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3719
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x2"
    },
    "3461": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3719
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "3462": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3731,
        3745
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x3"
    },
    "3464": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3731,
        3745
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "3465": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3467": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3468": {
      "op": "PUSH4",
      "value": "0xE8E7E2D1"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3475": {
      "op": "SHL"
    },
    "3476": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3477": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3478": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "SWAP7",
      "path": "44"
    },
    "3479": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "SWAP8",
      "path": "44"
    },
    "3480": {
      "op": "POP"
    },
    "3481": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3482": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3590,
        3602
      ],
      "op": "SWAP6",
      "path": "44"
    },
    "3483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3489": {
      "op": "SHL"
    },
    "3490": {
      "op": "SUB"
    },
    "3491": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3719
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3492": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3719
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3493": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3719
      ],
      "op": "AND",
      "path": "44"
    },
    "3494": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3719
      ],
      "op": "SWAP6",
      "path": "44"
    },
    "3495": {
      "op": "POP"
    },
    "3496": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3730
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xE8E7E2D1"
    },
    "3501": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3730
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "3502": {
      "op": "POP"
    },
    "3503": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xDC0"
    },
    "3506": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "3507": {
      "op": "POP"
    },
    "3508": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3731,
        3745
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3509": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3731,
        3745
      ],
      "op": "AND",
      "path": "44"
    },
    "3510": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3731,
        3745
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3511": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3755,
        3759
      ],
      "op": "ADDRESS",
      "path": "44"
    },
    "3512": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3755,
        3759
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3513": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "3515": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "ADD",
      "path": "44"
    },
    "3516": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1E8B"
    },
    "3519": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "i",
      "offset": [
        3715,
        3761
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3520": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3521": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3523": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3525": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3526": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3527": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3528": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "SUB",
      "path": "44"
    },
    "3529": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3530": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "DUP7",
      "path": "44"
    },
    "3531": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3532": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "3533": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3534": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3535": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3536": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xDD8"
    },
    "3539": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3540": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3542": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3543": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "REVERT",
      "path": "44"
    },
    "3544": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3545": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "POP",
      "path": "44"
    },
    "3546": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "GAS",
      "path": "44"
    },
    "3547": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "3548": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3549": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3550": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3551": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xDEC"
    },
    "3554": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3555": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3556": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3558": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3559": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "3560": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3561": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3563": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "REVERT",
      "path": "44"
    },
    "3564": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3565": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "POP",
      "path": "44"
    },
    "3566": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "POP",
      "path": "44"
    },
    "3567": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "POP",
      "path": "44"
    },
    "3568": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "POP",
      "path": "44"
    },
    "3569": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3571": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3572": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3573": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3575": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "NOT",
      "path": "44"
    },
    "3576": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3578": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3579": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "ADD",
      "path": "44"
    },
    "3580": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "AND",
      "path": "44"
    },
    "3581": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3582": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "ADD",
      "path": "44"
    },
    "3583": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3584": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3586": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3587": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "POP",
      "path": "44"
    },
    "3588": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3589": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "ADD",
      "path": "44"
    },
    "3590": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3591": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xE10"
    },
    "3594": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3595": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3596": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1B68"
    },
    "3599": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "i",
      "offset": [
        3715,
        3761
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3600": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3715,
        3761
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3601": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3798
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x2"
    },
    "3603": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3798
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "3604": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3807,
        3821
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x3"
    },
    "3606": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3807,
        3821
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "3607": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3838,
        3847
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "3609": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3838,
        3847
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3610": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3838,
        3847
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "3611": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3613": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3614": {
      "op": "PUSH4",
      "value": "0x1CD43D11"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "3621": {
      "op": "SHL"
    },
    "3622": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3623": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3624": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3695,
        3761
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "3625": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3695,
        3761
      ],
      "op": "SWAP6",
      "path": "44"
    },
    "3626": {
      "op": "POP"
    },
    "3627": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3771,
        3788
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3629": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3771,
        3788
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "3630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3636": {
      "op": "SHL"
    },
    "3637": {
      "op": "SUB"
    },
    "3638": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3798
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "3639": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3798
      ],
      "op": "DUP6",
      "path": "44"
    },
    "3640": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3798
      ],
      "op": "AND",
      "path": "44"
    },
    "3641": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3798
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "3642": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3806
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xE6A1E888"
    },
    "3647": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3806
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "3648": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xE52"
    },
    "3651": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "3652": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3807,
        3821
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3653": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3807,
        3821
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3654": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3807,
        3821
      ],
      "op": "AND",
      "path": "44"
    },
    "3655": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3807,
        3821
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "3656": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3831,
        3835
      ],
      "op": "ADDRESS",
      "path": "44"
    },
    "3657": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3831,
        3835
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "3658": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3838,
        3847
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "3659": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3838,
        3847
      ],
      "op": "AND",
      "path": "44"
    },
    "3660": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3838,
        3847
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3661": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "ADD",
      "path": "44"
    },
    "3662": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1EA5"
    },
    "3665": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "i",
      "offset": [
        3794,
        3848
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3666": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3667": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x80"
    },
    "3669": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3671": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3672": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3673": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3674": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "SUB",
      "path": "44"
    },
    "3675": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3676": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "DUP7",
      "path": "44"
    },
    "3677": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3678": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "3679": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3680": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3681": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3682": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xE6A"
    },
    "3685": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3686": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3688": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3689": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "REVERT",
      "path": "44"
    },
    "3690": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3691": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "POP",
      "path": "44"
    },
    "3692": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "GAS",
      "path": "44"
    },
    "3693": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "3694": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3695": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3696": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3697": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xE7E"
    },
    "3700": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3701": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3702": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3704": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3705": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "3706": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3707": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3709": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "REVERT",
      "path": "44"
    },
    "3710": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3711": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "POP",
      "path": "44"
    },
    "3712": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "POP",
      "path": "44"
    },
    "3713": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "POP",
      "path": "44"
    },
    "3714": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "POP",
      "path": "44"
    },
    "3715": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3717": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3718": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3719": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3721": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "NOT",
      "path": "44"
    },
    "3722": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3724": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3725": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "ADD",
      "path": "44"
    },
    "3726": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "AND",
      "path": "44"
    },
    "3727": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3728": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "ADD",
      "path": "44"
    },
    "3729": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3730": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3732": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3733": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "POP",
      "path": "44"
    },
    "3734": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3735": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "ADD",
      "path": "44"
    },
    "3736": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3737": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xEA2"
    },
    "3740": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3741": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3742": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1CF5"
    },
    "3745": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "i",
      "offset": [
        3794,
        3848
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3746": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3794,
        3848
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3747": {
      "op": "POP"
    },
    "3748": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3769,
        3848
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3749": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3769,
        3848
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "3750": {
      "op": "POP"
    },
    "3751": {
      "op": "POP"
    },
    "3752": {
      "op": "POP"
    },
    "3753": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3929,
        3954
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3754": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3929,
        3954
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3755": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3929,
        3954
      ],
      "op": "ADD",
      "path": "44"
    },
    "3756": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4018,
        4044
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 25,
      "value": "0xEB4"
    },
    "3759": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4035,
        4043
      ],
      "op": "DUP6",
      "path": "44"
    },
    "3760": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4018,
        4034
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x122E"
    },
    "3763": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "i",
      "offset": [
        4018,
        4044
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3764": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4018,
        4044
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3765": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4119,
        4141
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xB"
    },
    "3767": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4119,
        4141
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3768": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4119,
        4141
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3769": {
      "branch": 64,
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4119,
        4141
      ],
      "op": "SIGNEXTEND",
      "path": "44"
    },
    "3770": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4115,
        5431
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xFB2"
    },
    "3773": {
      "branch": 64,
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4115,
        5431
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3774": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4228
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 26,
      "value": "0x1"
    },
    "3776": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4228
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "3777": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4269,
        4273
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x2"
    },
    "3779": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4269,
        4273
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "3780": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4375,
        4389
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x3"
    },
    "3782": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4375,
        4389
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "3783": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4442,
        4451
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "3785": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4442,
        4451
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "3786": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4471,
        4483
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3788": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4471,
        4483
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3789": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4471,
        4483
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3790": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4228
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3792": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4471,
        4483
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3793": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4471,
        4483
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3794": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4471,
        4483
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3796": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4471,
        4483
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3797": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4471,
        4483
      ],
      "op": "ADD",
      "path": "44"
    },
    "3798": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4471,
        4483
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3799": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4471,
        4483
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3800": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4471,
        4483
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3807": {
      "op": "SHL"
    },
    "3808": {
      "op": "SUB"
    },
    "3809": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4228
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "3810": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4228
      ],
      "op": "DUP6",
      "path": "44"
    },
    "3811": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4228
      ],
      "op": "AND",
      "path": "44"
    },
    "3812": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4228
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "3813": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4253
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x4329D293"
    },
    "3818": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4253
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "3819": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4269,
        4273
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3820": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4269,
        4273
      ],
      "op": "AND",
      "path": "44"
    },
    "3821": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4269,
        4273
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "3822": {
      "op": "PUSH4",
      "value": "0x5A5999E3"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3829": {
      "op": "SHL"
    },
    "3830": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4331,
        4355
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "3831": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xF0C"
    },
    "3834": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "3835": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4375,
        4389
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3836": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4375,
        4389
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3837": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4375,
        4389
      ],
      "op": "AND",
      "path": "44"
    },
    "3838": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4375,
        4389
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "3839": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4417,
        4421
      ],
      "op": "ADDRESS",
      "path": "44"
    },
    "3840": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4417,
        4421
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "3841": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4442,
        4451
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3842": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4442,
        4451
      ],
      "op": "AND",
      "path": "44"
    },
    "3843": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4442,
        4451
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3844": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x44"
    },
    "3846": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3847": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "ADD",
      "path": "44"
    },
    "3848": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1EC8"
    },
    "3851": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "i",
      "offset": [
        4289,
        4514
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3852": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3853": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3855": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3856": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3857": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3859": {
      "op": "NOT"
    },
    "3860": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3861": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "DUP5",
      "path": "44"
    },
    "3862": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "SUB",
      "path": "44"
    },
    "3863": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "ADD",
      "path": "44"
    },
    "3864": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3865": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3866": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3867": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3868": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3869": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3871": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3872": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "ADD",
      "path": "44"
    },
    "3873": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3874": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3879": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3881": {
      "op": "SHL"
    },
    "3882": {
      "op": "SUB"
    },
    "3883": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "AND",
      "path": "44"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3888": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3890": {
      "op": "SHL"
    },
    "3891": {
      "op": "SUB"
    },
    "3892": {
      "op": "NOT"
    },
    "3893": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "3894": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "DUP6",
      "path": "44"
    },
    "3895": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "AND",
      "path": "44"
    },
    "3896": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "OR",
      "path": "44"
    },
    "3897": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3898": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4289,
        4514
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3899": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3900": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xE0"
    },
    "3902": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "DUP6",
      "path": "44"
    },
    "3903": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3904": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "SHL",
      "path": "44"
    },
    "3905": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3906": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "3907": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "AND",
      "path": "44"
    },
    "3908": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3909": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3910": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xF54"
    },
    "3913": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "3914": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3915": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4550,
        4556
      ],
      "op": "DUP10",
      "path": "44"
    },
    "3916": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4550,
        4556
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3917": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "3919": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "ADD",
      "path": "44"
    },
    "3920": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1E38"
    },
    "3923": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "i",
      "offset": [
        4223,
        4568
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3924": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3925": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3927": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3929": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3930": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3931": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3932": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "SUB",
      "path": "44"
    },
    "3933": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3934": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3936": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "DUP8",
      "path": "44"
    },
    "3937": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3938": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "3939": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3940": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3941": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3942": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xF6E"
    },
    "3945": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3946": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3948": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3949": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "REVERT",
      "path": "44"
    },
    "3950": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3951": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "POP",
      "path": "44"
    },
    "3952": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "GAS",
      "path": "44"
    },
    "3953": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "CALL",
      "path": "44"
    },
    "3954": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3955": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3956": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3957": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xF82"
    },
    "3960": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3961": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3962": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3964": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3965": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "3966": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3967": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3969": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "REVERT",
      "path": "44"
    },
    "3970": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3971": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "POP",
      "path": "44"
    },
    "3972": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "POP",
      "path": "44"
    },
    "3973": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "POP",
      "path": "44"
    },
    "3974": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "POP",
      "path": "44"
    },
    "3975": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3977": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3978": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3979": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3981": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3982": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "3983": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3985": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3986": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3987": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3988": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "ADD",
      "path": "44"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3991": {
      "op": "NOT"
    },
    "3992": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "AND",
      "path": "44"
    },
    "3993": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3994": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "ADD",
      "path": "44"
    },
    "3995": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3997": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3998": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xFAA"
    },
    "4001": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4002": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4003": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4004": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "ADD",
      "path": "44"
    },
    "4005": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4006": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x19A4"
    },
    "4009": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "i",
      "offset": [
        4223,
        4568
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4010": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4223,
        4568
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4011": {
      "op": "POP"
    },
    "4012": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4210,
        4568
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "4013": {
      "op": "POP"
    },
    "4014": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4115,
        5431
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x10FA"
    },
    "4017": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4115,
        5431
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4018": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4115,
        5431
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4019": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4589,
        4612
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xB"
    },
    "4021": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4589,
        4612
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4022": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4589,
        4612
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4023": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4589,
        4612
      ],
      "op": "SIGNEXTEND",
      "path": "44"
    },
    "4024": {
      "branch": 65,
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4589,
        4612
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4025": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4585,
        5431
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x100A"
    },
    "4028": {
      "branch": 65,
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4585,
        5431
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "4029": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4636,
        4641
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 27,
      "value": "0x1"
    },
    "4031": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4636,
        4641
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "4032": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4680,
        4684
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x2"
    },
    "4034": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4680,
        4684
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "4035": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4780,
        4794
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x3"
    },
    "4037": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4780,
        4794
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "4038": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4812,
        4821
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "4040": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4812,
        4821
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "4041": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4867,
        4879
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4043": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4867,
        4879
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4044": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4867,
        4879
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4045": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4636,
        4641
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4047": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4867,
        4879
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4048": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4867,
        4879
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4049": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4867,
        4879
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4051": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4867,
        4879
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4052": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4867,
        4879
      ],
      "op": "ADD",
      "path": "44"
    },
    "4053": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4867,
        4879
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4054": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4867,
        4879
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4055": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4867,
        4879
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4062": {
      "op": "SHL"
    },
    "4063": {
      "op": "SUB"
    },
    "4064": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4636,
        4641
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "4065": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4636,
        4641
      ],
      "op": "DUP6",
      "path": "44"
    },
    "4066": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4636,
        4641
      ],
      "op": "AND",
      "path": "44"
    },
    "4067": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4636,
        4641
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "4068": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4636,
        4666
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x4329D293"
    },
    "4073": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4636,
        4666
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "4074": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4680,
        4684
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4075": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4680,
        4684
      ],
      "op": "AND",
      "path": "44"
    },
    "4076": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4680,
        4684
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "4077": {
      "op": "PUSH4",
      "value": "0x28104D31"
    },
    "4082": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4084": {
      "op": "SHL"
    },
    "4085": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4738,
        4762
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "4086": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4698,
        4908
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xF0C"
    },
    "4089": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4698,
        4908
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "4090": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4780,
        4794
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4091": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4780,
        4794
      ],
      "op": "DUP4",
      "path": "44"
    },
    "4092": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4780,
        4794
      ],
      "op": "AND",
      "path": "44"
    },
    "4093": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4780,
        4794
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "4094": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4812,
        4821
      ],
      "op": "AND",
      "path": "44"
    },
    "4095": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4812,
        4821
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4096": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4839,
        4849
      ],
      "op": "DUP9",
      "path": "44"
    },
    "4097": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4839,
        4849
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4098": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4698,
        4908
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x44"
    },
    "4100": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4698,
        4908
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4101": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4698,
        4908
      ],
      "op": "ADD",
      "path": "44"
    },
    "4102": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4698,
        4908
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1EFC"
    },
    "4105": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "i",
      "offset": [
        4698,
        4908
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4106": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4585,
        5431
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4107": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5085
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 28,
      "value": "0x1"
    },
    "4109": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5085
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "4110": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5126,
        5130
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x2"
    },
    "4112": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5126,
        5130
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "4113": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5232,
        5246
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x3"
    },
    "4115": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5232,
        5246
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "4116": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5266,
        5275
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "4118": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5266,
        5275
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "4119": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5325,
        5337
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4121": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5325,
        5337
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4122": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5325,
        5337
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4123": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5085
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4125": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5325,
        5337
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4126": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5325,
        5337
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4127": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5325,
        5337
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4129": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5325,
        5337
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4130": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5325,
        5337
      ],
      "op": "ADD",
      "path": "44"
    },
    "4131": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5325,
        5337
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4132": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5325,
        5337
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4133": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5325,
        5337
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4140": {
      "op": "SHL"
    },
    "4141": {
      "op": "SUB"
    },
    "4142": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5085
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "4143": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5085
      ],
      "op": "DUP6",
      "path": "44"
    },
    "4144": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5085
      ],
      "op": "AND",
      "path": "44"
    },
    "4145": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5085
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "4146": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5110
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x4329D293"
    },
    "4151": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5110
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "4152": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5126,
        5130
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4153": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5126,
        5130
      ],
      "op": "AND",
      "path": "44"
    },
    "4154": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5126,
        5130
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "4155": {
      "op": "PUSH4",
      "value": "0x317E182F"
    },
    "4160": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4162": {
      "op": "SHL"
    },
    "4163": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5188,
        5212
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "4164": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1058"
    },
    "4167": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "4168": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5232,
        5246
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4169": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5232,
        5246
      ],
      "op": "DUP4",
      "path": "44"
    },
    "4170": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5232,
        5246
      ],
      "op": "AND",
      "path": "44"
    },
    "4171": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5232,
        5246
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "4172": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5266,
        5275
      ],
      "op": "AND",
      "path": "44"
    },
    "4173": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5266,
        5275
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4174": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5295,
        5305
      ],
      "op": "DUP9",
      "path": "44"
    },
    "4175": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5295,
        5305
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4176": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x44"
    },
    "4178": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4179": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "ADD",
      "path": "44"
    },
    "4180": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1EFC"
    },
    "4183": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "i",
      "offset": [
        5146,
        5368
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4184": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4185": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4187": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4188": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4189": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4191": {
      "op": "NOT"
    },
    "4192": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4193": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "DUP5",
      "path": "44"
    },
    "4194": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "SUB",
      "path": "44"
    },
    "4195": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "ADD",
      "path": "44"
    },
    "4196": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4197": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4198": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4199": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4200": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4201": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4203": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4204": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "ADD",
      "path": "44"
    },
    "4205": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4206": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4211": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4213": {
      "op": "SHL"
    },
    "4214": {
      "op": "SUB"
    },
    "4215": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "AND",
      "path": "44"
    },
    "4216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4222": {
      "op": "SHL"
    },
    "4223": {
      "op": "SUB"
    },
    "4224": {
      "op": "NOT"
    },
    "4225": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "4226": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "DUP6",
      "path": "44"
    },
    "4227": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "AND",
      "path": "44"
    },
    "4228": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "OR",
      "path": "44"
    },
    "4229": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4230": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5146,
        5368
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4231": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4232": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xE0"
    },
    "4234": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "DUP6",
      "path": "44"
    },
    "4235": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4236": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "SHL",
      "path": "44"
    },
    "4237": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4238": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "4239": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "AND",
      "path": "44"
    },
    "4240": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4241": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4242": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x10A0"
    },
    "4245": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "4246": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4247": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5404,
        5410
      ],
      "op": "DUP10",
      "path": "44"
    },
    "4248": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5404,
        5410
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4249": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "4251": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "ADD",
      "path": "44"
    },
    "4252": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1E38"
    },
    "4255": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "i",
      "offset": [
        5080,
        5422
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4256": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4257": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4259": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4261": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4262": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4263": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "DUP4",
      "path": "44"
    },
    "4264": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "SUB",
      "path": "44"
    },
    "4265": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4266": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4268": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "DUP8",
      "path": "44"
    },
    "4269": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4270": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "4271": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4272": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4273": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4274": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x10BA"
    },
    "4277": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "4278": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4280": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4281": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "REVERT",
      "path": "44"
    },
    "4282": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4283": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "POP",
      "path": "44"
    },
    "4284": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "GAS",
      "path": "44"
    },
    "4285": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "CALL",
      "path": "44"
    },
    "4286": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4287": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4288": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4289": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x10CE"
    },
    "4292": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "4293": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4294": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4296": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4297": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "4298": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4299": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4301": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "REVERT",
      "path": "44"
    },
    "4302": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4303": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "POP",
      "path": "44"
    },
    "4304": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "POP",
      "path": "44"
    },
    "4305": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "POP",
      "path": "44"
    },
    "4306": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "POP",
      "path": "44"
    },
    "4307": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4309": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4310": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4311": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4313": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4314": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "4315": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "4317": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4318": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4319": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4320": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "ADD",
      "path": "44"
    },
    "4321": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4323": {
      "op": "NOT"
    },
    "4324": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "AND",
      "path": "44"
    },
    "4325": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4326": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "ADD",
      "path": "44"
    },
    "4327": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4329": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4330": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x10F6"
    },
    "4333": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4334": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4335": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4336": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "ADD",
      "path": "44"
    },
    "4337": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4338": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x19A4"
    },
    "4341": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "i",
      "offset": [
        5080,
        5422
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4342": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5080,
        5422
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4343": {
      "op": "POP"
    },
    "4344": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        5067,
        5422
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "4345": {
      "op": "POP"
    },
    "4346": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        4585,
        5431
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4347": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3456,
        5437
      ],
      "op": "POP",
      "path": "44"
    },
    "4348": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3456,
        5437
      ],
      "op": "POP",
      "path": "44"
    },
    "4349": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3456,
        5437
      ],
      "op": "POP",
      "path": "44"
    },
    "4350": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3456,
        5437
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "4351": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3456,
        5437
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "4352": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3456,
        5437
      ],
      "op": "POP",
      "path": "44"
    },
    "4353": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3456,
        5437
      ],
      "op": "POP",
      "path": "44"
    },
    "4354": {
      "fn": "TennerrStreamer._updateOutflow",
      "offset": [
        3456,
        5437
      ],
      "op": "POP",
      "path": "44"
    },
    "4355": {
      "fn": "TennerrStreamer._updateOutflow",
      "jump": "o",
      "offset": [
        3456,
        5437
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4356": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4357": {
      "fn": "Context._msgSender",
      "offset": [
        685,
        695
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 29
    },
    "4358": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4359": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        598,
        702
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4360": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7025,
        7209
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4361": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7104
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4363": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4364": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4365": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4366": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4368": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4369": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4370": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4371": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4373": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4374": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4375": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7131
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1120"
    },
    "4378": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4379": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7123,
        7130
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4380": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7122
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12FB"
    },
    "4383": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        7098,
        7131
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4384": {
      "branch": 69,
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7131
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4385": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7094,
        7203
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4386": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7094,
        7203
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x660"
    },
    "4389": {
      "branch": 69,
      "fn": "AccessControl._grantRole",
      "offset": [
        7094,
        7203
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4390": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7179,
        7191
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 30,
      "value": "0x112D"
    },
    "4393": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7179,
        7189
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1104"
    },
    "4396": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        7179,
        7191
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4397": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7179,
        7191
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4404": {
      "op": "SHL"
    },
    "4405": {
      "op": "SUB"
    },
    "4406": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "AND",
      "path": "0"
    },
    "4407": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7170,
        7177
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4412": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4414": {
      "op": "SHL"
    },
    "4415": {
      "op": "SUB"
    },
    "4416": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "AND",
      "path": "0"
    },
    "4417": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7164,
        7168
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4418": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
    },
    "4451": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4453": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4454": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4456": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4457": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4458": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4459": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "SUB",
      "path": "0"
    },
    "4460": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4461": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "LOG4",
      "path": "0"
    },
    "4462": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7025,
        7209
      ],
      "op": "POP",
      "path": "0"
    },
    "4463": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7025,
        7209
      ],
      "op": "POP",
      "path": "0"
    },
    "4464": {
      "fn": "AccessControl._grantRole",
      "jump": "o",
      "offset": [
        7025,
        7209
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4465": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7215,
        7403
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4466": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4468": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4469": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4470": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4471": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4473": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4474": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4475": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4476": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4478": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4479": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4480": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7325
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1189"
    },
    "4483": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7325
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4484": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7317,
        7324
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4485": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7316
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1310"
    },
    "4488": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        7289,
        7325
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4489": {
      "branch": 70,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7325
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4490": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7285,
        7397
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4491": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7285,
        7397
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x660"
    },
    "4494": {
      "branch": 70,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7285,
        7397
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4495": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7373,
        7385
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 31,
      "value": "0x1196"
    },
    "4498": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7373,
        7383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1104"
    },
    "4501": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        7373,
        7385
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4502": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7373,
        7385
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4509": {
      "op": "SHL"
    },
    "4510": {
      "op": "SUB"
    },
    "4511": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "AND",
      "path": "0"
    },
    "4512": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7364,
        7371
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4519": {
      "op": "SHL"
    },
    "4520": {
      "op": "SUB"
    },
    "4521": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "AND",
      "path": "0"
    },
    "4522": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7358,
        7362
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4523": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
    },
    "4556": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4558": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4559": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4561": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4562": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4563": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4564": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "SUB",
      "path": "0"
    },
    "4565": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4566": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "LOG4",
      "path": "0"
    },
    "4567": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7215,
        7403
      ],
      "op": "POP",
      "path": "0"
    },
    "4568": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7215,
        7403
      ],
      "op": "POP",
      "path": "0"
    },
    "4569": {
      "fn": "AccessControl._revokeRole",
      "jump": "o",
      "offset": [
        7215,
        7403
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4570": {
      "fn": "SafeMath.sub",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4571": {
      "fn": "SafeMath.sub",
      "offset": [
        3194,
        3201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4573": {
      "fn": "SafeMath.sub",
      "offset": [
        3226,
        3227
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 32
    },
    "4574": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3222
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4575": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "GT",
      "path": "2"
    },
    "4576": {
      "branch": 74,
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4577": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11FC"
    },
    "4580": {
      "branch": 74,
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4581": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4583": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4584": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4588": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4590": {
      "op": "SHL"
    },
    "4591": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4592": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4593": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4595": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "2"
    },
    "4596": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x432"
    },
    "4599": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4600": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2103"
    },
    "4603": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4604": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4605": {
      "op": "POP"
    },
    "4606": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 33
    },
    "4607": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SUB",
      "path": "2"
    },
    "4608": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4609": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4610": {
      "fn": "EnumerableSet.at",
      "offset": [
        7677,
        7833
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4611": {
      "fn": "EnumerableSet.at",
      "offset": [
        7751,
        7758
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4613": {
      "fn": "EnumerableSet.at",
      "offset": [
        7801,
        7823
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 34,
      "value": "0xB0B"
    },
    "4616": {
      "fn": "EnumerableSet.at",
      "offset": [
        7805,
        7808
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4617": {
      "fn": "EnumerableSet.at",
      "offset": [
        7817,
        7822
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4618": {
      "fn": "EnumerableSet.at",
      "offset": [
        7801,
        7804
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1325"
    },
    "4621": {
      "fn": "EnumerableSet.at",
      "jump": "i",
      "offset": [
        7801,
        7823
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4622": {
      "fn": "EnumerableSet.contains",
      "offset": [
        6984,
        7149
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4623": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7064,
        7068
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4625": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7087,
        7142
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 35,
      "value": "0xB0B"
    },
    "4628": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7097,
        7100
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4635": {
      "op": "SHL"
    },
    "4636": {
      "op": "SUB"
    },
    "4637": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7117,
        7140
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4638": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7117,
        7140
      ],
      "op": "AND",
      "path": "12"
    },
    "4639": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7087,
        7096
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x136A"
    },
    "4642": {
      "fn": "EnumerableSet.contains",
      "jump": "i",
      "offset": [
        7087,
        7142
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4643": {
      "fn": "EnumerableSet.length",
      "offset": [
        7230,
        7345
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4644": {
      "fn": "EnumerableSet.length",
      "offset": [
        7293,
        7300
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4646": {
      "fn": "EnumerableSet.length",
      "offset": [
        7319,
        7338
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 36,
      "value": "0xB0E"
    },
    "4649": {
      "fn": "EnumerableSet.length",
      "offset": [
        7327,
        7330
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4650": {
      "fn": "EnumerableSet.length",
      "offset": [
        7319,
        7326
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1382"
    },
    "4653": {
      "fn": "EnumerableSet.length",
      "jump": "i",
      "offset": [
        7319,
        7338
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4654": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5443,
        5920
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4655": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5511,
        5524
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4657": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5527,
        5553
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x123B"
    },
    "4660": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5542,
        5550
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4661": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5551,
        5552
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4663": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5527,
        5541
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1386"
    },
    "4666": {
      "fn": "TennerrStreamer._accountingCache",
      "jump": "i",
      "offset": [
        5527,
        5553
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4667": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5527,
        5553
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4668": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5511,
        5553
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4669": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5511,
        5553
      ],
      "op": "POP",
      "path": "44"
    },
    "4670": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5563,
        5595
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1245"
    },
    "4673": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5563,
        5595
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x16AA"
    },
    "4676": {
      "fn": "TennerrStreamer._accountingCache",
      "jump": "i",
      "offset": [
        5563,
        5595
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4677": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5563,
        5595
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4678": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5611
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x5"
    },
    "4680": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5611
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "4681": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4683": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4684": {
      "op": "PUSH4",
      "value": "0xEBD2D6A7"
    },
    "4689": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4691": {
      "op": "SHL"
    },
    "4692": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4693": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4700": {
      "op": "SHL"
    },
    "4701": {
      "op": "SUB"
    },
    "4702": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5611
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4703": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5611
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4704": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5611
      ],
      "op": "AND",
      "path": "44"
    },
    "4705": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5611
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4706": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5624
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xEBD2D6A7"
    },
    "4711": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5624
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4712": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1275"
    },
    "4715": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4716": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5625,
        5630
      ],
      "op": "DUP6",
      "path": "44"
    },
    "4717": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5625,
        5630
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4718": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "4720": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "ADD",
      "path": "44"
    },
    "4721": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1DAD"
    },
    "4724": {
      "fn": "TennerrStreamer._accountingCache",
      "jump": "i",
      "offset": [
        5598,
        5631
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4725": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4726": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xE0"
    },
    "4728": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4730": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4731": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4732": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "DUP4",
      "path": "44"
    },
    "4733": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "SUB",
      "path": "44"
    },
    "4734": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4735": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "DUP7",
      "path": "44"
    },
    "4736": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4737": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "4738": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4739": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4740": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4741": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x128D"
    },
    "4744": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "4745": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4747": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4748": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "REVERT",
      "path": "44"
    },
    "4749": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4750": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "POP",
      "path": "44"
    },
    "4751": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "GAS",
      "path": "44"
    },
    "4752": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "4753": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4754": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4755": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4756": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x12A1"
    },
    "4759": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "4760": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4761": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4763": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4764": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "4765": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4766": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4768": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "REVERT",
      "path": "44"
    },
    "4769": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4770": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "POP",
      "path": "44"
    },
    "4771": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "POP",
      "path": "44"
    },
    "4772": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "POP",
      "path": "44"
    },
    "4773": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "POP",
      "path": "44"
    },
    "4774": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4776": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4777": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4778": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "4780": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "NOT",
      "path": "44"
    },
    "4781": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "4783": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4784": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "ADD",
      "path": "44"
    },
    "4785": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "AND",
      "path": "44"
    },
    "4786": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4787": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "ADD",
      "path": "44"
    },
    "4788": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4789": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4791": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4792": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "POP",
      "path": "44"
    },
    "4793": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4794": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "ADD",
      "path": "44"
    },
    "4795": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4796": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x12C5"
    },
    "4799": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4800": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4801": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1C7C"
    },
    "4804": {
      "fn": "TennerrStreamer._accountingCache",
      "jump": "i",
      "offset": [
        5598,
        5631
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4805": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5598,
        5631
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4806": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5657,
        5668
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4808": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5657,
        5668
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4809": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5657,
        5668
      ],
      "op": "ADD",
      "path": "44"
    },
    "4810": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5657,
        5668
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4811": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5695,
        5707
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "4813": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5695,
        5707
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4814": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5695,
        5707
      ],
      "op": "ADD",
      "path": "44"
    },
    "4815": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5695,
        5707
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4816": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5731,
        5747
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xA0"
    },
    "4818": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5731,
        5747
      ],
      "op": "DUP4",
      "path": "44"
    },
    "4819": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5731,
        5747
      ],
      "op": "ADD",
      "path": "44"
    },
    "4820": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5731,
        5747
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4821": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5817,
        5834
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xC0"
    },
    "4823": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5817,
        5834
      ],
      "op": "DUP5",
      "path": "44"
    },
    "4824": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5817,
        5834
      ],
      "op": "ADD",
      "path": "44"
    },
    "4825": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5817,
        5834
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4826": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5563,
        5631
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "4827": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5563,
        5631
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "4828": {
      "op": "POP"
    },
    "4829": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5657,
        5668
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4830": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5657,
        5668
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "4831": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5695,
        5707
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4832": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5695,
        5707
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4833": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5731,
        5747
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4834": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5776,
        5791
      ],
      "op": "TIMESTAMP",
      "path": "44"
    },
    "4835": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5776,
        5791
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4836": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5844,
        5913
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 37,
      "value": "0x12F1"
    },
    "4839": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5862,
        5867
      ],
      "op": "DUP8",
      "path": "44"
    },
    "4840": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5657,
        5668
      ],
      "op": "DUP7",
      "path": "44"
    },
    "4841": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5695,
        5707
      ],
      "op": "DUP7",
      "path": "44"
    },
    "4842": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5731,
        5747
      ],
      "op": "DUP7",
      "path": "44"
    },
    "4843": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5776,
        5791
      ],
      "op": "DUP7",
      "path": "44"
    },
    "4844": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5817,
        5834
      ],
      "op": "DUP7",
      "path": "44"
    },
    "4845": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5844,
        5861
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x13CD"
    },
    "4848": {
      "fn": "TennerrStreamer._accountingCache",
      "jump": "i",
      "offset": [
        5844,
        5913
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4849": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5844,
        5913
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4850": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5443,
        5920
      ],
      "op": "POP",
      "path": "44"
    },
    "4851": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5443,
        5920
      ],
      "op": "POP",
      "path": "44"
    },
    "4852": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5443,
        5920
      ],
      "op": "POP",
      "path": "44"
    },
    "4853": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5443,
        5920
      ],
      "op": "POP",
      "path": "44"
    },
    "4854": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5443,
        5920
      ],
      "op": "POP",
      "path": "44"
    },
    "4855": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5443,
        5920
      ],
      "op": "POP",
      "path": "44"
    },
    "4856": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5443,
        5920
      ],
      "op": "POP",
      "path": "44"
    },
    "4857": {
      "fn": "TennerrStreamer._accountingCache",
      "offset": [
        5443,
        5920
      ],
      "op": "POP",
      "path": "44"
    },
    "4858": {
      "fn": "TennerrStreamer._accountingCache",
      "jump": "o",
      "offset": [
        5443,
        5920
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4859": {
      "fn": "EnumerableSet.add",
      "offset": [
        6429,
        6579
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4860": {
      "fn": "EnumerableSet.add",
      "offset": [
        6499,
        6503
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4862": {
      "fn": "EnumerableSet.add",
      "offset": [
        6522,
        6572
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 38,
      "value": "0xB0B"
    },
    "4865": {
      "fn": "EnumerableSet.add",
      "offset": [
        6527,
        6530
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4870": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4872": {
      "op": "SHL"
    },
    "4873": {
      "op": "SUB"
    },
    "4874": {
      "fn": "EnumerableSet.add",
      "offset": [
        6547,
        6570
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4875": {
      "fn": "EnumerableSet.add",
      "offset": [
        6547,
        6570
      ],
      "op": "AND",
      "path": "12"
    },
    "4876": {
      "fn": "EnumerableSet.add",
      "offset": [
        6522,
        6526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1575"
    },
    "4879": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        6522,
        6572
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4880": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6747,
        6903
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4881": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6820,
        6824
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4883": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6843,
        6896
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 39,
      "value": "0xB0B"
    },
    "4886": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6851,
        6854
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4893": {
      "op": "SHL"
    },
    "4894": {
      "op": "SUB"
    },
    "4895": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6871,
        6894
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4896": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6871,
        6894
      ],
      "op": "AND",
      "path": "12"
    },
    "4897": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6843,
        6850
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15BF"
    },
    "4900": {
      "fn": "EnumerableSet.remove",
      "jump": "i",
      "offset": [
        6843,
        6896
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4901": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4902": {
      "fn": "EnumerableSet._at",
      "offset": [
        4546,
        4564
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 40
    },
    "4903": {
      "fn": "EnumerableSet._at",
      "offset": [
        4546,
        4564
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4904": {
      "fn": "EnumerableSet._at",
      "offset": [
        4519,
        4526
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4906": {
      "fn": "EnumerableSet._at",
      "offset": [
        4519,
        4526
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4907": {
      "branch": 71,
      "fn": "EnumerableSet._at",
      "offset": [
        4546,
        4572
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4908": {
      "op": "LT"
    },
    "4909": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1348"
    },
    "4912": {
      "branch": 71,
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4913": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4915": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4916": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4920": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4922": {
      "op": "SHL"
    },
    "4923": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4924": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4925": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4927": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "ADD",
      "path": "12"
    },
    "4928": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x432"
    },
    "4931": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4932": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F65"
    },
    "4935": {
      "fn": "EnumerableSet._at",
      "jump": "i",
      "offset": [
        4538,
        4611
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4936": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4937": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4631
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 41
    },
    "4938": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4639
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4940": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4639
      ],
      "op": "ADD",
      "path": "12"
    },
    "4941": {
      "fn": "EnumerableSet._at",
      "offset": [
        4640,
        4645
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4942": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4943": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4944": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4945": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "LT",
      "path": "12"
    },
    "4946": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1357"
    },
    "4949": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4950": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "INVALID",
      "path": "12"
    },
    "4951": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4952": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4953": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4955": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4956": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4958": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4960": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "4961": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "ADD",
      "path": "12"
    },
    "4962": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4963": {
      "fn": "EnumerableSet._at",
      "offset": [
        4621,
        4646
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4964": {
      "fn": "EnumerableSet._at",
      "offset": [
        4621,
        4646
      ],
      "op": "POP",
      "path": "12"
    },
    "4965": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4966": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4967": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "POP",
      "path": "12"
    },
    "4968": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "POP",
      "path": "12"
    },
    "4969": {
      "fn": "EnumerableSet._at",
      "jump": "o",
      "offset": [
        4452,
        4653
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4970": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3805,
        3932
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4971": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3878,
        3882
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4973": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "SWAP1",
      "path": "12",
      "statement": 42
    },
    "4974": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4975": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4976": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "4978": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4979": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4980": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4981": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "ADD",
      "path": "12"
    },
    "4982": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4984": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4985": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4987": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4988": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "4989": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4990": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3925
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4991": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3925
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4992": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3925
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4993": {
      "fn": "EnumerableSet._contains",
      "jump": "o",
      "offset": [
        3805,
        3932
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4994": {
      "fn": "EnumerableSet._length",
      "offset": [
        4013,
        4120
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4995": {
      "fn": "EnumerableSet._length",
      "offset": [
        4095,
        4113
      ],
      "op": "SLOAD",
      "path": "12",
      "statement": 43
    },
    "4996": {
      "fn": "EnumerableSet._length",
      "offset": [
        4095,
        4113
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4997": {
      "fn": "EnumerableSet._length",
      "jump": "o",
      "offset": [
        4013,
        4120
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4998": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        5926,
        6158
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4999": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6001,
        6008
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "5001": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6018,
        6029
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5002": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6043,
        6049
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "5004": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6038,
        6134
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "5005": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6059,
        6061
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "5007": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6055,
        6056
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5008": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6055,
        6061
      ],
      "op": "LT",
      "path": "44"
    },
    "5009": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6038,
        6134
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "5010": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6038,
        6134
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x13C5"
    },
    "5013": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6038,
        6134
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "5014": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6119,
        6120
      ],
      "op": "DUP1",
      "path": "44",
      "statement": 44
    },
    "5015": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6123,
        6124
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x8"
    },
    "5017": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6119,
        6124
      ],
      "op": "MUL",
      "path": "44"
    },
    "5018": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6093,
        6094
      ],
      "op": "DUP6",
      "path": "44"
    },
    "5019": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6104,
        6105
      ],
      "op": "DUP3",
      "path": "44"
    },
    "5020": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6095,
        6101
      ],
      "op": "DUP7",
      "path": "44"
    },
    "5021": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6095,
        6105
      ],
      "op": "ADD",
      "path": "44"
    },
    "5022": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6093,
        6106
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5023": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6093,
        6106
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "5024": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6093,
        6106
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5025": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6093,
        6106
      ],
      "op": "LT",
      "path": "44"
    },
    "5026": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6093,
        6106
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x13A7"
    },
    "5029": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6093,
        6106
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "5030": {
      "dev": "Index out of range",
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6093,
        6106
      ],
      "op": "INVALID",
      "path": "44"
    },
    "5031": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6093,
        6106
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "5032": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6093,
        6106
      ],
      "op": "ADD",
      "path": "44"
    },
    "5033": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6093,
        6106
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "5035": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6093,
        6106
      ],
      "op": "ADD",
      "path": "44"
    },
    "5036": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6093,
        6106
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "5037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5041": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "5043": {
      "op": "SHL"
    },
    "5044": {
      "op": "SUB"
    },
    "5045": {
      "op": "NOT"
    },
    "5046": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6093,
        6106
      ],
      "op": "AND",
      "path": "44"
    },
    "5047": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6085,
        6125
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5048": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6085,
        6125
      ],
      "op": "SHR",
      "path": "44"
    },
    "5049": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6078,
        6125
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "5050": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6078,
        6125
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5051": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6078,
        6125
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "5052": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6078,
        6125
      ],
      "op": "OR",
      "path": "44"
    },
    "5053": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6078,
        6125
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5054": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6063,
        6066
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 45,
      "value": "0x1"
    },
    "5056": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6063,
        6066
      ],
      "op": "ADD",
      "path": "44"
    },
    "5057": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6038,
        6134
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x138C"
    },
    "5060": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6038,
        6134
      ],
      "op": "JUMP",
      "path": "44"
    },
    "5061": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6038,
        6134
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "5062": {
      "op": "POP"
    },
    "5063": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        6148,
        6151
      ],
      "op": "SWAP4",
      "path": "44",
      "statement": 46
    },
    "5064": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "offset": [
        5926,
        6158
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "5065": {
      "op": "POP"
    },
    "5066": {
      "op": "POP"
    },
    "5067": {
      "op": "POP"
    },
    "5068": {
      "fn": "TennerrStreamer.bytesToBytes32",
      "jump": "o",
      "offset": [
        5926,
        6158
      ],
      "op": "JUMP",
      "path": "44"
    },
    "5069": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6164,
        7047
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "5070": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6450
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x2"
    },
    "5072": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6450
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "5073": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6462,
        6476
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x3"
    },
    "5075": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6462,
        6476
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "5076": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "5078": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "5079": {
      "op": "PUSH4",
      "value": "0xE8E7E2D1"
    },
    "5084": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5086": {
      "op": "SHL"
    },
    "5087": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5088": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5089": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6426,
        6443
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "5091": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6426,
        6443
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "5092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5096": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5098": {
      "op": "SHL"
    },
    "5099": {
      "op": "SUB"
    },
    "5100": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6450
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5101": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6450
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5102": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6450
      ],
      "op": "AND",
      "path": "44"
    },
    "5103": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6450
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "5104": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6461
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xE8E7E2D1"
    },
    "5109": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6461
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "5110": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1407"
    },
    "5113": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "5114": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6462,
        6476
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5115": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6462,
        6476
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "5116": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6462,
        6476
      ],
      "op": "AND",
      "path": "44"
    },
    "5117": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6462,
        6476
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5118": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6486,
        6490
      ],
      "op": "ADDRESS",
      "path": "44"
    },
    "5119": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6486,
        6490
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5120": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "5122": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "ADD",
      "path": "44"
    },
    "5123": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1E8B"
    },
    "5126": {
      "fn": "TennerrStreamer._updateStreamData",
      "jump": "i",
      "offset": [
        6446,
        6492
      ],
      "op": "JUMP",
      "path": "44"
    },
    "5127": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "5128": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "5130": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "5132": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "5133": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5134": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "DUP4",
      "path": "44"
    },
    "5135": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "SUB",
      "path": "44"
    },
    "5136": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5137": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "DUP7",
      "path": "44"
    },
    "5138": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5139": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "5140": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "5141": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5142": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "5143": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x141F"
    },
    "5146": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "5147": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "5149": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5150": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "REVERT",
      "path": "44"
    },
    "5151": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "5152": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "POP",
      "path": "44"
    },
    "5153": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "GAS",
      "path": "44"
    },
    "5154": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "5155": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "5156": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5157": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "5158": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1433"
    },
    "5161": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "5162": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "5163": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "5165": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5166": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "5167": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "5168": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "5170": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "REVERT",
      "path": "44"
    },
    "5171": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "5172": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "POP",
      "path": "44"
    },
    "5173": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "POP",
      "path": "44"
    },
    "5174": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "POP",
      "path": "44"
    },
    "5175": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "POP",
      "path": "44"
    },
    "5176": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "5178": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "5179": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "5180": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "5182": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "NOT",
      "path": "44"
    },
    "5183": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "5185": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "DUP3",
      "path": "44"
    },
    "5186": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "ADD",
      "path": "44"
    },
    "5187": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "AND",
      "path": "44"
    },
    "5188": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "DUP3",
      "path": "44"
    },
    "5189": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "ADD",
      "path": "44"
    },
    "5190": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5191": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "5193": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5194": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "POP",
      "path": "44"
    },
    "5195": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5196": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "ADD",
      "path": "44"
    },
    "5197": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5198": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1457"
    },
    "5201": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "5202": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5203": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1B68"
    },
    "5206": {
      "fn": "TennerrStreamer._updateStreamData",
      "jump": "i",
      "offset": [
        6446,
        6492
      ],
      "op": "JUMP",
      "path": "44"
    },
    "5207": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6446,
        6492
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "5208": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6531
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x2"
    },
    "5210": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6531
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "5211": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6540,
        6554
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x3"
    },
    "5213": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6540,
        6554
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "5214": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6571,
        6580
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "5216": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6571,
        6580
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5217": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6571,
        6580
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "5218": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "5220": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "5221": {
      "op": "PUSH4",
      "value": "0x1CD43D11"
    },
    "5226": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "5228": {
      "op": "SHL"
    },
    "5229": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5230": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5231": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6426,
        6492
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "5232": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6426,
        6492
      ],
      "op": "SWAP6",
      "path": "44"
    },
    "5233": {
      "op": "POP"
    },
    "5234": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6504,
        6521
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "5236": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6504,
        6521
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "5237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5241": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5243": {
      "op": "SHL"
    },
    "5244": {
      "op": "SUB"
    },
    "5245": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6531
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "5246": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6531
      ],
      "op": "DUP6",
      "path": "44"
    },
    "5247": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6531
      ],
      "op": "AND",
      "path": "44"
    },
    "5248": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6531
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "5249": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6539
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xE6A1E888"
    },
    "5254": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6539
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "5255": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1499"
    },
    "5258": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "5259": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6540,
        6554
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5260": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6540,
        6554
      ],
      "op": "DUP3",
      "path": "44"
    },
    "5261": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6540,
        6554
      ],
      "op": "AND",
      "path": "44"
    },
    "5262": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6540,
        6554
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "5263": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6564,
        6568
      ],
      "op": "ADDRESS",
      "path": "44"
    },
    "5264": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6564,
        6568
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "5265": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6571,
        6580
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "5266": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6571,
        6580
      ],
      "op": "AND",
      "path": "44"
    },
    "5267": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6571,
        6580
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "5268": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "ADD",
      "path": "44"
    },
    "5269": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1EA5"
    },
    "5272": {
      "fn": "TennerrStreamer._updateStreamData",
      "jump": "i",
      "offset": [
        6527,
        6581
      ],
      "op": "JUMP",
      "path": "44"
    },
    "5273": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "5274": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x80"
    },
    "5276": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "5278": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "5279": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5280": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "DUP4",
      "path": "44"
    },
    "5281": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "SUB",
      "path": "44"
    },
    "5282": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5283": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "DUP7",
      "path": "44"
    },
    "5284": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5285": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "5286": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "5287": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5288": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "5289": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x14B1"
    },
    "5292": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "5293": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "5295": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5296": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "REVERT",
      "path": "44"
    },
    "5297": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "5298": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "POP",
      "path": "44"
    },
    "5299": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "GAS",
      "path": "44"
    },
    "5300": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "5301": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "5302": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5303": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "5304": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x14C5"
    },
    "5307": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "5308": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "5309": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "5311": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5312": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "5313": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "5314": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "5316": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "REVERT",
      "path": "44"
    },
    "5317": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "5318": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "POP",
      "path": "44"
    },
    "5319": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "POP",
      "path": "44"
    },
    "5320": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "POP",
      "path": "44"
    },
    "5321": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "POP",
      "path": "44"
    },
    "5322": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "5324": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "5325": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "5326": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "5328": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "NOT",
      "path": "44"
    },
    "5329": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "5331": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "DUP3",
      "path": "44"
    },
    "5332": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "ADD",
      "path": "44"
    },
    "5333": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "AND",
      "path": "44"
    },
    "5334": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "DUP3",
      "path": "44"
    },
    "5335": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "ADD",
      "path": "44"
    },
    "5336": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5337": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "5339": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5340": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "POP",
      "path": "44"
    },
    "5341": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5342": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "ADD",
      "path": "44"
    },
    "5343": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5344": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x14E9"
    },
    "5347": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "5348": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5349": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1CF5"
    },
    "5352": {
      "fn": "TennerrStreamer._updateStreamData",
      "jump": "i",
      "offset": [
        6527,
        6581
      ],
      "op": "JUMP",
      "path": "44"
    },
    "5353": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6527,
        6581
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "5354": {
      "op": "POP"
    },
    "5355": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6502,
        6581
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5356": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6502,
        6581
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "5357": {
      "op": "POP"
    },
    "5358": {
      "op": "POP"
    },
    "5359": {
      "op": "POP"
    },
    "5360": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6668,
        6693
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5361": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6668,
        6693
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5362": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6668,
        6693
      ],
      "op": "ADD",
      "path": "44"
    },
    "5363": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6663,
        6694
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xB"
    },
    "5365": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6663,
        6694
      ],
      "op": "SIGNEXTEND",
      "path": "44"
    },
    "5366": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6645,
        6660
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "5368": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6720,
        6749
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1501"
    },
    "5371": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6720,
        6728
      ],
      "op": "DUP6",
      "path": "44"
    },
    "5372": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6733,
        6748
      ],
      "op": "TIMESTAMP",
      "path": "44"
    },
    "5373": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6720,
        6732
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x11DA"
    },
    "5376": {
      "fn": "TennerrStreamer._updateStreamData",
      "jump": "i",
      "offset": [
        6720,
        6749
      ],
      "op": "JUMP",
      "path": "44"
    },
    "5377": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6720,
        6749
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "5378": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6704,
        6749
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5379": {
      "op": "POP"
    },
    "5380": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6759,
        6774
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "5382": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6777,
        6811
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x150F"
    },
    "5385": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6778,
        6793
      ],
      "op": "TIMESTAMP",
      "path": "44"
    },
    "5386": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6799,
        6810
      ],
      "op": "DUP9",
      "path": "44"
    },
    "5387": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6777,
        6798
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x11DA"
    },
    "5390": {
      "fn": "TennerrStreamer._updateStreamData",
      "jump": "i",
      "offset": [
        6777,
        6811
      ],
      "op": "JUMP",
      "path": "44"
    },
    "5391": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6777,
        6811
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "5392": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6759,
        6811
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5393": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6759,
        6811
      ],
      "op": "POP",
      "path": "44"
    },
    "5394": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6821,
        6840
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "5396": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6856,
        6866
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5397": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6843,
        6853
      ],
      "op": "DUP5",
      "path": "44"
    },
    "5398": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6843,
        6866
      ],
      "op": "MUL",
      "path": "44"
    },
    "5399": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6821,
        6866
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5400": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6821,
        6866
      ],
      "op": "POP",
      "path": "44"
    },
    "5401": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 47,
      "value": "0x40"
    },
    "5403": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "5404": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5405": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xC0"
    },
    "5407": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "ADD",
      "path": "44"
    },
    "5408": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "5410": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5411": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5412": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6972,
        6982
      ],
      "op": "DUP6",
      "path": "44"
    },
    "5413": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5414": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5415": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "5417": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "ADD",
      "path": "44"
    },
    "5418": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6984,
        6998
      ],
      "op": "DUP3",
      "path": "44"
    },
    "5419": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5420": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5421": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "5423": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "ADD",
      "path": "44"
    },
    "5424": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7000,
        7006
      ],
      "op": "DUP11",
      "path": "44"
    },
    "5425": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5426": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5427": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "5429": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "ADD",
      "path": "44"
    },
    "5430": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7008,
        7019
      ],
      "op": "DUP10",
      "path": "44"
    },
    "5431": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5432": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5433": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "5435": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "ADD",
      "path": "44"
    },
    "5436": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7021,
        7029
      ],
      "op": "DUP5",
      "path": "44"
    },
    "5437": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5438": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5439": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "5441": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "ADD",
      "path": "44"
    },
    "5442": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        7031,
        7039
      ],
      "op": "DUP9",
      "path": "44"
    },
    "5443": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5444": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5445": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "POP",
      "path": "44"
    },
    "5446": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        6961
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x9"
    },
    "5448": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        6968
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "5450": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6962,
        6967
      ],
      "op": "DUP15",
      "path": "44"
    },
    "5451": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        6968
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5452": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        6968
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5453": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        6968
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "5455": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        6968
      ],
      "op": "ADD",
      "path": "44"
    },
    "5456": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        6968
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5457": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        6968
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5458": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        6968
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5459": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        6968
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "5461": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        6968
      ],
      "op": "ADD",
      "path": "44"
    },
    "5462": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        6968
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "5464": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        6968
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "5465": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5466": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x6"
    },
    "5468": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1566"
    },
    "5471": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "5472": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "5473": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5474": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x16FC"
    },
    "5477": {
      "fn": "TennerrStreamer._updateStreamData",
      "jump": "i",
      "offset": [
        6948,
        7040
      ],
      "op": "JUMP",
      "path": "44"
    },
    "5478": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "5479": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6948,
        7040
      ],
      "op": "POP",
      "path": "44"
    },
    "5480": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6164,
        7047
      ],
      "op": "POP",
      "path": "44"
    },
    "5481": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6164,
        7047
      ],
      "op": "POP",
      "path": "44"
    },
    "5482": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6164,
        7047
      ],
      "op": "POP",
      "path": "44"
    },
    "5483": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6164,
        7047
      ],
      "op": "POP",
      "path": "44"
    },
    "5484": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6164,
        7047
      ],
      "op": "POP",
      "path": "44"
    },
    "5485": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6164,
        7047
      ],
      "op": "POP",
      "path": "44"
    },
    "5486": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6164,
        7047
      ],
      "op": "POP",
      "path": "44"
    },
    "5487": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6164,
        7047
      ],
      "op": "POP",
      "path": "44"
    },
    "5488": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6164,
        7047
      ],
      "op": "POP",
      "path": "44"
    },
    "5489": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6164,
        7047
      ],
      "op": "POP",
      "path": "44"
    },
    "5490": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6164,
        7047
      ],
      "op": "POP",
      "path": "44"
    },
    "5491": {
      "fn": "TennerrStreamer._updateStreamData",
      "offset": [
        6164,
        7047
      ],
      "op": "POP",
      "path": "44"
    },
    "5492": {
      "fn": "TennerrStreamer._updateStreamData",
      "jump": "o",
      "offset": [
        6164,
        7047
      ],
      "op": "JUMP",
      "path": "44"
    },
    "5493": {
      "fn": "EnumerableSet._add",
      "offset": [
        1640,
        2044
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5494": {
      "fn": "EnumerableSet._add",
      "offset": [
        1703,
        1707
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5496": {
      "fn": "EnumerableSet._add",
      "offset": [
        1724,
        1745
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1581"
    },
    "5499": {
      "fn": "EnumerableSet._add",
      "offset": [
        1734,
        1737
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5500": {
      "fn": "EnumerableSet._add",
      "offset": [
        1739,
        1744
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5501": {
      "fn": "EnumerableSet._add",
      "offset": [
        1724,
        1733
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x136A"
    },
    "5504": {
      "fn": "EnumerableSet._add",
      "jump": "i",
      "offset": [
        1724,
        1745
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5505": {
      "branch": 72,
      "fn": "EnumerableSet._add",
      "offset": [
        1724,
        1745
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5506": {
      "fn": "EnumerableSet._add",
      "offset": [
        1719,
        2038
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15B7"
    },
    "5509": {
      "branch": 72,
      "fn": "EnumerableSet._add",
      "offset": [
        1719,
        2038
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5510": {
      "op": "POP"
    },
    "5511": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 48
    },
    "5512": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5513": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5515": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5516": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5517": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "ADD",
      "path": "12"
    },
    "5518": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5519": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5520": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1772
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5522": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5523": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5524": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5525": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5527": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5528": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5529": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5530": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5531": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "5532": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "ADD",
      "path": "12"
    },
    "5533": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5534": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5535": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5536": {
      "fn": "EnumerableSet._add",
      "offset": [
        1941,
        1959
      ],
      "op": "DUP5",
      "path": "12",
      "statement": 49
    },
    "5537": {
      "fn": "EnumerableSet._add",
      "offset": [
        1941,
        1959
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5538": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5539": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5540": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5541": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1931
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5542": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1931
      ],
      "op": "DUP7",
      "path": "12"
    },
    "5543": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1931
      ],
      "op": "ADD",
      "path": "12"
    },
    "5544": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5545": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "5546": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5547": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5549": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5550": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5551": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5552": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5553": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5554": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5555": {
      "fn": "EnumerableSet._add",
      "offset": [
        1973,
        1984
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 50,
      "value": "0xB0E"
    },
    "5558": {
      "fn": "EnumerableSet._add",
      "offset": [
        1973,
        1984
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5559": {
      "fn": "EnumerableSet._add",
      "offset": [
        1719,
        2038
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5560": {
      "op": "POP"
    },
    "5561": {
      "fn": "EnumerableSet._add",
      "offset": [
        2022,
        2027
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 51,
      "value": "0x0"
    },
    "5563": {
      "fn": "EnumerableSet._add",
      "offset": [
        2015,
        2027
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB0E"
    },
    "5566": {
      "fn": "EnumerableSet._add",
      "offset": [
        2015,
        2027
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5567": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2212,
        3724
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5568": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2278,
        2282
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5570": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5571": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5572": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5573": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5575": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2427
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5576": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2427
      ],
      "op": "ADD",
      "path": "12"
    },
    "5577": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5579": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5580": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5582": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5583": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5584": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5585": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2449,
        2464
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5586": {
      "branch": 73,
      "fn": "EnumerableSet._remove",
      "offset": [
        2449,
        2464
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5587": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2445,
        3718
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x167B"
    },
    "5590": {
      "branch": 73,
      "fn": "EnumerableSet._remove",
      "offset": [
        2445,
        3718
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5591": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2896
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5592": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2896
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5595": {
      "op": "NOT"
    },
    "5596": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5597": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5598": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "ADD",
      "path": "12"
    },
    "5599": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5600": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5601": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5602": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "ADD",
      "path": "12"
    },
    "5603": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5604": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2806,
        2827
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5606": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2806,
        2827
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5607": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2881
      ],
      "op": "DUP8",
      "path": "12"
    },
    "5608": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2881
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5609": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5610": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5611": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5612": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "LT",
      "path": "12"
    },
    "5613": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15F2"
    },
    "5616": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5617": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "INVALID",
      "path": "12"
    },
    "5618": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5619": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5620": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5622": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5623": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5625": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5627": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5628": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "ADD",
      "path": "12"
    },
    "5629": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5630": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3140,
        3182
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5631": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3140,
        3182
      ],
      "op": "POP",
      "path": "12"
    },
    "5632": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3303,
        3312
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 52
    },
    "5633": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3277
      ],
      "op": "DUP8",
      "path": "12"
    },
    "5634": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3285
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5636": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3285
      ],
      "op": "ADD",
      "path": "12"
    },
    "5637": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3286,
        3299
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5638": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5639": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5640": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5641": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "LT",
      "path": "12"
    },
    "5642": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x160F"
    },
    "5645": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5646": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "INVALID",
      "path": "12"
    },
    "5647": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5648": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5650": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5651": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5652": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5653": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5655": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5656": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5657": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5658": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5659": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5660": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "ADD",
      "path": "12"
    },
    "5661": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5662": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5663": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5664": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5665": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 53
    },
    "5666": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5667": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5668": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3420,
        3421
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5670": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3390
      ],
      "op": "DUP10",
      "path": "12"
    },
    "5671": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3390
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5672": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3390
      ],
      "op": "ADD",
      "path": "12"
    },
    "5673": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5674": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5675": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5676": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5678": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5679": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5680": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3404,
        3421
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5681": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3404,
        3421
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5682": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3404,
        3421
      ],
      "op": "ADD",
      "path": "12"
    },
    "5683": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3421
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5684": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3421
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5685": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP7",
      "path": "12",
      "statement": 54
    },
    "5686": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5687": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3381
      ],
      "op": "DUP8",
      "path": "12"
    },
    "5688": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3381
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5689": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5690": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x163F"
    },
    "5693": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5694": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "INVALID",
      "path": "12"
    },
    "5695": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5696": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5698": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5699": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SUB",
      "path": "12"
    },
    "5700": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5701": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5702": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5703": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5705": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5706": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5708": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5710": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5711": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "ADD",
      "path": "12"
    },
    "5712": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5714": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5715": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5716": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5717": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5718": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3622
      ],
      "op": "DUP7",
      "path": "12",
      "statement": 55
    },
    "5719": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5721": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3631
      ],
      "op": "ADD",
      "path": "12"
    },
    "5722": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5724": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3632,
        3637
      ],
      "op": "DUP8",
      "path": "12"
    },
    "5725": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5726": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5727": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5729": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "ADD",
      "path": "12"
    },
    "5730": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5731": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5732": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5733": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5735": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "ADD",
      "path": "12"
    },
    "5736": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5738": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5739": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3612,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5741": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3612,
        3638
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5742": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3612,
        3638
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5743": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3660,
        3664
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 56,
      "value": "0x1"
    },
    "5745": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "5746": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "5747": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "5748": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "5749": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "5750": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "5751": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB0E"
    },
    "5754": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5755": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2445,
        3718
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5756": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3702,
        3707
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 57,
      "value": "0x0"
    },
    "5758": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5759": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "POP",
      "path": "12"
    },
    "5760": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "POP",
      "path": "12"
    },
    "5761": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB0E"
    },
    "5764": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5765": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2445,
        3718
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5766": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2212,
        3724
      ],
      "op": "POP",
      "path": "12"
    },
    "5767": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2212,
        3724
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5768": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2212,
        3724
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5769": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2212,
        3724
      ],
      "op": "POP",
      "path": "12"
    },
    "5770": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2212,
        3724
      ],
      "op": "POP",
      "path": "12"
    },
    "5771": {
      "fn": "EnumerableSet._remove",
      "jump": "o",
      "offset": [
        2212,
        3724
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5772": {
      "op": "JUMPDEST"
    },
    "5773": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5775": {
      "op": "MLOAD"
    },
    "5776": {
      "op": "DUP1"
    },
    "5777": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5779": {
      "op": "ADD"
    },
    "5780": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5782": {
      "op": "MSTORE"
    },
    "5783": {
      "op": "DUP1"
    },
    "5784": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5786": {
      "op": "SWAP1"
    },
    "5787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5789": {
      "op": "DUP3"
    },
    "5790": {
      "op": "MUL"
    },
    "5791": {
      "op": "DUP1"
    },
    "5792": {
      "op": "CALLDATASIZE"
    },
    "5793": {
      "op": "DUP4"
    },
    "5794": {
      "op": "CALLDATACOPY"
    },
    "5795": {
      "op": "POP"
    },
    "5796": {
      "op": "SWAP2"
    },
    "5797": {
      "op": "SWAP3"
    },
    "5798": {
      "op": "SWAP2"
    },
    "5799": {
      "op": "POP"
    },
    "5800": {
      "op": "POP"
    },
    "5801": {
      "op": "JUMP"
    },
    "5802": {
      "op": "JUMPDEST"
    },
    "5803": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5805": {
      "op": "MLOAD"
    },
    "5806": {
      "op": "DUP1"
    },
    "5807": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5809": {
      "op": "ADD"
    },
    "5810": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5812": {
      "op": "MSTORE"
    },
    "5813": {
      "op": "DUP1"
    },
    "5814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5816": {
      "op": "DUP2"
    },
    "5817": {
      "op": "MSTORE"
    },
    "5818": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5820": {
      "op": "ADD"
    },
    "5821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5823": {
      "op": "DUP2"
    },
    "5824": {
      "op": "MSTORE"
    },
    "5825": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5827": {
      "op": "ADD"
    },
    "5828": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5836": {
      "op": "SHL"
    },
    "5837": {
      "op": "SUB"
    },
    "5838": {
      "op": "AND"
    },
    "5839": {
      "op": "DUP2"
    },
    "5840": {
      "op": "MSTORE"
    },
    "5841": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5843": {
      "op": "ADD"
    },
    "5844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5852": {
      "op": "SHL"
    },
    "5853": {
      "op": "SUB"
    },
    "5854": {
      "op": "AND"
    },
    "5855": {
      "op": "DUP2"
    },
    "5856": {
      "op": "MSTORE"
    },
    "5857": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5859": {
      "op": "ADD"
    },
    "5860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5862": {
      "op": "DUP1"
    },
    "5863": {
      "op": "NOT"
    },
    "5864": {
      "op": "AND"
    },
    "5865": {
      "op": "DUP2"
    },
    "5866": {
      "op": "MSTORE"
    },
    "5867": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5869": {
      "op": "ADD"
    },
    "5870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5872": {
      "op": "DUP2"
    },
    "5873": {
      "op": "MSTORE"
    },
    "5874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5876": {
      "op": "ADD"
    },
    "5877": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5879": {
      "op": "DUP2"
    },
    "5880": {
      "op": "MSTORE"
    },
    "5881": {
      "op": "POP"
    },
    "5882": {
      "op": "SWAP1"
    },
    "5883": {
      "op": "JUMP"
    },
    "5884": {
      "op": "JUMPDEST"
    },
    "5885": {
      "op": "DUP3"
    },
    "5886": {
      "op": "DUP1"
    },
    "5887": {
      "op": "SLOAD"
    },
    "5888": {
      "op": "DUP3"
    },
    "5889": {
      "op": "DUP3"
    },
    "5890": {
      "op": "SSTORE"
    },
    "5891": {
      "op": "SWAP1"
    },
    "5892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5894": {
      "op": "MSTORE"
    },
    "5895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5897": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5899": {
      "op": "KECCAK256"
    },
    "5900": {
      "op": "SWAP1"
    },
    "5901": {
      "op": "DUP2"
    },
    "5902": {
      "op": "ADD"
    },
    "5903": {
      "op": "SWAP3"
    },
    "5904": {
      "op": "DUP3"
    },
    "5905": {
      "op": "ISZERO"
    },
    "5906": {
      "op": "PUSH2",
      "value": "0x1737"
    },
    "5909": {
      "op": "JUMPI"
    },
    "5910": {
      "op": "SWAP2"
    },
    "5911": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5913": {
      "op": "MUL"
    },
    "5914": {
      "op": "DUP3"
    },
    "5915": {
      "op": "ADD"
    },
    "5916": {
      "op": "JUMPDEST"
    },
    "5917": {
      "op": "DUP3"
    },
    "5918": {
      "op": "DUP2"
    },
    "5919": {
      "op": "GT"
    },
    "5920": {
      "op": "ISZERO"
    },
    "5921": {
      "op": "PUSH2",
      "value": "0x1737"
    },
    "5924": {
      "op": "JUMPI"
    },
    "5925": {
      "op": "DUP3"
    },
    "5926": {
      "op": "MLOAD"
    },
    "5927": {
      "op": "DUP3"
    },
    "5928": {
      "op": "SSTORE"
    },
    "5929": {
      "op": "SWAP2"
    },
    "5930": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5932": {
      "op": "ADD"
    },
    "5933": {
      "op": "SWAP2"
    },
    "5934": {
      "op": "SWAP1"
    },
    "5935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5937": {
      "op": "ADD"
    },
    "5938": {
      "op": "SWAP1"
    },
    "5939": {
      "op": "PUSH2",
      "value": "0x171C"
    },
    "5942": {
      "op": "JUMP"
    },
    "5943": {
      "op": "JUMPDEST"
    },
    "5944": {
      "op": "POP"
    },
    "5945": {
      "op": "PUSH2",
      "value": "0x1743"
    },
    "5948": {
      "op": "SWAP3"
    },
    "5949": {
      "op": "SWAP2"
    },
    "5950": {
      "op": "POP"
    },
    "5951": {
      "op": "PUSH2",
      "value": "0x1747"
    },
    "5954": {
      "op": "JUMP"
    },
    "5955": {
      "op": "JUMPDEST"
    },
    "5956": {
      "op": "POP"
    },
    "5957": {
      "op": "SWAP1"
    },
    "5958": {
      "op": "JUMP"
    },
    "5959": {
      "op": "JUMPDEST"
    },
    "5960": {
      "op": "JUMPDEST"
    },
    "5961": {
      "op": "DUP1"
    },
    "5962": {
      "op": "DUP3"
    },
    "5963": {
      "op": "GT"
    },
    "5964": {
      "op": "ISZERO"
    },
    "5965": {
      "op": "PUSH2",
      "value": "0x1743"
    },
    "5968": {
      "op": "JUMPI"
    },
    "5969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5971": {
      "op": "DUP2"
    },
    "5972": {
      "op": "SSTORE"
    },
    "5973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5975": {
      "op": "ADD"
    },
    "5976": {
      "op": "PUSH2",
      "value": "0x1748"
    },
    "5979": {
      "op": "JUMP"
    },
    "5980": {
      "op": "JUMPDEST"
    },
    "5981": {
      "op": "DUP1"
    },
    "5982": {
      "op": "MLOAD"
    },
    "5983": {
      "op": "PUSH2",
      "value": "0xB0E"
    },
    "5986": {
      "op": "DUP2"
    },
    "5987": {
      "op": "PUSH2",
      "value": "0x2340"
    },
    "5990": {
      "op": "JUMP"
    },
    "5991": {
      "op": "JUMPDEST"
    },
    "5992": {
      "op": "DUP1"
    },
    "5993": {
      "op": "MLOAD"
    },
    "5994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5998": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6000": {
      "op": "SHL"
    },
    "6001": {
      "op": "SUB"
    },
    "6002": {
      "op": "NOT"
    },
    "6003": {
      "op": "DUP2"
    },
    "6004": {
      "op": "AND"
    },
    "6005": {
      "op": "DUP2"
    },
    "6006": {
      "op": "EQ"
    },
    "6007": {
      "op": "PUSH2",
      "value": "0xB0E"
    },
    "6010": {
      "op": "JUMPI"
    },
    "6011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6013": {
      "op": "DUP1"
    },
    "6014": {
      "op": "REVERT"
    },
    "6015": {
      "op": "JUMPDEST"
    },
    "6016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6018": {
      "op": "DUP1"
    },
    "6019": {
      "op": "DUP4"
    },
    "6020": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6022": {
      "op": "DUP5"
    },
    "6023": {
      "op": "ADD"
    },
    "6024": {
      "op": "SLT"
    },
    "6025": {
      "op": "PUSH2",
      "value": "0x1790"
    },
    "6028": {
      "op": "JUMPI"
    },
    "6029": {
      "op": "DUP2"
    },
    "6030": {
      "op": "DUP3"
    },
    "6031": {
      "op": "REVERT"
    },
    "6032": {
      "op": "JUMPDEST"
    },
    "6033": {
      "op": "POP"
    },
    "6034": {
      "op": "DUP2"
    },
    "6035": {
      "op": "CALLDATALOAD"
    },
    "6036": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6045": {
      "op": "DUP2"
    },
    "6046": {
      "op": "GT"
    },
    "6047": {
      "op": "ISZERO"
    },
    "6048": {
      "op": "PUSH2",
      "value": "0x17A7"
    },
    "6051": {
      "op": "JUMPI"
    },
    "6052": {
      "op": "DUP2"
    },
    "6053": {
      "op": "DUP3"
    },
    "6054": {
      "op": "REVERT"
    },
    "6055": {
      "op": "JUMPDEST"
    },
    "6056": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6058": {
      "op": "DUP4"
    },
    "6059": {
      "op": "ADD"
    },
    "6060": {
      "op": "SWAP2"
    },
    "6061": {
      "op": "POP"
    },
    "6062": {
      "op": "DUP4"
    },
    "6063": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6065": {
      "op": "DUP3"
    },
    "6066": {
      "op": "DUP6"
    },
    "6067": {
      "op": "ADD"
    },
    "6068": {
      "op": "ADD"
    },
    "6069": {
      "op": "GT"
    },
    "6070": {
      "op": "ISZERO"
    },
    "6071": {
      "op": "PUSH2",
      "value": "0x17BF"
    },
    "6074": {
      "op": "JUMPI"
    },
    "6075": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6077": {
      "op": "DUP1"
    },
    "6078": {
      "op": "REVERT"
    },
    "6079": {
      "op": "JUMPDEST"
    },
    "6080": {
      "op": "SWAP3"
    },
    "6081": {
      "op": "POP"
    },
    "6082": {
      "op": "SWAP3"
    },
    "6083": {
      "op": "SWAP1"
    },
    "6084": {
      "op": "POP"
    },
    "6085": {
      "op": "JUMP"
    },
    "6086": {
      "op": "JUMPDEST"
    },
    "6087": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6089": {
      "op": "DUP3"
    },
    "6090": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6092": {
      "op": "DUP4"
    },
    "6093": {
      "op": "ADD"
    },
    "6094": {
      "op": "SLT"
    },
    "6095": {
      "op": "PUSH2",
      "value": "0x17D6"
    },
    "6098": {
      "op": "JUMPI"
    },
    "6099": {
      "op": "DUP1"
    },
    "6100": {
      "op": "DUP2"
    },
    "6101": {
      "op": "REVERT"
    },
    "6102": {
      "op": "JUMPDEST"
    },
    "6103": {
      "op": "DUP2"
    },
    "6104": {
      "op": "MLOAD"
    },
    "6105": {
      "op": "PUSH2",
      "value": "0x17E9"
    },
    "6108": {
      "op": "PUSH2",
      "value": "0x17E4"
    },
    "6111": {
      "op": "DUP3"
    },
    "6112": {
      "op": "PUSH2",
      "value": "0x22F0"
    },
    "6115": {
      "op": "JUMP"
    },
    "6116": {
      "op": "JUMPDEST"
    },
    "6117": {
      "op": "PUSH2",
      "value": "0x22C9"
    },
    "6120": {
      "op": "JUMP"
    },
    "6121": {
      "op": "JUMPDEST"
    },
    "6122": {
      "op": "SWAP2"
    },
    "6123": {
      "op": "POP"
    },
    "6124": {
      "op": "DUP1"
    },
    "6125": {
      "op": "DUP3"
    },
    "6126": {
      "op": "MSTORE"
    },
    "6127": {
      "op": "DUP4"
    },
    "6128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6130": {
      "op": "DUP3"
    },
    "6131": {
      "op": "DUP6"
    },
    "6132": {
      "op": "ADD"
    },
    "6133": {
      "op": "ADD"
    },
    "6134": {
      "op": "GT"
    },
    "6135": {
      "op": "ISZERO"
    },
    "6136": {
      "op": "PUSH2",
      "value": "0x1800"
    },
    "6139": {
      "op": "JUMPI"
    },
    "6140": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6142": {
      "op": "DUP1"
    },
    "6143": {
      "op": "REVERT"
    },
    "6144": {
      "op": "JUMPDEST"
    },
    "6145": {
      "op": "PUSH2",
      "value": "0x1685"
    },
    "6148": {
      "op": "DUP2"
    },
    "6149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6151": {
      "op": "DUP5"
    },
    "6152": {
      "op": "ADD"
    },
    "6153": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6155": {
      "op": "DUP7"
    },
    "6156": {
      "op": "ADD"
    },
    "6157": {
      "op": "PUSH2",
      "value": "0x2314"
    },
    "6160": {
      "op": "JUMP"
    },
    "6161": {
      "op": "JUMPDEST"
    },
    "6162": {
      "op": "DUP1"
    },
    "6163": {
      "op": "MLOAD"
    },
    "6164": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "6166": {
      "op": "DUP2"
    },
    "6167": {
      "op": "SWAP1"
    },
    "6168": {
      "op": "SIGNEXTEND"
    },
    "6169": {
      "op": "DUP2"
    },
    "6170": {
      "op": "EQ"
    },
    "6171": {
      "op": "PUSH2",
      "value": "0xB0E"
    },
    "6174": {
      "op": "JUMPI"
    },
    "6175": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6177": {
      "op": "DUP1"
    },
    "6178": {
      "op": "REVERT"
    },
    "6179": {
      "op": "JUMPDEST"
    },
    "6180": {
      "op": "DUP1"
    },
    "6181": {
      "op": "MLOAD"
    },
    "6182": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6184": {
      "op": "DUP2"
    },
    "6185": {
      "op": "AND"
    },
    "6186": {
      "op": "DUP2"
    },
    "6187": {
      "op": "EQ"
    },
    "6188": {
      "op": "PUSH2",
      "value": "0xB0E"
    },
    "6191": {
      "op": "JUMPI"
    },
    "6192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6194": {
      "op": "DUP1"
    },
    "6195": {
      "op": "REVERT"
    },
    "6196": {
      "op": "JUMPDEST"
    },
    "6197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6201": {
      "op": "DUP3"
    },
    "6202": {
      "op": "DUP5"
    },
    "6203": {
      "op": "SUB"
    },
    "6204": {
      "op": "SLT"
    },
    "6205": {
      "op": "ISZERO"
    },
    "6206": {
      "op": "PUSH2",
      "value": "0x1845"
    },
    "6209": {
      "op": "JUMPI"
    },
    "6210": {
      "op": "DUP1"
    },
    "6211": {
      "op": "DUP2"
    },
    "6212": {
      "op": "REVERT"
    },
    "6213": {
      "op": "JUMPDEST"
    },
    "6214": {
      "op": "DUP2"
    },
    "6215": {
      "op": "CALLDATALOAD"
    },
    "6216": {
      "op": "PUSH2",
      "value": "0x1850"
    },
    "6219": {
      "op": "DUP2"
    },
    "6220": {
      "op": "PUSH2",
      "value": "0x2340"
    },
    "6223": {
      "op": "JUMP"
    },
    "6224": {
      "op": "JUMPDEST"
    },
    "6225": {
      "op": "SWAP4"
    },
    "6226": {
      "op": "SWAP3"
    },
    "6227": {
      "op": "POP"
    },
    "6228": {
      "op": "POP"
    },
    "6229": {
      "op": "POP"
    },
    "6230": {
      "op": "JUMP"
    },
    "6231": {
      "op": "JUMPDEST"
    },
    "6232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6234": {
      "op": "DUP1"
    },
    "6235": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6237": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6239": {
      "op": "DUP5"
    },
    "6240": {
      "op": "DUP7"
    },
    "6241": {
      "op": "SUB"
    },
    "6242": {
      "op": "SLT"
    },
    "6243": {
      "op": "ISZERO"
    },
    "6244": {
      "op": "PUSH2",
      "value": "0x186B"
    },
    "6247": {
      "op": "JUMPI"
    },
    "6248": {
      "op": "DUP2"
    },
    "6249": {
      "op": "DUP3"
    },
    "6250": {
      "op": "REVERT"
    },
    "6251": {
      "op": "JUMPDEST"
    },
    "6252": {
      "op": "DUP4"
    },
    "6253": {
      "op": "CALLDATALOAD"
    },
    "6254": {
      "op": "PUSH2",
      "value": "0x1876"
    },
    "6257": {
      "op": "DUP2"
    },
    "6258": {
      "op": "PUSH2",
      "value": "0x2340"
    },
    "6261": {
      "op": "JUMP"
    },
    "6262": {
      "op": "JUMPDEST"
    },
    "6263": {
      "op": "SWAP3"
    },
    "6264": {
      "op": "POP"
    },
    "6265": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6267": {
      "op": "DUP5"
    },
    "6268": {
      "op": "ADD"
    },
    "6269": {
      "op": "CALLDATALOAD"
    },
    "6270": {
      "op": "SWAP2"
    },
    "6271": {
      "op": "POP"
    },
    "6272": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6274": {
      "op": "DUP5"
    },
    "6275": {
      "op": "ADD"
    },
    "6276": {
      "op": "CALLDATALOAD"
    },
    "6277": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6286": {
      "op": "DUP2"
    },
    "6287": {
      "op": "GT"
    },
    "6288": {
      "op": "ISZERO"
    },
    "6289": {
      "op": "PUSH2",
      "value": "0x1898"
    },
    "6292": {
      "op": "JUMPI"
    },
    "6293": {
      "op": "DUP2"
    },
    "6294": {
      "op": "DUP3"
    },
    "6295": {
      "op": "REVERT"
    },
    "6296": {
      "op": "JUMPDEST"
    },
    "6297": {
      "op": "DUP5"
    },
    "6298": {
      "op": "ADD"
    },
    "6299": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6301": {
      "op": "DUP2"
    },
    "6302": {
      "op": "ADD"
    },
    "6303": {
      "op": "DUP7"
    },
    "6304": {
      "op": "SGT"
    },
    "6305": {
      "op": "PUSH2",
      "value": "0x18A8"
    },
    "6308": {
      "op": "JUMPI"
    },
    "6309": {
      "op": "DUP2"
    },
    "6310": {
      "op": "DUP3"
    },
    "6311": {
      "op": "REVERT"
    },
    "6312": {
      "op": "JUMPDEST"
    },
    "6313": {
      "op": "DUP1"
    },
    "6314": {
      "op": "CALLDATALOAD"
    },
    "6315": {
      "op": "PUSH2",
      "value": "0x18B6"
    },
    "6318": {
      "op": "PUSH2",
      "value": "0x17E4"
    },
    "6321": {
      "op": "DUP3"
    },
    "6322": {
      "op": "PUSH2",
      "value": "0x22F0"
    },
    "6325": {
      "op": "JUMP"
    },
    "6326": {
      "op": "JUMPDEST"
    },
    "6327": {
      "op": "DUP2"
    },
    "6328": {
      "op": "DUP2"
    },
    "6329": {
      "op": "MSTORE"
    },
    "6330": {
      "op": "DUP8"
    },
    "6331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6333": {
      "op": "DUP4"
    },
    "6334": {
      "op": "DUP6"
    },
    "6335": {
      "op": "ADD"
    },
    "6336": {
      "op": "ADD"
    },
    "6337": {
      "op": "GT"
    },
    "6338": {
      "op": "ISZERO"
    },
    "6339": {
      "op": "PUSH2",
      "value": "0x18CA"
    },
    "6342": {
      "op": "JUMPI"
    },
    "6343": {
      "op": "DUP4"
    },
    "6344": {
      "op": "DUP5"
    },
    "6345": {
      "op": "REVERT"
    },
    "6346": {
      "op": "JUMPDEST"
    },
    "6347": {
      "op": "DUP2"
    },
    "6348": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6350": {
      "op": "DUP5"
    },
    "6351": {
      "op": "ADD"
    },
    "6352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6354": {
      "op": "DUP4"
    },
    "6355": {
      "op": "ADD"
    },
    "6356": {
      "op": "CALLDATACOPY"
    },
    "6357": {
      "op": "DUP4"
    },
    "6358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6360": {
      "op": "DUP4"
    },
    "6361": {
      "op": "DUP4"
    },
    "6362": {
      "op": "ADD"
    },
    "6363": {
      "op": "ADD"
    },
    "6364": {
      "op": "MSTORE"
    },
    "6365": {
      "op": "DUP1"
    },
    "6366": {
      "op": "SWAP4"
    },
    "6367": {
      "op": "POP"
    },
    "6368": {
      "op": "POP"
    },
    "6369": {
      "op": "POP"
    },
    "6370": {
      "op": "POP"
    },
    "6371": {
      "op": "SWAP3"
    },
    "6372": {
      "op": "POP"
    },
    "6373": {
      "op": "SWAP3"
    },
    "6374": {
      "op": "POP"
    },
    "6375": {
      "op": "SWAP3"
    },
    "6376": {
      "op": "JUMP"
    },
    "6377": {
      "op": "JUMPDEST"
    },
    "6378": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6382": {
      "op": "DUP3"
    },
    "6383": {
      "op": "DUP5"
    },
    "6384": {
      "op": "SUB"
    },
    "6385": {
      "op": "SLT"
    },
    "6386": {
      "op": "ISZERO"
    },
    "6387": {
      "op": "PUSH2",
      "value": "0x18FA"
    },
    "6390": {
      "op": "JUMPI"
    },
    "6391": {
      "op": "DUP1"
    },
    "6392": {
      "op": "DUP2"
    },
    "6393": {
      "op": "REVERT"
    },
    "6394": {
      "op": "JUMPDEST"
    },
    "6395": {
      "op": "POP"
    },
    "6396": {
      "op": "CALLDATALOAD"
    },
    "6397": {
      "op": "SWAP2"
    },
    "6398": {
      "op": "SWAP1"
    },
    "6399": {
      "op": "POP"
    },
    "6400": {
      "op": "JUMP"
    },
    "6401": {
      "op": "JUMPDEST"
    },
    "6402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6406": {
      "op": "DUP3"
    },
    "6407": {
      "op": "DUP5"
    },
    "6408": {
      "op": "SUB"
    },
    "6409": {
      "op": "SLT"
    },
    "6410": {
      "op": "ISZERO"
    },
    "6411": {
      "op": "PUSH2",
      "value": "0x1912"
    },
    "6414": {
      "op": "JUMPI"
    },
    "6415": {
      "op": "DUP1"
    },
    "6416": {
      "op": "DUP2"
    },
    "6417": {
      "op": "REVERT"
    },
    "6418": {
      "op": "JUMPDEST"
    },
    "6419": {
      "op": "POP"
    },
    "6420": {
      "op": "MLOAD"
    },
    "6421": {
      "op": "SWAP2"
    },
    "6422": {
      "op": "SWAP1"
    },
    "6423": {
      "op": "POP"
    },
    "6424": {
      "op": "JUMP"
    },
    "6425": {
      "op": "JUMPDEST"
    },
    "6426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6428": {
      "op": "DUP1"
    },
    "6429": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6431": {
      "op": "DUP4"
    },
    "6432": {
      "op": "DUP6"
    },
    "6433": {
      "op": "SUB"
    },
    "6434": {
      "op": "SLT"
    },
    "6435": {
      "op": "ISZERO"
    },
    "6436": {
      "op": "PUSH2",
      "value": "0x192B"
    },
    "6439": {
      "op": "JUMPI"
    },
    "6440": {
      "op": "DUP2"
    },
    "6441": {
      "op": "DUP3"
    },
    "6442": {
      "op": "REVERT"
    },
    "6443": {
      "op": "JUMPDEST"
    },
    "6444": {
      "op": "DUP3"
    },
    "6445": {
      "op": "CALLDATALOAD"
    },
    "6446": {
      "op": "SWAP2"
    },
    "6447": {
      "op": "POP"
    },
    "6448": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6450": {
      "op": "DUP4"
    },
    "6451": {
      "op": "ADD"
    },
    "6452": {
      "op": "CALLDATALOAD"
    },
    "6453": {
      "op": "PUSH2",
      "value": "0x193D"
    },
    "6456": {
      "op": "DUP2"
    },
    "6457": {
      "op": "PUSH2",
      "value": "0x2340"
    },
    "6460": {
      "op": "JUMP"
    },
    "6461": {
      "op": "JUMPDEST"
    },
    "6462": {
      "op": "DUP1"
    },
    "6463": {
      "op": "SWAP2"
    },
    "6464": {
      "op": "POP"
    },
    "6465": {
      "op": "POP"
    },
    "6466": {
      "op": "SWAP3"
    },
    "6467": {
      "op": "POP"
    },
    "6468": {
      "op": "SWAP3"
    },
    "6469": {
      "op": "SWAP1"
    },
    "6470": {
      "op": "POP"
    },
    "6471": {
      "op": "JUMP"
    },
    "6472": {
      "op": "JUMPDEST"
    },
    "6473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6475": {
      "op": "DUP1"
    },
    "6476": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6478": {
      "op": "DUP4"
    },
    "6479": {
      "op": "DUP6"
    },
    "6480": {
      "op": "SUB"
    },
    "6481": {
      "op": "SLT"
    },
    "6482": {
      "op": "ISZERO"
    },
    "6483": {
      "op": "PUSH2",
      "value": "0x195A"
    },
    "6486": {
      "op": "JUMPI"
    },
    "6487": {
      "op": "DUP2"
    },
    "6488": {
      "op": "DUP3"
    },
    "6489": {
      "op": "REVERT"
    },
    "6490": {
      "op": "JUMPDEST"
    },
    "6491": {
      "op": "POP"
    },
    "6492": {
      "op": "POP"
    },
    "6493": {
      "op": "DUP1"
    },
    "6494": {
      "op": "CALLDATALOAD"
    },
    "6495": {
      "op": "SWAP3"
    },
    "6496": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6498": {
      "op": "SWAP1"
    },
    "6499": {
      "op": "SWAP2"
    },
    "6500": {
      "op": "ADD"
    },
    "6501": {
      "op": "CALLDATALOAD"
    },
    "6502": {
      "op": "SWAP2"
    },
    "6503": {
      "op": "POP"
    },
    "6504": {
      "op": "JUMP"
    },
    "6505": {
      "op": "JUMPDEST"
    },
    "6506": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6510": {
      "op": "DUP3"
    },
    "6511": {
      "op": "DUP5"
    },
    "6512": {
      "op": "SUB"
    },
    "6513": {
      "op": "SLT"
    },
    "6514": {
      "op": "ISZERO"
    },
    "6515": {
      "op": "PUSH2",
      "value": "0x197A"
    },
    "6518": {
      "op": "JUMPI"
    },
    "6519": {
      "op": "DUP1"
    },
    "6520": {
      "op": "DUP2"
    },
    "6521": {
      "op": "REVERT"
    },
    "6522": {
      "op": "JUMPDEST"
    },
    "6523": {
      "op": "DUP2"
    },
    "6524": {
      "op": "MLOAD"
    },
    "6525": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6534": {
      "op": "DUP2"
    },
    "6535": {
      "op": "GT"
    },
    "6536": {
      "op": "ISZERO"
    },
    "6537": {
      "op": "PUSH2",
      "value": "0x1990"
    },
    "6540": {
      "op": "JUMPI"
    },
    "6541": {
      "op": "DUP2"
    },
    "6542": {
      "op": "DUP3"
    },
    "6543": {
      "op": "REVERT"
    },
    "6544": {
      "op": "JUMPDEST"
    },
    "6545": {
      "op": "PUSH2",
      "value": "0x199C"
    },
    "6548": {
      "op": "DUP5"
    },
    "6549": {
      "op": "DUP3"
    },
    "6550": {
      "op": "DUP6"
    },
    "6551": {
      "op": "ADD"
    },
    "6552": {
      "op": "PUSH2",
      "value": "0x17C6"
    },
    "6555": {
      "op": "JUMP"
    },
    "6556": {
      "op": "JUMPDEST"
    },
    "6557": {
      "op": "SWAP5"
    },
    "6558": {
      "op": "SWAP4"
    },
    "6559": {
      "op": "POP"
    },
    "6560": {
      "op": "POP"
    },
    "6561": {
      "op": "POP"
    },
    "6562": {
      "op": "POP"
    },
    "6563": {
      "op": "JUMP"
    },
    "6564": {
      "op": "JUMPDEST"
    },
    "6565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6567": {
      "op": "DUP1"
    },
    "6568": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6570": {
      "op": "DUP4"
    },
    "6571": {
      "op": "DUP6"
    },
    "6572": {
      "op": "SUB"
    },
    "6573": {
      "op": "SLT"
    },
    "6574": {
      "op": "ISZERO"
    },
    "6575": {
      "op": "PUSH2",
      "value": "0x19B6"
    },
    "6578": {
      "op": "JUMPI"
    },
    "6579": {
      "op": "DUP2"
    },
    "6580": {
      "op": "DUP3"
    },
    "6581": {
      "op": "REVERT"
    },
    "6582": {
      "op": "JUMPDEST"
    },
    "6583": {
      "op": "DUP3"
    },
    "6584": {
      "op": "MLOAD"
    },
    "6585": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6594": {
      "op": "DUP1"
    },
    "6595": {
      "op": "DUP3"
    },
    "6596": {
      "op": "GT"
    },
    "6597": {
      "op": "ISZERO"
    },
    "6598": {
      "op": "PUSH2",
      "value": "0x19CD"
    },
    "6601": {
      "op": "JUMPI"
    },
    "6602": {
      "op": "DUP4"
    },
    "6603": {
      "op": "DUP5"
    },
    "6604": {
      "op": "REVERT"
    },
    "6605": {
      "op": "JUMPDEST"
    },
    "6606": {
      "op": "PUSH2",
      "value": "0x19D9"
    },
    "6609": {
      "op": "DUP7"
    },
    "6610": {
      "op": "DUP4"
    },
    "6611": {
      "op": "DUP8"
    },
    "6612": {
      "op": "ADD"
    },
    "6613": {
      "op": "PUSH2",
      "value": "0x17C6"
    },
    "6616": {
      "op": "JUMP"
    },
    "6617": {
      "op": "JUMPDEST"
    },
    "6618": {
      "op": "SWAP4"
    },
    "6619": {
      "op": "POP"
    },
    "6620": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6622": {
      "op": "DUP6"
    },
    "6623": {
      "op": "ADD"
    },
    "6624": {
      "op": "MLOAD"
    },
    "6625": {
      "op": "SWAP2"
    },
    "6626": {
      "op": "POP"
    },
    "6627": {
      "op": "DUP1"
    },
    "6628": {
      "op": "DUP3"
    },
    "6629": {
      "op": "GT"
    },
    "6630": {
      "op": "ISZERO"
    },
    "6631": {
      "op": "PUSH2",
      "value": "0x19EE"
    },
    "6634": {
      "op": "JUMPI"
    },
    "6635": {
      "op": "DUP3"
    },
    "6636": {
      "op": "DUP4"
    },
    "6637": {
      "op": "REVERT"
    },
    "6638": {
      "op": "JUMPDEST"
    },
    "6639": {
      "op": "POP"
    },
    "6640": {
      "op": "PUSH2",
      "value": "0x19FB"
    },
    "6643": {
      "op": "DUP6"
    },
    "6644": {
      "op": "DUP3"
    },
    "6645": {
      "op": "DUP7"
    },
    "6646": {
      "op": "ADD"
    },
    "6647": {
      "op": "PUSH2",
      "value": "0x17C6"
    },
    "6650": {
      "op": "JUMP"
    },
    "6651": {
      "op": "JUMPDEST"
    },
    "6652": {
      "op": "SWAP2"
    },
    "6653": {
      "op": "POP"
    },
    "6654": {
      "op": "POP"
    },
    "6655": {
      "op": "SWAP3"
    },
    "6656": {
      "op": "POP"
    },
    "6657": {
      "op": "SWAP3"
    },
    "6658": {
      "op": "SWAP1"
    },
    "6659": {
      "op": "POP"
    },
    "6660": {
      "op": "JUMP"
    },
    "6661": {
      "op": "JUMPDEST"
    },
    "6662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6664": {
      "op": "DUP1"
    },
    "6665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6667": {
      "op": "DUP1"
    },
    "6668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6670": {
      "op": "DUP1"
    },
    "6671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6675": {
      "op": "DUP9"
    },
    "6676": {
      "op": "DUP11"
    },
    "6677": {
      "op": "SUB"
    },
    "6678": {
      "op": "SLT"
    },
    "6679": {
      "op": "ISZERO"
    },
    "6680": {
      "op": "PUSH2",
      "value": "0x1A1F"
    },
    "6683": {
      "op": "JUMPI"
    },
    "6684": {
      "op": "DUP5"
    },
    "6685": {
      "op": "DUP6"
    },
    "6686": {
      "op": "REVERT"
    },
    "6687": {
      "op": "JUMPDEST"
    },
    "6688": {
      "op": "DUP8"
    },
    "6689": {
      "op": "CALLDATALOAD"
    },
    "6690": {
      "op": "PUSH2",
      "value": "0x1A2A"
    },
    "6693": {
      "op": "DUP2"
    },
    "6694": {
      "op": "PUSH2",
      "value": "0x2340"
    },
    "6697": {
      "op": "JUMP"
    },
    "6698": {
      "op": "JUMPDEST"
    },
    "6699": {
      "op": "SWAP7"
    },
    "6700": {
      "op": "POP"
    },
    "6701": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6703": {
      "op": "DUP9"
    },
    "6704": {
      "op": "ADD"
    },
    "6705": {
      "op": "CALLDATALOAD"
    },
    "6706": {
      "op": "PUSH2",
      "value": "0x1A3A"
    },
    "6709": {
      "op": "DUP2"
    },
    "6710": {
      "op": "PUSH2",
      "value": "0x2340"
    },
    "6713": {
      "op": "JUMP"
    },
    "6714": {
      "op": "JUMPDEST"
    },
    "6715": {
      "op": "SWAP6"
    },
    "6716": {
      "op": "POP"
    },
    "6717": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6719": {
      "op": "DUP9"
    },
    "6720": {
      "op": "ADD"
    },
    "6721": {
      "op": "CALLDATALOAD"
    },
    "6722": {
      "op": "SWAP5"
    },
    "6723": {
      "op": "POP"
    },
    "6724": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6726": {
      "op": "DUP9"
    },
    "6727": {
      "op": "ADD"
    },
    "6728": {
      "op": "CALLDATALOAD"
    },
    "6729": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6738": {
      "op": "DUP1"
    },
    "6739": {
      "op": "DUP3"
    },
    "6740": {
      "op": "GT"
    },
    "6741": {
      "op": "ISZERO"
    },
    "6742": {
      "op": "PUSH2",
      "value": "0x1A5D"
    },
    "6745": {
      "op": "JUMPI"
    },
    "6746": {
      "op": "DUP5"
    },
    "6747": {
      "op": "DUP6"
    },
    "6748": {
      "op": "REVERT"
    },
    "6749": {
      "op": "JUMPDEST"
    },
    "6750": {
      "op": "PUSH2",
      "value": "0x1A69"
    },
    "6753": {
      "op": "DUP12"
    },
    "6754": {
      "op": "DUP4"
    },
    "6755": {
      "op": "DUP13"
    },
    "6756": {
      "op": "ADD"
    },
    "6757": {
      "op": "PUSH2",
      "value": "0x177F"
    },
    "6760": {
      "op": "JUMP"
    },
    "6761": {
      "op": "JUMPDEST"
    },
    "6762": {
      "op": "SWAP1"
    },
    "6763": {
      "op": "SWAP7"
    },
    "6764": {
      "op": "POP"
    },
    "6765": {
      "op": "SWAP5"
    },
    "6766": {
      "op": "POP"
    },
    "6767": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6769": {
      "op": "DUP11"
    },
    "6770": {
      "op": "ADD"
    },
    "6771": {
      "op": "CALLDATALOAD"
    },
    "6772": {
      "op": "SWAP2"
    },
    "6773": {
      "op": "POP"
    },
    "6774": {
      "op": "DUP1"
    },
    "6775": {
      "op": "DUP3"
    },
    "6776": {
      "op": "GT"
    },
    "6777": {
      "op": "ISZERO"
    },
    "6778": {
      "op": "PUSH2",
      "value": "0x1A81"
    },
    "6781": {
      "op": "JUMPI"
    },
    "6782": {
      "op": "DUP4"
    },
    "6783": {
      "op": "DUP5"
    },
    "6784": {
      "op": "REVERT"
    },
    "6785": {
      "op": "JUMPDEST"
    },
    "6786": {
      "op": "POP"
    },
    "6787": {
      "op": "PUSH2",
      "value": "0x1A8E"
    },
    "6790": {
      "op": "DUP11"
    },
    "6791": {
      "op": "DUP3"
    },
    "6792": {
      "op": "DUP12"
    },
    "6793": {
      "op": "ADD"
    },
    "6794": {
      "op": "PUSH2",
      "value": "0x177F"
    },
    "6797": {
      "op": "JUMP"
    },
    "6798": {
      "op": "JUMPDEST"
    },
    "6799": {
      "op": "SWAP9"
    },
    "6800": {
      "op": "SWAP12"
    },
    "6801": {
      "op": "SWAP8"
    },
    "6802": {
      "op": "SWAP11"
    },
    "6803": {
      "op": "POP"
    },
    "6804": {
      "op": "SWAP6"
    },
    "6805": {
      "op": "SWAP9"
    },
    "6806": {
      "op": "POP"
    },
    "6807": {
      "op": "SWAP4"
    },
    "6808": {
      "op": "SWAP7"
    },
    "6809": {
      "op": "SWAP3"
    },
    "6810": {
      "op": "SWAP6"
    },
    "6811": {
      "op": "SWAP3"
    },
    "6812": {
      "op": "SWAP4"
    },
    "6813": {
      "op": "POP"
    },
    "6814": {
      "op": "POP"
    },
    "6815": {
      "op": "POP"
    },
    "6816": {
      "op": "JUMP"
    },
    "6817": {
      "op": "JUMPDEST"
    },
    "6818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6820": {
      "op": "DUP1"
    },
    "6821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6823": {
      "op": "DUP1"
    },
    "6824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6826": {
      "op": "DUP1"
    },
    "6827": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6829": {
      "op": "DUP1"
    },
    "6830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6832": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6834": {
      "op": "DUP11"
    },
    "6835": {
      "op": "DUP13"
    },
    "6836": {
      "op": "SUB"
    },
    "6837": {
      "op": "SLT"
    },
    "6838": {
      "op": "ISZERO"
    },
    "6839": {
      "op": "PUSH2",
      "value": "0x1ABE"
    },
    "6842": {
      "op": "JUMPI"
    },
    "6843": {
      "op": "DUP3"
    },
    "6844": {
      "op": "DUP4"
    },
    "6845": {
      "op": "REVERT"
    },
    "6846": {
      "op": "JUMPDEST"
    },
    "6847": {
      "op": "DUP10"
    },
    "6848": {
      "op": "CALLDATALOAD"
    },
    "6849": {
      "op": "PUSH2",
      "value": "0x1AC9"
    },
    "6852": {
      "op": "DUP2"
    },
    "6853": {
      "op": "PUSH2",
      "value": "0x2340"
    },
    "6856": {
      "op": "JUMP"
    },
    "6857": {
      "op": "JUMPDEST"
    },
    "6858": {
      "op": "SWAP9"
    },
    "6859": {
      "op": "POP"
    },
    "6860": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6862": {
      "op": "DUP11"
    },
    "6863": {
      "op": "ADD"
    },
    "6864": {
      "op": "CALLDATALOAD"
    },
    "6865": {
      "op": "PUSH2",
      "value": "0x1AD9"
    },
    "6868": {
      "op": "DUP2"
    },
    "6869": {
      "op": "PUSH2",
      "value": "0x2340"
    },
    "6872": {
      "op": "JUMP"
    },
    "6873": {
      "op": "JUMPDEST"
    },
    "6874": {
      "op": "SWAP8"
    },
    "6875": {
      "op": "POP"
    },
    "6876": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6878": {
      "op": "DUP11"
    },
    "6879": {
      "op": "ADD"
    },
    "6880": {
      "op": "CALLDATALOAD"
    },
    "6881": {
      "op": "SWAP7"
    },
    "6882": {
      "op": "POP"
    },
    "6883": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6885": {
      "op": "DUP11"
    },
    "6886": {
      "op": "ADD"
    },
    "6887": {
      "op": "CALLDATALOAD"
    },
    "6888": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6897": {
      "op": "DUP1"
    },
    "6898": {
      "op": "DUP3"
    },
    "6899": {
      "op": "GT"
    },
    "6900": {
      "op": "ISZERO"
    },
    "6901": {
      "op": "PUSH2",
      "value": "0x1AFC"
    },
    "6904": {
      "op": "JUMPI"
    },
    "6905": {
      "op": "DUP5"
    },
    "6906": {
      "op": "DUP6"
    },
    "6907": {
      "op": "REVERT"
    },
    "6908": {
      "op": "JUMPDEST"
    },
    "6909": {
      "op": "PUSH2",
      "value": "0x1B08"
    },
    "6912": {
      "op": "DUP14"
    },
    "6913": {
      "op": "DUP4"
    },
    "6914": {
      "op": "DUP15"
    },
    "6915": {
      "op": "ADD"
    },
    "6916": {
      "op": "PUSH2",
      "value": "0x177F"
    },
    "6919": {
      "op": "JUMP"
    },
    "6920": {
      "op": "JUMPDEST"
    },
    "6921": {
      "op": "SWAP1"
    },
    "6922": {
      "op": "SWAP9"
    },
    "6923": {
      "op": "POP"
    },
    "6924": {
      "op": "SWAP7"
    },
    "6925": {
      "op": "POP"
    },
    "6926": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6928": {
      "op": "DUP13"
    },
    "6929": {
      "op": "ADD"
    },
    "6930": {
      "op": "CALLDATALOAD"
    },
    "6931": {
      "op": "SWAP2"
    },
    "6932": {
      "op": "POP"
    },
    "6933": {
      "op": "DUP1"
    },
    "6934": {
      "op": "DUP3"
    },
    "6935": {
      "op": "GT"
    },
    "6936": {
      "op": "ISZERO"
    },
    "6937": {
      "op": "PUSH2",
      "value": "0x1B20"
    },
    "6940": {
      "op": "JUMPI"
    },
    "6941": {
      "op": "DUP5"
    },
    "6942": {
      "op": "DUP6"
    },
    "6943": {
      "op": "REVERT"
    },
    "6944": {
      "op": "JUMPDEST"
    },
    "6945": {
      "op": "PUSH2",
      "value": "0x1B2C"
    },
    "6948": {
      "op": "DUP14"
    },
    "6949": {
      "op": "DUP4"
    },
    "6950": {
      "op": "DUP15"
    },
    "6951": {
      "op": "ADD"
    },
    "6952": {
      "op": "PUSH2",
      "value": "0x177F"
    },
    "6955": {
      "op": "JUMP"
    },
    "6956": {
      "op": "JUMPDEST"
    },
    "6957": {
      "op": "SWAP1"
    },
    "6958": {
      "op": "SWAP7"
    },
    "6959": {
      "op": "POP"
    },
    "6960": {
      "op": "SWAP5"
    },
    "6961": {
      "op": "POP"
    },
    "6962": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6964": {
      "op": "DUP13"
    },
    "6965": {
      "op": "ADD"
    },
    "6966": {
      "op": "CALLDATALOAD"
    },
    "6967": {
      "op": "SWAP2"
    },
    "6968": {
      "op": "POP"
    },
    "6969": {
      "op": "DUP1"
    },
    "6970": {
      "op": "DUP3"
    },
    "6971": {
      "op": "GT"
    },
    "6972": {
      "op": "ISZERO"
    },
    "6973": {
      "op": "PUSH2",
      "value": "0x1B44"
    },
    "6976": {
      "op": "JUMPI"
    },
    "6977": {
      "op": "DUP4"
    },
    "6978": {
      "op": "DUP5"
    },
    "6979": {
      "op": "REVERT"
    },
    "6980": {
      "op": "JUMPDEST"
    },
    "6981": {
      "op": "POP"
    },
    "6982": {
      "op": "PUSH2",
      "value": "0x1B51"
    },
    "6985": {
      "op": "DUP13"
    },
    "6986": {
      "op": "DUP3"
    },
    "6987": {
      "op": "DUP14"
    },
    "6988": {
      "op": "ADD"
    },
    "6989": {
      "op": "PUSH2",
      "value": "0x177F"
    },
    "6992": {
      "op": "JUMP"
    },
    "6993": {
      "op": "JUMPDEST"
    },
    "6994": {
      "op": "SWAP2"
    },
    "6995": {
      "op": "POP"
    },
    "6996": {
      "op": "DUP1"
    },
    "6997": {
      "op": "SWAP4"
    },
    "6998": {
      "op": "POP"
    },
    "6999": {
      "op": "POP"
    },
    "7000": {
      "op": "DUP1"
    },
    "7001": {
      "op": "SWAP2"
    },
    "7002": {
      "op": "POP"
    },
    "7003": {
      "op": "POP"
    },
    "7004": {
      "op": "SWAP3"
    },
    "7005": {
      "op": "SWAP6"
    },
    "7006": {
      "op": "SWAP9"
    },
    "7007": {
      "op": "POP"
    },
    "7008": {
      "op": "SWAP3"
    },
    "7009": {
      "op": "SWAP6"
    },
    "7010": {
      "op": "SWAP9"
    },
    "7011": {
      "op": "POP"
    },
    "7012": {
      "op": "SWAP3"
    },
    "7013": {
      "op": "SWAP6"
    },
    "7014": {
      "op": "SWAP9"
    },
    "7015": {
      "op": "JUMP"
    },
    "7016": {
      "op": "JUMPDEST"
    },
    "7017": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7021": {
      "op": "DUP3"
    },
    "7022": {
      "op": "DUP5"
    },
    "7023": {
      "op": "SUB"
    },
    "7024": {
      "op": "SLT"
    },
    "7025": {
      "op": "ISZERO"
    },
    "7026": {
      "op": "PUSH2",
      "value": "0x1B79"
    },
    "7029": {
      "op": "JUMPI"
    },
    "7030": {
      "op": "DUP1"
    },
    "7031": {
      "op": "DUP2"
    },
    "7032": {
      "op": "REVERT"
    },
    "7033": {
      "op": "JUMPDEST"
    },
    "7034": {
      "op": "PUSH2",
      "value": "0xB0B"
    },
    "7037": {
      "op": "DUP4"
    },
    "7038": {
      "op": "DUP4"
    },
    "7039": {
      "op": "PUSH2",
      "value": "0x1811"
    },
    "7042": {
      "op": "JUMP"
    },
    "7043": {
      "op": "JUMPDEST"
    },
    "7044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7048": {
      "op": "DUP3"
    },
    "7049": {
      "op": "DUP5"
    },
    "7050": {
      "op": "SUB"
    },
    "7051": {
      "op": "SLT"
    },
    "7052": {
      "op": "ISZERO"
    },
    "7053": {
      "op": "PUSH2",
      "value": "0x1B94"
    },
    "7056": {
      "op": "JUMPI"
    },
    "7057": {
      "op": "DUP1"
    },
    "7058": {
      "op": "DUP2"
    },
    "7059": {
      "op": "REVERT"
    },
    "7060": {
      "op": "JUMPDEST"
    },
    "7061": {
      "op": "DUP2"
    },
    "7062": {
      "op": "MLOAD"
    },
    "7063": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7072": {
      "op": "DUP1"
    },
    "7073": {
      "op": "DUP3"
    },
    "7074": {
      "op": "GT"
    },
    "7075": {
      "op": "ISZERO"
    },
    "7076": {
      "op": "PUSH2",
      "value": "0x1BAB"
    },
    "7079": {
      "op": "JUMPI"
    },
    "7080": {
      "op": "DUP3"
    },
    "7081": {
      "op": "DUP4"
    },
    "7082": {
      "op": "REVERT"
    },
    "7083": {
      "op": "JUMPDEST"
    },
    "7084": {
      "op": "DUP2"
    },
    "7085": {
      "op": "DUP5"
    },
    "7086": {
      "op": "ADD"
    },
    "7087": {
      "op": "SWAP2"
    },
    "7088": {
      "op": "POP"
    },
    "7089": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "7092": {
      "op": "DUP1"
    },
    "7093": {
      "op": "DUP4"
    },
    "7094": {
      "op": "DUP8"
    },
    "7095": {
      "op": "SUB"
    },
    "7096": {
      "op": "SLT"
    },
    "7097": {
      "op": "ISZERO"
    },
    "7098": {
      "op": "PUSH2",
      "value": "0x1BC1"
    },
    "7101": {
      "op": "JUMPI"
    },
    "7102": {
      "op": "DUP4"
    },
    "7103": {
      "op": "DUP5"
    },
    "7104": {
      "op": "REVERT"
    },
    "7105": {
      "op": "JUMPDEST"
    },
    "7106": {
      "op": "PUSH2",
      "value": "0x1BCA"
    },
    "7109": {
      "op": "DUP2"
    },
    "7110": {
      "op": "PUSH2",
      "value": "0x22C9"
    },
    "7113": {
      "op": "JUMP"
    },
    "7114": {
      "op": "JUMPDEST"
    },
    "7115": {
      "op": "SWAP1"
    },
    "7116": {
      "op": "POP"
    },
    "7117": {
      "op": "PUSH2",
      "value": "0x1BD6"
    },
    "7120": {
      "op": "DUP7"
    },
    "7121": {
      "op": "DUP5"
    },
    "7122": {
      "op": "PUSH2",
      "value": "0x1823"
    },
    "7125": {
      "op": "JUMP"
    },
    "7126": {
      "op": "JUMPDEST"
    },
    "7127": {
      "op": "DUP2"
    },
    "7128": {
      "op": "MSTORE"
    },
    "7129": {
      "op": "PUSH2",
      "value": "0x1BE5"
    },
    "7132": {
      "op": "DUP7"
    },
    "7133": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7135": {
      "op": "DUP6"
    },
    "7136": {
      "op": "ADD"
    },
    "7137": {
      "op": "PUSH2",
      "value": "0x1823"
    },
    "7140": {
      "op": "JUMP"
    },
    "7141": {
      "op": "JUMPDEST"
    },
    "7142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7144": {
      "op": "DUP3"
    },
    "7145": {
      "op": "ADD"
    },
    "7146": {
      "op": "MSTORE"
    },
    "7147": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7149": {
      "op": "DUP4"
    },
    "7150": {
      "op": "ADD"
    },
    "7151": {
      "op": "MLOAD"
    },
    "7152": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7154": {
      "op": "DUP3"
    },
    "7155": {
      "op": "ADD"
    },
    "7156": {
      "op": "MSTORE"
    },
    "7157": {
      "op": "PUSH2",
      "value": "0x1C01"
    },
    "7160": {
      "op": "DUP7"
    },
    "7161": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7163": {
      "op": "DUP6"
    },
    "7164": {
      "op": "ADD"
    },
    "7165": {
      "op": "PUSH2",
      "value": "0x175C"
    },
    "7168": {
      "op": "JUMP"
    },
    "7169": {
      "op": "JUMPDEST"
    },
    "7170": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7172": {
      "op": "DUP3"
    },
    "7173": {
      "op": "ADD"
    },
    "7174": {
      "op": "MSTORE"
    },
    "7175": {
      "op": "PUSH2",
      "value": "0x1C13"
    },
    "7178": {
      "op": "DUP7"
    },
    "7179": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7181": {
      "op": "DUP6"
    },
    "7182": {
      "op": "ADD"
    },
    "7183": {
      "op": "PUSH2",
      "value": "0x1767"
    },
    "7186": {
      "op": "JUMP"
    },
    "7187": {
      "op": "JUMPDEST"
    },
    "7188": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7190": {
      "op": "DUP3"
    },
    "7191": {
      "op": "ADD"
    },
    "7192": {
      "op": "MSTORE"
    },
    "7193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7195": {
      "op": "DUP4"
    },
    "7196": {
      "op": "ADD"
    },
    "7197": {
      "op": "MLOAD"
    },
    "7198": {
      "op": "DUP3"
    },
    "7199": {
      "op": "DUP2"
    },
    "7200": {
      "op": "GT"
    },
    "7201": {
      "op": "ISZERO"
    },
    "7202": {
      "op": "PUSH2",
      "value": "0x1C29"
    },
    "7205": {
      "op": "JUMPI"
    },
    "7206": {
      "op": "DUP5"
    },
    "7207": {
      "op": "DUP6"
    },
    "7208": {
      "op": "REVERT"
    },
    "7209": {
      "op": "JUMPDEST"
    },
    "7210": {
      "op": "PUSH2",
      "value": "0x1C35"
    },
    "7213": {
      "op": "DUP8"
    },
    "7214": {
      "op": "DUP3"
    },
    "7215": {
      "op": "DUP7"
    },
    "7216": {
      "op": "ADD"
    },
    "7217": {
      "op": "PUSH2",
      "value": "0x17C6"
    },
    "7220": {
      "op": "JUMP"
    },
    "7221": {
      "op": "JUMPDEST"
    },
    "7222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7224": {
      "op": "DUP4"
    },
    "7225": {
      "op": "ADD"
    },
    "7226": {
      "op": "MSTORE"
    },
    "7227": {
      "op": "POP"
    },
    "7228": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7230": {
      "op": "DUP4"
    },
    "7231": {
      "op": "ADD"
    },
    "7232": {
      "op": "MLOAD"
    },
    "7233": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7235": {
      "op": "DUP3"
    },
    "7236": {
      "op": "ADD"
    },
    "7237": {
      "op": "MSTORE"
    },
    "7238": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7240": {
      "op": "DUP4"
    },
    "7241": {
      "op": "ADD"
    },
    "7242": {
      "op": "MLOAD"
    },
    "7243": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7245": {
      "op": "DUP3"
    },
    "7246": {
      "op": "ADD"
    },
    "7247": {
      "op": "MSTORE"
    },
    "7248": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "7251": {
      "op": "SWAP2"
    },
    "7252": {
      "op": "POP"
    },
    "7253": {
      "op": "DUP2"
    },
    "7254": {
      "op": "DUP4"
    },
    "7255": {
      "op": "ADD"
    },
    "7256": {
      "op": "MLOAD"
    },
    "7257": {
      "op": "DUP3"
    },
    "7258": {
      "op": "DUP3"
    },
    "7259": {
      "op": "ADD"
    },
    "7260": {
      "op": "MSTORE"
    },
    "7261": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "7264": {
      "op": "SWAP2"
    },
    "7265": {
      "op": "POP"
    },
    "7266": {
      "op": "PUSH2",
      "value": "0x1C6D"
    },
    "7269": {
      "op": "DUP7"
    },
    "7270": {
      "op": "DUP4"
    },
    "7271": {
      "op": "DUP6"
    },
    "7272": {
      "op": "ADD"
    },
    "7273": {
      "op": "PUSH2",
      "value": "0x175C"
    },
    "7276": {
      "op": "JUMP"
    },
    "7277": {
      "op": "JUMPDEST"
    },
    "7278": {
      "op": "SWAP2"
    },
    "7279": {
      "op": "DUP2"
    },
    "7280": {
      "op": "ADD"
    },
    "7281": {
      "op": "SWAP2"
    },
    "7282": {
      "op": "SWAP1"
    },
    "7283": {
      "op": "SWAP2"
    },
    "7284": {
      "op": "MSTORE"
    },
    "7285": {
      "op": "SWAP5"
    },
    "7286": {
      "op": "SWAP4"
    },
    "7287": {
      "op": "POP"
    },
    "7288": {
      "op": "POP"
    },
    "7289": {
      "op": "POP"
    },
    "7290": {
      "op": "POP"
    },
    "7291": {
      "op": "JUMP"
    },
    "7292": {
      "op": "JUMPDEST"
    },
    "7293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7295": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7297": {
      "op": "DUP3"
    },
    "7298": {
      "op": "DUP5"
    },
    "7299": {
      "op": "SUB"
    },
    "7300": {
      "op": "SLT"
    },
    "7301": {
      "op": "ISZERO"
    },
    "7302": {
      "op": "PUSH2",
      "value": "0x1C8D"
    },
    "7305": {
      "op": "JUMPI"
    },
    "7306": {
      "op": "DUP1"
    },
    "7307": {
      "op": "DUP2"
    },
    "7308": {
      "op": "REVERT"
    },
    "7309": {
      "op": "JUMPDEST"
    },
    "7310": {
      "op": "PUSH2",
      "value": "0x1C97"
    },
    "7313": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7315": {
      "op": "PUSH2",
      "value": "0x22C9"
    },
    "7318": {
      "op": "JUMP"
    },
    "7319": {
      "op": "JUMPDEST"
    },
    "7320": {
      "op": "DUP3"
    },
    "7321": {
      "op": "MLOAD"
    },
    "7322": {
      "op": "DUP2"
    },
    "7323": {
      "op": "MSTORE"
    },
    "7324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7326": {
      "op": "DUP4"
    },
    "7327": {
      "op": "ADD"
    },
    "7328": {
      "op": "MLOAD"
    },
    "7329": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7331": {
      "op": "DUP3"
    },
    "7332": {
      "op": "ADD"
    },
    "7333": {
      "op": "MSTORE"
    },
    "7334": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7336": {
      "op": "DUP4"
    },
    "7337": {
      "op": "ADD"
    },
    "7338": {
      "op": "MLOAD"
    },
    "7339": {
      "op": "PUSH2",
      "value": "0x1CB3"
    },
    "7342": {
      "op": "DUP2"
    },
    "7343": {
      "op": "PUSH2",
      "value": "0x2340"
    },
    "7346": {
      "op": "JUMP"
    },
    "7347": {
      "op": "JUMPDEST"
    },
    "7348": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7350": {
      "op": "DUP3"
    },
    "7351": {
      "op": "ADD"
    },
    "7352": {
      "op": "MSTORE"
    },
    "7353": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7355": {
      "op": "DUP4"
    },
    "7356": {
      "op": "ADD"
    },
    "7357": {
      "op": "MLOAD"
    },
    "7358": {
      "op": "PUSH2",
      "value": "0x1CC6"
    },
    "7361": {
      "op": "DUP2"
    },
    "7362": {
      "op": "PUSH2",
      "value": "0x2340"
    },
    "7365": {
      "op": "JUMP"
    },
    "7366": {
      "op": "JUMPDEST"
    },
    "7367": {
      "op": "DUP1"
    },
    "7368": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7370": {
      "op": "DUP4"
    },
    "7371": {
      "op": "ADD"
    },
    "7372": {
      "op": "MSTORE"
    },
    "7373": {
      "op": "POP"
    },
    "7374": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7376": {
      "op": "DUP4"
    },
    "7377": {
      "op": "ADD"
    },
    "7378": {
      "op": "MLOAD"
    },
    "7379": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7381": {
      "op": "DUP3"
    },
    "7382": {
      "op": "ADD"
    },
    "7383": {
      "op": "MSTORE"
    },
    "7384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7386": {
      "op": "DUP4"
    },
    "7387": {
      "op": "ADD"
    },
    "7388": {
      "op": "MLOAD"
    },
    "7389": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7391": {
      "op": "DUP3"
    },
    "7392": {
      "op": "ADD"
    },
    "7393": {
      "op": "MSTORE"
    },
    "7394": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7396": {
      "op": "DUP4"
    },
    "7397": {
      "op": "ADD"
    },
    "7398": {
      "op": "MLOAD"
    },
    "7399": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7401": {
      "op": "DUP3"
    },
    "7402": {
      "op": "ADD"
    },
    "7403": {
      "op": "MSTORE"
    },
    "7404": {
      "op": "DUP1"
    },
    "7405": {
      "op": "SWAP2"
    },
    "7406": {
      "op": "POP"
    },
    "7407": {
      "op": "POP"
    },
    "7408": {
      "op": "SWAP3"
    },
    "7409": {
      "op": "SWAP2"
    },
    "7410": {
      "op": "POP"
    },
    "7411": {
      "op": "POP"
    },
    "7412": {
      "op": "JUMP"
    },
    "7413": {
      "op": "JUMPDEST"
    },
    "7414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7416": {
      "op": "DUP1"
    },
    "7417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7419": {
      "op": "DUP1"
    },
    "7420": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7422": {
      "op": "DUP6"
    },
    "7423": {
      "op": "DUP8"
    },
    "7424": {
      "op": "SUB"
    },
    "7425": {
      "op": "SLT"
    },
    "7426": {
      "op": "ISZERO"
    },
    "7427": {
      "op": "PUSH2",
      "value": "0x1D0A"
    },
    "7430": {
      "op": "JUMPI"
    },
    "7431": {
      "op": "DUP2"
    },
    "7432": {
      "op": "DUP3"
    },
    "7433": {
      "op": "REVERT"
    },
    "7434": {
      "op": "JUMPDEST"
    },
    "7435": {
      "op": "DUP5"
    },
    "7436": {
      "op": "MLOAD"
    },
    "7437": {
      "op": "SWAP4"
    },
    "7438": {
      "op": "POP"
    },
    "7439": {
      "op": "PUSH2",
      "value": "0x1D1B"
    },
    "7442": {
      "op": "DUP7"
    },
    "7443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7445": {
      "op": "DUP8"
    },
    "7446": {
      "op": "ADD"
    },
    "7447": {
      "op": "PUSH2",
      "value": "0x1811"
    },
    "7450": {
      "op": "JUMP"
    },
    "7451": {
      "op": "JUMPDEST"
    },
    "7452": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7454": {
      "op": "DUP7"
    },
    "7455": {
      "op": "ADD"
    },
    "7456": {
      "op": "MLOAD"
    },
    "7457": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7459": {
      "op": "SWAP1"
    },
    "7460": {
      "op": "SWAP7"
    },
    "7461": {
      "op": "ADD"
    },
    "7462": {
      "op": "MLOAD"
    },
    "7463": {
      "op": "SWAP5"
    },
    "7464": {
      "op": "SWAP8"
    },
    "7465": {
      "op": "SWAP1"
    },
    "7466": {
      "op": "SWAP7"
    },
    "7467": {
      "op": "POP"
    },
    "7468": {
      "op": "SWAP3"
    },
    "7469": {
      "op": "POP"
    },
    "7470": {
      "op": "POP"
    },
    "7471": {
      "op": "POP"
    },
    "7472": {
      "op": "JUMP"
    },
    "7473": {
      "op": "JUMPDEST"
    },
    "7474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7476": {
      "op": "DUP2"
    },
    "7477": {
      "op": "MLOAD"
    },
    "7478": {
      "op": "DUP1"
    },
    "7479": {
      "op": "DUP5"
    },
    "7480": {
      "op": "MSTORE"
    },
    "7481": {
      "op": "PUSH2",
      "value": "0x1D49"
    },
    "7484": {
      "op": "DUP2"
    },
    "7485": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7487": {
      "op": "DUP7"
    },
    "7488": {
      "op": "ADD"
    },
    "7489": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7491": {
      "op": "DUP7"
    },
    "7492": {
      "op": "ADD"
    },
    "7493": {
      "op": "PUSH2",
      "value": "0x2314"
    },
    "7496": {
      "op": "JUMP"
    },
    "7497": {
      "op": "JUMPDEST"
    },
    "7498": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7500": {
      "op": "ADD"
    },
    "7501": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7503": {
      "op": "NOT"
    },
    "7504": {
      "op": "AND"
    },
    "7505": {
      "op": "SWAP3"
    },
    "7506": {
      "op": "SWAP1"
    },
    "7507": {
      "op": "SWAP3"
    },
    "7508": {
      "op": "ADD"
    },
    "7509": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7511": {
      "op": "ADD"
    },
    "7512": {
      "op": "SWAP3"
    },
    "7513": {
      "op": "SWAP2"
    },
    "7514": {
      "op": "POP"
    },
    "7515": {
      "op": "POP"
    },
    "7516": {
      "op": "JUMP"
    },
    "7517": {
      "op": "JUMPDEST"
    },
    "7518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7522": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7524": {
      "op": "SHL"
    },
    "7525": {
      "op": "SUB"
    },
    "7526": {
      "op": "SWAP2"
    },
    "7527": {
      "op": "SWAP1"
    },
    "7528": {
      "op": "SWAP2"
    },
    "7529": {
      "op": "AND"
    },
    "7530": {
      "op": "DUP2"
    },
    "7531": {
      "op": "MSTORE"
    },
    "7532": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7534": {
      "op": "ADD"
    },
    "7535": {
      "op": "SWAP1"
    },
    "7536": {
      "op": "JUMP"
    },
    "7537": {
      "op": "JUMPDEST"
    },
    "7538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7540": {
      "op": "DUP2"
    },
    "7541": {
      "op": "ADD"
    },
    "7542": {
      "op": "DUP2"
    },
    "7543": {
      "op": "DUP4"
    },
    "7544": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7546": {
      "op": "JUMPDEST"
    },
    "7547": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "7549": {
      "op": "DUP2"
    },
    "7550": {
      "op": "LT"
    },
    "7551": {
      "op": "ISZERO"
    },
    "7552": {
      "op": "PUSH2",
      "value": "0x1D99"
    },
    "7555": {
      "op": "JUMPI"
    },
    "7556": {
      "op": "DUP2"
    },
    "7557": {
      "op": "MLOAD"
    },
    "7558": {
      "op": "DUP4"
    },
    "7559": {
      "op": "MSTORE"
    },
    "7560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7562": {
      "op": "SWAP3"
    },
    "7563": {
      "op": "DUP4"
    },
    "7564": {
      "op": "ADD"
    },
    "7565": {
      "op": "SWAP3"
    },
    "7566": {
      "op": "SWAP1"
    },
    "7567": {
      "op": "SWAP2"
    },
    "7568": {
      "op": "ADD"
    },
    "7569": {
      "op": "SWAP1"
    },
    "7570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7572": {
      "op": "ADD"
    },
    "7573": {
      "op": "PUSH2",
      "value": "0x1D7A"
    },
    "7576": {
      "op": "JUMP"
    },
    "7577": {
      "op": "JUMPDEST"
    },
    "7578": {
      "op": "POP"
    },
    "7579": {
      "op": "POP"
    },
    "7580": {
      "op": "POP"
    },
    "7581": {
      "op": "SWAP3"
    },
    "7582": {
      "op": "SWAP2"
    },
    "7583": {
      "op": "POP"
    },
    "7584": {
      "op": "POP"
    },
    "7585": {
      "op": "JUMP"
    },
    "7586": {
      "op": "JUMPDEST"
    },
    "7587": {
      "op": "SWAP1"
    },
    "7588": {
      "op": "ISZERO"
    },
    "7589": {
      "op": "ISZERO"
    },
    "7590": {
      "op": "DUP2"
    },
    "7591": {
      "op": "MSTORE"
    },
    "7592": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7594": {
      "op": "ADD"
    },
    "7595": {
      "op": "SWAP1"
    },
    "7596": {
      "op": "JUMP"
    },
    "7597": {
      "op": "JUMPDEST"
    },
    "7598": {
      "op": "SWAP1"
    },
    "7599": {
      "op": "DUP2"
    },
    "7600": {
      "op": "MSTORE"
    },
    "7601": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7603": {
      "op": "ADD"
    },
    "7604": {
      "op": "SWAP1"
    },
    "7605": {
      "op": "JUMP"
    },
    "7606": {
      "op": "JUMPDEST"
    },
    "7607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7611": {
      "op": "DUP3"
    },
    "7612": {
      "op": "MSTORE"
    },
    "7613": {
      "op": "DUP3"
    },
    "7614": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7616": {
      "op": "DUP4"
    },
    "7617": {
      "op": "ADD"
    },
    "7618": {
      "op": "MSTORE"
    },
    "7619": {
      "op": "DUP3"
    },
    "7620": {
      "op": "DUP5"
    },
    "7621": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7623": {
      "op": "DUP5"
    },
    "7624": {
      "op": "ADD"
    },
    "7625": {
      "op": "CALLDATACOPY"
    },
    "7626": {
      "op": "DUP2"
    },
    "7627": {
      "op": "DUP4"
    },
    "7628": {
      "op": "ADD"
    },
    "7629": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7631": {
      "op": "SWAP1"
    },
    "7632": {
      "op": "DUP2"
    },
    "7633": {
      "op": "ADD"
    },
    "7634": {
      "op": "SWAP2"
    },
    "7635": {
      "op": "SWAP1"
    },
    "7636": {
      "op": "SWAP2"
    },
    "7637": {
      "op": "MSTORE"
    },
    "7638": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7640": {
      "op": "SWAP1"
    },
    "7641": {
      "op": "SWAP3"
    },
    "7642": {
      "op": "ADD"
    },
    "7643": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7645": {
      "op": "NOT"
    },
    "7646": {
      "op": "AND"
    },
    "7647": {
      "op": "ADD"
    },
    "7648": {
      "op": "ADD"
    },
    "7649": {
      "op": "SWAP2"
    },
    "7650": {
      "op": "SWAP1"
    },
    "7651": {
      "op": "POP"
    },
    "7652": {
      "op": "JUMP"
    },
    "7653": {
      "op": "JUMPDEST"
    },
    "7654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7658": {
      "op": "DUP3"
    },
    "7659": {
      "op": "MSTORE"
    },
    "7660": {
      "op": "PUSH2",
      "value": "0xB0B"
    },
    "7663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7665": {
      "op": "DUP4"
    },
    "7666": {
      "op": "ADD"
    },
    "7667": {
      "op": "DUP5"
    },
    "7668": {
      "op": "PUSH2",
      "value": "0x1D31"
    },
    "7671": {
      "op": "JUMP"
    },
    "7672": {
      "op": "JUMPDEST"
    },
    "7673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7679": {
      "op": "SHL"
    },
    "7680": {
      "op": "SUB"
    },
    "7681": {
      "op": "DUP5"
    },
    "7682": {
      "op": "AND"
    },
    "7683": {
      "op": "DUP2"
    },
    "7684": {
      "op": "MSTORE"
    },
    "7685": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7687": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7689": {
      "op": "DUP3"
    },
    "7690": {
      "op": "ADD"
    },
    "7691": {
      "op": "DUP2"
    },
    "7692": {
      "op": "SWAP1"
    },
    "7693": {
      "op": "MSTORE"
    },
    "7694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7696": {
      "op": "SWAP1"
    },
    "7697": {
      "op": "PUSH2",
      "value": "0x1E1C"
    },
    "7700": {
      "op": "SWAP1"
    },
    "7701": {
      "op": "DUP4"
    },
    "7702": {
      "op": "ADD"
    },
    "7703": {
      "op": "DUP6"
    },
    "7704": {
      "op": "PUSH2",
      "value": "0x1D31"
    },
    "7707": {
      "op": "JUMP"
    },
    "7708": {
      "op": "JUMPDEST"
    },
    "7709": {
      "op": "DUP3"
    },
    "7710": {
      "op": "DUP2"
    },
    "7711": {
      "op": "SUB"
    },
    "7712": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7714": {
      "op": "DUP5"
    },
    "7715": {
      "op": "ADD"
    },
    "7716": {
      "op": "MSTORE"
    },
    "7717": {
      "op": "PUSH2",
      "value": "0x1E2E"
    },
    "7720": {
      "op": "DUP2"
    },
    "7721": {
      "op": "DUP6"
    },
    "7722": {
      "op": "PUSH2",
      "value": "0x1D31"
    },
    "7725": {
      "op": "JUMP"
    },
    "7726": {
      "op": "JUMPDEST"
    },
    "7727": {
      "op": "SWAP7"
    },
    "7728": {
      "op": "SWAP6"
    },
    "7729": {
      "op": "POP"
    },
    "7730": {
      "op": "POP"
    },
    "7731": {
      "op": "POP"
    },
    "7732": {
      "op": "POP"
    },
    "7733": {
      "op": "POP"
    },
    "7734": {
      "op": "POP"
    },
    "7735": {
      "op": "JUMP"
    },
    "7736": {
      "op": "JUMPDEST"
    },
    "7737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7743": {
      "op": "SHL"
    },
    "7744": {
      "op": "SUB"
    },
    "7745": {
      "op": "DUP5"
    },
    "7746": {
      "op": "AND"
    },
    "7747": {
      "op": "DUP2"
    },
    "7748": {
      "op": "MSTORE"
    },
    "7749": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7753": {
      "op": "DUP3"
    },
    "7754": {
      "op": "ADD"
    },
    "7755": {
      "op": "DUP2"
    },
    "7756": {
      "op": "SWAP1"
    },
    "7757": {
      "op": "MSTORE"
    },
    "7758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7760": {
      "op": "SWAP1"
    },
    "7761": {
      "op": "PUSH2",
      "value": "0x1E5C"
    },
    "7764": {
      "op": "SWAP1"
    },
    "7765": {
      "op": "DUP4"
    },
    "7766": {
      "op": "ADD"
    },
    "7767": {
      "op": "DUP6"
    },
    "7768": {
      "op": "PUSH2",
      "value": "0x1D31"
    },
    "7771": {
      "op": "JUMP"
    },
    "7772": {
      "op": "JUMPDEST"
    },
    "7773": {
      "op": "DUP3"
    },
    "7774": {
      "op": "DUP2"
    },
    "7775": {
      "op": "SUB"
    },
    "7776": {
      "op": "DUP1"
    },
    "7777": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7779": {
      "op": "DUP6"
    },
    "7780": {
      "op": "ADD"
    },
    "7781": {
      "op": "MSTORE"
    },
    "7782": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "7784": {
      "op": "DUP3"
    },
    "7785": {
      "op": "MSTORE"
    },
    "7786": {
      "op": "PUSH2",
      "value": "0x60F"
    },
    "7789": {
      "op": "PUSH1",
      "value": "0xF3"
    },
    "7791": {
      "op": "SHL"
    },
    "7792": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7794": {
      "op": "DUP4"
    },
    "7795": {
      "op": "ADD"
    },
    "7796": {
      "op": "MSTORE"
    },
    "7797": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7799": {
      "op": "DUP2"
    },
    "7800": {
      "op": "ADD"
    },
    "7801": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7803": {
      "op": "DUP6"
    },
    "7804": {
      "op": "ADD"
    },
    "7805": {
      "op": "MSTORE"
    },
    "7806": {
      "op": "POP"
    },
    "7807": {
      "op": "PUSH2",
      "value": "0x1E2E"
    },
    "7810": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7812": {
      "op": "DUP3"
    },
    "7813": {
      "op": "ADD"
    },
    "7814": {
      "op": "DUP6"
    },
    "7815": {
      "op": "PUSH2",
      "value": "0x1D31"
    },
    "7818": {
      "op": "JUMP"
    },
    "7819": {
      "op": "JUMPDEST"
    },
    "7820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7826": {
      "op": "SHL"
    },
    "7827": {
      "op": "SUB"
    },
    "7828": {
      "op": "SWAP3"
    },
    "7829": {
      "op": "DUP4"
    },
    "7830": {
      "op": "AND"
    },
    "7831": {
      "op": "DUP2"
    },
    "7832": {
      "op": "MSTORE"
    },
    "7833": {
      "op": "SWAP2"
    },
    "7834": {
      "op": "AND"
    },
    "7835": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7837": {
      "op": "DUP3"
    },
    "7838": {
      "op": "ADD"
    },
    "7839": {
      "op": "MSTORE"
    },
    "7840": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7842": {
      "op": "ADD"
    },
    "7843": {
      "op": "SWAP1"
    },
    "7844": {
      "op": "JUMP"
    },
    "7845": {
      "op": "JUMPDEST"
    },
    "7846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7852": {
      "op": "SHL"
    },
    "7853": {
      "op": "SUB"
    },
    "7854": {
      "op": "SWAP4"
    },
    "7855": {
      "op": "DUP5"
    },
    "7856": {
      "op": "AND"
    },
    "7857": {
      "op": "DUP2"
    },
    "7858": {
      "op": "MSTORE"
    },
    "7859": {
      "op": "SWAP2"
    },
    "7860": {
      "op": "DUP4"
    },
    "7861": {
      "op": "AND"
    },
    "7862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7864": {
      "op": "DUP4"
    },
    "7865": {
      "op": "ADD"
    },
    "7866": {
      "op": "MSTORE"
    },
    "7867": {
      "op": "SWAP1"
    },
    "7868": {
      "op": "SWAP2"
    },
    "7869": {
      "op": "AND"
    },
    "7870": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7872": {
      "op": "DUP3"
    },
    "7873": {
      "op": "ADD"
    },
    "7874": {
      "op": "MSTORE"
    },
    "7875": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7877": {
      "op": "ADD"
    },
    "7878": {
      "op": "SWAP1"
    },
    "7879": {
      "op": "JUMP"
    },
    "7880": {
      "op": "JUMPDEST"
    },
    "7881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7887": {
      "op": "SHL"
    },
    "7888": {
      "op": "SUB"
    },
    "7889": {
      "op": "DUP6"
    },
    "7890": {
      "op": "DUP2"
    },
    "7891": {
      "op": "AND"
    },
    "7892": {
      "op": "DUP3"
    },
    "7893": {
      "op": "MSTORE"
    },
    "7894": {
      "op": "DUP5"
    },
    "7895": {
      "op": "DUP2"
    },
    "7896": {
      "op": "AND"
    },
    "7897": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7899": {
      "op": "DUP4"
    },
    "7900": {
      "op": "ADD"
    },
    "7901": {
      "op": "MSTORE"
    },
    "7902": {
      "op": "DUP4"
    },
    "7903": {
      "op": "AND"
    },
    "7904": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7906": {
      "op": "DUP3"
    },
    "7907": {
      "op": "ADD"
    },
    "7908": {
      "op": "MSTORE"
    },
    "7909": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7911": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7913": {
      "op": "DUP3"
    },
    "7914": {
      "op": "ADD"
    },
    "7915": {
      "op": "DUP2"
    },
    "7916": {
      "op": "SWAP1"
    },
    "7917": {
      "op": "MSTORE"
    },
    "7918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7920": {
      "op": "SWAP1"
    },
    "7921": {
      "op": "PUSH2",
      "value": "0x1E2E"
    },
    "7924": {
      "op": "SWAP1"
    },
    "7925": {
      "op": "DUP4"
    },
    "7926": {
      "op": "ADD"
    },
    "7927": {
      "op": "DUP5"
    },
    "7928": {
      "op": "PUSH2",
      "value": "0x1D31"
    },
    "7931": {
      "op": "JUMP"
    },
    "7932": {
      "op": "JUMPDEST"
    },
    "7933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7937": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7939": {
      "op": "SHL"
    },
    "7940": {
      "op": "SUB"
    },
    "7941": {
      "op": "DUP6"
    },
    "7942": {
      "op": "DUP2"
    },
    "7943": {
      "op": "AND"
    },
    "7944": {
      "op": "DUP3"
    },
    "7945": {
      "op": "MSTORE"
    },
    "7946": {
      "op": "DUP5"
    },
    "7947": {
      "op": "AND"
    },
    "7948": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7950": {
      "op": "DUP3"
    },
    "7951": {
      "op": "ADD"
    },
    "7952": {
      "op": "MSTORE"
    },
    "7953": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "7955": {
      "op": "DUP4"
    },
    "7956": {
      "op": "SWAP1"
    },
    "7957": {
      "op": "SIGNEXTEND"
    },
    "7958": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7960": {
      "op": "DUP3"
    },
    "7961": {
      "op": "ADD"
    },
    "7962": {
      "op": "MSTORE"
    },
    "7963": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7965": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7967": {
      "op": "DUP3"
    },
    "7968": {
      "op": "ADD"
    },
    "7969": {
      "op": "DUP2"
    },
    "7970": {
      "op": "SWAP1"
    },
    "7971": {
      "op": "MSTORE"
    },
    "7972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7974": {
      "op": "SWAP1"
    },
    "7975": {
      "op": "PUSH2",
      "value": "0x1E2E"
    },
    "7978": {
      "op": "SWAP1"
    },
    "7979": {
      "op": "DUP4"
    },
    "7980": {
      "op": "ADD"
    },
    "7981": {
      "op": "DUP5"
    },
    "7982": {
      "op": "PUSH2",
      "value": "0x1D31"
    },
    "7985": {
      "op": "JUMP"
    },
    "7986": {
      "op": "JUMPDEST"
    },
    "7987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7991": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7993": {
      "op": "SHL"
    },
    "7994": {
      "op": "SUB"
    },
    "7995": {
      "op": "DUP6"
    },
    "7996": {
      "op": "DUP2"
    },
    "7997": {
      "op": "AND"
    },
    "7998": {
      "op": "DUP3"
    },
    "7999": {
      "op": "MSTORE"
    },
    "8000": {
      "op": "DUP5"
    },
    "8001": {
      "op": "AND"
    },
    "8002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8004": {
      "op": "DUP3"
    },
    "8005": {
      "op": "ADD"
    },
    "8006": {
      "op": "MSTORE"
    },
    "8007": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8009": {
      "op": "DUP2"
    },
    "8010": {
      "op": "ADD"
    },
    "8011": {
      "op": "DUP4"
    },
    "8012": {
      "op": "SWAP1"
    },
    "8013": {
      "op": "MSTORE"
    },
    "8014": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8016": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8018": {
      "op": "DUP3"
    },
    "8019": {
      "op": "ADD"
    },
    "8020": {
      "op": "DUP2"
    },
    "8021": {
      "op": "SWAP1"
    },
    "8022": {
      "op": "MSTORE"
    },
    "8023": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8025": {
      "op": "SWAP1"
    },
    "8026": {
      "op": "PUSH2",
      "value": "0x1E2E"
    },
    "8029": {
      "op": "SWAP1"
    },
    "8030": {
      "op": "DUP4"
    },
    "8031": {
      "op": "ADD"
    },
    "8032": {
      "op": "DUP5"
    },
    "8033": {
      "op": "PUSH2",
      "value": "0x1D31"
    },
    "8036": {
      "op": "JUMP"
    },
    "8037": {
      "op": "JUMPDEST"
    },
    "8038": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8040": {
      "op": "DUP1"
    },
    "8041": {
      "op": "DUP3"
    },
    "8042": {
      "op": "MSTORE"
    },
    "8043": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "8045": {
      "op": "SWAP1"
    },
    "8046": {
      "op": "DUP3"
    },
    "8047": {
      "op": "ADD"
    },
    "8048": {
      "op": "MSTORE"
    },
    "8049": {
      "op": "PUSH32",
      "value": "0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E"
    },
    "8082": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8084": {
      "op": "DUP3"
    },
    "8085": {
      "op": "ADD"
    },
    "8086": {
      "op": "MSTORE"
    },
    "8087": {
      "op": "PUSH2",
      "value": "0x6473"
    },
    "8090": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "8092": {
      "op": "SHL"
    },
    "8093": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8095": {
      "op": "DUP3"
    },
    "8096": {
      "op": "ADD"
    },
    "8097": {
      "op": "MSTORE"
    },
    "8098": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8100": {
      "op": "ADD"
    },
    "8101": {
      "op": "SWAP1"
    },
    "8102": {
      "op": "JUMP"
    },
    "8103": {
      "op": "JUMPDEST"
    },
    "8104": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8106": {
      "op": "DUP1"
    },
    "8107": {
      "op": "DUP3"
    },
    "8108": {
      "op": "MSTORE"
    },
    "8109": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "8111": {
      "op": "SWAP1"
    },
    "8112": {
      "op": "DUP3"
    },
    "8113": {
      "op": "ADD"
    },
    "8114": {
      "op": "MSTORE"
    },
    "8115": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E"
    },
    "8148": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8150": {
      "op": "DUP3"
    },
    "8151": {
      "op": "ADD"
    },
    "8152": {
      "op": "MSTORE"
    },
    "8153": {
      "op": "PUSH15",
      "value": "0x818591B5A5B881D1BC819DC985B9D"
    },
    "8169": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "8171": {
      "op": "SHL"
    },
    "8172": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8174": {
      "op": "DUP3"
    },
    "8175": {
      "op": "ADD"
    },
    "8176": {
      "op": "MSTORE"
    },
    "8177": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8179": {
      "op": "ADD"
    },
    "8180": {
      "op": "SWAP1"
    },
    "8181": {
      "op": "JUMP"
    },
    "8182": {
      "op": "JUMPDEST"
    },
    "8183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8185": {
      "op": "DUP1"
    },
    "8186": {
      "op": "DUP3"
    },
    "8187": {
      "op": "MSTORE"
    },
    "8188": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "8190": {
      "op": "SWAP1"
    },
    "8191": {
      "op": "DUP3"
    },
    "8192": {
      "op": "ADD"
    },
    "8193": {
      "op": "MSTORE"
    },
    "8194": {
      "op": "PUSH32",
      "value": "0x5265646972656374416C6C3A206F6E6C7920434641763120737570706F727465"
    },
    "8227": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8229": {
      "op": "DUP3"
    },
    "8230": {
      "op": "ADD"
    },
    "8231": {
      "op": "MSTORE"
    },
    "8232": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "8234": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "8236": {
      "op": "SHL"
    },
    "8237": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8239": {
      "op": "DUP3"
    },
    "8240": {
      "op": "ADD"
    },
    "8241": {
      "op": "MSTORE"
    },
    "8242": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8244": {
      "op": "ADD"
    },
    "8245": {
      "op": "SWAP1"
    },
    "8246": {
      "op": "JUMP"
    },
    "8247": {
      "op": "JUMPDEST"
    },
    "8248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8250": {
      "op": "DUP1"
    },
    "8251": {
      "op": "DUP3"
    },
    "8252": {
      "op": "MSTORE"
    },
    "8253": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8255": {
      "op": "SWAP1"
    },
    "8256": {
      "op": "DUP3"
    },
    "8257": {
      "op": "ADD"
    },
    "8258": {
      "op": "MSTORE"
    },
    "8259": {
      "op": "PUSH32",
      "value": "0x5265646972656374416C6C3A206E6F7420616363657074656420746F6B656E00"
    },
    "8292": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8294": {
      "op": "DUP3"
    },
    "8295": {
      "op": "ADD"
    },
    "8296": {
      "op": "MSTORE"
    },
    "8297": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8299": {
      "op": "ADD"
    },
    "8300": {
      "op": "SWAP1"
    },
    "8301": {
      "op": "JUMP"
    },
    "8302": {
      "op": "JUMPDEST"
    },
    "8303": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8305": {
      "op": "DUP1"
    },
    "8306": {
      "op": "DUP3"
    },
    "8307": {
      "op": "MSTORE"
    },
    "8308": {
      "op": "PUSH1",
      "value": "0x33"
    },
    "8310": {
      "op": "SWAP1"
    },
    "8311": {
      "op": "DUP3"
    },
    "8312": {
      "op": "ADD"
    },
    "8313": {
      "op": "MSTORE"
    },
    "8314": {
      "op": "PUSH32",
      "value": "0x556E737570706F727465642063616C6C6261636B202D20204265666F72652041"
    },
    "8347": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8349": {
      "op": "DUP3"
    },
    "8350": {
      "op": "ADD"
    },
    "8351": {
      "op": "MSTORE"
    },
    "8352": {
      "op": "PUSH19",
      "value": "0x19DC99595B595B9D0815195C9B5A5B985D1959"
    },
    "8372": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "8374": {
      "op": "SHL"
    },
    "8375": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8377": {
      "op": "DUP3"
    },
    "8378": {
      "op": "ADD"
    },
    "8379": {
      "op": "MSTORE"
    },
    "8380": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8382": {
      "op": "ADD"
    },
    "8383": {
      "op": "SWAP1"
    },
    "8384": {
      "op": "JUMP"
    },
    "8385": {
      "op": "JUMPDEST"
    },
    "8386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8388": {
      "op": "DUP1"
    },
    "8389": {
      "op": "DUP3"
    },
    "8390": {
      "op": "MSTORE"
    },
    "8391": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "8393": {
      "op": "SWAP1"
    },
    "8394": {
      "op": "DUP3"
    },
    "8395": {
      "op": "ADD"
    },
    "8396": {
      "op": "MSTORE"
    },
    "8397": {
      "op": "PUSH32",
      "value": "0x5265646972656374416C6C3A20737570706F7274206F6E6C79206F6E6520686F"
    },
    "8430": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8432": {
      "op": "DUP3"
    },
    "8433": {
      "op": "ADD"
    },
    "8434": {
      "op": "MSTORE"
    },
    "8435": {
      "op": "PUSH2",
      "value": "0x1CDD"
    },
    "8438": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "8440": {
      "op": "SHL"
    },
    "8441": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8443": {
      "op": "DUP3"
    },
    "8444": {
      "op": "ADD"
    },
    "8445": {
      "op": "MSTORE"
    },
    "8446": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8448": {
      "op": "ADD"
    },
    "8449": {
      "op": "SWAP1"
    },
    "8450": {
      "op": "JUMP"
    },
    "8451": {
      "op": "JUMPDEST"
    },
    "8452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8454": {
      "op": "DUP1"
    },
    "8455": {
      "op": "DUP3"
    },
    "8456": {
      "op": "MSTORE"
    },
    "8457": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "8459": {
      "op": "SWAP1"
    },
    "8460": {
      "op": "DUP3"
    },
    "8461": {
      "op": "ADD"
    },
    "8462": {
      "op": "MSTORE"
    },
    "8463": {
      "op": "PUSH32",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "8496": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8498": {
      "op": "DUP3"
    },
    "8499": {
      "op": "ADD"
    },
    "8500": {
      "op": "MSTORE"
    },
    "8501": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8503": {
      "op": "ADD"
    },
    "8504": {
      "op": "SWAP1"
    },
    "8505": {
      "op": "JUMP"
    },
    "8506": {
      "op": "JUMPDEST"
    },
    "8507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8509": {
      "op": "DUP1"
    },
    "8510": {
      "op": "DUP3"
    },
    "8511": {
      "op": "MSTORE"
    },
    "8512": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "8514": {
      "op": "SWAP1"
    },
    "8515": {
      "op": "DUP3"
    },
    "8516": {
      "op": "ADD"
    },
    "8517": {
      "op": "MSTORE"
    },
    "8518": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E"
    },
    "8551": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8553": {
      "op": "DUP3"
    },
    "8554": {
      "op": "ADD"
    },
    "8555": {
      "op": "MSTORE"
    },
    "8556": {
      "op": "PUSH16",
      "value": "0x2061646D696E20746F207265766F6B65"
    },
    "8573": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8575": {
      "op": "SHL"
    },
    "8576": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8578": {
      "op": "DUP3"
    },
    "8579": {
      "op": "ADD"
    },
    "8580": {
      "op": "MSTORE"
    },
    "8581": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8583": {
      "op": "ADD"
    },
    "8584": {
      "op": "SWAP1"
    },
    "8585": {
      "op": "JUMP"
    },
    "8586": {
      "op": "JUMPDEST"
    },
    "8587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8589": {
      "op": "DUP1"
    },
    "8590": {
      "op": "DUP3"
    },
    "8591": {
      "op": "MSTORE"
    },
    "8592": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "8594": {
      "op": "SWAP1"
    },
    "8595": {
      "op": "DUP3"
    },
    "8596": {
      "op": "ADD"
    },
    "8597": {
      "op": "MSTORE"
    },
    "8598": {
      "op": "PUSH32",
      "value": "0x556E737570706F727465642063616C6C6261636B202D204265666F7265204167"
    },
    "8631": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8633": {
      "op": "DUP3"
    },
    "8634": {
      "op": "ADD"
    },
    "8635": {
      "op": "MSTORE"
    },
    "8636": {
      "op": "PUSH15",
      "value": "0x1C99595B595B9D081D5C19185D1959"
    },
    "8652": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "8654": {
      "op": "SHL"
    },
    "8655": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8657": {
      "op": "DUP3"
    },
    "8658": {
      "op": "ADD"
    },
    "8659": {
      "op": "MSTORE"
    },
    "8660": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8662": {
      "op": "ADD"
    },
    "8663": {
      "op": "SWAP1"
    },
    "8664": {
      "op": "JUMP"
    },
    "8665": {
      "op": "JUMPDEST"
    },
    "8666": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8668": {
      "op": "DUP1"
    },
    "8669": {
      "op": "DUP3"
    },
    "8670": {
      "op": "MSTORE"
    },
    "8671": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "8673": {
      "op": "SWAP1"
    },
    "8674": {
      "op": "DUP3"
    },
    "8675": {
      "op": "ADD"
    },
    "8676": {
      "op": "MSTORE"
    },
    "8677": {
      "op": "PUSH22",
      "value": "0x21B0B63632B91034B9903737BA1030B71030B236B4B7"
    },
    "8700": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "8702": {
      "op": "SHL"
    },
    "8703": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8705": {
      "op": "DUP3"
    },
    "8706": {
      "op": "ADD"
    },
    "8707": {
      "op": "MSTORE"
    },
    "8708": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8710": {
      "op": "ADD"
    },
    "8711": {
      "op": "SWAP1"
    },
    "8712": {
      "op": "JUMP"
    },
    "8713": {
      "op": "JUMPDEST"
    },
    "8714": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8716": {
      "op": "DUP1"
    },
    "8717": {
      "op": "DUP3"
    },
    "8718": {
      "op": "MSTORE"
    },
    "8719": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "8721": {
      "op": "SWAP1"
    },
    "8722": {
      "op": "DUP3"
    },
    "8723": {
      "op": "ADD"
    },
    "8724": {
      "op": "MSTORE"
    },
    "8725": {
      "op": "PUSH32",
      "value": "0x556E737570706F727465642063616C6C6261636B202D204265666F7265204167"
    },
    "8758": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8760": {
      "op": "DUP3"
    },
    "8761": {
      "op": "ADD"
    },
    "8762": {
      "op": "MSTORE"
    },
    "8763": {
      "op": "PUSH15",
      "value": "0x1C99595B595B9D0810DC99585D1959"
    },
    "8779": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "8781": {
      "op": "SHL"
    },
    "8782": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8784": {
      "op": "DUP3"
    },
    "8785": {
      "op": "ADD"
    },
    "8786": {
      "op": "MSTORE"
    },
    "8787": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8789": {
      "op": "ADD"
    },
    "8790": {
      "op": "SWAP1"
    },
    "8791": {
      "op": "JUMP"
    },
    "8792": {
      "op": "JUMPDEST"
    },
    "8793": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8795": {
      "op": "DUP1"
    },
    "8796": {
      "op": "DUP3"
    },
    "8797": {
      "op": "MSTORE"
    },
    "8798": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "8800": {
      "op": "SWAP1"
    },
    "8801": {
      "op": "DUP3"
    },
    "8802": {
      "op": "ADD"
    },
    "8803": {
      "op": "MSTORE"
    },
    "8804": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
    },
    "8837": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8839": {
      "op": "DUP3"
    },
    "8840": {
      "op": "ADD"
    },
    "8841": {
      "op": "MSTORE"
    },
    "8842": {
      "op": "PUSH15",
      "value": "0x103937B632B9903337B91039B2B633"
    },
    "8858": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "8860": {
      "op": "SHL"
    },
    "8861": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8863": {
      "op": "DUP3"
    },
    "8864": {
      "op": "ADD"
    },
    "8865": {
      "op": "MSTORE"
    },
    "8866": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8868": {
      "op": "ADD"
    },
    "8869": {
      "op": "SWAP1"
    },
    "8870": {
      "op": "JUMP"
    },
    "8871": {
      "op": "JUMPDEST"
    },
    "8872": {
      "op": "SWAP3"
    },
    "8873": {
      "op": "DUP4"
    },
    "8874": {
      "op": "MSTORE"
    },
    "8875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8881": {
      "op": "SHL"
    },
    "8882": {
      "op": "SUB"
    },
    "8883": {
      "op": "SWAP2"
    },
    "8884": {
      "op": "SWAP1"
    },
    "8885": {
      "op": "SWAP2"
    },
    "8886": {
      "op": "AND"
    },
    "8887": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8889": {
      "op": "DUP4"
    },
    "8890": {
      "op": "ADD"
    },
    "8891": {
      "op": "MSTORE"
    },
    "8892": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "8894": {
      "op": "SIGNEXTEND"
    },
    "8895": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8897": {
      "op": "DUP3"
    },
    "8898": {
      "op": "ADD"
    },
    "8899": {
      "op": "MSTORE"
    },
    "8900": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8902": {
      "op": "ADD"
    },
    "8903": {
      "op": "SWAP1"
    },
    "8904": {
      "op": "JUMP"
    },
    "8905": {
      "op": "JUMPDEST"
    },
    "8906": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8908": {
      "op": "MLOAD"
    },
    "8909": {
      "op": "DUP2"
    },
    "8910": {
      "op": "DUP2"
    },
    "8911": {
      "op": "ADD"
    },
    "8912": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8921": {
      "op": "DUP2"
    },
    "8922": {
      "op": "GT"
    },
    "8923": {
      "op": "DUP3"
    },
    "8924": {
      "op": "DUP3"
    },
    "8925": {
      "op": "LT"
    },
    "8926": {
      "op": "OR"
    },
    "8927": {
      "op": "ISZERO"
    },
    "8928": {
      "op": "PUSH2",
      "value": "0x22E8"
    },
    "8931": {
      "op": "JUMPI"
    },
    "8932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8934": {
      "op": "DUP1"
    },
    "8935": {
      "op": "REVERT"
    },
    "8936": {
      "op": "JUMPDEST"
    },
    "8937": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8939": {
      "op": "MSTORE"
    },
    "8940": {
      "op": "SWAP2"
    },
    "8941": {
      "op": "SWAP1"
    },
    "8942": {
      "op": "POP"
    },
    "8943": {
      "op": "JUMP"
    },
    "8944": {
      "op": "JUMPDEST"
    },
    "8945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8947": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8956": {
      "op": "DUP3"
    },
    "8957": {
      "op": "GT"
    },
    "8958": {
      "op": "ISZERO"
    },
    "8959": {
      "op": "PUSH2",
      "value": "0x2306"
    },
    "8962": {
      "op": "JUMPI"
    },
    "8963": {
      "op": "DUP1"
    },
    "8964": {
      "op": "DUP2"
    },
    "8965": {
      "op": "REVERT"
    },
    "8966": {
      "op": "JUMPDEST"
    },
    "8967": {
      "op": "POP"
    },
    "8968": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8970": {
      "op": "ADD"
    },
    "8971": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8973": {
      "op": "NOT"
    },
    "8974": {
      "op": "AND"
    },
    "8975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8977": {
      "op": "ADD"
    },
    "8978": {
      "op": "SWAP1"
    },
    "8979": {
      "op": "JUMP"
    },
    "8980": {
      "op": "JUMPDEST"
    },
    "8981": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8983": {
      "op": "JUMPDEST"
    },
    "8984": {
      "op": "DUP4"
    },
    "8985": {
      "op": "DUP2"
    },
    "8986": {
      "op": "LT"
    },
    "8987": {
      "op": "ISZERO"
    },
    "8988": {
      "op": "PUSH2",
      "value": "0x232F"
    },
    "8991": {
      "op": "JUMPI"
    },
    "8992": {
      "op": "DUP2"
    },
    "8993": {
      "op": "DUP2"
    },
    "8994": {
      "op": "ADD"
    },
    "8995": {
      "op": "MLOAD"
    },
    "8996": {
      "op": "DUP4"
    },
    "8997": {
      "op": "DUP3"
    },
    "8998": {
      "op": "ADD"
    },
    "8999": {
      "op": "MSTORE"
    },
    "9000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9002": {
      "op": "ADD"
    },
    "9003": {
      "op": "PUSH2",
      "value": "0x2317"
    },
    "9006": {
      "op": "JUMP"
    },
    "9007": {
      "op": "JUMPDEST"
    },
    "9008": {
      "op": "DUP4"
    },
    "9009": {
      "op": "DUP2"
    },
    "9010": {
      "op": "GT"
    },
    "9011": {
      "op": "ISZERO"
    },
    "9012": {
      "op": "PUSH2",
      "value": "0xC48"
    },
    "9015": {
      "op": "JUMPI"
    },
    "9016": {
      "op": "POP"
    },
    "9017": {
      "op": "POP"
    },
    "9018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9020": {
      "op": "SWAP2"
    },
    "9021": {
      "op": "ADD"
    },
    "9022": {
      "op": "MSTORE"
    },
    "9023": {
      "op": "JUMP"
    },
    "9024": {
      "op": "JUMPDEST"
    },
    "9025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9031": {
      "op": "SHL"
    },
    "9032": {
      "op": "SUB"
    },
    "9033": {
      "op": "DUP2"
    },
    "9034": {
      "op": "AND"
    },
    "9035": {
      "op": "DUP2"
    },
    "9036": {
      "op": "EQ"
    },
    "9037": {
      "op": "PUSH2",
      "value": "0x2355"
    },
    "9040": {
      "op": "JUMPI"
    },
    "9041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9043": {
      "op": "DUP1"
    },
    "9044": {
      "op": "REVERT"
    },
    "9045": {
      "op": "JUMPDEST"
    },
    "9046": {
      "op": "POP"
    },
    "9047": {
      "op": "JUMP"
    }
  },
  "sha1": "3da20ed6cf7974d2a0b533ec118e4704655496d6",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.6;\npragma experimental ABIEncoderV2;\n\nimport {\n    ISuperfluid,\n    ISuperToken,\n    ISuperApp,\n    ISuperAgreement,\n    SuperAppDefinitions\n} from \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\";//\"@superfluid-finance/ethereum-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\";\n\nimport {\n    IConstantFlowAgreementV1\n} from \"@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\";\n\nimport {\n    SuperAppBase\n} from \"@superfluid-finance/ethereum-contracts/contracts/apps/SuperAppBase.sol\";\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"./TennerrEscrow.sol\";\nimport \"./TennerrFactory.sol\";\n\ncontract TennerrStreamer is SuperAppBase, AccessControl {\n    using SafeMath for uint;\n\n    ISuperfluid private _host; // host\n    IConstantFlowAgreementV1 private _cfa; // the stored constant flow agreement class address\n    ISuperToken private _acceptedToken; // accepted token\n    address private _receiver; // escrow\n\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n\n    // initiialize escrow\n    TennerrEscrow public tennerrEscrow;\n    address payable private _tennerrEscrowContractAddress;\n\n    // address of the tennerr factory\n    address payable private _tennerrFactoryContractAddress;\n    // tennerr contract\n    TennerrFactory public tennerrFactory;\n\n    mapping(bytes32 => uint[]) public streamByJobId;\n\n    struct Order {\n        uint orderId;\n        uint sellerId;\n        address buyer;\n        address seller;\n        bytes32 jobId;\n        uint orderPrice;\n        uint absDeadline;\n    }\n\n\n    constructor(\n        ISuperfluid host,\n        IConstantFlowAgreementV1 cfa,\n        ISuperToken acceptedToken,\n        address receiver) {\n        require(address(host) != address(0), \"host is zero address\");\n        require(address(cfa) != address(0), \"cfa is zero address\");\n        require(address(acceptedToken) != address(0), \"acceptedToken is zero address\");\n        require(address(receiver) != address(0), \"receiver is zero address\");\n        require(!host.isApp(ISuperApp(receiver)), \"receiver is an app\");\n\n        _host = host;\n        _cfa = cfa;\n        _acceptedToken = acceptedToken;\n        _receiver = receiver;\n\n        uint256 configWord =\n            SuperAppDefinitions.APP_LEVEL_FINAL |\n            SuperAppDefinitions.BEFORE_AGREEMENT_CREATED_NOOP |\n            SuperAppDefinitions.BEFORE_AGREEMENT_UPDATED_NOOP |\n            SuperAppDefinitions.BEFORE_AGREEMENT_TERMINATED_NOOP;\n\n        /* _host.registerAppWithKey(configWord, \"0x756f6154ee853e3dfb570b618e185b3ba4652ccfd78df06eb57e16cf1f0656fc\"); */\n        _host.registerApp(configWord);\n\n    }\n\n\n    /**************************************************************************\n     * Redirect Logic\n     *************************************************************************/\n\n    function currentReceiver()\n        external view\n        returns (\n            uint256 startTime,\n            address receiver,\n            int96 flowRate\n        )\n    {\n        if (_receiver != address(0)) {\n            (startTime, flowRate,,) = _cfa.getFlow(_acceptedToken, address(this), _receiver);\n            receiver = _receiver;\n        }\n    }\n\n    event ReceiverChanged(address receiver);\n\n    /// @dev If a new stream is opened, or an existing one is opened\n    function _updateOutflow(bytes calldata ctx, bytes memory userData)\n        private\n        returns (bytes memory newCtx)\n    {\n\n      newCtx = ctx;\n      // @dev This will give me the new flowRate, as it is called in after callbacks\n      int96 netFlowRate = _cfa.getNetFlow(_acceptedToken, address(this));\n      (,int96 outFlowRate,,) = _cfa.getFlow(_acceptedToken, address(this), _receiver); // CHECK: unclear what happens if flow doesn't exist.\n      int96 inFlowRate = netFlowRate + outFlowRate;\n\n      /* use userData to update internal accounting */\n      _accountingCache(userData);\n\n      // @dev If inFlowRate === 0, then delete existing flow.\n      if (inFlowRate == int96(0)) {\n        // @dev if inFlowRate is zero, delete outflow.\n          (newCtx, ) = _host.callAgreementWithContext(\n              _cfa,\n              abi.encodeWithSelector(\n                  _cfa.deleteFlow.selector,\n                  _acceptedToken,\n                  address(this),\n                  _receiver,\n                  new bytes(0) // placeholder\n              ),\n              \"0x\",\n              newCtx\n          );\n        } else if (outFlowRate != int96(0)){\n        (newCtx, ) = _host.callAgreementWithContext(\n            _cfa,\n            abi.encodeWithSelector(\n                _cfa.updateFlow.selector,\n                _acceptedToken,\n                _receiver,\n                inFlowRate,\n                new bytes(0) // placeholder\n            ),\n            \"0x\",\n            newCtx\n        );\n      } else {\n      // @dev If there is no existing outflow, then create new flow to equal inflow\n          (newCtx, ) = _host.callAgreementWithContext(\n              _cfa,\n              abi.encodeWithSelector(\n                  _cfa.createFlow.selector,\n                  _acceptedToken,\n                  _receiver,\n                  inFlowRate,\n                  new bytes(0) // placeholder\n              ),\n              \"0x\",\n              newCtx\n          );\n      }\n    }\n\n    function _accountingCache(bytes memory userData) internal {\n        bytes32 jobId = bytesToBytes32(userData,0);\n        TennerrEscrow.Order memory order = tennerrEscrow.getQuoteData(jobId);\n        address buyer = order.buyer;\n        address seller = order.seller;\n        uint amount = order.orderPrice;\n        uint streamStart = block.timestamp;\n        uint deadline = order.absDeadline;\n        _updateStreamData(jobId,buyer, seller, amount, streamStart, deadline);\n    }\n\n    function bytesToBytes32(bytes memory b, uint offset) private pure returns (bytes32) {\n      bytes32 out;\n\n      for (uint i = 0; i < 32; i++) {\n        out |= bytes32(b[offset + i] & 0xFF) >> (i * 8);\n      }\n      return out;\n    }\n\n    function _updateStreamData(\n      bytes32 jobId,\n      address buyer,\n      address seller,\n      uint amount,\n      uint streamStart,\n      uint deadline) internal {\n        // @dev This will give me the new flowRate, as it is called in after callbacks\n        int96 netFlowRate = _cfa.getNetFlow(_acceptedToken, address(this));\n        (,int96 outFlowRate,,) = _cfa.getFlow(_acceptedToken, address(this), _receiver); // CHECK: unclear what happens if flow doesn't exist.\n        uint inFlowRate = uint(netFlowRate + outFlowRate);\n        uint timeLeft = deadline.sub(block.timestamp);\n        uint timePassed = (block.timestamp).sub(streamStart);\n        uint streamedToDate = inFlowRate * timePassed;\n\n        /* token streaming, streamedToDate, totalToStream, timeLeft */\n        streamByJobId[jobId] = [inFlowRate, streamedToDate, amount, streamStart, timeLeft, deadline];\n    }\n\n    function getStreamData(\n      bytes32 jobId)\n      public view returns  (uint[5] memory) {\n        uint totalToStream = streamByJobId[jobId][2];\n        uint deadline = streamByJobId[jobId][5];\n        uint streamStart = streamByJobId[jobId][3];\n        // @dev This will give me the new flowRate, as it is called in after callbacks\n        int96 netFlowRate = _cfa.getNetFlow(_acceptedToken, address(this));\n        (,int96 outFlowRate,,) = _cfa.getFlow(_acceptedToken, address(this), _receiver); // CHECK: unclear what happens if flow doesn't exist.\n        uint inFlowRate = uint(netFlowRate + outFlowRate);\n        uint timeLeft = deadline.sub(block.timestamp);\n\n        /* streamByJobId[jobId].timeLeft = timeLeft; */\n        uint timePassed = (block.timestamp).sub(streamStart);\n        uint streamedToDate = inFlowRate * timePassed;\n        /* streamByJobId[jobId].streamedToDate = streamedToDate; */\n        /* token streaming, streamedToDate, totalToStream, timeLeft */\n        return [inFlowRate, streamedToDate, totalToStream, timeLeft, deadline];\n    }\n\n    // @dev Change the Receiver of the total flow\n    function _changeReceiver( address newReceiver ) internal {\n        require(newReceiver != address(0), \"New receiver is zero address\");\n        // @dev because our app is registered as final, we can't take downstream apps\n        require(!_host.isApp(ISuperApp(newReceiver)), \"New receiver can not be a superApp\");\n        if (newReceiver == _receiver) return ;\n        // @dev delete flow to old receiver\n        (,int96 outFlowRate,,) = _cfa.getFlow(_acceptedToken, address(this), _receiver); //CHECK: unclear what happens if flow doesn't exist.\n        if(outFlowRate > 0){\n          _host.callAgreement(\n              _cfa,\n              abi.encodeWithSelector(\n                  _cfa.deleteFlow.selector,\n                  _acceptedToken,\n                  address(this),\n                  _receiver,\n                  new bytes(0)\n              ),\n              \"0x\"\n          );\n          // @dev create flow to new receiver\n          _host.callAgreement(\n              _cfa,\n              abi.encodeWithSelector(\n                  _cfa.createFlow.selector,\n                  _acceptedToken,\n                  newReceiver,\n                  _cfa.getNetFlow(_acceptedToken, address(this)),\n                  new bytes(0)\n              ),\n              \"0x\"\n          );\n        }\n        // @dev set global receiver to new receiver\n        _receiver = newReceiver;\n\n        emit ReceiverChanged(_receiver);\n    }\n\n    /**************************************************************************\n     * SuperApp callbacks\n     *************************************************************************/\n\n    function afterAgreementCreated(\n        ISuperToken _superToken,\n        address _agreementClass,\n        bytes32, // _agreementId,\n        bytes calldata /*_agreementData*/,\n        bytes calldata ,// _cbdata,\n        bytes calldata _ctx\n    )\n        external override\n        onlyExpected(_superToken, _agreementClass)\n        onlyHost\n        returns (bytes memory newCtx)\n    {\n        bytes memory userData = abi.decode(_host.decodeCtx(_ctx).userData, (bytes));\n        return _updateOutflow(_ctx, userData);\n    }\n\n    function afterAgreementUpdated(\n        ISuperToken _superToken,\n        address _agreementClass,\n        bytes32 ,//_agreementId,\n        bytes calldata agreementData,\n        bytes calldata ,//_cbdata,\n        bytes calldata _ctx\n    )\n        external override\n        onlyExpected(_superToken, _agreementClass)\n        onlyHost\n        returns (bytes memory newCtx)\n    {\n        bytes memory userData = abi.decode(_host.decodeCtx(_ctx).userData, (bytes));\n        return _updateOutflow(_ctx, userData );\n    }\n\n    function afterAgreementTerminated(\n        ISuperToken _superToken,\n        address _agreementClass,\n        bytes32 ,//_agreementId,\n        bytes calldata /*_agreementData*/,\n        bytes calldata ,//_cbdata,\n        bytes calldata _ctx\n    )\n        external override\n        onlyHost\n        returns (bytes memory newCtx)\n    {\n        // According to the app basic law, we should never revert in a termination callback\n        bytes memory userData = abi.decode(_host.decodeCtx(_ctx).userData, (bytes));\n        if (!_isSameToken(_superToken) || !_isCFAv1(_agreementClass)) return _ctx;\n        return _updateOutflow(_ctx, userData);\n    }\n\n    function createFlow(address newReceiver, uint flowRate, bytes memory jobId) external {\n        _host.callAgreement(\n                _cfa,\n                abi.encodeWithSelector(\n                    _cfa.createFlow.selector,\n                    _acceptedToken,\n                    newReceiver,\n                    flowRate,\n                    new bytes(0)\n                ),\n                jobId //userData: bytes\n        );\n    }\n\n    function _isSameToken(ISuperToken superToken) private view returns (bool) {\n        return address(superToken) == address(_acceptedToken);\n    }\n\n    function _isCFAv1(address agreementClass) private view returns (bool) {\n        return ISuperAgreement(agreementClass).agreementType()\n            == keccak256(\"org.superfluid-finance.agreements.ConstantFlowAgreement.v1\");\n    }\n\n    function setTennerrEscrow(address payable newContract) external {\n        require(hasRole(ADMIN_ROLE, msg.sender), \"Caller is not an admin\");\n        _tennerrEscrowContractAddress = newContract;\n        tennerrEscrow = TennerrEscrow(_tennerrEscrowContractAddress);\n    }\n\n    modifier onlyHost() {\n        require(msg.sender == address(_host), \"RedirectAll: support only one host\");\n        _;\n    }\n\n    modifier onlyExpected(ISuperToken superToken, address agreementClass) {\n        require(_isSameToken(superToken), \"RedirectAll: not accepted token\");\n        require(_isCFAv1(agreementClass), \"RedirectAll: only CFAv1 supported\");\n        _;\n    }\n\n    receive() external payable {}\n\n}\n",
  "sourceMap": "789:12201:44:-:0;;;1720:1072;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1876:27:44;;1868:60;;;;-1:-1:-1;;;1868:60:44;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1946:26:44;;1938:58;;;;-1:-1:-1;;;1938:58:44;;;;;;;:::i;:::-;-1:-1:-1;;;;;2014:36:44;;2006:78;;;;-1:-1:-1;;;2006:78:44;;;;;;;:::i;:::-;-1:-1:-1;;;;;2102:31:44;;2094:68;;;;-1:-1:-1;;;2094:68:44;;;;;;;:::i;:::-;2181:31;;-1:-1:-1;;;2181:31:44;;-1:-1:-1;;;;;2181:10:44;;;;;:31;;2202:8;;2181:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2180:32;2172:63;;;;-1:-1:-1;;;2172:63:44;;;;;;;:::i;:::-;2246:5;:12;;-1:-1:-1;;;;;;2246:12:44;;;-1:-1:-1;;;;;2246:12:44;;;;;;;;;;;2268:4;:10;;;;;;;;;;2288:14;:30;;;;;;;;;;2328:9;:20;;;;;;;;;;;2755:29;;-1:-1:-1;;;2755:29:44;;2392:230;;2755:5;;;;:17;;:29;;2392:230;;2755:29;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1720:1072;;;;;789:12201;;852:257:-1;;964:2;952:9;943:7;939:23;935:32;932:2;;;-1:-1;;970:12;932:2;227:6;221:13;7942:5;6836:13;6829:21;7920:5;7917:32;7907:2;;-1:-1;;7953:12;7907:2;1022:71;926:183;-1:-1;;;926:183::o;1116:820::-;;;;;1356:3;1344:9;1335:7;1331:23;1327:33;1324:2;;;-1:-1;;1363:12;1324:2;775:6;769:13;787:53;834:5;787:53;:::i;:::-;1546:2;1629:22;;392:13;1415:94;;-1:-1;410:66;392:13;410:66;:::i;:::-;1698:2;1769:22;;587:13;1554:107;;-1:-1;605:54;587:13;605:54;:::i;:::-;1838:2;1888:22;;83:13;1706:95;;-1:-1;101:33;83:13;101:33;:::i;:::-;1318:618;;;;-1:-1;1318:618;;-1:-1;;1318:618::o;3889:260::-;-1:-1;;;;;7292:54;;;;2033:69;;4035:2;4020:18;;4006:143::o;4156:416::-;4356:2;4370:47;;;2339:2;4341:18;;;6604:19;2375:31;6644:14;;;2355:52;2426:12;;;4327:245::o;4579:416::-;4779:2;4793:47;;;2677:2;4764:18;;;6604:19;2713:26;6644:14;;;2693:47;2759:12;;;4750:245::o;5002:416::-;5202:2;5216:47;;;3010:2;5187:18;;;6604:19;3046:21;6644:14;;;3026:42;3087:12;;;5173:245::o;5425:416::-;5625:2;5639:47;;;3338:2;5610:18;;;6604:19;3374:22;6644:14;;;3354:43;3416:12;;;5596:245::o;5848:416::-;6048:2;6062:47;;;3667:2;6033:18;;;6604:19;-1:-1;;;6644:14;;;3683:41;3743:12;;;6019:245::o;6271:222::-;3840:37;;;6398:2;6383:18;;6369:124::o;7737:117::-;-1:-1;;;;;7292:54;;7796:35;;7786:2;;7845:1;;7835:12;7786:2;7780:74;:::o;:::-;789:12201:44;;;;;;",
  "sourcePath": "contracts/TennerrStreamer.sol",
  "type": "contract"
}